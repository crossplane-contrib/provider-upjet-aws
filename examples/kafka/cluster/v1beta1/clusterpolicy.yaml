# SPDX-FileCopyrightText: 2025 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: kafka.aws.upbound.io/v1beta1
kind: ClusterPolicy
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
  labels:
    testing.upbound.io/example-name: example
  name: example-test-cluster-policy
spec:
  forProvider:
    clusterArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "ExampleMskClusterPolicy",
            "Effect": "Allow",
            "Principal": {
              "AWS": "*"
            },
            "Action": [
              "kafka:Describe*",
              "kafka:Get*",
              "kafka:CreateVpcConnection",
              "kafka:GetBootstrapBrokers"
            ],
            "Resource": "*"
          }
        ]
      }
    region: us-east-2
---
apiVersion: kafka.aws.upbound.io/v1beta1
kind: Cluster
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
    uptest.upbound.io/timeout: "7200"
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    brokerNodeGroupInfo:
      - clientSubnetsRefs:
          - name: subnet-az1
          - name: subnet-az2
        instanceType: kafka.t3.small
        securityGroupsRefs:
          - name: sg
        storageInfo:
          - ebsStorageInfo:
              - volumeSize: 1000
    clusterName: ${Rand.RFC1123Subdomain}
    kafkaVersion: 3.6.0
    numberOfBrokerNodes: 2
    region: us-east-2
    tags:
      foo: bar
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
  labels:
    testing.upbound.io/example-name: sg
  name: sg
spec:
  forProvider:
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
  labels:
    testing.upbound.io/example-name: example
  name: subnet-az1
spec:
  forProvider:
    availabilityZone: us-east-2a
    cidrBlock: 192.168.0.0/24
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
  labels:
    testing.upbound.io/example-name: example
  name: subnet-az2
spec:
  forProvider:
    availabilityZone: us-east-2b
    cidrBlock: 192.168.1.0/24
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpc
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: kafka/v1beta1/clusterpolicy
  labels:
    testing.upbound.io/example-name: vpc
  name: vpc
spec:
  forProvider:
    cidrBlock: 192.168.0.0/22
    region: us-east-2

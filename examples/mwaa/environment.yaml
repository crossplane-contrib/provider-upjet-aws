apiVersion: mwaa.aws.upbound.io/v1beta1
kind: Environment
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example
  name: example-environment
spec:
  forProvider:
    dagS3Path: dags/
    executionRoleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example_role
    networkConfiguration:
      securityGroupIdsSelector:
        matchLabels:
          testing.upbound.io/example-name: example_security_group
      subnetIdsSelector:
        matchLabels:
          testing.upbound.io/example-name: example_subnet
    region: us-west-1
    sourceBucketArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example_bucket
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_role
  name: example-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                  "Service": ["airflow.amazonaws.com","airflow-env.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
        ]
      }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_policy_attachment
  name: example-policy-attachment
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example_user_policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: example_role
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_user_policy
  name: example-user-policy
spec:
  forProvider:
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "airflow:PublishMetrics",
            "Resource": "arn:aws:airflow:us-west-1:153891904029:environment/example"
          },
          {
            "Effect": "Deny",
            "Action": "s3:ListAllMyBuckets",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:GetObject*",
              "s3:GetBucket*",
              "s3:List*"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "logs:CreateLogStream",
              "logs:CreateLogGroup",
              "logs:PutLogEvents",
              "logs:GetLogEvents",
              "logs:GetLogRecord",
              "logs:GetLogGroupFields",
              "logs:GetQueryResults"
            ],
            "Resource": [
              "arn:aws:logs:us-west-1:153891904029:log-group:airflow-example-*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "logs:DescribeLogGroups"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": "s3:GetAccountPublicAccessBlock",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": "cloudwatch:PutMetricData",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "sqs:ChangeMessageVisibility",
              "sqs:DeleteMessage",
              "sqs:GetQueueAttributes",
              "sqs:GetQueueUrl",
              "sqs:ReceiveMessage",
              "sqs:SendMessage"
            ],
            "Resource": "arn:aws:sqs:us-west-1:*:airflow-celery-*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:Decrypt",
              "kms:DescribeKey",
              "kms:GenerateDataKey*",
              "kms:Encrypt"
            ],
            "NotResource": "arn:aws:kms:*:153891904029:key/*",
            "Condition": {
              "StringLike": {
                "kms:ViaService": "sqs.us-west-1.amazonaws.com"
              }
            }
          }
        ]
      }
---
apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_bucket
  name: example-bucket-mwaaftfd
spec:
  forProvider:
    region: us-west-1
---
apiVersion: s3.aws.upbound.io/v1beta1
kind: BucketVersioning
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_versioning
  name: example-versioning
spec:
  forProvider:
    bucketSelector:
      matchLabels:
        testing.upbound.io/example-name: example_bucket
    region: us-west-1
    versioningConfiguration:
    - status: Enabled
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_security_group
  name: example-security-group
spec:
  forProvider:
    region: us-west-1
    description: Allow TLS inbound traffic
    name: allow_tls
    tags:
      Name: allow_tls
    vpcIdRef:
      name: example-vpc
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_subnet
  name: example-subnet1
spec:
  forProvider:
    region: us-west-1
    availabilityZone: us-west-1b
    vpcIdRef:
      name: example-vpc
    cidrBlock: 172.16.10.0/24
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example_subnet
  name: example-subnet2
spec:
  forProvider:
    region: us-west-1
    availabilityZone: us-west-1a
    vpcIdRef:
      name: example-vpc
    cidrBlock: 172.16.11.0/24
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: mwaa/v1beta1/environment
  labels:
    testing.upbound.io/example-name: example
  name: example-vpc
spec:
  forProvider:
    region: us-west-1
    cidrBlock: 172.16.0.0/16
    tags:
      Name: example-vpc
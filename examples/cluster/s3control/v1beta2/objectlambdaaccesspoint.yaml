# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: s3control.aws.upbound.io/v1beta2
kind: ObjectLambdaAccessPoint
metadata:
  annotations:
    meta.upbound.io/example-id: s3control/v1beta2/objectlambdaaccesspoint
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    configuration:
      supportingAccessPointSelector:
        matchLabels:
          testing.upbound.io/example-name: example
      transformationConfiguration:
      - actions:
        - GetObject
        contentTransformation:
          awsLambda:
            functionArnSelector:
              matchLabels:
                testing.upbound.io/example-name: example
    name: example
    region: us-east-1

---

apiVersion: s3control.aws.upbound.io/v1beta2
kind: AccessPoint
metadata:
  annotations:
    meta.upbound.io/example-id: s3control/v1beta2/objectlambdaaccesspoint
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    bucketSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    name: example
    region: us-east-1

---

apiVersion: s3.aws.upbound.io/v1beta2
kind: Bucket
metadata:
  annotations:
    crossplane.io/external-name: ${Rand.RFC1123Subdomain}
    meta.upbound.io/example-id: s3control/v1beta2/objectlambdaaccesspoint
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    region: us-east-1

---

apiVersion: lambda.aws.upbound.io/v1beta2
kind: Function
metadata:
  annotations:
    meta.upbound.io/example-id: s3control/v1beta2/objectlambdaaccesspoint
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    environment:
      variables:
        foo: bar
    handler: index.py
    region: us-east-1
    roleRef:
      name: sample-role
    runtime: python3.9
    s3Bucket: upbound-provider-test-data
    s3Key: hello-python.zip

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: s3control/v1beta2/objectlambdaaccesspoint
  labels:
    testing.upbound.io/example-name: role
  name: sample-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Effect": "Allow",
            "Sid": ""
          }
        ]
      }

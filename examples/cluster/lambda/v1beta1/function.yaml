# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: lambda.aws.upbound.io/v1beta1
kind: Function
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
    uptest.upbound.io/timeout: "3600"
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    s3Bucket: official-provider-test-data
    s3Key: hello-python.zip
    handler: index.py
    packageType: Zip
    region: us-east-1
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role
    runtime: python3.9
    timeout: 60
    vpcConfig:
    - securityGroupIdSelector:
        matchLabels:
          testing.upbound.io/example-name: example
      subnetIdSelector:
        matchLabels:
          testing.upbound.io/example-name: example
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  labels:
    testing.upbound.io/example-name: role
  name: sample-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": ["ec2.amazonaws.com", "lambda.amazonaws.com"]
            },
            "Effect": "Allow",
            "Sid": ""
          }
        ]
      }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  labels:
    testing.upbound.io/example-name: policy
  name: sample-user-policy
spec:
  forProvider:
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": [
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeRouteTables",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeNetworkInterfaces"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }
        ]
      }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  name: sample-user-policy-attachment
  labels:
    testing.upbound.io/example-name: policy-attachment
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  labels:
    testing.upbound.io/example-name: example
  name: sample-subnet1
spec:
  forProvider:
    region: us-east-1
    vpcIdRef:
      name: sample-vpc
    cidrBlock: 172.16.10.0/24
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    description: Allow TLS inbound traffic
    name: allow_tls
    tags:
      Name: allow_tls
    region: us-east-1
    vpcIdRef:
      name: sample-vpc
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: lambda/v1beta1/function
  labels:
    testing.upbound.io/example-name: example
  name: sample-vpc
spec:
  forProvider:
    region: us-east-1
    cidrBlock: 172.16.0.0/16
    tags:
      Name: DemoVpc

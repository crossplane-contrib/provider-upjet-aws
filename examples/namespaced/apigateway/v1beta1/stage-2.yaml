# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: UsagePlanKey
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: main
  namespace: upbound-system
spec:
  forProvider:
    keyIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    keyType: API_KEY
    region: us-west-1
    usagePlanIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: UsagePlan
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: example
  namespace: upbound-system
spec:
  forProvider:
    apiStages:
      - apiIdSelector:
          matchLabels:
            testing.upbound.io/example-name: stage
        stageSelector:
          matchLabels:
            testing.upbound.io/example-name: stage
      - apiIdSelector:
          matchLabels:
            testing.upbound.io/example-name: stage
        stageSelector:
          matchLabels:
            testing.upbound.io/example-name: stage
    description: my description
    name: my-usage-plan
    productCode: MYCODE
    quotaSettings:
      - limit: 20
        offset: 2
        period: WEEK
    region: us-west-1
    throttleSettings:
      - burstLimit: 5
        rateLimit: 10
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: APIKey
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: mykey
  namespace: upbound-system
spec:
  forProvider:
    name: my_key
    region: us-west-1
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: Deployment
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: stage
  namespace: upbound-system
spec:
  forProvider:
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: RestAPI
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: test-demo
  namespace: upbound-system
spec:
  forProvider:
    body: |-
      ${jsonencode({
          openapi = "3.0.1"
          info = {
            title   = "example"
            version = "1.0"
          }
          paths = {
            "/path1" = {
              get = {
                x-amazon-apigateway-integration = {
                  httpMethod           = "GET"
                  payloadFormatVersion = "1.0"
                  type                 = "HTTP_PROXY"
                  uri                  = "https://ip-ranges.amazonaws.com/ip-ranges.json"
                }
              }
            }
          }
        })}
    name: test-demo
    region: us-west-1
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: Stage
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: development
  namespace: upbound-system
spec:
  forProvider:
    deploymentIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    stageName: development
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: Stage
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: production
  namespace: upbound-system
spec:
  forProvider:
    deploymentIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    stageName: production
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: MethodSettings
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: all
  namespace: upbound-system
spec:
  forProvider:
    methodPath: '*/*'
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    settings:
      - metricsEnabled: true
    stageNameSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
---
apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: RequestValidator
metadata:
  labels:
    testing.upbound.io/example-name: stage
  name: example
  namespace: upbound-system
spec:
  forProvider:
    name: example
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: stage
    validateRequestBody: true
    validateRequestParameters: true

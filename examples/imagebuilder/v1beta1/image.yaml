apiVersion: imagebuilder.aws.upbound.io/v1beta1
kind: Image
metadata:
  annotations:
    upjet.upbound.io/manual-intervention: "It requires a ImageRecipe with manual intervention"
    meta.upbound.io/example-id: imagebuilder/v1beta1/image
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    imageRecipeArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    infrastructureConfigurationArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1

---

apiVersion: imagebuilder.aws.upbound.io/v1beta1
kind: ImageRecipe
metadata:
  annotations:
    upjet.upbound.io/manual-intervention: "It requires a real componentArn to be specified which is not supported yet"
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    name: example
    blockDeviceMapping:
    - deviceName: /dev/xvdb
      ebs:
      - deleteOnTermination: "true"
        volumeSize: 100
        volumeType: gp2
    component:
    - componentArn: arn:aws:imagebuilder:us-west-1:153891904029:component/example/1.0.0/1
    parentImage: ami-00d8a762cb0c50254
    region: us-west-1
    version: 1.0.0

---

apiVersion: imagebuilder.aws.upbound.io/v1beta1
kind: InfrastructureConfiguration
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    name: exmple
    description: example description
    instanceProfileNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: InstanceProfile
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  labels:
    testing.upbound.io/example-name: role
  name: role
spec:
  forProvider:
    assumeRolePolicy: |
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Action": "sts:AssumeRole",
                  "Principal": {
                     "Service": ["ec2.amazonaws.com", "s3.amazonaws.com"]
                  },
                  "Effect": "Allow",
                  "Sid": ""
              }
          ]
       }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: iot/v1beta1/provisioningtemplate
  labels:
    testing.upbound.io/example-name: ssm_managed_instance_core
  name: ssm-managed-instance-core
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: iot/v1beta1/provisioningtemplate
  labels:
    testing.upbound.io/example-name: ssm_full_access
  name: ssm-full-access
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: iot/v1beta1/provisioningtemplate
  labels:
    testing.upbound.io/example-name: ecr_container_builds
  name: ecr-container-builds
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

---


apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: iot/v1beta1/provisioningtemplate
  labels:
    testing.upbound.io/example-name: image_builder
  name: image-builder
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: iot/v1beta1/provisioningtemplate
  labels:
    testing.upbound.io/example-name: ssm_managed_instance
  name: ssm-managed-instance
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: role

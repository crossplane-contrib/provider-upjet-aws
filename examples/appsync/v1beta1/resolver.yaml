apiVersion: appsync.aws.upbound.io/v1beta1
kind: Resolver
metadata:
  annotations:
    meta.upbound.io/example-id: appsync/v1beta1/resolver
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    apiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: test
    cachingConfig:
    - cachingKeys:
      - $context.identity.sub
      - $context.arguments.id
      ttl: 60
    dataSourceSelector:
      matchLabels:
        testing.upbound.io/example-name: test
    field: singlePost
    region: us-west-1
    requestTemplate: |
      {
          "version": "2018-05-29",
          "method": "GET",
          "resourcePath": "/",
          "params":{
              "headers": $utils.http.copyheaders($ctx.request.headers)
          }
      }
    responseTemplate: |
      #if($ctx.result.statusCode == 200)
          $ctx.result.body
      #else
          $utils.appendError($ctx.result.body, $ctx.result.statusCode)
      #end
    type: Query
---
apiVersion: appsync.aws.upbound.io/v1beta1
kind: Datasource
metadata:
  annotations:
    meta.upbound.io/example-id: appsync/v1beta1/resolver
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    apiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: test
    httpConfig:
    - endpoint: http://example.com
    region: us-west-1
    type: HTTP
---
apiVersion: appsync.aws.upbound.io/v1beta1
kind: GraphQLAPI
metadata:
  annotations:
    meta.upbound.io/example-id: appsync/v1beta1/resolver
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    authenticationType: API_KEY
    name: tf-example
    region: us-west-1
    schema: |
      type Mutation {
        putPost(id: ID!, title: String!): Post
      }

      type Post {
        id: ID!
        title: String!
      }

      type Query {
        singlePost(id: ID!): Post
      }

      schema {
        query: Query
        mutation: Mutation
      }

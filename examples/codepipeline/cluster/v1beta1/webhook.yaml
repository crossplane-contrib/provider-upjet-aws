# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: codepipeline.aws.upbound.io/v1beta1
kind: Webhook
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/webhook
  labels:
    testing.upbound.io/example-name: codepipeline
  name: codepipeline-webhook
spec:
  forProvider:
    authentication: GITHUB_HMAC
    authenticationConfiguration:
    - secretTokenSecretRef:
        key: example-key
        name: example-secret-webhook
        namespace: upbound-system
    filter:
    - jsonPath: $.ref
      matchEquals: refs/heads/{Branch}
    region: us-west-1
    targetAction: Source
    targetPipelineSelector:
      matchLabels:
        testing.upbound.io/example-name: codepipeline
---
apiVersion: v1
kind: Secret
metadata:
  name: example-secret-webhook
  namespace: upbound-system
type: Opaque
stringData:
  example-key: "super-secret"
---
apiVersion: codepipeline.aws.upbound.io/v1beta1
kind: Codepipeline
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline
  name: codepipeline
spec:
  forProvider:
    artifactStore:
    - locationSelector:
        matchLabels:
          testing.upbound.io/example-name: codepipeline_bucket
      type: S3
    region: us-west-1
    roleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: codepipeline_role
    stage:
    - action:
      - category: Source
        configuration:
          Branch: master
          Repo: test
          Owner: my-organization
          OAuthToken: your-token-here
        name: Source
        outputArtifacts:
        - test
        owner: ThirdParty
        provider: GitHub
        version: "1"
      name: Source
    - action:
      - category: Build
        configuration:
          ProjectName: test
        inputArtifacts:
        - test
        name: Build
        outputArtifacts:
        - build_output
        owner: AWS
        provider: CodeBuild
        version: "1"
      name: Build
    - action:
      - category: Deploy
        configuration:
          ActionMode: REPLACE_ON_FAILURE
          Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
          OutputFileName: CreateStackOutput.json
          StackName: MyStack
          TemplatePath: build_output::sam-templated.yaml
        inputArtifacts:
        - build_output
        name: Deploy
        owner: AWS
        provider: CloudFormation
        version: "1"
      name: Deploy
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_role
  name: codepipeline-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "codepipeline.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
---
apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    crossplane.io/external-name: ${Rand.RFC1123Subdomain}
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_bucket
  name: codepipeline-bucket
spec:
  forProvider:
    region: us-west-1

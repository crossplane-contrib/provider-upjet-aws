apiVersion: secretsmanager.aws.upbound.io/v1beta1
kind: SecretRotation
metadata:
  annotations:
    meta.upbound.io/example-id: secretsmanager/v1beta1/secretrotation
    upjet.upbound.io/manual-intervention: "The lambda.Function resource that is dependent on this resource requires manual intervention."
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    region: us-east-1
    rotationLambdaArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    rotationRules:
    - automaticallyAfterDays: 30
    secretIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: lambda.aws.upbound.io/v1beta1
kind: Permission
metadata:
  annotations:
    meta.upbound.io/example-id: secretsmanager/v1beta1/secretrotation
  labels:
    testing.upbound.io/example-name: example
  name: example-secretrotation
spec:
  forProvider:
    region: us-east-1
    action: lambda:InvokeFunction
    principal: secretsmanager.amazonaws.com
    statementId: AllowExecutionFromSecretsManager
    functionNameSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: secretsmanager.aws.upbound.io/v1beta1
kind: Secret
metadata:
  annotations:
    meta.upbound.io/example-id: secretsmanager/v1beta1/secretrotation
  labels:
    testing.upbound.io/example-name: example
  name: example-secretrotation
spec:
  forProvider:
    name: example-${Rand.RFC1123Subdomain}
    region: us-east-1

---

apiVersion: lambda.aws.upbound.io/v1beta1
kind: Function
metadata:
  annotations:
    meta.upbound.io/example-id: secretsmanager/v1beta1/secretrotation
    upjet.upbound.io/manual-intervention: "This resource needs a s3.Bucket resource containing the hello-python.zip file."
  labels:
    testing.upbound.io/example-name: example
  name: example-secretrotation
spec:
  forProvider:
    region: us-east-1
    environment:
    - variables:
        foo: bar
    s3Bucket: upbound-provider-test-data
    s3Key: hello-python.zip
    handler: index.py
    roleRef:
      name: sample-role
    runtime: python3.9

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: secretsmanager/v1beta1/secretrotation
  labels:
    testing.upbound.io/example-name: example
  name: sample-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Effect": "Allow",
            "Sid": ""
          }
        ]
      }

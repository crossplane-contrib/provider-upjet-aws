# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: kafkaconnect.aws.m.upbound.io/v1beta1
kind: Connector
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
    uptest.upbound.io/timeout: "2100"
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: connector-nokafka
  namespace: upbound-system
spec:
  forProvider:
    capacity:
      autoscaling:
        maxWorkerCount: 2
        mcuCount: 1
        minWorkerCount: 1
        scaleInPolicy:
          cpuUtilizationPercentage: 20
        scaleOutPolicy:
          cpuUtilizationPercentage: 80
    connectorConfiguration:
      connector.class: org.apache.kafka.connect.file.FileStreamSinkConnector
      tasks.max: "1"
      topics: example
    kafkaCluster:
      apacheKafkaCluster:
        bootstrapServers: localhost:9092
        vpc:
          securityGroupSelector:
            matchLabels:
              testing.upbound.io/example-name: connector-nokafka
          subnetSelector:
            matchLabels:
              testing.upbound.io/example-name: connector-nokafka
    kafkaClusterClientAuthentication:
      authenticationType: NONE
    kafkaClusterEncryptionInTransit:
      encryptionType: PLAINTEXT
    kafkaconnectVersion: 2.7.1
    logDelivery:
      workerLogDelivery:
        cloudwatchLogs:
          enabled: true
          logGroupSelector:
            matchLabels:
              testing.upbound.io/example-name: connector-nokafka
        firehose:
          enabled: false
    name: connector-nokafka
    plugin:
      - customPlugin:
          arnSelector:
            matchLabels:
              testing.upbound.io/example-name: connector-nokafka
          revision: 1
    region: us-east-2
    serviceExecutionRoleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: connector-nokafka
---
apiVersion: kafkaconnect.aws.m.upbound.io/v1beta1
kind: CustomPlugin
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: example
  namespace: upbound-system
spec:
  forProvider:
    contentType: ZIP
    location:
      s3:
        bucketArnSelector:
          matchLabels:
            testing.upbound.io/example-name: connector-nokafka
        fileKeySelector:
          matchLabels:
            testing.upbound.io/example-name: connector-nokafka
    name: empty-example
    region: us-east-2
---
apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: connector-nokafka
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "kafkaconnect.amazonaws.com",
                "firehose.amazonaws.com"
              ]
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    managedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
---
apiVersion: s3.aws.m.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: ${Rand.RFC1123Subdomain}
  namespace: upbound-system
spec:
  forProvider:
    forceDestroy: true
    region: us-east-2
---
apiVersion: s3.aws.m.upbound.io/v1beta1
kind: Object
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
    uptest.upbound.io/disable-import: "true"
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: example
  namespace: upbound-system
spec:
  forProvider:
    bucketSelector:
      matchLabels:
        testing.upbound.io/example-name: connector-nokafka
    contentBase64: |
      UEsDBAoAAAAAAPpkXlcAAAAAAAAAAAAAAAAFABwAZW1wdHlVVAkAA4gGQGWIBkBldXgLAAEE6AMAAAToAwAAUEsBAh4DCgAAAAAA+mReVwAAAAAAAAAAAAAAAAUAGAAAAAAAAAAAALSBAAAAAGVtcHR5VVQFAAOIBkBldXgLAAEE6AMAAAToAwAAUEsFBgAAAAABAAEASwAAAD8AAAAAAA==
    contentType: application/zip
    key: empty.zip
    region: us-east-2
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: sg
  namespace: upbound-system
spec:
  forProvider:
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: connector-nokafka
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: subnet-az1
  namespace: upbound-system
spec:
  forProvider:
    availabilityZone: us-east-2a
    cidrBlock: 192.168.0.0/24
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: connector-nokafka
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: subnet-az2
  namespace: upbound-system
spec:
  forProvider:
    availabilityZone: us-east-2b
    cidrBlock: 192.168.1.0/24
    region: us-east-2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: connector-nokafka
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: vpc
  namespace: upbound-system
spec:
  forProvider:
    cidrBlock: 192.168.0.0/22
    region: us-east-2
---
apiVersion: cloudwatchlogs.aws.m.upbound.io/v1beta1
kind: Group
metadata:
  annotations:
    crossplane.io/external-name: ${Rand.RFC1123Subdomain}
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: test
  namespace: upbound-system
spec:
  forProvider:
    region: us-east-2
    retentionInDays: 1
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroupRule
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: ingress
  namespace: upbound-system
spec:
  forProvider:
    cidrBlocks:
      - 0.0.0.0/0
    fromPort: 0
    protocol: all
    region: us-east-2
    securityGroupIdRef:
      name: sg
    toPort: 0
    type: ingress
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroupRule
metadata:
  annotations:
    meta.upbound.io/example-id: kafkaconnect/v1beta1/connector
  labels:
    testing.upbound.io/example-name: connector-nokafka
  name: egress
  namespace: upbound-system
spec:
  forProvider:
    cidrBlocks:
      - 0.0.0.0/0
    fromPort: 0
    protocol: all
    region: us-east-2
    securityGroupIdRef:
      name: sg
    toPort: 0
    type: egress

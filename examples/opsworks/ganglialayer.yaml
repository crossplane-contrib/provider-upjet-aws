apiVersion: opsworks.aws.upbound.io/v1beta1
kind: GangliaLayer
metadata:
  annotations:
    meta.upbound.io/example-id: opsworks/v1beta1/ganglialayer
    upjet.upbound.io/manual-intervention: "Need try to use hooks to avoid manual intervention. This resource needs a service role with next policies (policies need more time to be attached to the role and we start create resources without policy attached): AWS OpsWorks Full Access, AWS ECS Full Access, OpsWorks CM servers, EC2 Full Access, AWS RDS Full Access, ElasticLoad Balancing Full Access. Also it will be created 17 security groups when create Stack resource and we cant delete it automatically."
  labels:
    testing.upbound.io/example-name: monitor
  name: monitor
spec:
  forProvider:
    password: foobarbaz
    autoAssignPublicIps: true
    stackIdSelector:
      matchLabels:
        testing.upbound.io/example-name: main
---
apiVersion: opsworks.aws.upbound.io/v1beta1
kind: Stack
metadata:
  annotations:
    meta.upbound.io/example-id: opsworks/v1beta1/ganglialayer
    upjet.upbound.io/manual-intervention: "Need try to use hooks to avoid manual intervention. This resource needs a service role with next policies (policies need more time to be attached to the role and we start create resources without policy attached): AWS OpsWorks Full Access, AWS ECS Full Access, OpsWorks CM servers, EC2 Full Access, AWS RDS Full Access, ElasticLoad Balancing Full Access. Also it will be created 17 security groups when create Stack resource and we cant delete it automatically."
  labels:
    testing.upbound.io/example-name: main
  name: main
spec:
  forProvider:
    customJson: |
      {
       "opsworkstest": {
          "version": "1.0.0"
        }
      }
    defaultInstanceProfileArnSelector:
      matchLabels:
        testing.upbound.io/example-name: test_profile
    name: awesome-stack
    defaultAvailabilityZone: us-east-1a
    region: us-east-1
    serviceRoleArn: arn:aws:iam::153891904029:role/example-ops-role
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: InstanceProfile
metadata:
  annotations:
    meta.upbound.io/example-id: opsworks/v1beta1/ganglialayer
    upjet.upbound.io/manual-intervention: "Need try to use hooks to avoid manual intervention. This resource needs a service role with next policies (policies need more time to be attached to the role and we start create resources without policy attached): AWS OpsWorks Full Access, AWS ECS Full Access, OpsWorks CM servers, EC2 Full Access, AWS RDS Full Access, ElasticLoad Balancing Full Access. Also it will be created 17 security groups when create Stack resource and we cant delete it automatically."
  labels:
    testing.upbound.io/example-name: test_profile
  name: test-profile
spec:
  forProvider:
    role: example-ops-role
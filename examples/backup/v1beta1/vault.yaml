apiVersion: backup.aws.upbound.io/v1beta1
kind: Vault
metadata:
  name: test-${Rand.RFC1123Subdomain}
  labels:
    testing.upbound.io/example-name: vault
spec:
  forProvider:
    region: us-west-1
    kmsKeyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
---
apiVersion: kms.aws.upbound.io/v1beta1
kind: Key
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: kmskey
spec:
  forProvider:
    deletionWindowInDays: 10
    description: KMS key 1
    region: us-west-1
---
apiVersion: backup.aws.upbound.io/v1beta1
kind: Plan
metadata:
  name: example
  labels:
    testing.upbound.io/example-name: vault
spec:
  forProvider:
    region: us-west-1
    advancedBackupSetting:
      - backupOptions:
          WindowsVSS: enabled
        resourceType: EC2
    name: test-${Rand.RFC1123Subdomain}
    rule:
      - lifecycle:
          - deleteAfter: 14
        ruleName: up_example_backup_rule
        schedule: cron(0 12 * * ? *)
        targetVaultNameSelector:
          matchLabels:
            testing.upbound.io/example-name: vault
---
apiVersion: backup.aws.upbound.io/v1beta1
kind: Selection
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: example
spec:
  forProvider:
    name: example-${Rand.RFC1123Subdomain}
    selectionTag:
      - key: crossplane-kind
        type: STRINGEQUALS
        value: topic
    iamRoleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
    planIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
    region: us-west-1
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: example-backup-${Rand.RFC1123Subdomain}
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": ["sts:AssumeRole"],
            "Effect": "allow",
            "Principal": {
              "Service": ["backup.amazonaws.com"]
            }
          }
        ]
      }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: example
spec:
  forProvider:
    policyArn: "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup"
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
---
apiVersion: backup.aws.upbound.io/v1beta1
kind: VaultLockConfiguration
metadata:
  name: example
spec:
  forProvider:
    region: us-west-1
    backupVaultNameSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
    changeableForDays: 3
    maxRetentionDays: 1200
    minRetentionDays: 7
---
apiVersion: backup.aws.upbound.io/v1beta1
kind: VaultNotifications
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: test
spec:
  forProvider:
    backupVaultEvents:
      - BACKUP_JOB_STARTED
      - RESTORE_JOB_COMPLETED
    backupVaultNameSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
    region: us-west-1
    snsTopicArnSelector:
      matchLabels:
        testing.upbound.io/example-name: vault
---
apiVersion: sns.aws.upbound.io/v1beta1
kind: Topic
metadata:
  labels:
    testing.upbound.io/example-name: vault
  name: test
spec:
  forProvider:
    displayName: backup-vault-events
    region: us-west-1

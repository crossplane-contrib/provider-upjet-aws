apiVersion: networkfirewall.aws.upbound.io/v1beta1
kind: Firewall
metadata:
  annotations:
    uptest.upbound.io/timeout: "3600"
    meta.upbound.io/example-id: networkfirewall/v1beta1/firewall
  labels:
    testing.upbound.io/example-name: example
  name: firewallname
spec:
  forProvider:
    firewallPolicyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1
    name: firewallname
    subnetMapping:
    - subnetIdSelector:
        matchLabels:
          testing.upbound.io/example-name: example
    tags:
      Tag1: Value1
      Tag2: Value2
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: networkfirewall.aws.upbound.io/v1beta1
kind: FirewallPolicy
metadata:
  annotations:
    uptest.upbound.io/timeout: "3600"
    meta.upbound.io/example-id: networkfirewall/v1beta1/firewall
  labels:
    testing.upbound.io/example-name: example
  name: firewallpolicy
spec:
  forProvider:
    firewallPolicy:
      - statelessDefaultActions:
          - aws:pass
        statelessFragmentDefaultActions:
          - aws:drop
        statelessRuleGroupReference:
          - priority: 1
            resourceArnSelector:
              matchLabels:
                testing.upbound.io/example-name: example
    region: us-west-1
    tags:
      Tag1: Value1
      Tag2: Value2

---

apiVersion: networkfirewall.aws.upbound.io/v1beta1
kind: RuleGroup
metadata:
  annotations:
    uptest.upbound.io/timeout: "3600"
    meta.upbound.io/example-id: networkfirewall/v1beta1/firewall
  labels:
    testing.upbound.io/example-name: example
  name: rulegroup
spec:
  forProvider:
    capacity: 100
    name: rulegroup
    region: us-west-1
    ruleGroup:
      - rulesSource:
          - statelessRulesAndCustomActions:
              - customAction:
                  - actionDefinition:
                      - publishMetricAction:
                          - dimension:
                              - value: "2"
                    actionName: "ExampleMetricsAction"
                statelessRule:
                  - priority: 1
                    ruleDefinition:
                      - actions:
                          - aws:pass
                          - ExampleMetricsAction
                        matchAttributes:
                          - source:
                              - addressDefinition: "1.2.3.4/32"
                            sourcePort:
                              - fromPort: 443
                                toPort: 443
                            destination:
                              - addressDefinition: "124.1.1.5/32"
                            destinationPort:
                              - fromPort: 443
                                toPort: 443
                            protocols:
                              - 6
                            tcpFlag:
                              - flags:
                                  - SYN
                                masks:
                                  - SYN
                                  - ACK
    tags:
      Tag1: Value1
      Tag2: Value2
    type: STATELESS

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: sample-vpc
spec:
  forProvider:
    region: us-west-1
    cidrBlock: 172.16.0.0/16
    tags:
      Name: DemoVpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: sample-subnet1
spec:
  forProvider:
    region: us-west-1
    availabilityZone: us-west-1b
    vpcIdRef:
      name: sample-vpc
    cidrBlock: 172.16.10.0/24
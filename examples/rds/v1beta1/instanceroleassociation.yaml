apiVersion: rds.aws.upbound.io/v1beta1
kind: InstanceRoleAssociation
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
  labels:
    testing.upbound.io/example-name: example-instanceroleassociation
  name: example-ira
spec:
  forProvider:
    dbInstanceIdentifierSelector:
      matchLabels:
        testing.upbound.io/example-name: example-dbinstance-ira
    featureName: s3Import
    region: us-west-1
    roleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: rds.aws.upbound.io/v1beta1
kind: Instance
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
    uptest.upbound.io/timeout: "3600"
  labels:
    testing.upbound.io/example-name: example-dbinstance-ira
  name: example-dbinstance-${Rand.RFC1123Subdomain}
spec:
  forProvider:
    dbName: example
    region: us-west-1
    allocatedStorage: 20
    autoMinorVersionUpgrade: true
    backupRetentionPeriod: 14
    instanceClass: db.t3.micro
    engine: postgres
    engineVersion: "13.7"
    username: adminuser
    autoGeneratePassword: true
    passwordSecretRef:
      key: password
      name: example-dbinstance
      namespace: upbound-system
    backupWindow: "09:46-10:16"
    maintenanceWindow: "Mon:00:00-Mon:03:00"
    publiclyAccessible: false
    skipFinalSnapshot: true
    storageEncrypted: true
    storageType: gp2
    kmsKeyIdSelector:
      matchLabels:
        testing.upbound.io/example-name: sample-key-ira
  writeConnectionSecretToRef:
    name: example-dbinstance-out
    namespace: default

---

apiVersion: kms.aws.upbound.io/v1beta1
kind: Key
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
  labels:
    testing.upbound.io/example-name: sample-key-ira
  name: sample-key-${Rand.RFC1123Subdomain}
spec:
  forProvider:
    region: us-west-1
    description: Created with Crossplane
    deletionWindowInDays: 7

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
  labels:
    testing.upbound.io/example-name: example
  name: sample-role-attach-ira
spec:
  forProvider:
    policyArnRef:
      name: sample-policy-ira
    roleRef:
      name: sample-role-ira

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
  labels:
    testing.upbound.io/example-name: example
  name: sample-role-ira
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "",
            "Effect": "Allow",
            "Principal": {
              "Service": "rds.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instanceroleassociation
  labels:
    testing.upbound.io/example-name: example
  name: sample-policy-ira
spec:
  forProvider:
    policy: |
      {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*",
                "s3-object-lambda:*"
              ],
              "Resource": "*"
            }
          ]
      }

apiVersion: route53.aws.upbound.io/v1beta1
kind: HostedZoneDNSSEC
metadata:
  labels:
    testing.upbound.io/example-name: example
  annotations:
    upjet.upbound.io/manual-intervention: "This resource is not stable due to https://github.com/crossplane/upjet/issues/80."
  name: example
spec:
  forProvider:
    hostedZoneIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1

---

apiVersion: kms.aws.upbound.io/v1beta1
kind: Key
metadata:
  labels:
    testing.upbound.io/example-name: example
  annotations:
    upjet.upbound.io/manual-intervention: "The dependent resource HostedZoneDNSSEC is not stable and is thus skipped."
  name: example
spec:
  forProvider:
    customerMasterKeySpec: ECC_NIST_P256
    deletionWindowInDays: 7
    keyUsage: SIGN_VERIFY
    policy: |-
      ${jsonencode({
          Statement = [
            {
              Action = [
                "kms:DescribeKey",
                "kms:GetPublicKey",
                "kms:Sign",
              ],
              Effect = "Allow"
              Principal = {
                Service = "dnssec-route53.amazonaws.com"
              }
              Sid      = "Allow Route 53 DNSSEC Service",
              Resource = "*"
              Condition = {
                StringEquals = {
                  "aws:SourceAccount" = "${data.aws_caller_identity.current.account_id}"
                }
                ArnLike = {
                  "aws:SourceArn" = "arn:aws:route53:::hostedzone/*"
                }
              }
            },
            {
              Action = "kms:CreateGrant",
              Effect = "Allow"
              Principal = {
                Service = "dnssec-route53.amazonaws.com"
              }
              Sid      = "Allow Route 53 DNSSEC Service to CreateGrant",
              Resource = "*"
              Condition = {
                Bool = {
                  "kms:GrantIsForAWSResource" = "true"
                }
              }
            },
            {
              Action = "kms:*"
              Effect = "Allow"
              Principal = {
                AWS = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:root"
              }
              Resource = "*"
              Sid      = "Enable IAM User Permissions"
            },
          ]
          Version = "2012-10-17"
        })}
    region: us-west-1

---

apiVersion: route53.aws.upbound.io/v1beta1
kind: Zone
metadata:
  labels:
    testing.upbound.io/example-name: example
  annotations:
    upjet.upbound.io/manual-intervention: "The dependent resource HostedZoneDNSSEC is not stable and is thus skipped."
  name: example
spec:
  forProvider:
    name: mycompany.test
    region: us-west-1

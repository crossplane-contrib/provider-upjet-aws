apiVersion: batch.aws.upbound.io/v1beta1
kind: ComputeEnvironment
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: sample
  name: sample
spec:
  forProvider:
    computeResources:
      instanceRoleSelector:
        matchLabels:
          testing.upbound.io/example-name: ecs_instance_role
      instanceType:
      - c4.large
      maxVcpus: 16
      minVcpus: 0
      placementGroupSelector:
        matchLabels:
          testing.upbound.io/example-name: sample
      securityGroupIds:
      - sg-1234567890abcdef0
      subnets:
      - subnet-1234567890abcdef0
      - subnet-0987654321fedcba0
      type: EC2
    region: us-west-1
    serviceRoleSelector:
      matchLabels:
        testing.upbound.io/example-name: aws_batch_service_role
    type: MANAGED

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: InstanceProfile
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: ecs_instance_role
  name: ecs-instance-role
spec:
  forProvider:
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: ecs_instance_role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: aws_batch_service_role
  name: aws-batch-service-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: ecs_instance_role
  name: ecs-instance-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: aws_batch_service_role
  name: aws-batch-service-role
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: sample_policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: aws_batch_service_role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: ecs_instance_role
  name: ecs-instance-role
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: sample_policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: ecs_instance_role

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: PlacementGroup
metadata:
  annotations:
    meta.upbound.io/example-id: batch/v1beta1/computeenvironment
  labels:
    testing.upbound.io/example-name: sample
  name: sample
spec:
  forProvider:
    region: us-west-1
    strategy: cluster
---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: iam/v1beta1/role
  labels:
    testing.upbound.io/example-name: sample_policy
  name: sample-user-policy
spec:
  forProvider:
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": "elastic-inference:Connect",
              "Resource": "*"
          }
        ]
      }

---

# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0

apiVersion: servicecatalog.aws.m.upbound.io/v1beta1
kind: Constraint
metadata:
  annotations:
    meta.upbound.io/example-id: servicecatalog/v1beta1/constraint
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    description: Back off, man. I'm a scientist.
    parameters: |-
      ${jsonencode({
          "RoleArn" : "arn:aws:iam::${data.aws_account_id}:role/test-role-example"
        })}
    portfolioIdSelector:
      matchLabels:
        testing.upbound.io/example-name: portfolio
    productIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1
    type: LAUNCH
---
apiVersion: servicecatalog.aws.m.upbound.io/v1beta1
kind: Portfolio
metadata:
  annotations:
    meta.upbound.io/example-id: servicecatalog/v1beta1/constraint
  labels:
    testing.upbound.io/example-name: portfolio
  name: portfolio
  namespace: upbound-system
spec:
  forProvider:
    description: List of my organizations apps
    name: My App Portfolio
    providerName: Brett
    region: us-west-1
---
apiVersion: servicecatalog.aws.m.upbound.io/v1beta1
kind: Product
metadata:
  annotations:
    meta.upbound.io/example-id: servicecatalog/v1beta1/constraint
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    name: example
    owner: "test testovich"
    provisioningArtifactParameters:
      - templateUrl: https://s3-us-west-1.amazonaws.com/cloudformation-templates-us-west-1/LAMP_Single_Instance.template
        type: "CLOUD_FORMATION_TEMPLATE"
    region: us-west-1
    tags:
      foo: bar
    type: "CLOUD_FORMATION_TEMPLATE"
---
apiVersion: servicecatalog.aws.m.upbound.io/v1beta1
kind: ProductPortfolioAssociation
metadata:
  annotations:
    meta.upbound.io/example-id: servicecatalog/v1beta1/constraint
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    portfolioIdSelector:
      matchLabels:
        testing.upbound.io/example-name: portfolio
    productIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1
    acceptLanguage: en
---
apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: servicecatalog/v1beta1/constraint
  labels:
    testing.upbound.io/example-name: r
  name: test-role-example
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "servicecatalog.amazonaws.com"
            },
            "Effect": "Allow",
            "Sid": ""
          }
        ]
      }

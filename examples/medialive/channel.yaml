apiVersion: medialive.aws.upbound.io/v1beta1
kind: Channel
metadata:
  annotations:
    upjet.upbound.io/manual-intervention: "Input resource requires at least one valid input_security_group id."
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel
spec:
  forProvider:
    channelClass: STANDARD
    destinations:
    - id: destination
      settings:
      - url: s3://channel1/test1
      - url: s3://channel2/test2
    encoderSettings:
    - audioDescriptions:
      - audioSelectorName: example audio selector
        name: audio-selector
      outputGroups:
      - outputGroupSettings:
        - archiveGroupSettings:
          - destination:
            - destinationRefId: destination
        outputs:
        - audioDescriptionNames:
          - audio-selector
          outputName: example-name
          outputSettings:
          - archiveOutputSettings:
            - containerSettings:
              - m2tsSettings:
                - audioBufferModel: ATSC
                  bufferModel: MULTIPLEX
                  rateMode: CBR
              extension: m2ts
              nameModifier: _1
          videoDescriptionName: example-vidoe
      timecodeConfig:
      - source: EMBEDDED
      videoDescriptions:
      - name: example-vidoe
    inputAttachments:
    - inputAttachmentName: example-input
      inputIdSelector:
        matchLabels:
          testing.upbound.io/example-name: channel
    inputSpecification:
    - codec: AVC
      inputResolution: HD
      maximumBitrate: MAX_20_MBPS
    name: example-channel
    region: us-east-1
    roleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: channel

---

apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel1
spec:
  forProvider:
    region: us-east-1
    forceDestroy: true

---

apiVersion: s3.aws.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel2
spec:
  forProvider:
    region: us-east-1
    forceDestroy: true

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "medialive.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: medialive.aws.upbound.io/v1beta1
kind: Input
metadata:
  annotations:
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel
spec:
  forProvider:
    inputSecurityGroups:
      - "${aws_medialive_input_security_group.id}"
    name: example-input
    region: us-east-1
    tags:
      ENVIRONMENT: prod
    type: UDP_PUSH

---

apiVersion: medialive.aws.upbound.io/v1beta1
kind: InputSecurityGroup
metadata:
  annotations:
    meta.upbound.io/example-id: medialive/v1beta1/channel
  labels:
    testing.upbound.io/example-name: channel
  name: channel
spec:
  forProvider:
    region: us-east-1
    tags:
      ENVIRONMENT: prod
    whitelistRules:
      - cidr: 10.0.0.8/32
apiVersion: route53resolver.aws.upbound.io/v1beta1
kind: Endpoint
metadata:
  labels:
    testing.upbound.io/example-name: foo
  name: foo
spec:
  forProvider:
    direction: INBOUND
    ipAddress:
    - subnetIdSelector:
        matchLabels:
          testing.upbound.io/example-name: sample-subnet1
    - subnetIdSelector:
        matchLabels:
          testing.upbound.io/example-name: sample-subnet2
    name: foo
    region: us-west-1
    securityGroupIdRefs:
    - name: sg1
    tags:
      Environment: Prod

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  labels:
    testing.upbound.io/example-name: sample-vpc
  name: sample-vpc
spec:
  forProvider:
    region: us-west-1
    cidrBlock: 172.16.0.0/16
    tags:
      Name: DemoVpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  labels:
    testing.upbound.io/example-name: sample-subnet1
  name: sample-subnet1
spec:
  forProvider:
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: sample-vpc
    cidrBlock: 172.16.10.0/24

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  labels:
    testing.upbound.io/example-name: sample-subnet2
  name: sample-subnet2
spec:
  forProvider:
    region: us-west-1
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: sample-vpc
    cidrBlock: 172.16.20.0/24

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  labels:
    testing.upbound.io/example-name: sg1
  name: sg1
spec:
  forProvider:
    region: us-west-1
    description: Allow TLS inbound traffic
    name: allow_tls
    tags:
      Name: allow_tls
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: sample-vpc


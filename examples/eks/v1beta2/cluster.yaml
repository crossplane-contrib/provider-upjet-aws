# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: eks.aws.upbound.io/v1beta2
kind: Cluster
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
    uptest.upbound.io/timeout: "2400"
  labels:
    testing.upbound.io/example-name: example
  name: sample-eks-cluster
spec:
  forProvider:
    region: us-west-1
    roleArnRef:
      name: sample-eks-cluster
    vpcConfig:
      subnetIdRefs:
      - name: sample-subnet1
      - name: sample-subnet2

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: sample-eks-cluster
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: sample-cluster-policy
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
    roleRef:
      name: sample-eks-cluster

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: sample-subnet1
spec:
  forProvider:
    availabilityZone: us-west-1b
    cidrBlock: 172.16.10.0/24
    mapPublicIpOnLaunch: true
    region: us-west-1
    vpcIdRef:
      name: sample-vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: sample-subnet2
spec:
  forProvider:
    availabilityZone: us-west-1a
    cidrBlock: 172.16.11.0/24
    mapPublicIpOnLaunch: true
    region: us-west-1
    vpcIdRef:
      name: sample-vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: private-subnet
spec:
  forProvider:
    availabilityZone: us-west-1b
    cidrBlock: 172.16.12.0/24
    region: us-west-1
    vpcIdRef:
      name: sample-vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTable
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: example
spec:
  forProvider:
    region: us-west-1
    tags:
      Name: example
    vpcIdRef:
      name: sample-vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: example
spec:
  forProvider:
    region: us-west-1
    routeTableIdRef:
      name: example
    subnetIdRef:
      name: private-subnet

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: sample-vpc
spec:
  forProvider:
    cidrBlock: 172.16.0.0/16
    enableDnsHostnames: true
    region: us-west-1
    tags:
      Name: DemoVpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: InternetGateway
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: example
spec:
  forProvider:
    region: us-west-1
    vpcIdRef:
      name: sample-vpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: DefaultRouteTable
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta2/cluster
  name: example
spec:
  forProvider:
    defaultRouteTableIdRef:
      name: sample-vpc
    region: us-west-1
    route:
    - cidrBlock: 0.0.0.0/0
      gatewayIdRef:
        name: example

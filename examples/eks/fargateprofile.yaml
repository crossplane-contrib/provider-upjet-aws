apiVersion: eks.aws.upbound.io/v1beta1
kind: FargateProfile
metadata:
  name: sample-fargate-profile
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    region: us-west-1
    clusterNameRef:
      name: sample-eks-cluster
    podExecutionRoleArnRef:
      name: sample-fargate-role
    selector:
    - namespace: example
    subnetIdRefs:
    - name: private-subnet

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: sample-fargate-role
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks-fargate-pods.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: sample-fargate-policy
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
    roleRef:
      name: sample-fargate-role

---

apiVersion: eks.aws.upbound.io/v1beta1
kind: Cluster
metadata:
  annotations:
    uptest.upbound.io/timeout: "2400"
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
  name: sample-eks-cluster
  labels:
    testing.upbound.io/example-name: example
spec:
  forProvider:
    region: us-west-1
    roleArnRef:
      name: sample-eks-cluster
    vpcConfig:
      - subnetIdRefs:
          - name: sample-subnet1
          - name: sample-subnet2

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: sample-eks-cluster
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  name: sample-vpc
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    enableDnsHostnames: true
    region: us-west-1
    cidrBlock: 172.16.0.0/16
    tags:
      Name: DemoVpc

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  name: sample-subnet1
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    region: us-west-1
    mapPublicIpOnLaunch: true
    availabilityZone: us-west-1b
    vpcIdRef:
      name: sample-vpc
    cidrBlock: 172.16.10.0/24

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  name: sample-subnet2
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    region: us-west-1
    mapPublicIpOnLaunch: true
    availabilityZone: us-west-1c
    vpcIdRef:
      name: sample-vpc
    cidrBlock: 172.16.11.0/24

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  name: private-subnet
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/fargateprofile
spec:
  forProvider:
    region: us-west-1
    availabilityZone: us-west-1b
    vpcIdRef:
      name: sample-vpc
    cidrBlock: 172.16.12.0/24
    tags:
      kubernetes.io/cluster/sample-eks-cluster: sample-eks-cluster

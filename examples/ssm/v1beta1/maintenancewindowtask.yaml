apiVersion: ssm.aws.upbound.io/v1beta1
kind: MaintenanceWindowTask
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
    upjet.upbound.io/manual-intervention: "It requires an aws_instance id"
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    maxConcurrency: "2"
    maxErrors: "1"
    priority: 1
    region: us-east-1
    targets:
    - key: InstanceIds
      values:
      - ${aws_instance}
    taskArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    taskInvocationParameters:
      - lambdaParameters:
          - clientContext: eyJrZXkiOiAidmFsdWUifQ==
    taskType: LAMBDA
    windowIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Instance
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    networkInterface:
      - deviceIndex: 0
        networkInterfaceIdRef:
          name: test
    region: us-east-1
    ami: ami-0b5eea76982371e91
    instanceType: t2.micro

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: NetworkInterface
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    region: us-east-1
    subnetIdSelector:
      matchLabels:
        testing.upbound.io/example-name: subnetattach

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: subnetattach
  name: subnetattach
spec:
  forProvider:
    availabilityZone: us-east-1b
    region: us-east-1
    cidrBlock: 10.0.5.0/24
    vpcIdSelector:
      matchLabels:
        testing.upbound.io/example-name: vpcattach

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: vpcattach
  name: vpcattach
spec:
  forProvider:
    region: us-east-1
    cidrBlock: 10.0.0.0/16

---


apiVersion: lambda.aws.upbound.io/v1beta1
kind: Function
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    region: us-east-1
    environment:
      - variables:
          foo: bar
    s3Bucket: upbound-provider-test-data
    s3Key: hello-python.zip
    handler: index.py
    roleRef:
      name: sample-role
    runtime: python3.9

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  name: sample-role
  labels:
    testing.upbound.io/example-name: role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Effect": "Allow",
            "Sid": ""
          }
        ]
      }

---

apiVersion: ssm.aws.upbound.io/v1beta1
kind: MaintenanceWindow
metadata:
  annotations:
    meta.upbound.io/example-id: ssm/v1beta1/maintenancewindowtask
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    cutoff: 1
    duration: 3
    name: maintenance-window-application
    region: us-east-1
    schedule: cron(0 16 ? * TUE *)
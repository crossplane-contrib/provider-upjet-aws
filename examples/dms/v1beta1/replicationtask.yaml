apiVersion: dms.aws.upbound.io/v1beta1
kind: ReplicationTask
metadata:
  annotations:
    upjet.upbound.io/manual-intervention: "The Endpoint resources need a valid certificateArn and kmsKeyArn values."
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    cdcStartTime: "1484346880"
    migrationType: full-load
    region: us-west-1
    replicationInstanceArnSelector:
      matchLabels:
        testing.upbound.io/example-name: test-dms-replication-instance-tf
    sourceEndpointArnSelector:
      matchLabels:
        testing.upbound.io/example-name: test-dms-source-endpoint-tf
    tableMappings: '{"rules":[{"rule-type":"selection","rule-id":"1","rule-name":"1","object-locator":{"schema-name":"%","table-name":"%"},"rule-action":"include"}]}'
    tags:
      Name: test
    targetEndpointArnSelector:
      matchLabels:
        testing.upbound.io/example-name: test-dms-target-endpoint-tf


---

apiVersion: dms.aws.upbound.io/v1beta1
kind: ReplicationInstance
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: test-dms-replication-instance-tf
  name: test
spec:
  forProvider:
    allocatedStorage: 20
    applyImmediately: true
    autoMinorVersionUpgrade: true
    multiAz: false
    preferredMaintenanceWindow: sun:10:30-sun:14:30
    publiclyAccessible: true
    region: us-west-1
    replicationInstanceClass: dms.t2.micro
    tags:
      Name: test

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint
  name: dms-access-for-endpoint
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: amazondmsredshifts3role
  name: amazondmsredshifts3role
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "kms:*",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:Create*",
              "kms:Describe*",
              "kms:Enable*",
              "kms:List*",
              "kms:Put*",
              "kms:Update*",
              "kms:Revoke*",
              "kms:Disable*",
              "kms:Get*",
              "kms:Delete*",
              "kms:TagResource",
              "kms:UntagResource",
              "kms:ScheduleKeyDeletion",
              "kms:CancelKeyDeletion"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:Encrypt",
              "kms:Decrypt",
              "kms:ReEncrypt*",
              "kms:GenerateDataKey*",
              "kms:DescribeKey"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:CreateGrant",
              "kms:ListGrants",
              "kms:RevokeGrant"
            ],
            "Resource": "*",
            "Condition": {
              "Bool": {
                "kms:GrantIsForAWSResource": true
              }
            }
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role
  name: dms-cloudwatch-logs-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: amazondmscloudwatchlogsrole
  name: amazondmscloudwatchlogsrole
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Statement": [
          {
            "Action": [
              "logs:DescribeLogGroups"
            ],
            "Effect": "Allow",
            "Resource": [
              "*"
            ],
            "Sid": "AllowDescribeOnAllLogGroups"
          },
          {
            "Action": [
              "logs:DescribeLogStreams"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*"
            ],
            "Sid": "AllowDescribeOfAllLogStreamsOnDmsTasksLogGroup"
          },
          {
            "Action": [
              "logs:CreateLogGroup"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*"
            ],
            "Sid": "AllowCreationOfDmsTasksLogGroups"
          },
          {
            "Action": [
              "logs:CreateLogStream"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
            ],
            "Sid": "AllowCreationOfDmsTaskLogStream"
          },
          {
            "Action": [
              "logs:PutLogEvents"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
            ],
            "Sid": "AllowUploadOfLogEventsToDmsTaskLogStream"
          }
        ],
        "Version": "2012-10-17"
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint-AmazonDMSRedshiftS3Role
  name: dms-access-for-endpoint-amazondmsredshifts3role
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: amazondmsredshifts3role
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-access-for-endpoint

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole
  name: dms-cloudwatch-logs-role-amazondmscloudwatchlogsrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: amazondmscloudwatchlogsrole
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-cloudwatch-logs-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-vpc-role-AmazonDMSVPCManagementRole
  name: dms-vpc-role-amazondmsvpcmanagementrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-vpc-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: policy
  name: amazondmsvpcmanagementrole
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateNetworkInterface",
              "ec2:DescribeAvailabilityZones",
              "ec2:DescribeInternetGateways",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "ec2:DeleteNetworkInterface",
              "ec2:ModifyNetworkInterfaceAttribute"
            ],
            "Resource": "*"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: dms-vpc-role
  name: dms-vpc-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }

---

apiVersion: dms.aws.upbound.io/v1beta1
kind: Endpoint
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: test-dms-source-endpoint-tf
  name: test-source
spec:
  forProvider:
    certificateArn: arn:aws:dms:us-west-1:153891904029:cert:5RO6Q5Y2PWAZWQG7X5GSQLYXMH56CEH4DMXACGA
    databaseName: test-source
    endpointType: source
    engineName: aurora
    extraConnectionAttributes: ""
    kmsKeyArn: arn:aws:kms:us-west-1:153891904029:key/5478859d-f936-492a-bd04-f77095b7aa0e
    passwordSecretRef:
      key: example-key
      name: endpoint-secret
      namespace: upbound-system
    port: 3306
    region: us-west-1
    serverName: test-source
    sslMode: none
    tags:
      Name: test-source
    username: test-source
    serviceAccessRole: arn:aws:iam::153891904029:role/dms-access-for-endpoint

---

apiVersion: dms.aws.upbound.io/v1beta1
kind: Endpoint
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: test-dms-target-endpoint-tf
  name: test-target
spec:
  forProvider:
    certificateArn: arn:aws:dms:us-west-1:153891904029:cert:5RO6Q5Y2PWAZWQG7X5GSQLYXMH56CEH4DMXACGA
    databaseName: test-target
    endpointType: target
    engineName: aurora
    extraConnectionAttributes: ""
    kmsKeyArn: arn:aws:kms:us-west-1:153891904029:key/5478859d-f936-492a-bd04-f77095b7aa0e
    passwordSecretRef:
      key: example-key
      name: endpoint-secret
      namespace: upbound-system
    port: 3307
    region: us-west-1
    serverName: test
    sslMode: none
    tags:
      Name: test-target
    username: test-target
    serviceAccessRole: arn:aws:iam::153891904029:role/dms-access-for-endpoint

---

apiVersion: dms.aws.upbound.io/v1beta1
kind: Certificate
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    certificatePemSecretRef:
      key: example-key
      name: example-secret
      namespace: upbound-system
    region: us-west-1
    tags:
      Name: test

---

apiVersion: v1
kind: Secret
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: secret-version
  name: example-secret
  namespace: upbound-system
type: Opaque
stringData:
  example-key: |
    -----BEGIN ENCRYPTED PRIVATE KEY-----
    MIICljCCAX4CCQCaPK30HegP7TANBgkqhkiG9w0BAQsFADANMQswCQYDVQQGEwJk
    ZTAeFw0yMjEyMDYyMTE3MzNaFw0zMjEyMDMyMTE3MzNaMA0xCzAJBgNVBAYTAmRl
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtnxiilFOwyrYBYcu6HYe
    3L5B2tC3Q9GqwBfIniPCONgPhzb/vpFXqra0uwi0HI1DI52pzCxB4cbj6i74MMX1
    i6KwaiRS+bFhEHflFXcuU2c4OkLsTx8LhGXMJoVhsP6DDUTzoT1/GEfATc2K4Xxn
    0pfRkswE6ZScQ81fodqIZTzcCGOW/2a+GQiR45aePihZVDBugDlN0KZdyQvXOs5H
    EE2DwfP1s1GB2MeA+uZBBxNjWj5vKAyCKGrhKgF+jDHN6OX4/SgpOnhWDqqrVeQE
    aYsbPfHEfRd6aXPf8b6PvbPRr4FG+MR3qwwqQudmhD44YIW2qj9XlgU2a0ZnG9p4
    PwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBHCBQvmq3T8vK7BES5AF15MF83y3oB
    jsjRXGhVy/auUSKYwCd8Oji5QJL+drQddk+Z/mRd5EFeiBqbUUiK6I4ArAzamE8u
    VppNsVDMwepqcQafSzu8wm4/zI2PFHp2G4cUjz9jH85C6vEbOGt8m8T2hrRbG/Wr
    FIRgJl2RYX4FNkJJ/dpxomPkWc+hIt59YFUrNqf0dubRxZuUYA8iC5a40tA5Fqaq
    0LSvK5UbE0BoD9HEcFP+duwp+8ZE1dOWY11TnkUkLLd9klgxepyMjyEoInetsHxT
    Jkwjr/Q/rTbKQwInAY9P/IOundWd7lknL8V/y1CB6awl//r6K/WBybEp
    -----END ENCRYPTED PRIVATE KEY-----

---

apiVersion: kms.aws.upbound.io/v1beta1
kind: Key
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    deletionWindowInDays: 7
    description: KMS Key
    region: us-west-1

---

apiVersion: v1
kind: Secret
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationtask
  labels:
    testing.upbound.io/example-name: endpoint-secret
  name: endpoint-secret
  namespace: upbound-system
type: Opaque
stringData:
  example-key: "Upbound!"
apiVersion: dms.aws.upbound.io/v1beta1
kind: ReplicationInstance
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
    uptest.upbound.io/timeout: "3600" # one hour timeout
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    allocatedStorage: 20
    applyImmediately: true
    autoMinorVersionUpgrade: true
    multiAz: false
    preferredMaintenanceWindow: sun:10:30-sun:14:30
    publiclyAccessible: true
    region: us-west-1
    replicationInstanceClass: dms.t2.micro
    tags:
      Name: test

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint
  name: dms-access-for-endpoint
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: amazondmsredshifts3role
  name: amazondmsredshifts3role
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "kms:*",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:Create*",
              "kms:Describe*",
              "kms:Enable*",
              "kms:List*",
              "kms:Put*",
              "kms:Update*",
              "kms:Revoke*",
              "kms:Disable*",
              "kms:Get*",
              "kms:Delete*",
              "kms:TagResource",
              "kms:UntagResource",
              "kms:ScheduleKeyDeletion",
              "kms:CancelKeyDeletion"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:Encrypt",
              "kms:Decrypt",
              "kms:ReEncrypt*",
              "kms:GenerateDataKey*",
              "kms:DescribeKey"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "kms:CreateGrant",
              "kms:ListGrants",
              "kms:RevokeGrant"
            ],
            "Resource": "*",
            "Condition": {
              "Bool": {
                "kms:GrantIsForAWSResource": true
              }
            }
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role
  name: dms-cloudwatch-logs-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: amazondmscloudwatchlogsrole
  name: amazondmscloudwatchlogsrole
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Statement": [
          {
            "Action": [
              "logs:DescribeLogGroups"
            ],
            "Effect": "Allow",
            "Resource": [
              "*"
            ],
            "Sid": "AllowDescribeOnAllLogGroups"
          },
          {
            "Action": [
              "logs:DescribeLogStreams"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*"
            ],
            "Sid": "AllowDescribeOfAllLogStreamsOnDmsTasksLogGroup"
          },
          {
            "Action": [
              "logs:CreateLogGroup"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*"
            ],
            "Sid": "AllowCreationOfDmsTasksLogGroups"
          },
          {
            "Action": [
              "logs:CreateLogStream"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
            ],
            "Sid": "AllowCreationOfDmsTaskLogStream"
          },
          {
            "Action": [
              "logs:PutLogEvents"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
            ],
            "Sid": "AllowUploadOfLogEventsToDmsTaskLogStream"
          }
        ],
        "Version": "2012-10-17"
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint-AmazonDMSRedshiftS3Role
  name: dms-access-for-endpoint-amazondmsredshifts3role
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: amazondmsredshifts3role
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-access-for-endpoint

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole
  name: dms-cloudwatch-logs-role-amazondmscloudwatchlogsrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: amazondmscloudwatchlogsrole
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-cloudwatch-logs-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-vpc-role-AmazonDMSVPCManagementRole
  name: dms-vpc-role-amazondmsvpcmanagementrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: policy
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-vpc-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: policy
  name: amazondmsvpcmanagementrole
spec:
  forProvider:
    description: Provides access to manage VPC settings for AWS managed customer configurations
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateNetworkInterface",
              "ec2:DescribeAvailabilityZones",
              "ec2:DescribeInternetGateways",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "ec2:DeleteNetworkInterface",
              "ec2:ModifyNetworkInterfaceAttribute"
            ],
            "Resource": "*"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-vpc-role
  name: dms-vpc-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "sts:AssumeRole",
            "Principal": {
              "Service": "dms.amazonaws.com"
            },
            "Effect": "Allow"
          }
        ]
      }
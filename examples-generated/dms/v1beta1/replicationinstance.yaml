apiVersion: dms.aws.upbound.io/v1beta1
kind: ReplicationInstance
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    allocatedStorage: 20
    applyImmediately: true
    autoMinorVersionUpgrade: true
    availabilityZone: us-west-2c
    engineVersion: 3.1.4
    kmsKeyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    multiAz: false
    preferredMaintenanceWindow: sun:10:30-sun:14:30
    publiclyAccessible: true
    region: us-west-1
    replicationInstanceClass: dms.t2.micro
    replicationSubnetGroupIdSelector:
      matchLabels:
        testing.upbound.io/example-name: test-dms-replication-subnet-group-tf
    tags:
      Name: test
    vpcSecurityGroupIdRefs:
    - name: example

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint
  name: dms-access-for-endpoint
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.dms_assume_role.json}

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role
  name: dms-cloudwatch-logs-role
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.dms_assume_role.json}

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-vpc-role
  name: dms-vpc-role
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.dms_assume_role.json}

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-access-for-endpoint-AmazonDMSRedshiftS3Role
  name: dms-access-for-endpoint-amazondmsredshifts3role
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-access-for-endpoint

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole
  name: dms-cloudwatch-logs-role-amazondmscloudwatchlogsrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-cloudwatch-logs-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: dms/v1beta1/replicationinstance
  labels:
    testing.upbound.io/example-name: dms-vpc-role-AmazonDMSVPCManagementRole
  name: dms-vpc-role-amazondmsvpcmanagementrole
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: dms-vpc-role

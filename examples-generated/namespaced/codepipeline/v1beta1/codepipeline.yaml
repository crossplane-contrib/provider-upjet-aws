# SPDX-FileCopyrightText: 2025 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: CC0-1.0


apiVersion: codepipeline.aws.m.upbound.io/v1beta1
kind: Codepipeline
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline
  name: codepipeline
  namespace: upbound-system
spec:
  forProvider:
    artifactStore:
    - encryptionKey:
        id: ${data.aws_kms_alias.s3kmskey.arn}
        type: KMS
      locationSelector:
        matchLabels:
          testing.upbound.io/example-name: codepipeline_bucket
      type: S3
    region: us-west-1
    roleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: codepipeline_role
    stage:
    - action:
      - category: Source
        configuration:
          BranchName: main
          ConnectionArn: ${aws_codestarconnections_connection.example.arn}
          FullRepositoryId: my-organization/example
        name: Source
        outputArtifacts:
        - source_output
        owner: AWS
        provider: CodeStarSourceConnection
        version: "1"
      name: Source
    - action:
      - category: Build
        configuration:
          ProjectName: test
        inputArtifacts:
        - source_output
        name: Build
        outputArtifacts:
        - build_output
        owner: AWS
        provider: CodeBuild
        version: "1"
      name: Build
    - action:
      - category: Deploy
        configuration:
          ActionMode: REPLACE_ON_FAILURE
          Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
          OutputFileName: CreateStackOutput.json
          StackName: MyStack
          TemplatePath: build_output::sam-templated.yaml
        inputArtifacts:
        - build_output
        name: Deploy
        owner: AWS
        provider: CloudFormation
        version: "1"
      name: Deploy

---

apiVersion: codestarconnections.aws.m.upbound.io/v1beta1
kind: Connection
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    name: example-connection
    providerType: GitHub
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_role
  name: codepipeline-role
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.assume_role.json}
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: RolePolicy
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_policy
  name: codepipeline-policy
  namespace: upbound-system
spec:
  forProvider:
    policy: ${data.aws_iam_policy_document.codepipeline_policy.json}
    region: us-west-1
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: codepipeline_role

---

apiVersion: s3.aws.m.upbound.io/v1beta1
kind: Bucket
metadata:
  annotations:
    crossplane.io/external-name: ${Rand.RFC1123Subdomain}
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_bucket
  name: codepipeline-bucket
  namespace: upbound-system
spec:
  forProvider:
    region: us-west-1

---

apiVersion: s3.aws.m.upbound.io/v1beta1
kind: BucketPublicAccessBlock
metadata:
  annotations:
    meta.upbound.io/example-id: codepipeline/v1beta1/codepipeline
  labels:
    testing.upbound.io/example-name: codepipeline_bucket_pab
  name: codepipeline-bucket-pab
  namespace: upbound-system
spec:
  forProvider:
    blockPublicAcls: true
    blockPublicPolicy: true
    bucketSelector:
      matchLabels:
        testing.upbound.io/example-name: codepipeline_bucket
    ignorePublicAcls: true
    region: us-west-1
    restrictPublicBuckets: true

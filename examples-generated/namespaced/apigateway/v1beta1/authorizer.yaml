apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: Authorizer
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: demo
  name: demo
  namespace: upbound-system
spec:
  forProvider:
    authorizerCredentialsSelector:
      matchLabels:
        testing.upbound.io/example-name: invocation_role
    authorizerUriSelector:
      matchLabels:
        testing.upbound.io/example-name: authorizer
    name: demo
    region: us-west-1
    restApiIdSelector:
      matchLabels:
        testing.upbound.io/example-name: demo

---

apiVersion: apigateway.aws.m.upbound.io/v1beta1
kind: RestAPI
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: demo
  name: demo
  namespace: upbound-system
spec:
  forProvider:
    name: auth-demo
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: invocation_role
  name: invocation-role
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.invocation_assume_role.json}
    path: /
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: lambda
  name: lambda
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: ${data.aws_iam_policy_document.lambda_assume_role.json}
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: RolePolicy
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: invocation_policy
  name: invocation-policy
  namespace: upbound-system
spec:
  forProvider:
    policy: ${data.aws_iam_policy_document.invocation_policy.json}
    region: us-west-1
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: invocation_role

---

apiVersion: lambda.aws.m.upbound.io/v1beta1
kind: Function
metadata:
  annotations:
    meta.upbound.io/example-id: apigateway/v1beta1/authorizer
  labels:
    testing.upbound.io/example-name: authorizer
  name: authorizer
  namespace: upbound-system
spec:
  forProvider:
    filename: lambda-function.zip
    handler: exports.example
    region: us-west-1
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: lambda
    sourceCodeHash: ${filebase64sha256("lambda-function.zip")}

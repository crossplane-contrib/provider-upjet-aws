apiVersion: eks.aws.m.upbound.io/v1beta1
kind: Cluster
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/cluster
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    accessConfig:
    - authenticationMode: API
    region: us-west-1
    roleArnSelector:
      matchLabels:
        testing.upbound.io/example-name: cluster
    version: "1.31"
    vpcConfig:
    - subnetIdRefs:
      - name: az1
      - name: az2
      - name: az3

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/cluster
  labels:
    testing.upbound.io/example-name: cluster
  name: cluster
  namespace: upbound-system
spec:
  forProvider:
    assumeRolePolicy: |-
      ${jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Action = [
                "sts:AssumeRole",
                "sts:TagSession"
              ]
              Effect = "Allow"
              Principal = {
                Service = "eks.amazonaws.com"
              }
            },
          ]
        })}
    region: us-west-1

---

apiVersion: iam.aws.m.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: eks/v1beta1/cluster
  labels:
    testing.upbound.io/example-name: cluster_AmazonEKSClusterPolicy
  name: cluster-amazoneksclusterpolicy
  namespace: upbound-system
spec:
  forProvider:
    policyArnSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    region: us-west-1
    roleSelector:
      matchLabels:
        testing.upbound.io/example-name: cluster

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusters.ecs.aws.upbound.io
spec:
  group: ecs.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Provides an ECS cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  configuration:
                    description: The execute command configuration for the cluster.
                      Detailed below.
                    items:
                      properties:
                        executeCommandConfiguration:
                          description: The details of the execute command configuration.
                            Detailed below.
                          items:
                            properties:
                              kmsKeyId:
                                description: The AWS Key Management Service key ID
                                  to encrypt the data between the local client and
                                  the container.
                                type: string
                              logConfiguration:
                                description: The log configuration for the results
                                  of the execute command actions Required when logging
                                  is OVERRIDE. Detailed below.
                                items:
                                  properties:
                                    cloudWatchEncryptionEnabled:
                                      description: Whether or not to enable encryption
                                        on the CloudWatch logs. If not specified,
                                        encryption will be disabled.
                                      type: boolean
                                    cloudWatchLogGroupName:
                                      description: The name of the CloudWatch log
                                        group to send logs to.
                                      type: string
                                    s3BucketEncryptionEnabled:
                                      description: Whether or not to enable encryption
                                        on the logs sent to S3. If not specified,
                                        encryption will be disabled.
                                      type: boolean
                                    s3BucketName:
                                      description: The name of the S3 bucket to send
                                        logs to.
                                      type: string
                                    s3KeyPrefix:
                                      description: An optional folder in the S3 bucket
                                        to place logs in.
                                      type: string
                                  type: object
                                type: array
                              logging:
                                description: The log setting to use for redirecting
                                  logs for your execute command results. Valid values
                                  are NONE, DEFAULT, and OVERRIDE.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  defaultCapacityProviderStrategy:
                    description: Configuration block for capacity provider strategy
                      to use by default for the cluster. Can be one or more. Detailed
                      below.
                    items:
                      properties:
                        base:
                          description: The number of tasks, at a minimum, to run on
                            the specified capacity provider. Only one capacity provider
                            in a capacity provider strategy can have a base defined.
                          type: number
                        capacityProvider:
                          description: The short name of the capacity provider.
                          type: string
                        weight:
                          description: The relative percentage of the total number
                            of launched tasks that should use the specified capacity
                            provider.
                          type: number
                      required:
                      - capacityProvider
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  serviceConnectDefaults:
                    description: Configures a default Service Connect namespace. Detailed
                      below.
                    items:
                      properties:
                        namespace:
                          description: The ARN of the aws_service_discovery_http_namespace
                            that's used when you create a service and don't specify
                            a Service Connect configuration.
                          type: string
                      required:
                      - namespace
                      type: object
                    type: array
                  setting:
                    description: Configuration block(s) with cluster settings. For
                      example, this can be used to enable CloudWatch Container Insights
                      for a cluster. Detailed below.
                    items:
                      properties:
                        name:
                          description: 'Name of the setting to manage. Valid values:
                            containerInsights.'
                          type: string
                        value:
                          description: The value to assign to the setting. Valid values
                            are enabled and disabled.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN that identifies the cluster.
                    type: string
                  capacityProviders:
                    description: List of short names of one or more capacity providers
                      to associate with the cluster. Valid values also include FARGATE
                      and FARGATE_SPOT.
                    items:
                      type: string
                    type: array
                  id:
                    description: ARN that identifies the cluster.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: bots.lexmodels.aws.upbound.io
spec:
  group: lexmodels.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Bot
    listKind: BotList
    plural: bots
    singular: bot
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Bot is the Schema for the Bots API. Provides an Amazon Lex bot
          resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BotSpec defines the desired state of Bot
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  abortStatement:
                    description: The message that Amazon Lex uses to abort a conversation.
                      Attributes are documented under statement.
                    items:
                      properties:
                        message:
                          description: A set of messages, each of which provides a
                            message string and its type. You can specify the message
                            string in plain text or in Speech Synthesis Markup Language
                            (SSML). Attributes are documented under message.
                          items:
                            properties:
                              content:
                                description: The text of the message.
                                type: string
                              contentType:
                                description: The content type of the message string.
                                type: string
                              groupNumber:
                                description: Identifies the message group that the
                                  message belongs to. When a group is assigned to
                                  a message, Amazon Lex returns one message from each
                                  group in the response.
                                type: number
                            required:
                            - content
                            - contentType
                            type: object
                          type: array
                        responseCard:
                          description: 'The response card. Amazon Lex will substitute
                            session attributes and slot values into the response card.
                            For more information, see Example: Using a Response Card.'
                          type: string
                      required:
                      - message
                      type: object
                    type: array
                  childDirected:
                    description: By specifying true, you confirm that your use of
                      Amazon Lex is related to a website, program, or other application
                      that is directed or targeted, in whole or in part, to children
                      under age 13 and subject to COPPA. For more information see
                      the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.
                    type: boolean
                  clarificationPrompt:
                    description: The message that Amazon Lex uses when it doesn't
                      understand the user's request. Attributes are documented under
                      prompt.
                    items:
                      properties:
                        maxAttempts:
                          description: The number of times to prompt the user for
                            information.
                          type: number
                        message:
                          description: A set of messages, each of which provides a
                            message string and its type. You can specify the message
                            string in plain text or in Speech Synthesis Markup Language
                            (SSML). Attributes are documented under message.
                          items:
                            properties:
                              content:
                                description: The text of the message.
                                type: string
                              contentType:
                                description: The content type of the message string.
                                type: string
                              groupNumber:
                                description: Identifies the message group that the
                                  message belongs to. When a group is assigned to
                                  a message, Amazon Lex returns one message from each
                                  group in the response.
                                type: number
                            required:
                            - content
                            - contentType
                            type: object
                          type: array
                        responseCard:
                          description: 'The response card. Amazon Lex will substitute
                            session attributes and slot values into the response card.
                            For more information, see Example: Using a Response Card.'
                          type: string
                      required:
                      - maxAttempts
                      - message
                      type: object
                    type: array
                  createVersion:
                    description: Determines if a new bot version is created when the
                      initial resource is created and on each update. Defaults to
                      false.
                    type: boolean
                  description:
                    description: A description of the bot. Must be less than or equal
                      to 200 characters in length.
                    type: string
                  detectSentiment:
                    description: When set to true user utterances are sent to Amazon
                      Comprehend for sentiment analysis. If you don't specify detectSentiment,
                      the default is false.
                    type: boolean
                  enableModelImprovements:
                    description: Set to true to enable access to natural language
                      understanding improvements. When you set the enable_model_improvements
                      parameter to true you can use the nlu_intent_confidence_threshold
                      parameter to configure confidence scores. For more information,
                      see Confidence Scores. You can only set the enable_model_improvements
                      parameter in certain Regions. If you set the parameter to true,
                      your bot has access to accuracy improvements. For more information
                      see the Amazon Lex Bot PutBot API Docs.
                    type: boolean
                  idleSessionTtlInSeconds:
                    description: The maximum time in seconds that Amazon Lex retains
                      the data gathered in a conversation. Default is 300. Must be
                      a number between 60 and 86400 (inclusive).
                    type: number
                  intent:
                    description: A set of Intent objects. Each intent represents a
                      command that a user can express. Attributes are documented under
                      intent. Can have up to 250 Intent objects.
                    items:
                      properties:
                        intentName:
                          description: The name of the intent. Must be less than or
                            equal to 100 characters in length.
                          type: string
                        intentVersion:
                          description: The version of the intent. Must be less than
                            or equal to 64 characters in length.
                          type: string
                      required:
                      - intentName
                      - intentVersion
                      type: object
                    type: array
                  locale:
                    description: Specifies the target locale for the bot. Any intent
                      used in the bot must be compatible with the locale of the bot.
                      For available locales, see Amazon Lex Bot PutBot API Docs. Default
                      is en-US.
                    type: string
                  nluIntentConfidenceThreshold:
                    description: Determines the threshold where Amazon Lex will insert
                      the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both
                      when returning alternative intents in a PostContent or PostText
                      response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent
                      are only inserted if they are configured for the bot. For more
                      information see Amazon Lex Bot PutBot API Docs This value requires
                      enable_model_improvements to be set to true and the default
                      is 0. Must be a float between 0 and 1.
                    type: number
                  processBehavior:
                    description: If you set the process_behavior element to BUILD,
                      Amazon Lex builds the bot so that it can be run. If you set
                      the element to SAVE Amazon Lex saves the bot, but doesn't build
                      it. Default is SAVE.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  voiceId:
                    description: The Amazon Polly voice ID that you want Amazon Lex
                      to use for voice interactions with the user. The locale configured
                      for the voice must match the locale of the bot. For more information,
                      see Available Voices in the Amazon Polly Developer Guide.
                    type: string
                required:
                - abortStatement
                - childDirected
                - intent
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BotStatus defines the observed state of Bot.
            properties:
              atProvider:
                properties:
                  arn:
                    type: string
                  checksum:
                    description: Checksum identifying the version of the bot that
                      was created. The checksum is not included as an argument because
                      the resource will add it automatically when updating the bot.
                    type: string
                  createdDate:
                    description: The date when the bot version was created.
                    type: string
                  failureReason:
                    description: If status is FAILED, Amazon Lex provides the reason
                      that it failed to build the bot.
                    type: string
                  id:
                    type: string
                  lastUpdatedDate:
                    description: The date when the $LATEST version of this bot was
                      updated.
                    type: string
                  status:
                    description: When you send a request to create or update a bot,
                      Amazon Lex sets the status response element to BUILDING. After
                      Amazon Lex builds the bot, it sets status to READY. If Amazon
                      Lex can't build the bot, it sets status to FAILED. Amazon Lex
                      returns the reason for the failure in the failure_reason response
                      element.
                    type: string
                  version:
                    description: The version of the bot.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: firewallpolicies.networkfirewall.aws.upbound.io
spec:
  group: networkfirewall.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: FirewallPolicy
    listKind: FirewallPolicyList
    plural: firewallpolicies
    singular: firewallpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FirewallPolicy is the Schema for the FirewallPolicys API. Provides
          an AWS Network Firewall Policy resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FirewallPolicySpec defines the desired state of FirewallPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A friendly description of the firewall policy.
                    type: string
                  encryptionConfiguration:
                    description: KMS encryption configuration settings. See Encryption
                      Configuration below for details.
                    items:
                      properties:
                        keyId:
                          description: The ID of the customer managed key. You can
                            use any of the key identifiers that KMS supports, unless
                            you're using a key that's managed by another account.
                            If you're using a key managed by another account, then
                            specify the key ARN.
                          type: string
                        type:
                          description: The type of AWS KMS key to use for encryption
                            of your Network Firewall resources. Valid values are CUSTOMER_KMS
                            and AWS_OWNED_KMS_KEY.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  firewallPolicy:
                    description: A configuration block describing the rule groups
                      and policy actions to use in the firewall policy. See Firewall
                      Policy below for details.
                    items:
                      properties:
                        statefulDefaultActions:
                          description: Set of actions to take on a packet if it does
                            not match any stateful rules in the policy. This can only
                            be specified if the policy has a stateful_engine_options
                            block with a rule_order value of STRICT_ORDER. You can
                            specify one of either or neither values of aws:drop_strict
                            or aws:drop_established, as well as any combination of
                            aws:alert_strict and aws:alert_established.
                          items:
                            type: string
                          type: array
                        statefulEngineOptions:
                          description: A configuration block that defines options
                            on how the policy handles stateful rules. See Stateful
                            Engine Options below for details.
                          items:
                            properties:
                              ruleOrder:
                                description: 'Indicates how to manage the order of
                                  stateful rule evaluation for the policy. Default
                                  value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER,
                                  STRICT_ORDER.'
                                type: string
                            required:
                            - ruleOrder
                            type: object
                          type: array
                        statefulRuleGroupReference:
                          description: Set of configuration blocks containing references
                            to the stateful rule groups that are used in the policy.
                            See Stateful Rule Group Reference below for details.
                          items:
                            properties:
                              override:
                                description: Configuration block for override values
                                items:
                                  properties:
                                    action:
                                      description: The action that changes the rule
                                        group from DROP to ALERT . This only applies
                                        to managed rule groups.
                                      type: string
                                  type: object
                                type: array
                              priority:
                                description: An integer setting that indicates the
                                  order in which to run the stateless rule groups
                                  in a single policy. AWS Network Firewall applies
                                  each stateless rule group to a packet starting with
                                  the group that has the lowest priority setting.
                                type: number
                              resourceArn:
                                description: The Amazon Resource Name (ARN) of the
                                  stateless rule group.
                                type: string
                            required:
                            - resourceArn
                            type: object
                          type: array
                        statelessCustomAction:
                          description: Set of configuration blocks describing the
                            custom action definitions that are available for use in
                            the firewall policy's stateless_default_actions. See Stateless
                            Custom Action below for details.
                          items:
                            properties:
                              actionDefinition:
                                description: A configuration block describing the
                                  custom action associated with the action_name. See
                                  Action Definition below for details.
                                items:
                                  properties:
                                    publishMetricAction:
                                      description: A configuration block describing
                                        the stateless inspection criteria that publishes
                                        the specified metrics to Amazon CloudWatch
                                        for the matching packet. You can pair this
                                        custom action with any of the standard stateless
                                        rule actions. See Publish Metric Action below
                                        for details.
                                      items:
                                        properties:
                                          dimension:
                                            description: Set of configuration blocks
                                              describing dimension settings to use
                                              for Amazon CloudWatch custom metrics.
                                              See Dimension below for more details.
                                            items:
                                              properties:
                                                value:
                                                  description: The string value to
                                                    use in the custom metric dimension.
                                                  type: string
                                              required:
                                              - value
                                              type: object
                                            type: array
                                        required:
                                        - dimension
                                        type: object
                                      type: array
                                  required:
                                  - publishMetricAction
                                  type: object
                                type: array
                              actionName:
                                description: A friendly name of the custom action.
                                type: string
                            required:
                            - actionDefinition
                            - actionName
                            type: object
                          type: array
                        statelessDefaultActions:
                          description: 'Set of actions to take on a packet if it does
                            not match any of the stateless rules in the policy. You
                            must specify one of the standard actions including: aws:drop,
                            aws:pass, or aws:forward_to_sfe. In addition, you can
                            specify custom actions that are compatible with your standard
                            action choice. If you want non-matching packets to be
                            forwarded for stateful inspection, specify aws:forward_to_sfe.'
                          items:
                            type: string
                          type: array
                        statelessFragmentDefaultActions:
                          description: 'Set of actions to take on a fragmented packet
                            if it does not match any of the stateless rules in the
                            policy. You must specify one of the standard actions including:
                            aws:drop, aws:pass, or aws:forward_to_sfe. In addition,
                            you can specify custom actions that are compatible with
                            your standard action choice. If you want non-matching
                            packets to be forwarded for stateful inspection, specify
                            aws:forward_to_sfe.'
                          items:
                            type: string
                          type: array
                        statelessRuleGroupReference:
                          description: Set of configuration blocks containing references
                            to the stateless rule groups that are used in the policy.
                            See Stateless Rule Group Reference below for details.
                          items:
                            properties:
                              priority:
                                description: An integer setting that indicates the
                                  order in which to run the stateless rule groups
                                  in a single policy. AWS Network Firewall applies
                                  each stateless rule group to a packet starting with
                                  the group that has the lowest priority setting.
                                type: number
                              resourceArn:
                                description: The Amazon Resource Name (ARN) of the
                                  stateless rule group.
                                type: string
                              resourceArnRef:
                                description: Reference to a RuleGroup in networkfirewall
                                  to populate resourceArn.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              resourceArnSelector:
                                description: Selector for a RuleGroup in networkfirewall
                                  to populate resourceArn.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            required:
                            - priority
                            type: object
                          type: array
                      required:
                      - statelessDefaultActions
                      - statelessFragmentDefaultActions
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - firewallPolicy
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FirewallPolicyStatus defines the observed state of FirewallPolicy.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The Amazon Resource Name (ARN) that identifies the
                      firewall policy.
                    type: string
                  id:
                    description: The Amazon Resource Name (ARN) that identifies the
                      firewall policy.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                  updateToken:
                    description: A string token used when updating a firewall policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

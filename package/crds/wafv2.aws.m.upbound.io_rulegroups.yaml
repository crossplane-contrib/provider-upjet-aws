---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: rulegroups.wafv2.aws.m.upbound.io
spec:
  group: wafv2.aws.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the RuleGroups API. Creates a WAFv2
          rule group resource. The 'rule' field is not supported due to Kubernetes
          CRD size limitations with deeply nested fields. Please use the 'ruleJson'
          field to define rules.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the desired state of RuleGroup
            properties:
              forProvider:
                properties:
                  capacity:
                    description: The web ACL capacity units (WCUs) required for this
                      rule group. See here for general information and here for capacity
                      specific information.
                    type: number
                  customResponseBody:
                    description: Defines custom response bodies that can be referenced
                      by custom_response actions. See Custom Response Body below for
                      details.
                    items:
                      properties:
                        content:
                          description: The payload of the custom response.
                          type: string
                        contentType:
                          description: The type of content in the payload that you
                            are defining in the content argument. Valid values are
                            TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
                          type: string
                        key:
                          description: A unique key identifying the custom response
                            body. This is referenced by the custom_response_body_key
                            argument in the Custom Response block.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A friendly description of the rule group.
                    type: string
                  name:
                    description: A friendly name of the rule group.
                    type: string
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  ruleJson:
                    description: 'A raw JSON string used to define the rules for allowing,
                      blocking, or counting web requests. When this field is used,
                      Crossplane cannot observe changes in the configuration through
                      the AWS API; therefore, drift detection cannot be performed.
                      Refer to the AWS documentation for the expected JSON structure:
                      https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html'
                    type: string
                  scope:
                    description: Specifies whether this is for an AWS CloudFront distribution
                      or for a regional application. Valid values are CLOUDFRONT or
                      REGIONAL. To work with CloudFront, you must also specify the
                      region us-east-1 (N. Virginia) on the AWS provider.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  visibilityConfig:
                    description: Defines and enables Amazon CloudWatch metrics and
                      web request sample collection. See Visibility Configuration
                      below for details.
                    properties:
                      cloudwatchMetricsEnabled:
                        description: A boolean indicating whether the associated resource
                          sends metrics to CloudWatch. For the list of available metrics,
                          see AWS WAF Metrics.
                        type: boolean
                      metricName:
                        description: A friendly name of the CloudWatch metric. The
                          name can contain only alphanumeric characters (A-Z, a-z,
                          0-9) hyphen(-) and underscore (_), with length from one
                          to 128 characters. It can't contain whitespace or metric
                          names reserved for AWS WAF, for example All and Default_Action.
                        type: string
                      sampledRequestsEnabled:
                        description: A boolean indicating whether AWS WAF should store
                          a sampling of the web requests that match the rules. You
                          can view the sampled requests through the AWS WAF console.
                        type: boolean
                    type: object
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  capacity:
                    description: The web ACL capacity units (WCUs) required for this
                      rule group. See here for general information and here for capacity
                      specific information.
                    type: number
                  customResponseBody:
                    description: Defines custom response bodies that can be referenced
                      by custom_response actions. See Custom Response Body below for
                      details.
                    items:
                      properties:
                        content:
                          description: The payload of the custom response.
                          type: string
                        contentType:
                          description: The type of content in the payload that you
                            are defining in the content argument. Valid values are
                            TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
                          type: string
                        key:
                          description: A unique key identifying the custom response
                            body. This is referenced by the custom_response_body_key
                            argument in the Custom Response block.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A friendly description of the rule group.
                    type: string
                  name:
                    description: A friendly name of the rule group.
                    type: string
                  ruleJson:
                    description: 'A raw JSON string used to define the rules for allowing,
                      blocking, or counting web requests. When this field is used,
                      Crossplane cannot observe changes in the configuration through
                      the AWS API; therefore, drift detection cannot be performed.
                      Refer to the AWS documentation for the expected JSON structure:
                      https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html'
                    type: string
                  scope:
                    description: Specifies whether this is for an AWS CloudFront distribution
                      or for a regional application. Valid values are CLOUDFRONT or
                      REGIONAL. To work with CloudFront, you must also specify the
                      region us-east-1 (N. Virginia) on the AWS provider.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  visibilityConfig:
                    description: Defines and enables Amazon CloudWatch metrics and
                      web request sample collection. See Visibility Configuration
                      below for details.
                    properties:
                      cloudwatchMetricsEnabled:
                        description: A boolean indicating whether the associated resource
                          sends metrics to CloudWatch. For the list of available metrics,
                          see AWS WAF Metrics.
                        type: boolean
                      metricName:
                        description: A friendly name of the CloudWatch metric. The
                          name can contain only alphanumeric characters (A-Z, a-z,
                          0-9) hyphen(-) and underscore (_), with length from one
                          to 128 characters. It can't contain whitespace or metric
                          names reserved for AWS WAF, for example All and Default_Action.
                        type: string
                      sampledRequestsEnabled:
                        description: A boolean indicating whether AWS WAF should store
                          a sampling of the web requests that match the rules. You
                          can view the sampled requests through the AWS WAF console.
                        type: boolean
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.capacity is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.capacity)
                || (has(self.initProvider) && has(self.initProvider.capacity))'
            - message: spec.forProvider.scope is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scope)
                || (has(self.initProvider) && has(self.initProvider.scope))'
            - message: spec.forProvider.visibilityConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.visibilityConfig)
                || (has(self.initProvider) && has(self.initProvider.visibilityConfig))'
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the WAF rule group.
                    type: string
                  capacity:
                    description: The web ACL capacity units (WCUs) required for this
                      rule group. See here for general information and here for capacity
                      specific information.
                    type: number
                  customResponseBody:
                    description: Defines custom response bodies that can be referenced
                      by custom_response actions. See Custom Response Body below for
                      details.
                    items:
                      properties:
                        content:
                          description: The payload of the custom response.
                          type: string
                        contentType:
                          description: The type of content in the payload that you
                            are defining in the content argument. Valid values are
                            TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
                          type: string
                        key:
                          description: A unique key identifying the custom response
                            body. This is referenced by the custom_response_body_key
                            argument in the Custom Response block.
                          type: string
                      type: object
                    type: array
                  description:
                    description: A friendly description of the rule group.
                    type: string
                  id:
                    description: The ID of the WAF rule group.
                    type: string
                  lockToken:
                    type: string
                  name:
                    description: A friendly name of the rule group.
                    type: string
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  ruleJson:
                    description: 'A raw JSON string used to define the rules for allowing,
                      blocking, or counting web requests. When this field is used,
                      Crossplane cannot observe changes in the configuration through
                      the AWS API; therefore, drift detection cannot be performed.
                      Refer to the AWS documentation for the expected JSON structure:
                      https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html'
                    type: string
                  scope:
                    description: Specifies whether this is for an AWS CloudFront distribution
                      or for a regional application. Valid values are CLOUDFRONT or
                      REGIONAL. To work with CloudFront, you must also specify the
                      region us-east-1 (N. Virginia) on the AWS provider.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                    x-kubernetes-map-type: granular
                  visibilityConfig:
                    description: Defines and enables Amazon CloudWatch metrics and
                      web request sample collection. See Visibility Configuration
                      below for details.
                    properties:
                      cloudwatchMetricsEnabled:
                        description: A boolean indicating whether the associated resource
                          sends metrics to CloudWatch. For the list of available metrics,
                          see AWS WAF Metrics.
                        type: boolean
                      metricName:
                        description: A friendly name of the CloudWatch metric. The
                          name can contain only alphanumeric characters (A-Z, a-z,
                          0-9) hyphen(-) and underscore (_), with length from one
                          to 128 characters. It can't contain whitespace or metric
                          names reserved for AWS WAF, for example All and Default_Action.
                        type: string
                      sampledRequestsEnabled:
                        description: A boolean indicating whether AWS WAF should store
                          a sampling of the web requests that match the rules. You
                          can view the sampled requests through the AWS WAF console.
                        type: boolean
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

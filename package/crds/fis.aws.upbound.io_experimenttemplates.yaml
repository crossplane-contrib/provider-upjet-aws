---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: experimenttemplates.fis.aws.upbound.io
spec:
  group: fis.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ExperimentTemplate
    listKind: ExperimentTemplateList
    plural: experimenttemplates
    singular: experimenttemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ExperimentTemplate is the Schema for the ExperimentTemplates
          API. Provides an FIS Experiment Template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExperimentTemplateSpec defines the desired state of ExperimentTemplate
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    description: Action to be performed during an experiment. See
                      below.
                    items:
                      properties:
                        actionId:
                          description: ID of the action. To find out what actions
                            are supported see AWS FIS actions reference.
                          type: string
                        description:
                          description: Description of the action.
                          type: string
                        name:
                          description: Friendly name of the action.
                          type: string
                        parameter:
                          description: Parameter(s) for the action, if applicable.
                            See below.
                          items:
                            properties:
                              key:
                                description: Parameter name.
                                type: string
                              value:
                                description: Parameter value.
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                        startAfter:
                          description: Set of action names that must complete before
                            this action can be executed.
                          items:
                            type: string
                          type: array
                        target:
                          description: Action's target, if applicable. See below.
                          items:
                            properties:
                              key:
                                description: Tag key.
                                type: string
                              value:
                                description: Target name, referencing a corresponding
                                  target.
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                      required:
                      - actionId
                      - name
                      type: object
                    type: array
                  description:
                    description: Description for the experiment template.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  roleArn:
                    description: ARN of an IAM role that grants the AWS FIS service
                      permission to perform service actions on your behalf.
                    type: string
                  roleArnRef:
                    description: Reference to a Role in iam to populate roleArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  roleArnSelector:
                    description: Selector for a Role in iam to populate roleArn.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  stopCondition:
                    description: When an ongoing experiment should be stopped. See
                      below.
                    items:
                      properties:
                        source:
                          description: Source of the condition. One of none, aws:cloudwatch:alarm.
                          type: string
                        value:
                          description: ARN of the CloudWatch alarm. Required if the
                            source is a CloudWatch alarm.
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  target:
                    description: Target of an action. See below.
                    items:
                      properties:
                        filter:
                          description: Filter(s) for the target. Filters can be used
                            to select resources based on specific attributes returned
                            by the respective describe action of the resource type.
                            For more information, see Targets for AWS FIS. See below.
                          items:
                            properties:
                              path:
                                description: Attribute path for the filter.
                                type: string
                              values:
                                description: Set of attribute values for the filter.
                                items:
                                  type: string
                                type: array
                            required:
                            - path
                            - values
                            type: object
                          type: array
                        name:
                          description: Friendly name given to the target.
                          type: string
                        resourceArns:
                          description: Set of ARNs of the resources to target with
                            an action. Conflicts with resource_tag.
                          items:
                            type: string
                          type: array
                        resourceTag:
                          description: Tag(s) the resources need to have to be considered
                            a valid target for an action. Conflicts with resource_arns.
                            See below.
                          items:
                            properties:
                              key:
                                description: Tag key.
                                type: string
                              value:
                                description: Tag value.
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                        resourceType:
                          description: AWS resource type. The resource type must be
                            supported for the specified action. To find out what resource
                            types are supported, see Targets for AWS FIS.
                          type: string
                        selectionMode:
                          description: Scopes the identified resources. Valid values
                            are ALL (all identified resources), COUNT(n) (randomly
                            select n of the identified resources), PERCENT(n) (randomly
                            select n percent of the identified resources).
                          type: string
                      required:
                      - name
                      - resourceType
                      - selectionMode
                      type: object
                    type: array
                required:
                - action
                - description
                - region
                - stopCondition
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ExperimentTemplateStatus defines the observed state of ExperimentTemplate.
            properties:
              atProvider:
                properties:
                  id:
                    description: Experiment Template ID.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

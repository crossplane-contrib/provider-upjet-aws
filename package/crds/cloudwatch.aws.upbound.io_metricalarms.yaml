---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: metricalarms.cloudwatch.aws.upbound.io
spec:
  group: cloudwatch.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: MetricAlarm
    listKind: MetricAlarmList
    plural: metricalarms
    singular: metricalarm
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MetricAlarm is the Schema for the MetricAlarms API. Provides
          a CloudWatch Metric Alarm resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricAlarmSpec defines the desired state of MetricAlarm
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  actionsEnabled:
                    description: Indicates whether or not actions should be executed
                      during any changes to the alarm's state. Defaults to true.
                    type: boolean
                  alarmActions:
                    description: The list of actions to execute when this alarm transitions
                      into an ALARM state from any other state. Each action is specified
                      as an Amazon Resource Name (ARN).
                    items:
                      type: string
                    type: array
                  alarmDescription:
                    description: The description for the alarm.
                    type: string
                  comparisonOperator:
                    description: 'The arithmetic operation to use when comparing the
                      specified Statistic and Threshold. The specified Statistic value
                      is used as the first operand. Either of the following is supported:
                      GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold,
                      LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold,
                      LessThanLowerThreshold, and GreaterThanUpperThreshold are used
                      only for alarms based on anomaly detection models.'
                    type: string
                  datapointsToAlarm:
                    description: The number of datapoints that must be breaching to
                      trigger the alarm.
                    type: number
                  dimensions:
                    additionalProperties:
                      type: string
                    description: The dimensions for the alarm's associated metric.  For
                      the list of available dimensions see the AWS documentation here.
                    type: object
                  evaluateLowSampleCountPercentiles:
                    description: 'Used only for alarms based on percentiles. If you
                      specify ignore, the alarm state will not change during periods
                      with too few data points to be statistically significant. If
                      you specify evaluate or omit this parameter, the alarm will
                      always be evaluated and possibly change state no matter how
                      many data points are available. The following values are supported:
                      ignore, and evaluate.'
                    type: string
                  evaluationPeriods:
                    description: The number of periods over which data is compared
                      to the specified threshold.
                    type: number
                  extendedStatistic:
                    description: The percentile statistic for the metric associated
                      with the alarm. Specify a value between p0.0 and p100.
                    type: string
                  insufficientDataActions:
                    description: The list of actions to execute when this alarm transitions
                      into an INSUFFICIENT_DATA state from any other state. Each action
                      is specified as an Amazon Resource Name (ARN).
                    items:
                      type: string
                    type: array
                  metricName:
                    description: The name for the alarm's associated metric. See docs
                      for supported metrics.
                    type: string
                  metricQuery:
                    description: Enables you to create an alarm based on a metric
                      math expression. You may specify at most 20.
                    items:
                      properties:
                        accountId:
                          description: The ID of the account where the metrics are
                            located, if this is a cross-account alarm.
                          type: string
                        expression:
                          description: The math expression to be performed on the
                            returned data, if this object is performing a math expression.
                            This expression can use the id of the other metrics to
                            refer to those metrics, and can also use the id of other
                            expressions to use the result of those expressions. For
                            more information about metric math expressions, see Metric
                            Math Syntax and Functions in the Amazon CloudWatch User
                            Guide.
                          type: string
                        id:
                          description: A short name used to tie this object to the
                            results in the response. If you are performing math expressions
                            on this set of data, this name represents that data and
                            can serve as a variable in the mathematical expression.
                            The valid characters are letters, numbers, and underscore.
                            The first character must be a lowercase letter.
                          type: string
                        label:
                          description: A human-readable label for this metric or expression.
                            This is especially useful if this is an expression, so
                            that you know what the value represents.
                          type: string
                        metric:
                          description: The metric to be returned, along with statistics,
                            period, and units. Use this parameter only if this object
                            is retrieving a metric and not performing a math expression
                            on returned data.
                          items:
                            properties:
                              dimensions:
                                additionalProperties:
                                  type: string
                                description: The dimensions for this metric.  For
                                  the list of available dimensions see the AWS documentation
                                  here.
                                type: object
                              metricName:
                                description: The name for this metric. See docs for
                                  supported metrics.
                                type: string
                              namespace:
                                description: The namespace for this metric. See docs
                                  for the list of namespaces. See docs for supported
                                  metrics.
                                type: string
                              period:
                                description: The period in seconds over which the
                                  specified stat is applied.
                                type: number
                              stat:
                                description: The statistic to apply to this metric.
                                  See docs for supported statistics.
                                type: string
                              unit:
                                description: The unit for this metric.
                                type: string
                            required:
                            - metricName
                            - period
                            - stat
                            type: object
                          type: array
                        returnData:
                          description: Specify exactly one metric_query to be true
                            to use that metric_query result as the alarm.
                          type: boolean
                      required:
                      - id
                      type: object
                    type: array
                  namespace:
                    description: The namespace for the alarm's associated metric.
                      See docs for the list of namespaces. See docs for supported
                      metrics.
                    type: string
                  okActions:
                    description: The list of actions to execute when this alarm transitions
                      into an OK state from any other state. Each action is specified
                      as an Amazon Resource Name (ARN).
                    items:
                      type: string
                    type: array
                  period:
                    description: The period in seconds over which the specified statistic
                      is applied.
                    type: number
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  statistic:
                    description: 'The statistic to apply to the alarm''s associated
                      metric. Either of the following is supported: SampleCount, Average,
                      Sum, Minimum, Maximum'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  threshold:
                    description: The value against which the specified statistic is
                      compared. This parameter is required for alarms based on static
                      thresholds, but should not be used for alarms based on anomaly
                      detection models.
                    type: number
                  thresholdMetricId:
                    description: If this is an alarm based on an anomaly detection
                      model, make this value match the ID of the ANOMALY_DETECTION_BAND
                      function.
                    type: string
                  treatMissingData:
                    description: 'Sets how this alarm is to handle missing data points.
                      The following values are supported: missing, ignore, breaching
                      and notBreaching. Defaults to missing.'
                    type: string
                  unit:
                    description: The unit for the alarm's associated metric.
                    type: string
                required:
                - comparisonOperator
                - evaluationPeriods
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MetricAlarmStatus defines the observed state of MetricAlarm.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the CloudWatch Metric Alarm.
                    type: string
                  id:
                    description: The ID of the health check.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

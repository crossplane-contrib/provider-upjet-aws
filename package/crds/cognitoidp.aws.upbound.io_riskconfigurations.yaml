---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: riskconfigurations.cognitoidp.aws.upbound.io
spec:
  group: cognitoidp.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: RiskConfiguration
    listKind: RiskConfigurationList
    plural: riskconfigurations
    singular: riskconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: RiskConfiguration is the Schema for the RiskConfigurations API.
          Provides a Cognito Risk Configuration resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RiskConfigurationSpec defines the desired state of RiskConfiguration
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountTakeoverRiskConfiguration:
                    description: The account takeover risk configuration. See details
                      below.
                    items:
                      properties:
                        actions:
                          description: Account takeover risk configuration actions.
                            See details below.
                          items:
                            properties:
                              highAction:
                                description: Action to take for a high risk. See action
                                  block below.
                                items:
                                  properties:
                                    eventAction:
                                      description: The action to take in response
                                        to the account takeover action. Valid values
                                        are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED
                                        and NO_ACTION.
                                      type: string
                                    notify:
                                      description: Whether to send a notification.
                                      type: boolean
                                  required:
                                  - eventAction
                                  - notify
                                  type: object
                                type: array
                              lowAction:
                                description: Action to take for a low risk. See action
                                  block below.
                                items:
                                  properties:
                                    eventAction:
                                      description: The action to take in response
                                        to the account takeover action. Valid values
                                        are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED
                                        and NO_ACTION.
                                      type: string
                                    notify:
                                      description: Whether to send a notification.
                                      type: boolean
                                  required:
                                  - eventAction
                                  - notify
                                  type: object
                                type: array
                              mediumAction:
                                description: Action to take for a medium risk. See
                                  action block below.
                                items:
                                  properties:
                                    eventAction:
                                      description: The action to take in response
                                        to the account takeover action. Valid values
                                        are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED
                                        and NO_ACTION.
                                      type: string
                                    notify:
                                      description: Whether to send a notification.
                                      type: boolean
                                  required:
                                  - eventAction
                                  - notify
                                  type: object
                                type: array
                            type: object
                          type: array
                        notifyConfiguration:
                          description: The notify configuration used to construct
                            email notifications. See details below.
                          items:
                            properties:
                              blockEmail:
                                description: Email template used when a detected risk
                                  event is blocked. See notify email type below.
                                items:
                                  properties:
                                    htmlBody:
                                      description: The email HTML body.
                                      type: string
                                    subject:
                                      description: The email subject.
                                      type: string
                                    textBody:
                                      description: The email text body.
                                      type: string
                                  required:
                                  - htmlBody
                                  - subject
                                  - textBody
                                  type: object
                                type: array
                              from:
                                description: The email address that is sending the
                                  email. The address must be either individually verified
                                  with Amazon Simple Email Service, or from a domain
                                  that has been verified with Amazon SES.
                                type: string
                              mfaEmail:
                                description: The multi-factor authentication (MFA)
                                  email template used when MFA is challenged as part
                                  of a detected risk. See notify email type below.
                                items:
                                  properties:
                                    htmlBody:
                                      description: The email HTML body.
                                      type: string
                                    subject:
                                      description: The email subject.
                                      type: string
                                    textBody:
                                      description: The email text body.
                                      type: string
                                  required:
                                  - htmlBody
                                  - subject
                                  - textBody
                                  type: object
                                type: array
                              noActionEmail:
                                description: The email template used when a detected
                                  risk event is allowed. See notify email type below.
                                items:
                                  properties:
                                    htmlBody:
                                      description: The email HTML body.
                                      type: string
                                    subject:
                                      description: The email subject.
                                      type: string
                                    textBody:
                                      description: The email text body.
                                      type: string
                                  required:
                                  - htmlBody
                                  - subject
                                  - textBody
                                  type: object
                                type: array
                              replyTo:
                                description: The destination to which the receiver
                                  of an email should reply to.
                                type: string
                              sourceArn:
                                description: The Amazon Resource Name (ARN) of the
                                  identity that is associated with the sending authorization
                                  policy. This identity permits Amazon Cognito to
                                  send for the email address specified in the From
                                  parameter.
                                type: string
                            required:
                            - sourceArn
                            type: object
                          type: array
                      required:
                      - actions
                      - notifyConfiguration
                      type: object
                    type: array
                  clientId:
                    description: The app client ID. When the client ID is not provided,
                      the same risk configuration is applied to all the clients in
                      the User Pool.
                    type: string
                  compromisedCredentialsRiskConfiguration:
                    description: The compromised credentials risk configuration. See
                      details below.
                    items:
                      properties:
                        actions:
                          description: The compromised credentials risk configuration
                            actions. See details below.
                          items:
                            properties:
                              eventAction:
                                description: The action to take in response to the
                                  account takeover action. Valid values are BLOCK,
                                  MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
                                type: string
                            required:
                            - eventAction
                            type: object
                          type: array
                        eventFilter:
                          description: Perform the action for these events. The default
                            is to perform all events if no event filter is specified.
                            Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.
                          items:
                            type: string
                          type: array
                      required:
                      - actions
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  riskExceptionConfiguration:
                    description: The configuration to override the risk decision.
                      See details below.
                    items:
                      properties:
                        blockedIpRangeList:
                          description: Overrides the risk decision to always block
                            the pre-authentication requests. The IP range is in CIDR
                            notation, a compact representation of an IP address and
                            its routing prefix.
                          items:
                            type: string
                          type: array
                        skippedIpRangeList:
                          description: Risk detection isn't performed on the IP addresses
                            in this range list. The IP range is in CIDR notation.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  userPoolId:
                    description: The user pool ID.
                    type: string
                  userPoolIdRef:
                    description: Reference to a UserPool in cognitoidp to populate
                      userPoolId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  userPoolIdSelector:
                    description: Selector for a UserPool in cognitoidp to populate
                      userPoolId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RiskConfigurationStatus defines the observed state of RiskConfiguration.
            properties:
              atProvider:
                properties:
                  id:
                    description: 'The user pool ID. or The user pool ID and Client
                      Id separated by a : if the configuration is client specific.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

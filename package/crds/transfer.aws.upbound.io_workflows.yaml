---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: workflows.transfer.aws.upbound.io
spec:
  group: transfer.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    singular: workflow
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Workflow is the Schema for the Workflows API. Provides a AWS
          Transfer Workflow resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkflowSpec defines the desired state of Workflow
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A textual description for the workflow.
                    type: string
                  onExceptionSteps:
                    description: Specifies the steps (actions) to take if errors are
                      encountered during execution of the workflow. See Workflow Steps
                      below.
                    items:
                      properties:
                        copyStepDetails:
                          description: Details for a step that performs a file copy.
                            See Copy Step Details below.
                          items:
                            properties:
                              destinationFileLocation:
                                description: Specifies the location for the file being
                                  copied. Use ${Transfer:username} in this field to
                                  parametrize the destination prefix by username.
                                items:
                                  properties:
                                    efsFileLocation:
                                      description: Specifies the details for the EFS
                                        file being copied.
                                      items:
                                        properties:
                                          fileSystemId:
                                            description: The ID of the file system,
                                              assigned by Amazon EFS.
                                            type: string
                                          path:
                                            description: The pathname for the folder
                                              being used by a workflow.
                                            type: string
                                        type: object
                                      type: array
                                    s3FileLocation:
                                      description: Specifies the details for the S3
                                        file being copied.
                                      items:
                                        properties:
                                          bucket:
                                            description: Specifies the S3 bucket for
                                              the customer input file.
                                            type: string
                                          key:
                                            description: The name assigned to the
                                              file when it was created in S3. You
                                              use the object key to retrieve the object.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              overwriteExisting:
                                description: A flag that indicates whether or not
                                  to overwrite an existing file of the same name.
                                  The default is FALSE. Valid values are TRUE and
                                  FALSE.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                            type: object
                          type: array
                        customStepDetails:
                          description: Details for a step that invokes a lambda function.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                              target:
                                description: The ARN for the lambda function that
                                  is being called.
                                type: string
                              timeoutSeconds:
                                description: Timeout, in seconds, for the step.
                                type: number
                            type: object
                          type: array
                        deleteStepDetails:
                          description: Details for a step that deletes the file.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                            type: object
                          type: array
                        tagStepDetails:
                          description: Details for a step that creates one or more
                            tags.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                              tags:
                                description: Key-value map of resource tags.
                                items:
                                  properties:
                                    key:
                                      description: The name assigned to the file when
                                        it was created in S3. You use the object key
                                        to retrieve the object.
                                      type: string
                                    value:
                                      description: The value that corresponds to the
                                        key.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                            type: object
                          type: array
                        type:
                          description: One of the following step types are supported.
                            COPY, CUSTOM, DELETE, and TAG.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  steps:
                    description: Specifies the details for the steps that are in the
                      specified workflow. See Workflow Steps below.
                    items:
                      properties:
                        copyStepDetails:
                          description: Details for a step that performs a file copy.
                            See Copy Step Details below.
                          items:
                            properties:
                              destinationFileLocation:
                                description: Specifies the location for the file being
                                  copied. Use ${Transfer:username} in this field to
                                  parametrize the destination prefix by username.
                                items:
                                  properties:
                                    efsFileLocation:
                                      description: Specifies the details for the EFS
                                        file being copied.
                                      items:
                                        properties:
                                          fileSystemId:
                                            description: The ID of the file system,
                                              assigned by Amazon EFS.
                                            type: string
                                          path:
                                            description: The pathname for the folder
                                              being used by a workflow.
                                            type: string
                                        type: object
                                      type: array
                                    s3FileLocation:
                                      description: Specifies the details for the S3
                                        file being copied.
                                      items:
                                        properties:
                                          bucket:
                                            description: Specifies the S3 bucket for
                                              the customer input file.
                                            type: string
                                          key:
                                            description: The name assigned to the
                                              file when it was created in S3. You
                                              use the object key to retrieve the object.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              overwriteExisting:
                                description: A flag that indicates whether or not
                                  to overwrite an existing file of the same name.
                                  The default is FALSE. Valid values are TRUE and
                                  FALSE.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                            type: object
                          type: array
                        customStepDetails:
                          description: Details for a step that invokes a lambda function.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                              target:
                                description: The ARN for the lambda function that
                                  is being called.
                                type: string
                              targetRef:
                                description: Reference to a Function in lambda to
                                  populate target.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              targetSelector:
                                description: Selector for a Function in lambda to
                                  populate target.
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object
                                      with the same controller reference as the selecting
                                      object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              timeoutSeconds:
                                description: Timeout, in seconds, for the step.
                                type: number
                            type: object
                          type: array
                        deleteStepDetails:
                          description: Details for a step that deletes the file.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                            type: object
                          type: array
                        tagStepDetails:
                          description: Details for a step that creates one or more
                            tags.
                          items:
                            properties:
                              name:
                                description: The name of the step, used as an identifier.
                                type: string
                              sourceFileLocation:
                                description: 'Specifies which file to use as input
                                  to the workflow step: either the output from the
                                  previous step, or the originally uploaded file for
                                  the workflow. Enter ${previous.file} to use the
                                  previous file as the input. In this case, this workflow
                                  step uses the output file from the previous workflow
                                  step as input. This is the default value. Enter
                                  ${original.file} to use the originally-uploaded
                                  file location as input for this step.'
                                type: string
                              tags:
                                description: Key-value map of resource tags.
                                items:
                                  properties:
                                    key:
                                      description: The name assigned to the file when
                                        it was created in S3. You use the object key
                                        to retrieve the object.
                                      type: string
                                    value:
                                      description: The value that corresponds to the
                                        key.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                            type: object
                          type: array
                        type:
                          description: One of the following step types are supported.
                            COPY, CUSTOM, DELETE, and TAG.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - region
                - steps
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: WorkflowStatus defines the observed state of Workflow.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The Workflow ARN.
                    type: string
                  id:
                    description: The Workflow id.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

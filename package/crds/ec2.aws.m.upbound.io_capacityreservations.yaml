---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: capacityreservations.ec2.aws.m.upbound.io
spec:
  group: ec2.aws.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CapacityReservation
    listKind: CapacityReservationList
    plural: capacityreservations
    singular: capacityreservation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CapacityReservation is the Schema for the CapacityReservations
          API. Provides an EC2 Capacity Reservation. This allows you to reserve capacity
          for your Amazon EC2 instances in a specific Availability Zone for any duration.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CapacityReservationSpec defines the desired state of CapacityReservation
            properties:
              forProvider:
                properties:
                  availabilityZone:
                    description: The Availability Zone in which to create the Capacity
                      Reservation.
                    type: string
                  ebsOptimized:
                    description: Indicates whether the Capacity Reservation supports
                      EBS-optimized instances.
                    type: boolean
                  endDate:
                    description: 'The date and time at which the Capacity Reservation
                      expires. When a Capacity Reservation expires, the reserved capacity
                      is released and you can no longer launch instances into it.
                      Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
                    type: string
                  endDateType:
                    description: Indicates the way in which the Capacity Reservation
                      ends. Specify either unlimited or limited.
                    type: string
                  ephemeralStorage:
                    description: Indicates whether the Capacity Reservation supports
                      instances with temporary, block-level storage.
                    type: boolean
                  instanceCount:
                    description: The number of instances for which to reserve capacity.
                    type: number
                  instanceMatchCriteria:
                    description: Indicates the type of instance launches that the
                      Capacity Reservation accepts. Specify either open or targeted.
                    type: string
                  instancePlatform:
                    description: The type of operating system for which to reserve
                      capacity. Valid options are Linux/UNIX, Red Hat Enterprise Linux,
                      SUSE Linux, Windows, Windows with SQL Server, Windows with SQL
                      Server Enterprise, Windows with SQL Server Standard or Windows
                      with SQL Server Web.
                    type: string
                  instanceType:
                    description: The instance type for which to reserve capacity.
                    type: string
                  outpostArn:
                    description: The Amazon Resource Name (ARN) of the Outpost on
                      which to create the Capacity Reservation.
                    type: string
                  placementGroupArn:
                    description: The Amazon Resource Name (ARN) of the cluster placement
                      group in which to create the Capacity Reservation.
                    type: string
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tenancy:
                    description: Indicates the tenancy of the Capacity Reservation.
                      Specify either default or dedicated.
                    type: string
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  availabilityZone:
                    description: The Availability Zone in which to create the Capacity
                      Reservation.
                    type: string
                  ebsOptimized:
                    description: Indicates whether the Capacity Reservation supports
                      EBS-optimized instances.
                    type: boolean
                  endDate:
                    description: 'The date and time at which the Capacity Reservation
                      expires. When a Capacity Reservation expires, the reserved capacity
                      is released and you can no longer launch instances into it.
                      Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
                    type: string
                  endDateType:
                    description: Indicates the way in which the Capacity Reservation
                      ends. Specify either unlimited or limited.
                    type: string
                  ephemeralStorage:
                    description: Indicates whether the Capacity Reservation supports
                      instances with temporary, block-level storage.
                    type: boolean
                  instanceCount:
                    description: The number of instances for which to reserve capacity.
                    type: number
                  instanceMatchCriteria:
                    description: Indicates the type of instance launches that the
                      Capacity Reservation accepts. Specify either open or targeted.
                    type: string
                  instancePlatform:
                    description: The type of operating system for which to reserve
                      capacity. Valid options are Linux/UNIX, Red Hat Enterprise Linux,
                      SUSE Linux, Windows, Windows with SQL Server, Windows with SQL
                      Server Enterprise, Windows with SQL Server Standard or Windows
                      with SQL Server Web.
                    type: string
                  instanceType:
                    description: The instance type for which to reserve capacity.
                    type: string
                  outpostArn:
                    description: The Amazon Resource Name (ARN) of the Outpost on
                      which to create the Capacity Reservation.
                    type: string
                  placementGroupArn:
                    description: The Amazon Resource Name (ARN) of the cluster placement
                      group in which to create the Capacity Reservation.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tenancy:
                    description: Indicates the tenancy of the Capacity Reservation.
                      Specify either default or dedicated.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.availabilityZone is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.availabilityZone)
                || (has(self.initProvider) && has(self.initProvider.availabilityZone))'
            - message: spec.forProvider.instanceCount is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instanceCount)
                || (has(self.initProvider) && has(self.initProvider.instanceCount))'
            - message: spec.forProvider.instancePlatform is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instancePlatform)
                || (has(self.initProvider) && has(self.initProvider.instancePlatform))'
            - message: spec.forProvider.instanceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instanceType)
                || (has(self.initProvider) && has(self.initProvider.instanceType))'
          status:
            description: CapacityReservationStatus defines the observed state of CapacityReservation.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the Capacity Reservation.
                    type: string
                  availabilityZone:
                    description: The Availability Zone in which to create the Capacity
                      Reservation.
                    type: string
                  ebsOptimized:
                    description: Indicates whether the Capacity Reservation supports
                      EBS-optimized instances.
                    type: boolean
                  endDate:
                    description: 'The date and time at which the Capacity Reservation
                      expires. When a Capacity Reservation expires, the reserved capacity
                      is released and you can no longer launch instances into it.
                      Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
                    type: string
                  endDateType:
                    description: Indicates the way in which the Capacity Reservation
                      ends. Specify either unlimited or limited.
                    type: string
                  ephemeralStorage:
                    description: Indicates whether the Capacity Reservation supports
                      instances with temporary, block-level storage.
                    type: boolean
                  id:
                    description: The Capacity Reservation ID.
                    type: string
                  instanceCount:
                    description: The number of instances for which to reserve capacity.
                    type: number
                  instanceMatchCriteria:
                    description: Indicates the type of instance launches that the
                      Capacity Reservation accepts. Specify either open or targeted.
                    type: string
                  instancePlatform:
                    description: The type of operating system for which to reserve
                      capacity. Valid options are Linux/UNIX, Red Hat Enterprise Linux,
                      SUSE Linux, Windows, Windows with SQL Server, Windows with SQL
                      Server Enterprise, Windows with SQL Server Standard or Windows
                      with SQL Server Web.
                    type: string
                  instanceType:
                    description: The instance type for which to reserve capacity.
                    type: string
                  outpostArn:
                    description: The Amazon Resource Name (ARN) of the Outpost on
                      which to create the Capacity Reservation.
                    type: string
                  ownerId:
                    description: The ID of the AWS account that owns the Capacity
                      Reservation.
                    type: string
                  placementGroupArn:
                    description: The Amazon Resource Name (ARN) of the cluster placement
                      group in which to create the Capacity Reservation.
                    type: string
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block
                    type: object
                    x-kubernetes-map-type: granular
                  tenancy:
                    description: Indicates the tenancy of the Capacity Reservation.
                      Specify either default or dedicated.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

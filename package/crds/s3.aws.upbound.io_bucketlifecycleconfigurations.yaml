---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: bucketlifecycleconfigurations.s3.aws.upbound.io
spec:
  group: s3.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: BucketLifecycleConfiguration
    listKind: BucketLifecycleConfigurationList
    plural: bucketlifecycleconfigurations
    singular: bucketlifecycleconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BucketLifecycleConfiguration is the Schema for the BucketLifecycleConfigurations
          API. Provides a S3 bucket lifecycle configuration resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketLifecycleConfigurationSpec defines the desired state
              of BucketLifecycleConfiguration
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucket:
                    description: Name of the source S3 bucket you want Amazon S3 to
                      monitor.
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in s3 to populate bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in s3 to populate bucket.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  expectedBucketOwner:
                    description: Account ID of the expected bucket owner. If the bucket
                      is owned by a different account, the request will fail with
                      an HTTP 403 (Access Denied) error.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  rule:
                    description: List of configuration blocks describing the rules
                      managing the replication. See below.
                    items:
                      properties:
                        abortIncompleteMultipartUpload:
                          description: Configuration block that specifies the days
                            since the initiation of an incomplete multipart upload
                            that Amazon S3 will wait before permanently removing all
                            parts of the upload. See below.
                          items:
                            properties:
                              daysAfterInitiation:
                                description: Number of days after which Amazon S3
                                  aborts an incomplete multipart upload.
                                type: number
                            type: object
                          type: array
                        expiration:
                          description: Configuration block that specifies the expiration
                            for the lifecycle of the object in the form of date, days
                            and, whether the object has a delete marker. See below.
                          items:
                            properties:
                              date:
                                description: Date objects are transitioned to the
                                  specified storage class. The date value must be
                                  in RFC3339 format and set to midnight UTC e.g. 2023-01-13T00:00:00Z.
                                type: string
                              days:
                                description: Number of days after creation when objects
                                  are transitioned to the specified storage class.
                                  The value must be a positive integer. If both days
                                  and date are not specified, defaults to 0. Valid
                                  values depend on storage_class, see Transition objects
                                  using Amazon S3 Lifecycle for more details.
                                type: number
                              expiredObjectDeleteMarker:
                                description: Indicates whether Amazon S3 will remove
                                  a delete marker with no noncurrent versions. If
                                  set to true, the delete marker will be expired;
                                  if set to false the policy takes no action.
                                type: boolean
                            type: object
                          type: array
                        filter:
                          description: Configuration block used to identify objects
                            that a Lifecycle Rule applies to. See below. If not specified,
                            the rule will default to using prefix.
                          items:
                            properties:
                              and:
                                description: Configuration block used to apply a logical
                                  AND to two or more predicates. See below. The Lifecycle
                                  Rule will apply to any object matching all the predicates
                                  configured inside the and block.
                                items:
                                  properties:
                                    objectSizeGreaterThan:
                                      description: Minimum object size (in bytes)
                                        to which the rule applies.
                                      type: number
                                    objectSizeLessThan:
                                      description: Maximum object size (in bytes)
                                        to which the rule applies.
                                      type: number
                                    prefix:
                                      description: DEPRECATED Use filter instead.
                                        This has been deprecated by Amazon S3. Prefix
                                        identifying one or more objects to which the
                                        rule applies. Defaults to an empty string
                                        ("") if filter is not specified.
                                      type: string
                                    tags:
                                      additionalProperties:
                                        type: string
                                      description: Key-value map of resource tags.
                                        All of these tags must exist in the object's
                                        tag set in order for the rule to apply.
                                      type: object
                                  type: object
                                type: array
                              objectSizeGreaterThan:
                                description: Minimum object size (in bytes) to which
                                  the rule applies.
                                type: string
                              objectSizeLessThan:
                                description: Maximum object size (in bytes) to which
                                  the rule applies.
                                type: string
                              prefix:
                                description: DEPRECATED Use filter instead. This has
                                  been deprecated by Amazon S3. Prefix identifying
                                  one or more objects to which the rule applies. Defaults
                                  to an empty string ("") if filter is not specified.
                                type: string
                              tag:
                                description: Configuration block for specifying a
                                  tag key and value. See below.
                                items:
                                  properties:
                                    key:
                                      description: Name of the object key.
                                      type: string
                                    value:
                                      description: Value of the tag.
                                      type: string
                                  required:
                                  - key
                                  - value
                                  type: object
                                type: array
                            type: object
                          type: array
                        id:
                          description: Unique identifier for the rule. The value cannot
                            be longer than 255 characters.
                          type: string
                        noncurrentVersionExpiration:
                          description: Configuration block that specifies when noncurrent
                            object versions expire. See below.
                          items:
                            properties:
                              newerNoncurrentVersions:
                                description: Number of noncurrent versions Amazon
                                  S3 will retain. Must be a non-zero positive integer.
                                type: string
                              noncurrentDays:
                                description: Number of days an object is noncurrent
                                  before Amazon S3 can perform the associated action.
                                type: number
                            type: object
                          type: array
                        noncurrentVersionTransition:
                          description: Set of configuration blocks that specify the
                            transition rule for the lifecycle rule that describes
                            when noncurrent objects transition to a specific storage
                            class. See below.
                          items:
                            properties:
                              newerNoncurrentVersions:
                                description: Number of noncurrent versions Amazon
                                  S3 will retain. Must be a non-zero positive integer.
                                type: string
                              noncurrentDays:
                                description: Number of days an object is noncurrent
                                  before Amazon S3 can perform the associated action.
                                type: number
                              storageClass:
                                description: 'Class of storage used to store the object.
                                  Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA,
                                  INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.'
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                        prefix:
                          description: DEPRECATED Use filter instead. This has been
                            deprecated by Amazon S3. Prefix identifying one or more
                            objects to which the rule applies. Defaults to an empty
                            string ("") if filter is not specified.
                          type: string
                        status:
                          description: 'Whether the rule is currently being applied.
                            Valid values: Enabled or Disabled.'
                          type: string
                        transition:
                          description: Set of configuration blocks that specify when
                            an Amazon S3 object transitions to a specified storage
                            class. See below.
                          items:
                            properties:
                              date:
                                description: Date objects are transitioned to the
                                  specified storage class. The date value must be
                                  in RFC3339 format and set to midnight UTC e.g. 2023-01-13T00:00:00Z.
                                type: string
                              days:
                                description: Number of days after creation when objects
                                  are transitioned to the specified storage class.
                                  The value must be a positive integer. If both days
                                  and date are not specified, defaults to 0. Valid
                                  values depend on storage_class, see Transition objects
                                  using Amazon S3 Lifecycle for more details.
                                type: number
                              storageClass:
                                description: 'Class of storage used to store the object.
                                  Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA,
                                  INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.'
                                type: string
                            required:
                            - storageClass
                            type: object
                          type: array
                      required:
                      - id
                      - status
                      type: object
                    type: array
                required:
                - region
                - rule
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BucketLifecycleConfigurationStatus defines the observed state
              of BucketLifecycleConfiguration.
            properties:
              atProvider:
                properties:
                  id:
                    description: and status)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

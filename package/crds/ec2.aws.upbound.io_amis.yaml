---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: amis.ec2.aws.upbound.io
spec:
  group: ec2.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: AMI
    listKind: AMIList
    plural: amis
    singular: ami
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AMI is the Schema for the AMIs API. Creates and manages a custom
          Amazon Machine Image (AMI).
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AMISpec defines the desired state of AMI
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  architecture:
                    description: Machine architecture for created instances. Defaults
                      to "x86_64".
                    type: string
                  bootMode:
                    description: The boot mode of the AMI. For more information, see
                      Boot modes in the Amazon Elastic Compute Cloud User Guide.
                    type: string
                  deprecationTime:
                    description: 'The date and time to deprecate the AMI. If you specified
                      a value for seconds, Amazon EC2 rounds the seconds to the nearest
                      minute. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)'
                    type: string
                  description:
                    description: A longer, human-readable description for the AMI.
                    type: string
                  ebsBlockDevice:
                    description: Nested block describing an EBS block device that
                      should be attached to created instances. The structure of this
                      block is described below.
                    items:
                      properties:
                        deleteOnTermination:
                          description: Boolean controlling whether the EBS volumes
                            created to support each created instance will be deleted
                            once that instance is terminated.
                          type: boolean
                        deviceName:
                          description: The path at which the device is exposed to
                            created instances.
                          type: string
                        encrypted:
                          description: Boolean controlling whether the created EBS
                            volumes will be encrypted. Can't be used with snapshot_id.
                          type: boolean
                        iops:
                          description: Number of I/O operations per second the created
                            volumes will support.
                          type: number
                        outpostArn:
                          description: The ARN of the Outpost on which the snapshot
                            is stored.
                          type: string
                        snapshotId:
                          description: The id of an EBS snapshot that will be used
                            to initialize the created EBS volumes. If set, the volume_size
                            attribute must be at least as large as the referenced
                            snapshot.
                          type: string
                        snapshotIdRef:
                          description: Reference to a EBSSnapshot to populate snapshotId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        snapshotIdSelector:
                          description: Selector for a EBSSnapshot to populate snapshotId.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        throughput:
                          description: The throughput that the EBS volume supports,
                            in MiB/s. Only valid for volume_type of gp3.
                          type: number
                        volumeSize:
                          description: The size of created volumes in GiB. If snapshot_id
                            is set and volume_size is omitted then the volume will
                            have the same size as the selected snapshot.
                          type: number
                        volumeType:
                          description: 'The type of EBS volume to create. Can be standard,
                            gp2, gp3, io1, io2, sc1 or st1 (Default: standard).'
                          type: string
                      required:
                      - deviceName
                      type: object
                    type: array
                  enaSupport:
                    description: Specifies whether enhanced networking with ENA is
                      enabled. Defaults to false.
                    type: boolean
                  ephemeralBlockDevice:
                    description: Nested block describing an ephemeral block device
                      that should be attached to created instances. The structure
                      of this block is described below.
                    items:
                      properties:
                        deviceName:
                          description: The path at which the device is exposed to
                            created instances.
                          type: string
                        virtualName:
                          description: A name for the ephemeral device, of the form
                            "ephemeralN" where N is a volume number starting from
                            zero.
                          type: string
                      required:
                      - deviceName
                      - virtualName
                      type: object
                    type: array
                  imageLocation:
                    description: Path to an S3 object containing an image manifest,
                      e.g., created by the ec2-upload-bundle command in the EC2 command
                      line tools.
                    type: string
                  kernelId:
                    description: The id of the kernel image (AKI) that will be used
                      as the paravirtual kernel in created instances.
                    type: string
                  name:
                    description: A region-unique name for the AMI.
                    type: string
                  ramdiskId:
                    description: The id of an initrd image (ARI) that will be used
                      when booting the created instances.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  rootDeviceName:
                    description: The name of the root device (for example, /dev/sda1,
                      or /dev/xvda).
                    type: string
                  sriovNetSupport:
                    description: When set to "simple" (the default), enables enhanced
                      networking for created instances. No other value is supported
                      at this time.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  virtualizationType:
                    description: Keyword to choose what virtualization mode created
                      instances will use. Can be either "paravirtual" (the default)
                      or "hvm". The choice of virtualization type changes the set
                      of further arguments that are required, as described below.
                    type: string
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AMIStatus defines the observed state of AMI.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the AMI.
                    type: string
                  hypervisor:
                    description: The hypervisor type of the image.
                    type: string
                  id:
                    description: The ID of the created AMI.
                    type: string
                  imageOwnerAlias:
                    description: The AWS account alias (for example, amazon, self)
                      or the AWS account ID of the AMI owner.
                    type: string
                  imageType:
                    description: The type of image.
                    type: string
                  manageEbsSnapshots:
                    type: boolean
                  ownerId:
                    description: The AWS account ID of the image owner.
                    type: string
                  platform:
                    description: This value is set to windows for Windows AMIs; otherwise,
                      it is blank.
                    type: string
                  platformDetails:
                    description: The platform details associated with the billing
                      code of the AMI.
                    type: string
                  public:
                    description: Indicates whether the image has public launch permissions.
                    type: boolean
                  rootSnapshotId:
                    description: The Snapshot ID for the root volume (for EBS-backed
                      AMIs)
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                  usageOperation:
                    description: The operation of the Amazon EC2 instance and the
                      billing code that is associated with the AMI.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: securitygroups.ec2.aws.upbound.io
spec:
  group: ec2.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: SecurityGroup
    listKind: SecurityGroupList
    plural: securitygroups
    singular: securitygroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SecurityGroup is the Schema for the SecurityGroups API. Provides
          a security group resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecurityGroupSpec defines the desired state of SecurityGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: 'Security group description. Cannot be "". NOTE:
                      This field maps to the AWS GroupDescription attribute, for which
                      there is no Update API. If you''d like to classify your security
                      groups in a way that can be updated, use tags.'
                    type: string
                  name:
                    description: Name of the security group.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  revokeRulesOnDelete:
                    description: This is normally not needed, however certain AWS
                      services such as Elastic Map Reduce may automatically add required
                      rules to security groups used with the service, and those rules
                      may contain a cyclic dependency that prevent the security groups
                      from being destroyed without removing the dependency first.
                      Default false.
                    type: boolean
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  vpcId:
                    description: VPC ID. Defaults to the region's default VPC.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in ec2 to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in ec2 to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SecurityGroupStatus defines the observed state of SecurityGroup.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the security group.
                    type: string
                  egress:
                    description: Configuration block for egress rules. Can be specified
                      multiple times for each egress rule. Each egress block supports
                      fields documented below. This argument is processed in attribute-as-blocks
                      mode.
                    items:
                      properties:
                        cidrBlocks:
                          description: List of CIDR blocks.
                          items:
                            type: string
                          type: array
                        description:
                          description: 'Security group description. Cannot be "".
                            NOTE: This field maps to the AWS GroupDescription attribute,
                            for which there is no Update API. If you''d like to classify
                            your security groups in a way that can be updated, use
                            tags.'
                          type: string
                        fromPort:
                          description: Start port (or ICMP type number if protocol
                            is icmp or icmpv6).
                          type: number
                        ipv6CidrBlocks:
                          description: List of IPv6 CIDR blocks.
                          items:
                            type: string
                          type: array
                        prefixListIds:
                          description: List of Prefix List IDs.
                          items:
                            type: string
                          type: array
                        protocol:
                          description: Protocol. If you select a protocol of -1 (semantically
                            equivalent to all, which is not a valid value here), you
                            must specify a from_port and to_port equal to 0.  The
                            supported values are defined in the IpProtocol argument
                            on the IpPermission API reference.12.
                          type: string
                        securityGroups:
                          description: List of security groups. A group name can be
                            used relative to the default VPC. Otherwise, group ID.
                          items:
                            type: string
                          type: array
                        self:
                          description: Whether the security group itself will be added
                            as a source to this ingress rule.
                          type: boolean
                        toPort:
                          description: End range port (or ICMP code if protocol is
                            icmp).
                          type: number
                      type: object
                    type: array
                  id:
                    description: ID of the security group.
                    type: string
                  ingress:
                    description: Configuration block for ingress rules. Can be specified
                      multiple times for each ingress rule. Each ingress block supports
                      fields documented below. This argument is processed in attribute-as-blocks
                      mode.
                    items:
                      properties:
                        cidrBlocks:
                          description: List of CIDR blocks.
                          items:
                            type: string
                          type: array
                        description:
                          description: 'Security group description. Cannot be "".
                            NOTE: This field maps to the AWS GroupDescription attribute,
                            for which there is no Update API. If you''d like to classify
                            your security groups in a way that can be updated, use
                            tags.'
                          type: string
                        fromPort:
                          description: Start port (or ICMP type number if protocol
                            is icmp or icmpv6).
                          type: number
                        ipv6CidrBlocks:
                          description: List of IPv6 CIDR blocks.
                          items:
                            type: string
                          type: array
                        prefixListIds:
                          description: List of Prefix List IDs.
                          items:
                            type: string
                          type: array
                        protocol:
                          description: Protocol. If you select a protocol of -1 (semantically
                            equivalent to all, which is not a valid value here), you
                            must specify a from_port and to_port equal to 0.  The
                            supported values are defined in the IpProtocol argument
                            on the IpPermission API reference.12.
                          type: string
                        securityGroups:
                          description: List of security groups. A group name can be
                            used relative to the default VPC. Otherwise, group ID.
                          items:
                            type: string
                          type: array
                        self:
                          description: Whether the security group itself will be added
                            as a source to this ingress rule.
                          type: boolean
                        toPort:
                          description: End range port (or ICMP code if protocol is
                            icmp).
                          type: number
                      type: object
                    type: array
                  ownerId:
                    description: Owner ID.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

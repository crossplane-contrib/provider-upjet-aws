---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: containerservices.lightsail.aws.upbound.io
spec:
  group: lightsail.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ContainerService
    listKind: ContainerServiceList
    plural: containerservices
    singular: containerservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ContainerService is the Schema for the ContainerServices API.
          Manages a Lightsail container service for running containerized applications.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ContainerServiceSpec defines the desired state of ContainerService
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    items:
                      properties:
                        ecrImagePullerRole:
                          description: Configuration to access private container image
                            repositories, such as Amazon Elastic Container Registry
                            (Amazon ECR) private repositories. See below.
                          items:
                            properties:
                              isActive:
                                description: Whether to activate the role. Defaults
                                  to false.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    items:
                      properties:
                        certificate:
                          description: 'Set of certificate configurations for the
                            public domain names. Each element contains the following
                            attributes:'
                          items:
                            properties:
                              certificateName:
                                description: Name of the certificate.
                                type: string
                              domainNames:
                                description: List of domain names for the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    items:
                      properties:
                        ecrImagePullerRole:
                          description: Configuration to access private container image
                            repositories, such as Amazon Elastic Container Registry
                            (Amazon ECR) private repositories. See below.
                          items:
                            properties:
                              isActive:
                                description: Whether to activate the role. Defaults
                                  to false.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    items:
                      properties:
                        certificate:
                          description: 'Set of certificate configurations for the
                            public domain names. Each element contains the following
                            attributes:'
                          items:
                            properties:
                              certificateName:
                                description: Name of the certificate.
                                type: string
                              domainNames:
                                description: List of domain names for the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.power is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.power)
                || (has(self.initProvider) && has(self.initProvider.power))'
            - message: spec.forProvider.scale is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scale)
                || (has(self.initProvider) && has(self.initProvider.scale))'
          status:
            description: ContainerServiceStatus defines the observed state of ContainerService.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the container service.
                    type: string
                  availabilityZone:
                    description: Availability Zone. Follows the format us-east-2a
                      (case-sensitive).
                    type: string
                  createdAt:
                    description: Date and time when the container service was created.
                    type: string
                  id:
                    description: Same as name.
                    type: string
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  powerId:
                    description: Power ID of the container service.
                    type: string
                  principalArn:
                    description: Principal ARN of the container service. The principal
                      ARN can be used to create a trust relationship between your
                      standard AWS account and your Lightsail container service. This
                      allows you to give your service permission to access resources
                      in your standard AWS account.
                    type: string
                  privateDomainName:
                    description: Private domain name of the container service. The
                      private domain name is accessible only by other resources within
                      the default virtual private cloud (VPC) of your Lightsail account.
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    items:
                      properties:
                        ecrImagePullerRole:
                          description: Configuration to access private container image
                            repositories, such as Amazon Elastic Container Registry
                            (Amazon ECR) private repositories. See below.
                          items:
                            properties:
                              isActive:
                                description: Whether to activate the role. Defaults
                                  to false.
                                type: boolean
                              principalArn:
                                description: Principal ARN of the container service.
                                  The principal ARN can be used to create a trust
                                  relationship between your standard AWS account and
                                  your Lightsail container service. This allows you
                                  to give your service permission to access resources
                                  in your standard AWS account.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    items:
                      properties:
                        certificate:
                          description: 'Set of certificate configurations for the
                            public domain names. Each element contains the following
                            attributes:'
                          items:
                            properties:
                              certificateName:
                                description: Name of the certificate.
                                type: string
                              domainNames:
                                description: List of domain names for the certificate.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  resourceType:
                    description: Lightsail resource type of the container service
                      (i.e., ContainerService).
                    type: string
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  state:
                    description: Current state of the container service.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  url:
                    description: Publicly accessible URL of the container service.
                      If no public endpoint is specified in the currentDeployment,
                      this URL returns a 404 response.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: ContainerService is the Schema for the ContainerServices API.
          Manages a Lightsail container service for running containerized applications.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ContainerServiceSpec defines the desired state of ContainerService
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    properties:
                      ecrImagePullerRole:
                        description: Configuration to access private container image
                          repositories, such as Amazon Elastic Container Registry
                          (Amazon ECR) private repositories. See below.
                        properties:
                          isActive:
                            description: Whether to activate the role. Defaults to
                              false.
                            type: boolean
                        type: object
                    type: object
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    properties:
                      certificate:
                        description: 'Set of certificate configurations for the public
                          domain names. Each element contains the following attributes:'
                        items:
                          properties:
                            certificateName:
                              description: Name of the certificate.
                              type: string
                            domainNames:
                              description: List of domain names for the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    properties:
                      ecrImagePullerRole:
                        description: Configuration to access private container image
                          repositories, such as Amazon Elastic Container Registry
                          (Amazon ECR) private repositories. See below.
                        properties:
                          isActive:
                            description: Whether to activate the role. Defaults to
                              false.
                            type: boolean
                        type: object
                    type: object
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    properties:
                      certificate:
                        description: 'Set of certificate configurations for the public
                          domain names. Each element contains the following attributes:'
                        items:
                          properties:
                            certificateName:
                              description: Name of the certificate.
                              type: string
                            domainNames:
                              description: List of domain names for the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.power is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.power)
                || (has(self.initProvider) && has(self.initProvider.power))'
            - message: spec.forProvider.scale is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scale)
                || (has(self.initProvider) && has(self.initProvider.scale))'
          status:
            description: ContainerServiceStatus defines the observed state of ContainerService.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the container service.
                    type: string
                  availabilityZone:
                    description: Availability Zone. Follows the format us-east-2a
                      (case-sensitive).
                    type: string
                  createdAt:
                    description: Date and time when the container service was created.
                    type: string
                  id:
                    description: Same as name.
                    type: string
                  isDisabled:
                    description: Whether to disable the container service. Defaults
                      to false.
                    type: boolean
                  power:
                    description: 'Power specification for the container service. The
                      power specifies the amount of memory, the number of vCPUs, and
                      the monthly price of each node of the container service. Possible
                      values: nano, micro, small, medium, large, xlarge.'
                    type: string
                  powerId:
                    description: Power ID of the container service.
                    type: string
                  principalArn:
                    description: Principal ARN of the container service. The principal
                      ARN can be used to create a trust relationship between your
                      standard AWS account and your Lightsail container service. This
                      allows you to give your service permission to access resources
                      in your standard AWS account.
                    type: string
                  privateDomainName:
                    description: Private domain name of the container service. The
                      private domain name is accessible only by other resources within
                      the default virtual private cloud (VPC) of your Lightsail account.
                    type: string
                  privateRegistryAccess:
                    description: Configuration for the container service to access
                      private container image repositories, such as Amazon Elastic
                      Container Registry (Amazon ECR) private repositories. See below.
                    properties:
                      ecrImagePullerRole:
                        description: Configuration to access private container image
                          repositories, such as Amazon Elastic Container Registry
                          (Amazon ECR) private repositories. See below.
                        properties:
                          isActive:
                            description: Whether to activate the role. Defaults to
                              false.
                            type: boolean
                          principalArn:
                            description: Principal ARN of the container service. The
                              principal ARN can be used to create a trust relationship
                              between your standard AWS account and your Lightsail
                              container service. This allows you to give your service
                              permission to access resources in your standard AWS
                              account.
                            type: string
                        type: object
                    type: object
                  publicDomainNames:
                    description: Public domain names to use with the container service,
                      such as example.com and www.example.com. You can specify up
                      to four public domain names for a container service. The domain
                      names that you specify are used when you create a deployment
                      with a container configured as the public endpoint of your container
                      service. If you don't specify public domain names, then you
                      can use the default domain of the container service. See below.
                    properties:
                      certificate:
                        description: 'Set of certificate configurations for the public
                          domain names. Each element contains the following attributes:'
                        items:
                          properties:
                            certificateName:
                              description: Name of the certificate.
                              type: string
                            domainNames:
                              description: List of domain names for the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  resourceType:
                    description: Lightsail resource type of the container service
                      (i.e., ContainerService).
                    type: string
                  scale:
                    description: Scale specification for the container service. The
                      scale specifies the allocated compute nodes of the container
                      service.
                    type: number
                  state:
                    description: Current state of the container service.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  url:
                    description: Publicly accessible URL of the container service.
                      If no public endpoint is specified in the currentDeployment,
                      this URL returns a 404 response.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}

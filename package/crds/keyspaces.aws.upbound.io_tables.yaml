---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: tables.keyspaces.aws.upbound.io
spec:
  group: keyspaces.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the Tables API. Provides a Keyspaces
          Table.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  capacitySpecification:
                    description: Specifies the read/write throughput capacity mode
                      for the table.
                    items:
                      properties:
                        readCapacityUnits:
                          description: The throughput capacity specified for read
                            operations defined in read capacity units (RCUs).
                          type: number
                        throughputMode:
                          description: 'The read/write throughput capacity mode for
                            a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The
                            default value is PAY_PER_REQUEST.'
                          type: string
                        writeCapacityUnits:
                          description: The throughput capacity specified for write
                            operations defined in write capacity units (WCUs).
                          type: number
                      type: object
                    type: array
                  comment:
                    description: A description of the table.
                    items:
                      properties:
                        message:
                          description: A description of the table.
                          type: string
                      type: object
                    type: array
                  defaultTimeToLive:
                    description: The default Time to Live setting in seconds for the
                      table. More information can be found in the Developer Guide.
                    type: number
                  encryptionSpecification:
                    description: Specifies how the encryption key for encryption at
                      rest is managed for the table. More information can be found
                      in the Developer Guide.
                    items:
                      properties:
                        kmsKeyIdentifier:
                          description: The Amazon Resource Name (ARN) of the customer
                            managed KMS key.
                          type: string
                        type:
                          description: 'The encryption option specified for the table.
                            Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY.
                            The default value is AWS_OWNED_KMS_KEY.'
                          type: string
                      type: object
                    type: array
                  keyspaceName:
                    description: The name of the keyspace that the table is going
                      to be created in.
                    type: string
                  keyspaceNameRef:
                    description: Reference to a Keyspace in keyspaces to populate
                      keyspaceName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  keyspaceNameSelector:
                    description: Selector for a Keyspace in keyspaces to populate
                      keyspaceName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  pointInTimeRecovery:
                    description: Specifies if point-in-time recovery is enabled or
                      disabled for the table. More information can be found in the
                      Developer Guide.
                    items:
                      properties:
                        status:
                          description: 'Valid values: ENABLED, DISABLED. The default
                            value is DISABLED.'
                          type: string
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  schemaDefinition:
                    description: Describes the schema of the table.
                    items:
                      properties:
                        clusteringKey:
                          description: The columns that are part of the clustering
                            key of the table.
                          items:
                            properties:
                              name:
                                description: The name of the column.
                                type: string
                              orderBy:
                                description: 'The order modifier. Valid values: ASC,
                                  DESC.'
                                type: string
                            required:
                            - name
                            - orderBy
                            type: object
                          type: array
                        column:
                          description: The regular columns of the table.
                          items:
                            properties:
                              name:
                                description: The name of the column.
                                type: string
                              type:
                                description: 'The encryption option specified for
                                  the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY.
                                  The default value is AWS_OWNED_KMS_KEY.'
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          type: array
                        partitionKey:
                          description: The columns that are part of the partition
                            key of the table .
                          items:
                            properties:
                              name:
                                description: The name of the column.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        staticColumn:
                          description: The columns that have been defined as STATIC.
                            Static columns store values that are shared by all rows
                            in the same partition.
                          items:
                            properties:
                              name:
                                description: The name of the column.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                      required:
                      - column
                      - partitionKey
                      type: object
                    type: array
                  tableName:
                    description: The name of the table.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  ttl:
                    description: Enables Time to Live custom settings for the table.
                      More information can be found in the Developer Guide.
                    items:
                      properties:
                        status:
                          description: 'Valid values: ENABLED, DISABLED. The default
                            value is DISABLED.'
                          type: string
                      required:
                      - status
                      type: object
                    type: array
                required:
                - region
                - schemaDefinition
                - tableName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TableStatus defines the observed state of Table.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the table.
                    type: string
                  id:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: elbs.elb.aws.upbound.io
spec:
  group: elb.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ELB
    listKind: ELBList
    plural: elbs
    singular: elb
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ELB is the Schema for the ELBs API. Provides an Elastic Load
          Balancer resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ELBSpec defines the desired state of ELB
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessLogs:
                    description: An Access Logs block. Access Logs documented below.
                    items:
                      properties:
                        bucket:
                          description: The S3 bucket name to store the logs in.
                          type: string
                        bucketPrefix:
                          description: The S3 bucket prefix. Logs are stored in the
                            root if not configured.
                          type: string
                        enabled:
                          description: Boolean to enable / disable access_logs. Default
                            is true
                          type: boolean
                        interval:
                          description: 'The publishing interval in minutes. Valid
                            values: 5 and 60. Default: 60'
                          type: number
                      required:
                      - bucket
                      type: object
                    type: array
                  availabilityZones:
                    description: The AZ's to serve traffic in.
                    items:
                      type: string
                    type: array
                  connectionDraining:
                    description: 'Boolean to enable connection draining. Default:
                      false'
                    type: boolean
                  connectionDrainingTimeout:
                    description: 'The time in seconds to allow for connections to
                      drain. Default: 300'
                    type: number
                  crossZoneLoadBalancing:
                    description: 'Enable cross-zone load balancing. Default: true'
                    type: boolean
                  desyncMitigationMode:
                    description: Determines how the load balancer handles requests
                      that might pose a security risk to an application due to HTTP
                      desync. Valid values are monitor, defensive (default), strictest.
                    type: string
                  healthCheck:
                    description: A health_check block. Health Check documented below.
                    items:
                      properties:
                        healthyThreshold:
                          description: The number of checks before the instance is
                            declared healthy.
                          type: number
                        interval:
                          description: 'The publishing interval in minutes. Valid
                            values: 5 and 60. Default: 60'
                          type: number
                        target:
                          description: 'The target of the check. Valid pattern is
                            "${PROTOCOL}:${PORT}${PATH}", where PROTOCOL values are:'
                          type: string
                        timeout:
                          description: The length of time before the check times out.
                          type: number
                        unhealthyThreshold:
                          description: The number of checks before the instance is
                            declared unhealthy.
                          type: number
                      required:
                      - healthyThreshold
                      - interval
                      - target
                      - timeout
                      - unhealthyThreshold
                      type: object
                    type: array
                  idleTimeout:
                    description: 'The time in seconds that the connection is allowed
                      to be idle. Default: 60'
                    type: number
                  instances:
                    description: A list of instance ids to place in the ELB pool.
                    items:
                      type: string
                    type: array
                  instancesRefs:
                    description: References to Instance in ec2 to populate instances.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  instancesSelector:
                    description: Selector for a list of Instance in ec2 to populate
                      instances.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  internal:
                    description: If true, ELB will be an internal ELB.
                    type: boolean
                  listener:
                    description: A list of listener blocks. Listeners documented below.
                    items:
                      properties:
                        instancePort:
                          description: The port on the instance to route to
                          type: number
                        instanceProtocol:
                          description: The protocol to use to the instance. Valid
                            values are HTTP, HTTPS, TCP, or SSL
                          type: string
                        lbPort:
                          description: The port to listen on for the load balancer
                          type: number
                        lbProtocol:
                          description: The protocol to listen on. Valid values are
                            HTTP, HTTPS, TCP, or SSL
                          type: string
                        sslCertificateId:
                          description: The ARN of an SSL certificate you have uploaded
                            to AWS IAM. Note ECDSA-specific restrictions below.  Only
                            valid when
                          type: string
                      required:
                      - instancePort
                      - instanceProtocol
                      - lbPort
                      - lbProtocol
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  securityGroups:
                    description: A list of security group IDs to assign to the ELB.
                      Only valid if creating an ELB within a VPC
                    items:
                      type: string
                    type: array
                  sourceSecurityGroup:
                    description: The name of the security group that you can use as
                      part of your inbound rules for your load balancer's back-end
                      application instances. Use this for Classic or Default VPC only.
                    type: string
                  subnets:
                    description: A list of subnet IDs to attach to the ELB.
                    items:
                      type: string
                    type: array
                  subnetsRefs:
                    description: References to Subnet in ec2 to populate subnets.
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  subnetsSelector:
                    description: Selector for a list of Subnet in ec2 to populate
                      subnets.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - listener
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ELBStatus defines the observed state of ELB.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the ELB
                    type: string
                  dnsName:
                    description: The DNS name of the ELB
                    type: string
                  id:
                    description: The name of the ELB
                    type: string
                  sourceSecurityGroupId:
                    description: The ID of the security group that you can use as
                      part of your inbound rules for your load balancer's back-end
                      application instances. Only available on ELBs launched in a
                      VPC.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                  zoneId:
                    description: The canonical hosted zone ID of the ELB (to be used
                      in a Route 53 Alias record)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

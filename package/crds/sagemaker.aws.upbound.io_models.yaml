---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: models.sagemaker.aws.upbound.io
spec:
  group: sagemaker.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Model is the Schema for the Models API. Provides a SageMaker
          model resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModelSpec defines the desired state of Model
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  container:
                    description: Specifies containers in the inference pipeline. If
                      not specified, the primary_container argument is required. Fields
                      are documented below.
                    items:
                      properties:
                        containerHostname:
                          description: The DNS host name for the container.
                          type: string
                        environment:
                          additionalProperties:
                            type: string
                          description: Environment variables for the Docker container.
                            A list of key value pairs.
                          type: object
                        image:
                          description: The registry path where the inference code
                            image is stored in Amazon ECR.
                          type: string
                        imageConfig:
                          description: Specifies whether the model container is in
                            Amazon ECR or a private Docker registry accessible from
                            your Amazon Virtual Private Cloud (VPC). For more information
                            see Using a Private Docker Registry for Real-Time Inference
                            Containers. see Image Config.
                          items:
                            properties:
                              repositoryAccessMode:
                                description: 'Specifies whether the model container
                                  is in Amazon ECR or a private Docker registry accessible
                                  from your Amazon Virtual Private Cloud (VPC). Allowed
                                  values are: Platform and Vpc.'
                                type: string
                              repositoryAuthConfig:
                                description: Specifies an authentication configuration
                                  for the private docker registry where your model
                                  image is hosted. Specify a value for this property
                                  only if you specified Vpc as the value for the RepositoryAccessMode
                                  field, and the private Docker registry where the
                                  model image is hosted requires authentication. see
                                  Repository Auth Config.
                                items:
                                  properties:
                                    repositoryCredentialsProviderArn:
                                      description: The Amazon Resource Name (ARN)
                                        of an AWS Lambda function that provides credentials
                                        to authenticate to the private Docker registry
                                        where your model image is hosted. For information
                                        about how to create an AWS Lambda function,
                                        see Create a Lambda function with the console
                                        in the AWS Lambda Developer Guide.
                                      type: string
                                  required:
                                  - repositoryCredentialsProviderArn
                                  type: object
                                type: array
                            required:
                            - repositoryAccessMode
                            type: object
                          type: array
                        mode:
                          description: The container hosts value SingleModel/MultiModel.
                            The default value is SingleModel.
                          type: string
                        modelDataUrl:
                          description: The URL for the S3 location where model artifacts
                            are stored.
                          type: string
                      required:
                      - image
                      type: object
                    type: array
                  enableNetworkIsolation:
                    description: Isolates the model container. No inbound or outbound
                      network calls can be made to or from the model container.
                    type: boolean
                  executionRoleArn:
                    description: A role that SageMaker can assume to access model
                      artifacts and docker images for deployment.
                    type: string
                  executionRoleArnRef:
                    description: Reference to a Role in iam to populate executionRoleArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  executionRoleArnSelector:
                    description: Selector for a Role in iam to populate executionRoleArn.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  inferenceExecutionConfig:
                    description: Specifies details of how containers in a multi-container
                      endpoint are called. see Inference Execution Config.
                    items:
                      properties:
                        mode:
                          description: The container hosts value SingleModel/MultiModel.
                            The default value is SingleModel.
                          type: string
                      required:
                      - mode
                      type: object
                    type: array
                  primaryContainer:
                    description: The primary docker image containing inference code
                      that is used when the model is deployed for predictions.  If
                      not specified, the container argument is required. Fields are
                      documented below.
                    items:
                      properties:
                        containerHostname:
                          description: The DNS host name for the container.
                          type: string
                        environment:
                          additionalProperties:
                            type: string
                          description: Environment variables for the Docker container.
                            A list of key value pairs.
                          type: object
                        image:
                          description: The registry path where the inference code
                            image is stored in Amazon ECR.
                          type: string
                        imageConfig:
                          description: Specifies whether the model container is in
                            Amazon ECR or a private Docker registry accessible from
                            your Amazon Virtual Private Cloud (VPC). For more information
                            see Using a Private Docker Registry for Real-Time Inference
                            Containers. see Image Config.
                          items:
                            properties:
                              repositoryAccessMode:
                                description: 'Specifies whether the model container
                                  is in Amazon ECR or a private Docker registry accessible
                                  from your Amazon Virtual Private Cloud (VPC). Allowed
                                  values are: Platform and Vpc.'
                                type: string
                              repositoryAuthConfig:
                                description: Specifies an authentication configuration
                                  for the private docker registry where your model
                                  image is hosted. Specify a value for this property
                                  only if you specified Vpc as the value for the RepositoryAccessMode
                                  field, and the private Docker registry where the
                                  model image is hosted requires authentication. see
                                  Repository Auth Config.
                                items:
                                  properties:
                                    repositoryCredentialsProviderArn:
                                      description: The Amazon Resource Name (ARN)
                                        of an AWS Lambda function that provides credentials
                                        to authenticate to the private Docker registry
                                        where your model image is hosted. For information
                                        about how to create an AWS Lambda function,
                                        see Create a Lambda function with the console
                                        in the AWS Lambda Developer Guide.
                                      type: string
                                  required:
                                  - repositoryCredentialsProviderArn
                                  type: object
                                type: array
                            required:
                            - repositoryAccessMode
                            type: object
                          type: array
                        mode:
                          description: The container hosts value SingleModel/MultiModel.
                            The default value is SingleModel.
                          type: string
                        modelDataUrl:
                          description: The URL for the S3 location where model artifacts
                            are stored.
                          type: string
                      required:
                      - image
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  vpcConfig:
                    description: Specifies the VPC that you want your model to connect
                      to. VpcConfig is used in hosting services and in batch transform.
                    items:
                      properties:
                        securityGroupIds:
                          items:
                            type: string
                          type: array
                        subnets:
                          items:
                            type: string
                          type: array
                      required:
                      - securityGroupIds
                      - subnets
                      type: object
                    type: array
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ModelStatus defines the observed state of Model.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The Amazon Resource Name (ARN) assigned by AWS to
                      this model.
                    type: string
                  id:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

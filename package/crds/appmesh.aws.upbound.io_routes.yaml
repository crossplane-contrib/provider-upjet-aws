---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: routes.appmesh.aws.upbound.io
spec:
  group: appmesh.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API. Provides an AWS App Mesh
          route resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  meshName:
                    description: Name of the service mesh in which to create the route.
                      Must be between 1 and 255 characters in length.
                    type: string
                  meshNameRef:
                    description: Reference to a Mesh in appmesh to populate meshName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  meshNameSelector:
                    description: Selector for a Mesh in appmesh to populate meshName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  meshOwner:
                    description: AWS account ID of the service mesh's owner. Defaults
                      to the account ID the AWS provider is currently connected to.
                    type: string
                  name:
                    description: Name to use for the route. Must be between 1 and
                      255 characters in length.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  spec:
                    description: Route specification to apply.
                    items:
                      properties:
                        grpcRoute:
                          description: GRPC routing information for the route.
                          items:
                            properties:
                              action:
                                description: Action to take if a match is determined.
                                items:
                                  properties:
                                    weightedTarget:
                                      description: Targets that traffic is routed
                                        to when a request matches the route. You can
                                        specify one or more targets and their relative
                                        weights with which to distribute traffic.
                                      items:
                                        properties:
                                          port:
                                            description: The port number to match
                                              from the request.
                                            type: number
                                          virtualNode:
                                            description: Virtual node to associate
                                              with the weighted target. Must be between
                                              1 and 255 characters in length.
                                            type: string
                                          weight:
                                            description: Relative weight of the weighted
                                              target. An integer between 0 and 100.
                                            type: number
                                        required:
                                        - virtualNode
                                        - weight
                                        type: object
                                      type: array
                                  required:
                                  - weightedTarget
                                  type: object
                                type: array
                              match:
                                description: Criteria for determining an gRPC request
                                  match.
                                items:
                                  properties:
                                    metadata:
                                      description: Data to match from the gRPC request.
                                      items:
                                        properties:
                                          invert:
                                            description: If true, the match is on
                                              the opposite of the match criteria.
                                              Default is false.
                                            type: boolean
                                          match:
                                            description: Criteria for determining
                                              an gRPC request match.
                                            items:
                                              properties:
                                                exact:
                                                  description: Value sent by the client
                                                    must match the specified value
                                                    exactly. Must be between 1 and
                                                    255 characters in length.
                                                  type: string
                                                prefix:
                                                  description: Value sent by the client
                                                    must begin with the specified
                                                    characters. Must be between 1
                                                    and 255 characters in length.
                                                  type: string
                                                range:
                                                  description: Object that specifies
                                                    the range of numbers that the
                                                    value sent by the client must
                                                    be included in.
                                                  items:
                                                    properties:
                                                      end:
                                                        description: End of the range.
                                                        type: number
                                                      start:
                                                        description: (Requited) Start
                                                          of the range.
                                                        type: number
                                                    required:
                                                    - end
                                                    - start
                                                    type: object
                                                  type: array
                                                regex:
                                                  description: Value sent by the client
                                                    must include the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                                suffix:
                                                  description: Value sent by the client
                                                    must end with the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                              type: object
                                            type: array
                                          name:
                                            description: Name to use for the route.
                                              Must be between 1 and 255 characters
                                              in length.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    methodName:
                                      description: Method name to match from the request.
                                        If you specify a name, you must also specify
                                        a service_name.
                                      type: string
                                    port:
                                      description: The port number to match from the
                                        request.
                                      type: number
                                    prefix:
                                      description: Value sent by the client must begin
                                        with the specified characters. Must be between
                                        1 and 255 characters in length.
                                      type: string
                                    serviceName:
                                      description: Fully qualified domain name for
                                        the service to match from the request.
                                      type: string
                                  type: object
                                type: array
                              retryPolicy:
                                description: Retry policy.
                                items:
                                  properties:
                                    grpcRetryEvents:
                                      description: 'List of gRPC retry events. Valid
                                        values: cancelled, deadline-exceeded, internal,
                                        resource-exhausted, unavailable.'
                                      items:
                                        type: string
                                      type: array
                                    httpRetryEvents:
                                      description: 'List of HTTP retry events. Valid
                                        values: client-error (HTTP status code 409),
                                        gateway-error (HTTP status codes 502, 503,
                                        and 504), server-error (HTTP status codes
                                        500, 501, 502, 503, 504, 505, 506, 507, 508,
                                        510, and 511), stream-error (retry on refused
                                        stream).'
                                      items:
                                        type: string
                                      type: array
                                    maxRetries:
                                      description: Maximum number of retries.
                                      type: number
                                    perRetryTimeout:
                                      description: Per-retry timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    tcpRetryEvents:
                                      description: List of TCP retry events. The only
                                        valid value is connection-error.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - maxRetries
                                  - perRetryTimeout
                                  type: object
                                type: array
                              timeout:
                                description: Types of timeouts.
                                items:
                                  properties:
                                    idle:
                                      description: Idle timeout. An idle timeout bounds
                                        the amount of time that a connection may be
                                        idle.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    perRequest:
                                      description: Per request timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - action
                            type: object
                          type: array
                        http2Route:
                          description: HTTP/2 routing information for the route.
                          items:
                            properties:
                              action:
                                description: Action to take if a match is determined.
                                items:
                                  properties:
                                    weightedTarget:
                                      description: Targets that traffic is routed
                                        to when a request matches the route. You can
                                        specify one or more targets and their relative
                                        weights with which to distribute traffic.
                                      items:
                                        properties:
                                          port:
                                            description: The port number to match
                                              from the request.
                                            type: number
                                          virtualNode:
                                            description: Virtual node to associate
                                              with the weighted target. Must be between
                                              1 and 255 characters in length.
                                            type: string
                                          weight:
                                            description: Relative weight of the weighted
                                              target. An integer between 0 and 100.
                                            type: number
                                        required:
                                        - virtualNode
                                        - weight
                                        type: object
                                      type: array
                                  required:
                                  - weightedTarget
                                  type: object
                                type: array
                              match:
                                description: Criteria for determining an gRPC request
                                  match.
                                items:
                                  properties:
                                    header:
                                      description: Client request headers to match
                                        on.
                                      items:
                                        properties:
                                          invert:
                                            description: If true, the match is on
                                              the opposite of the match criteria.
                                              Default is false.
                                            type: boolean
                                          match:
                                            description: Criteria for determining
                                              an gRPC request match.
                                            items:
                                              properties:
                                                exact:
                                                  description: Value sent by the client
                                                    must match the specified value
                                                    exactly. Must be between 1 and
                                                    255 characters in length.
                                                  type: string
                                                prefix:
                                                  description: Value sent by the client
                                                    must begin with the specified
                                                    characters. Must be between 1
                                                    and 255 characters in length.
                                                  type: string
                                                range:
                                                  description: Object that specifies
                                                    the range of numbers that the
                                                    value sent by the client must
                                                    be included in.
                                                  items:
                                                    properties:
                                                      end:
                                                        description: End of the range.
                                                        type: number
                                                      start:
                                                        description: (Requited) Start
                                                          of the range.
                                                        type: number
                                                    required:
                                                    - end
                                                    - start
                                                    type: object
                                                  type: array
                                                regex:
                                                  description: Value sent by the client
                                                    must include the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                                suffix:
                                                  description: Value sent by the client
                                                    must end with the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                              type: object
                                            type: array
                                          name:
                                            description: Name to use for the route.
                                              Must be between 1 and 255 characters
                                              in length.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    method:
                                      description: 'Client request header method to
                                        match on. Valid values: GET, HEAD, POST, PUT,
                                        DELETE, CONNECT, OPTIONS, TRACE, PATCH.'
                                      type: string
                                    port:
                                      description: The port number to match from the
                                        request.
                                      type: number
                                    prefix:
                                      description: Value sent by the client must begin
                                        with the specified characters. Must be between
                                        1 and 255 characters in length.
                                      type: string
                                    scheme:
                                      description: 'Client request header scheme to
                                        match on. Valid values: http, https.'
                                      type: string
                                  required:
                                  - prefix
                                  type: object
                                type: array
                              retryPolicy:
                                description: Retry policy.
                                items:
                                  properties:
                                    httpRetryEvents:
                                      description: 'List of HTTP retry events. Valid
                                        values: client-error (HTTP status code 409),
                                        gateway-error (HTTP status codes 502, 503,
                                        and 504), server-error (HTTP status codes
                                        500, 501, 502, 503, 504, 505, 506, 507, 508,
                                        510, and 511), stream-error (retry on refused
                                        stream).'
                                      items:
                                        type: string
                                      type: array
                                    maxRetries:
                                      description: Maximum number of retries.
                                      type: number
                                    perRetryTimeout:
                                      description: Per-retry timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    tcpRetryEvents:
                                      description: List of TCP retry events. The only
                                        valid value is connection-error.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - maxRetries
                                  - perRetryTimeout
                                  type: object
                                type: array
                              timeout:
                                description: Types of timeouts.
                                items:
                                  properties:
                                    idle:
                                      description: Idle timeout. An idle timeout bounds
                                        the amount of time that a connection may be
                                        idle.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    perRequest:
                                      description: Per request timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - action
                            - match
                            type: object
                          type: array
                        httpRoute:
                          description: HTTP routing information for the route.
                          items:
                            properties:
                              action:
                                description: Action to take if a match is determined.
                                items:
                                  properties:
                                    weightedTarget:
                                      description: Targets that traffic is routed
                                        to when a request matches the route. You can
                                        specify one or more targets and their relative
                                        weights with which to distribute traffic.
                                      items:
                                        properties:
                                          port:
                                            description: The port number to match
                                              from the request.
                                            type: number
                                          virtualNode:
                                            description: Virtual node to associate
                                              with the weighted target. Must be between
                                              1 and 255 characters in length.
                                            type: string
                                          virtualNodeRef:
                                            description: Reference to a VirtualNode
                                              in appmesh to populate virtualNode.
                                            properties:
                                              name:
                                                description: Name of the referenced
                                                  object.
                                                type: string
                                              policy:
                                                description: Policies for referencing.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          virtualNodeSelector:
                                            description: Selector for a VirtualNode
                                              in appmesh to populate virtualNode.
                                            properties:
                                              matchControllerRef:
                                                description: MatchControllerRef ensures
                                                  an object with the same controller
                                                  reference as the selecting object
                                                  is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          weight:
                                            description: Relative weight of the weighted
                                              target. An integer between 0 and 100.
                                            type: number
                                        required:
                                        - weight
                                        type: object
                                      type: array
                                  required:
                                  - weightedTarget
                                  type: object
                                type: array
                              match:
                                description: Criteria for determining an gRPC request
                                  match.
                                items:
                                  properties:
                                    header:
                                      description: Client request headers to match
                                        on.
                                      items:
                                        properties:
                                          invert:
                                            description: If true, the match is on
                                              the opposite of the match criteria.
                                              Default is false.
                                            type: boolean
                                          match:
                                            description: Criteria for determining
                                              an gRPC request match.
                                            items:
                                              properties:
                                                exact:
                                                  description: Value sent by the client
                                                    must match the specified value
                                                    exactly. Must be between 1 and
                                                    255 characters in length.
                                                  type: string
                                                prefix:
                                                  description: Value sent by the client
                                                    must begin with the specified
                                                    characters. Must be between 1
                                                    and 255 characters in length.
                                                  type: string
                                                range:
                                                  description: Object that specifies
                                                    the range of numbers that the
                                                    value sent by the client must
                                                    be included in.
                                                  items:
                                                    properties:
                                                      end:
                                                        description: End of the range.
                                                        type: number
                                                      start:
                                                        description: (Requited) Start
                                                          of the range.
                                                        type: number
                                                    required:
                                                    - end
                                                    - start
                                                    type: object
                                                  type: array
                                                regex:
                                                  description: Value sent by the client
                                                    must include the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                                suffix:
                                                  description: Value sent by the client
                                                    must end with the specified characters.
                                                    Must be between 1 and 255 characters
                                                    in length.
                                                  type: string
                                              type: object
                                            type: array
                                          name:
                                            description: Name to use for the route.
                                              Must be between 1 and 255 characters
                                              in length.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    method:
                                      description: 'Client request header method to
                                        match on. Valid values: GET, HEAD, POST, PUT,
                                        DELETE, CONNECT, OPTIONS, TRACE, PATCH.'
                                      type: string
                                    port:
                                      description: The port number to match from the
                                        request.
                                      type: number
                                    prefix:
                                      description: Value sent by the client must begin
                                        with the specified characters. Must be between
                                        1 and 255 characters in length.
                                      type: string
                                    scheme:
                                      description: 'Client request header scheme to
                                        match on. Valid values: http, https.'
                                      type: string
                                  required:
                                  - prefix
                                  type: object
                                type: array
                              retryPolicy:
                                description: Retry policy.
                                items:
                                  properties:
                                    httpRetryEvents:
                                      description: 'List of HTTP retry events. Valid
                                        values: client-error (HTTP status code 409),
                                        gateway-error (HTTP status codes 502, 503,
                                        and 504), server-error (HTTP status codes
                                        500, 501, 502, 503, 504, 505, 506, 507, 508,
                                        510, and 511), stream-error (retry on refused
                                        stream).'
                                      items:
                                        type: string
                                      type: array
                                    maxRetries:
                                      description: Maximum number of retries.
                                      type: number
                                    perRetryTimeout:
                                      description: Per-retry timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    tcpRetryEvents:
                                      description: List of TCP retry events. The only
                                        valid value is connection-error.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - maxRetries
                                  - perRetryTimeout
                                  type: object
                                type: array
                              timeout:
                                description: Types of timeouts.
                                items:
                                  properties:
                                    idle:
                                      description: Idle timeout. An idle timeout bounds
                                        the amount of time that a connection may be
                                        idle.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                    perRequest:
                                      description: Per request timeout.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - action
                            - match
                            type: object
                          type: array
                        priority:
                          description: Priority for the route, between 0 and 1000.
                            Routes are matched based on the specified value, where
                            0 is the highest priority.
                          type: number
                        tcpRoute:
                          description: TCP routing information for the route.
                          items:
                            properties:
                              action:
                                description: Action to take if a match is determined.
                                items:
                                  properties:
                                    weightedTarget:
                                      description: Targets that traffic is routed
                                        to when a request matches the route. You can
                                        specify one or more targets and their relative
                                        weights with which to distribute traffic.
                                      items:
                                        properties:
                                          port:
                                            description: The port number to match
                                              from the request.
                                            type: number
                                          virtualNode:
                                            description: Virtual node to associate
                                              with the weighted target. Must be between
                                              1 and 255 characters in length.
                                            type: string
                                          virtualNodeRef:
                                            description: Reference to a VirtualNode
                                              in appmesh to populate virtualNode.
                                            properties:
                                              name:
                                                description: Name of the referenced
                                                  object.
                                                type: string
                                              policy:
                                                description: Policies for referencing.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            required:
                                            - name
                                            type: object
                                          virtualNodeSelector:
                                            description: Selector for a VirtualNode
                                              in appmesh to populate virtualNode.
                                            properties:
                                              matchControllerRef:
                                                description: MatchControllerRef ensures
                                                  an object with the same controller
                                                  reference as the selecting object
                                                  is selected.
                                                type: boolean
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: MatchLabels ensures an
                                                  object with matching labels is selected.
                                                type: object
                                              policy:
                                                description: Policies for selection.
                                                properties:
                                                  resolution:
                                                    default: Required
                                                    description: Resolution specifies
                                                      whether resolution of this reference
                                                      is required. The default is
                                                      'Required', which means the
                                                      reconcile will fail if the reference
                                                      cannot be resolved. 'Optional'
                                                      means this reference will be
                                                      a no-op if it cannot be resolved.
                                                    enum:
                                                    - Required
                                                    - Optional
                                                    type: string
                                                  resolve:
                                                    description: Resolve specifies
                                                      when this reference should be
                                                      resolved. The default is 'IfNotPresent',
                                                      which will attempt to resolve
                                                      the reference only when the
                                                      corresponding field is not present.
                                                      Use 'Always' to resolve the
                                                      reference on every reconcile.
                                                    enum:
                                                    - Always
                                                    - IfNotPresent
                                                    type: string
                                                type: object
                                            type: object
                                          weight:
                                            description: Relative weight of the weighted
                                              target. An integer between 0 and 100.
                                            type: number
                                        required:
                                        - weight
                                        type: object
                                      type: array
                                  required:
                                  - weightedTarget
                                  type: object
                                type: array
                              match:
                                description: Criteria for determining an gRPC request
                                  match.
                                items:
                                  properties:
                                    port:
                                      description: The port number to match from the
                                        request.
                                      type: number
                                  type: object
                                type: array
                              timeout:
                                description: Types of timeouts.
                                items:
                                  properties:
                                    idle:
                                      description: Idle timeout. An idle timeout bounds
                                        the amount of time that a connection may be
                                        idle.
                                      items:
                                        properties:
                                          unit:
                                            description: 'Unit of time. Valid values:
                                              ms, s.'
                                            type: string
                                          value:
                                            description: Number of time units. Minimum
                                              value of 0.
                                            type: number
                                        required:
                                        - unit
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - action
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  virtualRouterName:
                    description: Name of the virtual router in which to create the
                      route. Must be between 1 and 255 characters in length.
                    type: string
                  virtualRouterNameRef:
                    description: Reference to a VirtualRouter in appmesh to populate
                      virtualRouterName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  virtualRouterNameSelector:
                    description: Selector for a VirtualRouter in appmesh to populate
                      virtualRouterName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - name
                - region
                - spec
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RouteStatus defines the observed state of Route.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the route.
                    type: string
                  createdDate:
                    description: Creation date of the route.
                    type: string
                  id:
                    description: ID of the route.
                    type: string
                  lastUpdatedDate:
                    description: Last update date of the route.
                    type: string
                  resourceOwner:
                    description: Resource owner's AWS account ID.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

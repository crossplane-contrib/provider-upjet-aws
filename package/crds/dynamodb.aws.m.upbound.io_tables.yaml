---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: tables.dynamodb.aws.m.upbound.io
spec:
  group: dynamodb.aws.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the Tables API. Provides a DynamoDB table
          resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table
            properties:
              forProvider:
                properties:
                  attribute:
                    description: Set of nested attribute definitions. Only required
                      for hash_key and range_key attributes. See below.
                    items:
                      properties:
                        name:
                          description: Name of the attribute
                          type: string
                        type:
                          description: Attribute type. Valid values are S (string),
                            N (number), B (binary).
                          type: string
                      type: object
                    type: array
                  billingMode:
                    description: Controls how you are charged for read and write throughput
                      and how you manage capacity. The valid values are PROVISIONED
                      and PAY_PER_REQUEST. Defaults to PROVISIONED.
                    type: string
                  deletionProtectionEnabled:
                    description: Enables deletion protection for table. Defaults to
                      false.
                    type: boolean
                  globalSecondaryIndex:
                    description: Describe a GSI for the table; subject to the normal
                      limits on the number of GSIs, projected attributes, etc. See
                      below.
                    items:
                      properties:
                        hashKey:
                          description: Name of the hash key in the index; must be
                            defined as an attribute in the resource.
                          type: string
                        name:
                          description: Name of the index.
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        onDemandThroughput:
                          description: Sets the maximum number of read and write units
                            for the specified on-demand index. See below.
                          properties:
                            maxReadRequestUnits:
                              description: Maximum number of read request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                            maxWriteRequestUnits:
                              description: Maximum number of write request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                          type: object
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key; must be defined
                          type: string
                        readCapacity:
                          description: Number of read units for this index. Must be
                            set if billing_mode is set to PROVISIONED.
                          type: number
                        warmThroughput:
                          description: Sets the number of warm read and write units
                            for this index. See below.
                          properties:
                            readUnitsPerSecond:
                              description: Number of read operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 12000 (default).
                              type: number
                            writeUnitsPerSecond:
                              description: Number of write operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 4000 (default).
                              type: number
                          type: object
                        writeCapacity:
                          description: Number of write units for this index. Must
                            be set if billing_mode is set to PROVISIONED.
                          type: number
                      type: object
                    type: array
                  hashKey:
                    description: Attribute to use as the hash (partition) key. Must
                      also be defined as an attribute. See below.
                    type: string
                  importTable:
                    description: Import Amazon S3 data into a new table. See below.
                    properties:
                      inputCompressionType:
                        description: |-
                          Type of compression to be used on the input coming from the imported table.
                          Valid values are GZIP, ZSTD and NONE.
                        type: string
                      inputFormat:
                        description: |-
                          The format of the source data.
                          Valid values are CSV, DYNAMODB_JSON, and ION.
                        type: string
                      inputFormatOptions:
                        description: |-
                          Describe the format options for the data that was imported into the target table.
                          There is one value, csv.
                          See below.
                        properties:
                          csv:
                            description: 'This block contains the processing options
                              for the CSV file being imported:'
                            properties:
                              delimiter:
                                description: The delimiter used for separating items
                                  in the CSV file being imported.
                                type: string
                              headerList:
                                description: List of the headers used to specify a
                                  common header for all source CSV files being imported.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                        type: object
                      s3BucketSource:
                        description: |-
                          Values for the S3 bucket the source file is imported from.
                          See below.
                        properties:
                          bucket:
                            description: The S3 bucket that is being imported from.
                            type: string
                          bucketOwner:
                            description: The account number of the S3 bucket that
                              is being imported from.
                            type: string
                          keyPrefix:
                            description: The key prefix shared by all S3 Objects that
                              are being imported.
                            type: string
                        type: object
                    type: object
                  localSecondaryIndex:
                    description: Describe an LSI on the table; these can only be allocated
                      at creation so you cannot change this definition after you have
                      created the resource. See below.
                    items:
                      properties:
                        name:
                          description: Name of the index
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key.
                          type: string
                      type: object
                    type: array
                  onDemandThroughput:
                    description: Sets the maximum number of read and write units for
                      the specified on-demand table. See below.
                    properties:
                      maxReadRequestUnits:
                        description: Maximum number of read request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                      maxWriteRequestUnits:
                        description: Maximum number of write request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                    type: object
                  pointInTimeRecovery:
                    description: Enable point-in-time recovery options. See below.
                    properties:
                      enabled:
                        description: Whether to enable point-in-time recovery. It
                          can take 10 minutes to enable for new tables. If the point_in_time_recovery
                          block is not provided, this defaults to false.
                        type: boolean
                      recoveryPeriodInDays:
                        description: Number of preceding days for which continuous
                          backups are taken and maintained. Default is 35.
                        type: number
                    type: object
                  rangeKey:
                    description: Attribute to use as the range (sort) key. Must also
                      be defined as an attribute, see below.
                    type: string
                  readCapacity:
                    description: Number of read units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  replica:
                    description: Configuration block(s) with DynamoDB Global Tables
                      V2 (version 2019.11.21) replication configurations. See below.
                    items:
                      properties:
                        consistencyMode:
                          description: Whether this global table will be using STRONG
                            consistency mode or EVENTUAL consistency mode. Default
                            value is EVENTUAL.
                          type: string
                        deletionProtectionEnabled:
                          description: Whether deletion protection is enabled (true)
                            or disabled (false) on the replica. Default is false.
                          type: boolean
                        kmsKeyArn:
                          description: |-
                            ARN of the CMK that should be used for the AWS KMS encryption.
                            This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb.
                            Note: This attribute will not be populated with the ARN of default keys.
                            Note: Changing this value will recreate the replica.
                          type: string
                        pointInTimeRecovery:
                          description: Whether to enable Point In Time Recovery for
                            the replica. Default is false.
                          type: boolean
                        propagateTags:
                          description: |-
                            Whether to propagate the global table's tags to a replica.
                            Default is false.
                            Changes to tags only move in one direction: from global (source) to replica.
                            Tag drift on a replica will not trigger an update.
                            Tag changes on the global table are propagated to replicas.
                            Changing from true to false on a subsequent apply leaves replica tags as-is and no longer manages them.
                          type: boolean
                        regionName:
                          description: Region name of the replica.
                          type: string
                      type: object
                    type: array
                  restoreDateTime:
                    description: Time of the point-in-time recovery point to restore.
                    type: string
                  restoreSourceName:
                    description: Name of the table to restore. Must match the name
                      of an existing table.
                    type: string
                  restoreSourceTableArn:
                    description: ARN of the source table to restore. Must be supplied
                      for cross-region restores.
                    type: string
                  restoreToLatestTime:
                    description: If set, restores table to the most recent point-in-time
                      recovery point.
                    type: boolean
                  serverSideEncryption:
                    description: Encryption at rest options. AWS DynamoDB tables are
                      automatically encrypted at rest with an AWS-owned Customer Master
                      Key if this argument isn't specified. Must be supplied for cross-region
                      restores. See below.
                    properties:
                      enabled:
                        description: Whether or not to enable encryption at rest using
                          an AWS managed KMS customer master key (CMK). If enabled
                          is false then server-side encryption is set to AWS-owned
                          key (shown as DEFAULT in the AWS console). Potentially confusingly,
                          if enabled is true and no kms_key_arn is specified then
                          server-side encryption is set to the default KMS-managed
                          key (shown as KMS in the AWS console). The AWS KMS documentation
                          explains the difference between AWS-owned and KMS-managed
                          keys.
                        type: boolean
                      kmsKeyArn:
                        description: 'ARN of the CMK that should be used for the AWS
                          KMS encryption. This argument should only be used if the
                          key is different from the default KMS-managed DynamoDB key,
                          alias/aws/dynamodb. Note: This attribute will not be populated
                          with the ARN of default keys.'
                        type: string
                    type: object
                  streamEnabled:
                    description: Whether Streams are enabled.
                    type: boolean
                  streamViewType:
                    description: When an item in the table is modified, StreamViewType
                      determines what information is written to the table's stream.
                      Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
                    type: string
                  tableClass:
                    description: |-
                      Storage class of the table.
                      Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
                      Default value is STANDARD.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  ttl:
                    description: Configuration block for TTL. See below.
                    properties:
                      attributeName:
                        description: |-
                          Name of the table attribute to store the TTL timestamp in.
                          Required if enabled is true, must not be set otherwise.
                        type: string
                      enabled:
                        description: |-
                          Whether TTL is enabled.
                          Default value is false.
                        type: boolean
                    type: object
                  warmThroughput:
                    description: Sets the number of warm read and write units for
                      the specified table. See below.
                    properties:
                      readUnitsPerSecond:
                        description: Number of read operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 12000 (default).
                        type: number
                      writeUnitsPerSecond:
                        description: Number of write operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 4000 (default).
                        type: number
                    type: object
                  writeCapacity:
                    description: Number of write units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  attribute:
                    description: Set of nested attribute definitions. Only required
                      for hash_key and range_key attributes. See below.
                    items:
                      properties:
                        name:
                          description: Name of the attribute
                          type: string
                        type:
                          description: Attribute type. Valid values are S (string),
                            N (number), B (binary).
                          type: string
                      type: object
                    type: array
                  billingMode:
                    description: Controls how you are charged for read and write throughput
                      and how you manage capacity. The valid values are PROVISIONED
                      and PAY_PER_REQUEST. Defaults to PROVISIONED.
                    type: string
                  deletionProtectionEnabled:
                    description: Enables deletion protection for table. Defaults to
                      false.
                    type: boolean
                  globalSecondaryIndex:
                    description: Describe a GSI for the table; subject to the normal
                      limits on the number of GSIs, projected attributes, etc. See
                      below.
                    items:
                      properties:
                        hashKey:
                          description: Name of the hash key in the index; must be
                            defined as an attribute in the resource.
                          type: string
                        name:
                          description: Name of the index.
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        onDemandThroughput:
                          description: Sets the maximum number of read and write units
                            for the specified on-demand index. See below.
                          properties:
                            maxReadRequestUnits:
                              description: Maximum number of read request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                            maxWriteRequestUnits:
                              description: Maximum number of write request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                          type: object
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key; must be defined
                          type: string
                        readCapacity:
                          description: Number of read units for this index. Must be
                            set if billing_mode is set to PROVISIONED.
                          type: number
                        warmThroughput:
                          description: Sets the number of warm read and write units
                            for this index. See below.
                          properties:
                            readUnitsPerSecond:
                              description: Number of read operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 12000 (default).
                              type: number
                            writeUnitsPerSecond:
                              description: Number of write operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 4000 (default).
                              type: number
                          type: object
                        writeCapacity:
                          description: Number of write units for this index. Must
                            be set if billing_mode is set to PROVISIONED.
                          type: number
                      type: object
                    type: array
                  hashKey:
                    description: Attribute to use as the hash (partition) key. Must
                      also be defined as an attribute. See below.
                    type: string
                  importTable:
                    description: Import Amazon S3 data into a new table. See below.
                    properties:
                      inputCompressionType:
                        description: |-
                          Type of compression to be used on the input coming from the imported table.
                          Valid values are GZIP, ZSTD and NONE.
                        type: string
                      inputFormat:
                        description: |-
                          The format of the source data.
                          Valid values are CSV, DYNAMODB_JSON, and ION.
                        type: string
                      inputFormatOptions:
                        description: |-
                          Describe the format options for the data that was imported into the target table.
                          There is one value, csv.
                          See below.
                        properties:
                          csv:
                            description: 'This block contains the processing options
                              for the CSV file being imported:'
                            properties:
                              delimiter:
                                description: The delimiter used for separating items
                                  in the CSV file being imported.
                                type: string
                              headerList:
                                description: List of the headers used to specify a
                                  common header for all source CSV files being imported.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                        type: object
                      s3BucketSource:
                        description: |-
                          Values for the S3 bucket the source file is imported from.
                          See below.
                        properties:
                          bucket:
                            description: The S3 bucket that is being imported from.
                            type: string
                          bucketOwner:
                            description: The account number of the S3 bucket that
                              is being imported from.
                            type: string
                          keyPrefix:
                            description: The key prefix shared by all S3 Objects that
                              are being imported.
                            type: string
                        type: object
                    type: object
                  localSecondaryIndex:
                    description: Describe an LSI on the table; these can only be allocated
                      at creation so you cannot change this definition after you have
                      created the resource. See below.
                    items:
                      properties:
                        name:
                          description: Name of the index
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key.
                          type: string
                      type: object
                    type: array
                  onDemandThroughput:
                    description: Sets the maximum number of read and write units for
                      the specified on-demand table. See below.
                    properties:
                      maxReadRequestUnits:
                        description: Maximum number of read request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                      maxWriteRequestUnits:
                        description: Maximum number of write request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                    type: object
                  pointInTimeRecovery:
                    description: Enable point-in-time recovery options. See below.
                    properties:
                      enabled:
                        description: Whether to enable point-in-time recovery. It
                          can take 10 minutes to enable for new tables. If the point_in_time_recovery
                          block is not provided, this defaults to false.
                        type: boolean
                      recoveryPeriodInDays:
                        description: Number of preceding days for which continuous
                          backups are taken and maintained. Default is 35.
                        type: number
                    type: object
                  rangeKey:
                    description: Attribute to use as the range (sort) key. Must also
                      be defined as an attribute, see below.
                    type: string
                  readCapacity:
                    description: Number of read units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                  replica:
                    description: Configuration block(s) with DynamoDB Global Tables
                      V2 (version 2019.11.21) replication configurations. See below.
                    items:
                      properties:
                        consistencyMode:
                          description: Whether this global table will be using STRONG
                            consistency mode or EVENTUAL consistency mode. Default
                            value is EVENTUAL.
                          type: string
                        deletionProtectionEnabled:
                          description: Whether deletion protection is enabled (true)
                            or disabled (false) on the replica. Default is false.
                          type: boolean
                        kmsKeyArn:
                          description: |-
                            ARN of the CMK that should be used for the AWS KMS encryption.
                            This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb.
                            Note: This attribute will not be populated with the ARN of default keys.
                            Note: Changing this value will recreate the replica.
                          type: string
                        pointInTimeRecovery:
                          description: Whether to enable Point In Time Recovery for
                            the replica. Default is false.
                          type: boolean
                        propagateTags:
                          description: |-
                            Whether to propagate the global table's tags to a replica.
                            Default is false.
                            Changes to tags only move in one direction: from global (source) to replica.
                            Tag drift on a replica will not trigger an update.
                            Tag changes on the global table are propagated to replicas.
                            Changing from true to false on a subsequent apply leaves replica tags as-is and no longer manages them.
                          type: boolean
                        regionName:
                          description: Region name of the replica.
                          type: string
                      type: object
                    type: array
                  restoreDateTime:
                    description: Time of the point-in-time recovery point to restore.
                    type: string
                  restoreSourceName:
                    description: Name of the table to restore. Must match the name
                      of an existing table.
                    type: string
                  restoreSourceTableArn:
                    description: ARN of the source table to restore. Must be supplied
                      for cross-region restores.
                    type: string
                  restoreToLatestTime:
                    description: If set, restores table to the most recent point-in-time
                      recovery point.
                    type: boolean
                  serverSideEncryption:
                    description: Encryption at rest options. AWS DynamoDB tables are
                      automatically encrypted at rest with an AWS-owned Customer Master
                      Key if this argument isn't specified. Must be supplied for cross-region
                      restores. See below.
                    properties:
                      enabled:
                        description: Whether or not to enable encryption at rest using
                          an AWS managed KMS customer master key (CMK). If enabled
                          is false then server-side encryption is set to AWS-owned
                          key (shown as DEFAULT in the AWS console). Potentially confusingly,
                          if enabled is true and no kms_key_arn is specified then
                          server-side encryption is set to the default KMS-managed
                          key (shown as KMS in the AWS console). The AWS KMS documentation
                          explains the difference between AWS-owned and KMS-managed
                          keys.
                        type: boolean
                      kmsKeyArn:
                        description: 'ARN of the CMK that should be used for the AWS
                          KMS encryption. This argument should only be used if the
                          key is different from the default KMS-managed DynamoDB key,
                          alias/aws/dynamodb. Note: This attribute will not be populated
                          with the ARN of default keys.'
                        type: string
                    type: object
                  streamEnabled:
                    description: Whether Streams are enabled.
                    type: boolean
                  streamViewType:
                    description: When an item in the table is modified, StreamViewType
                      determines what information is written to the table's stream.
                      Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
                    type: string
                  tableClass:
                    description: |-
                      Storage class of the table.
                      Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
                      Default value is STANDARD.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  ttl:
                    description: Configuration block for TTL. See below.
                    properties:
                      attributeName:
                        description: |-
                          Name of the table attribute to store the TTL timestamp in.
                          Required if enabled is true, must not be set otherwise.
                        type: string
                      enabled:
                        description: |-
                          Whether TTL is enabled.
                          Default value is false.
                        type: boolean
                    type: object
                  warmThroughput:
                    description: Sets the number of warm read and write units for
                      the specified table. See below.
                    properties:
                      readUnitsPerSecond:
                        description: Number of read operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 12000 (default).
                        type: number
                      writeUnitsPerSecond:
                        description: Number of write operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 4000 (default).
                        type: number
                    type: object
                  writeCapacity:
                    description: Number of write units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TableStatus defines the observed state of Table.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the table
                    type: string
                  attribute:
                    description: Set of nested attribute definitions. Only required
                      for hash_key and range_key attributes. See below.
                    items:
                      properties:
                        name:
                          description: Name of the attribute
                          type: string
                        type:
                          description: Attribute type. Valid values are S (string),
                            N (number), B (binary).
                          type: string
                      type: object
                    type: array
                  billingMode:
                    description: Controls how you are charged for read and write throughput
                      and how you manage capacity. The valid values are PROVISIONED
                      and PAY_PER_REQUEST. Defaults to PROVISIONED.
                    type: string
                  deletionProtectionEnabled:
                    description: Enables deletion protection for table. Defaults to
                      false.
                    type: boolean
                  globalSecondaryIndex:
                    description: Describe a GSI for the table; subject to the normal
                      limits on the number of GSIs, projected attributes, etc. See
                      below.
                    items:
                      properties:
                        hashKey:
                          description: Name of the hash key in the index; must be
                            defined as an attribute in the resource.
                          type: string
                        name:
                          description: Name of the index.
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        onDemandThroughput:
                          description: Sets the maximum number of read and write units
                            for the specified on-demand index. See below.
                          properties:
                            maxReadRequestUnits:
                              description: Maximum number of read request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                            maxWriteRequestUnits:
                              description: Maximum number of write request units for
                                the specified table. To specify set the value greater
                                than or equal to 1. To remove set the value to -1.
                              type: number
                          type: object
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key; must be defined
                          type: string
                        readCapacity:
                          description: Number of read units for this index. Must be
                            set if billing_mode is set to PROVISIONED.
                          type: number
                        warmThroughput:
                          description: Sets the number of warm read and write units
                            for this index. See below.
                          properties:
                            readUnitsPerSecond:
                              description: Number of read operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 12000 (default).
                              type: number
                            writeUnitsPerSecond:
                              description: Number of write operations a table or index
                                can instantaneously support. For the base table, decreasing
                                this value will force a new resource. For a global
                                secondary index, this value can be increased or decreased
                                without recreation. Minimum value of 4000 (default).
                              type: number
                          type: object
                        writeCapacity:
                          description: Number of write units for this index. Must
                            be set if billing_mode is set to PROVISIONED.
                          type: number
                      type: object
                    type: array
                  hashKey:
                    description: Attribute to use as the hash (partition) key. Must
                      also be defined as an attribute. See below.
                    type: string
                  id:
                    description: Name of the table
                    type: string
                  importTable:
                    description: Import Amazon S3 data into a new table. See below.
                    properties:
                      inputCompressionType:
                        description: |-
                          Type of compression to be used on the input coming from the imported table.
                          Valid values are GZIP, ZSTD and NONE.
                        type: string
                      inputFormat:
                        description: |-
                          The format of the source data.
                          Valid values are CSV, DYNAMODB_JSON, and ION.
                        type: string
                      inputFormatOptions:
                        description: |-
                          Describe the format options for the data that was imported into the target table.
                          There is one value, csv.
                          See below.
                        properties:
                          csv:
                            description: 'This block contains the processing options
                              for the CSV file being imported:'
                            properties:
                              delimiter:
                                description: The delimiter used for separating items
                                  in the CSV file being imported.
                                type: string
                              headerList:
                                description: List of the headers used to specify a
                                  common header for all source CSV files being imported.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                        type: object
                      s3BucketSource:
                        description: |-
                          Values for the S3 bucket the source file is imported from.
                          See below.
                        properties:
                          bucket:
                            description: The S3 bucket that is being imported from.
                            type: string
                          bucketOwner:
                            description: The account number of the S3 bucket that
                              is being imported from.
                            type: string
                          keyPrefix:
                            description: The key prefix shared by all S3 Objects that
                              are being imported.
                            type: string
                        type: object
                    type: object
                  localSecondaryIndex:
                    description: Describe an LSI on the table; these can only be allocated
                      at creation so you cannot change this definition after you have
                      created the resource. See below.
                    items:
                      properties:
                        name:
                          description: Name of the index
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key.
                          type: string
                      type: object
                    type: array
                  onDemandThroughput:
                    description: Sets the maximum number of read and write units for
                      the specified on-demand table. See below.
                    properties:
                      maxReadRequestUnits:
                        description: Maximum number of read request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                      maxWriteRequestUnits:
                        description: Maximum number of write request units for the
                          specified table. To specify set the value greater than or
                          equal to 1. To remove set the value to -1.
                        type: number
                    type: object
                  pointInTimeRecovery:
                    description: Enable point-in-time recovery options. See below.
                    properties:
                      enabled:
                        description: Whether to enable point-in-time recovery. It
                          can take 10 minutes to enable for new tables. If the point_in_time_recovery
                          block is not provided, this defaults to false.
                        type: boolean
                      recoveryPeriodInDays:
                        description: Number of preceding days for which continuous
                          backups are taken and maintained. Default is 35.
                        type: number
                    type: object
                  rangeKey:
                    description: Attribute to use as the range (sort) key. Must also
                      be defined as an attribute, see below.
                    type: string
                  readCapacity:
                    description: Number of read units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  replica:
                    description: Configuration block(s) with DynamoDB Global Tables
                      V2 (version 2019.11.21) replication configurations. See below.
                    items:
                      properties:
                        arn:
                          description: ARN of the replica
                          type: string
                        consistencyMode:
                          description: Whether this global table will be using STRONG
                            consistency mode or EVENTUAL consistency mode. Default
                            value is EVENTUAL.
                          type: string
                        deletionProtectionEnabled:
                          description: Whether deletion protection is enabled (true)
                            or disabled (false) on the replica. Default is false.
                          type: boolean
                        kmsKeyArn:
                          description: |-
                            ARN of the CMK that should be used for the AWS KMS encryption.
                            This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb.
                            Note: This attribute will not be populated with the ARN of default keys.
                            Note: Changing this value will recreate the replica.
                          type: string
                        pointInTimeRecovery:
                          description: Whether to enable Point In Time Recovery for
                            the replica. Default is false.
                          type: boolean
                        propagateTags:
                          description: |-
                            Whether to propagate the global table's tags to a replica.
                            Default is false.
                            Changes to tags only move in one direction: from global (source) to replica.
                            Tag drift on a replica will not trigger an update.
                            Tag changes on the global table are propagated to replicas.
                            Changing from true to false on a subsequent apply leaves replica tags as-is and no longer manages them.
                          type: boolean
                        regionName:
                          description: Region name of the replica.
                          type: string
                        streamArn:
                          description: ARN of the Table Stream. Only available when
                            stream_enabled = true
                          type: string
                        streamLabel:
                          description: Timestamp, in ISO 8601 format, for this stream.
                            Note that this timestamp is not a unique identifier for
                            the stream on its own. However, the combination of AWS
                            customer ID, table name and this field is guaranteed to
                            be unique. It can be used for creating CloudWatch Alarms.
                            Only available when stream_enabled = true.
                          type: string
                      type: object
                    type: array
                  restoreDateTime:
                    description: Time of the point-in-time recovery point to restore.
                    type: string
                  restoreSourceName:
                    description: Name of the table to restore. Must match the name
                      of an existing table.
                    type: string
                  restoreSourceTableArn:
                    description: ARN of the source table to restore. Must be supplied
                      for cross-region restores.
                    type: string
                  restoreToLatestTime:
                    description: If set, restores table to the most recent point-in-time
                      recovery point.
                    type: boolean
                  serverSideEncryption:
                    description: Encryption at rest options. AWS DynamoDB tables are
                      automatically encrypted at rest with an AWS-owned Customer Master
                      Key if this argument isn't specified. Must be supplied for cross-region
                      restores. See below.
                    properties:
                      enabled:
                        description: Whether or not to enable encryption at rest using
                          an AWS managed KMS customer master key (CMK). If enabled
                          is false then server-side encryption is set to AWS-owned
                          key (shown as DEFAULT in the AWS console). Potentially confusingly,
                          if enabled is true and no kms_key_arn is specified then
                          server-side encryption is set to the default KMS-managed
                          key (shown as KMS in the AWS console). The AWS KMS documentation
                          explains the difference between AWS-owned and KMS-managed
                          keys.
                        type: boolean
                      kmsKeyArn:
                        description: 'ARN of the CMK that should be used for the AWS
                          KMS encryption. This argument should only be used if the
                          key is different from the default KMS-managed DynamoDB key,
                          alias/aws/dynamodb. Note: This attribute will not be populated
                          with the ARN of default keys.'
                        type: string
                    type: object
                  streamArn:
                    description: ARN of the Table Stream. Only available when stream_enabled
                      = true
                    type: string
                  streamEnabled:
                    description: Whether Streams are enabled.
                    type: boolean
                  streamLabel:
                    description: Timestamp, in ISO 8601 format, for this stream. Note
                      that this timestamp is not a unique identifier for the stream
                      on its own. However, the combination of AWS customer ID, table
                      name and this field is guaranteed to be unique. It can be used
                      for creating CloudWatch Alarms. Only available when stream_enabled
                      = true.
                    type: string
                  streamViewType:
                    description: When an item in the table is modified, StreamViewType
                      determines what information is written to the table's stream.
                      Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
                    type: string
                  tableClass:
                    description: |-
                      Storage class of the table.
                      Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
                      Default value is STANDARD.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  ttl:
                    description: Configuration block for TTL. See below.
                    properties:
                      attributeName:
                        description: |-
                          Name of the table attribute to store the TTL timestamp in.
                          Required if enabled is true, must not be set otherwise.
                        type: string
                      enabled:
                        description: |-
                          Whether TTL is enabled.
                          Default value is false.
                        type: boolean
                    type: object
                  warmThroughput:
                    description: Sets the number of warm read and write units for
                      the specified table. See below.
                    properties:
                      readUnitsPerSecond:
                        description: Number of read operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 12000 (default).
                        type: number
                      writeUnitsPerSecond:
                        description: Number of write operations a table or index can
                          instantaneously support. For the base table, decreasing
                          this value will force a new resource. For a global secondary
                          index, this value can be increased or decreased without
                          recreation. Minimum value of 4000 (default).
                        type: number
                    type: object
                  writeCapacity:
                    description: Number of write units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

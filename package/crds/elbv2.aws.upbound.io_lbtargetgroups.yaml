---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: lbtargetgroups.elbv2.aws.upbound.io
spec:
  group: elbv2.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: LBTargetGroup
    listKind: LBTargetGroupList
    plural: lbtargetgroups
    singular: lbtargetgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: LBTargetGroup is the Schema for the LBTargetGroups API. Provides
          a Target Group resource for use with Load Balancers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LBTargetGroupSpec defines the desired state of LBTargetGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  connectionTermination:
                    description: Whether to terminate connections at the end of the
                      deregistration timeout on Network Load Balancers. See doc for
                      more information. Default is false.
                    type: boolean
                  deregistrationDelay:
                    description: Amount time for Elastic Load Balancing to wait before
                      changing the state of a deregistering target from draining to
                      unused. The range is 0-3600 seconds. The default value is 300
                      seconds.
                    type: string
                  healthCheck:
                    description: Health Check configuration block. Detailed below.
                    items:
                      properties:
                        enabled:
                          description: Whether health checks are enabled. Defaults
                            to true.
                          type: boolean
                        healthyThreshold:
                          description: Number of consecutive health check successes
                            required before considering a target healthy. The range
                            is 2-10. Defaults to 3.
                          type: number
                        interval:
                          description: Approximate amount of time, in seconds, between
                            health checks of an individual target. The range is 5-300.
                            For lambda target groups, it needs to be greater than
                            the timeout of the underlying lambda. Defaults to 30.
                          type: number
                        matcher:
                          description: 299" or "0-99"). Required for HTTP/HTTPS/GRPC
                            ALB. Only applies to Application Load Balancers (i.e.,
                            HTTP/HTTPS/GRPC) not Network Load Balancers (i.e., TCP).
                          type: string
                        path:
                          description: (May be required) Destination for the health
                            check request. Required for HTTP/HTTPS ALB and HTTP NLB.
                            Only applies to HTTP/HTTPS.
                          type: string
                        port:
                          description: The port the load balancer uses when performing
                            health checks on targets. Default is traffic-port.
                          type: string
                        protocol:
                          description: Protocol the load balancer uses when performing
                            health checks on targets. Must be either TCP, HTTP, or
                            HTTPS. The TCP protocol is not supported for health checks
                            if the protocol of the target group is HTTP or HTTPS.
                            Defaults to HTTP.
                          type: string
                        timeout:
                          description: Amount of time, in seconds, during which no
                            response from a target means a failed health check. The
                            range is 2â€“120 seconds. For target groups with a protocol
                            of HTTP, the default is 6 seconds. For target groups with
                            a protocol of TCP, TLS or HTTPS, the default is 10 seconds.
                            For target groups with a protocol of GENEVE, the default
                            is 5 seconds. If the target type is lambda, the default
                            is 30 seconds.
                          type: number
                        unhealthyThreshold:
                          description: Number of consecutive health check failures
                            required before considering a target unhealthy. The range
                            is 2-10. Defaults to 3.
                          type: number
                      type: object
                    type: array
                  ipAddressType:
                    description: The type of IP addresses used by the target group,
                      only supported when target type is set to ip. Possible values
                      are ipv4 or ipv6.
                    type: string
                  lambdaMultiValueHeadersEnabled:
                    description: Whether the request and response headers exchanged
                      between the load balancer and the Lambda function include arrays
                      of values or strings. Only applies when target_type is lambda.
                      Default is false.
                    type: boolean
                  loadBalancingAlgorithmType:
                    description: Determines how the load balancer selects targets
                      when routing requests. Only applicable for Application Load
                      Balancer Target Groups. The value is round_robin or least_outstanding_requests.
                      The default is round_robin.
                    type: string
                  name:
                    description: Name of the target group.
                    type: string
                  port:
                    description: (May be required, Forces new resource) Port on which
                      targets receive traffic, unless overridden when registering
                      a specific target. Required when target_type is instance, ip
                      or alb. Does not apply when target_type is lambda.
                    type: number
                  preserveClientIp:
                    description: Whether client IP preservation is enabled. See doc
                      for more information.
                    type: string
                  protocol:
                    description: (May be required, Forces new resource) Protocol to
                      use for routing traffic to the targets. Should be one of GENEVE,
                      HTTP, HTTPS, TCP, TCP_UDP, TLS, or UDP. Required when target_type
                      is instance, ip or alb. Does not apply when target_type is lambda.
                    type: string
                  protocolVersion:
                    description: Only applicable when protocol is HTTP or HTTPS. The
                      protocol version. Specify GRPC to send requests to targets using
                      gRPC. Specify HTTP2 to send requests to targets using HTTP/2.
                      The default is HTTP1, which sends requests to targets using
                      HTTP/1.1
                    type: string
                  proxyProtocolV2:
                    description: Whether to enable support for proxy protocol v2 on
                      Network Load Balancers. See doc for more information. Default
                      is false.
                    type: boolean
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  slowStart:
                    description: Amount time for targets to warm up before the load
                      balancer sends them a full share of requests. The range is 30-900
                      seconds or 0 to disable. The default value is 0 seconds.
                    type: number
                  stickiness:
                    description: Stickiness configuration block. Detailed below.
                    items:
                      properties:
                        cookieDuration:
                          description: Only used when the type is lb_cookie. The time
                            period, in seconds, during which requests from a client
                            should be routed to the same target. After this time period
                            expires, the load balancer-generated cookie is considered
                            stale. The range is 1 second to 1 week (604800 seconds).
                            The default value is 1 day (86400 seconds).
                          type: number
                        cookieName:
                          description: Name of the application based cookie. AWSALB,
                            AWSALBAPP, and AWSALBTG prefixes are reserved and cannot
                            be used. Only needed when type is app_cookie.
                          type: string
                        enabled:
                          description: Whether health checks are enabled. Defaults
                            to true.
                          type: boolean
                        type:
                          description: The type of sticky sessions. The only current
                            possible values are lb_cookie, app_cookie for ALBs, source_ip
                            for NLBs, and source_ip_dest_ip, source_ip_dest_ip_proto
                            for GWLBs.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  targetFailover:
                    description: Target failover block. Only applicable for Gateway
                      Load Balancer target groups. See target_failover for more information.
                    items:
                      properties:
                        onDeregistration:
                          description: 'Indicates how the GWLB handles existing flows
                            when a target is deregistered. Possible values are rebalance
                            and no_rebalance. Must match the attribute value set for
                            on_unhealthy. Default: no_rebalance.'
                          type: string
                        onUnhealthy:
                          description: 'Indicates how the GWLB handles existing flows
                            when a target is unhealthy. Possible values are rebalance
                            and no_rebalance. Must match the attribute value set for
                            on_deregistration. Default: no_rebalance.'
                          type: string
                      required:
                      - onDeregistration
                      - onUnhealthy
                      type: object
                    type: array
                  targetType:
                    description: (May be required, Forces new resource) Type of target
                      that you must specify when registering targets with this target
                      group. See doc for supported values. The default is instance.
                    type: string
                  vpcId:
                    description: Identifier of the VPC in which to create the target
                      group. Required when target_type is instance, ip or alb. Does
                      not apply when target_type is lambda.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in ec2 to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in ec2 to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: LBTargetGroupStatus defines the observed state of LBTargetGroup.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the Target Group (matches id).
                    type: string
                  arnSuffix:
                    description: ARN suffix for use with CloudWatch Metrics.
                    type: string
                  id:
                    description: ARN of the Target Group (matches arn).
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: jobqueues.batch.aws.upbound.io
spec:
  group: batch.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: JobQueue
    listKind: JobQueueList
    plural: jobqueues
    singular: jobqueue
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: JobQueue is the Schema for the JobQueues API. Provides a Batch
          Job Queue resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: JobQueueSpec defines the desired state of JobQueue
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  computeEnvironmentOrder:
                    description: The set of compute environments mapped to a job queue
                      and their order relative to each other. The job scheduler uses
                      this parameter to determine which compute environment runs a
                      specific job. Compute environments must be in the VALID state
                      before you can associate them with a job queue. You can associate
                      up to three compute environments with a job queue.
                    items:
                      properties:
                        computeEnvironment:
                          description: The Amazon Resource Name (ARN) of the compute
                            environment.
                          type: string
                        computeEnvironmentRef:
                          description: Reference to a ComputeEnvironment in batch
                            to populate computeEnvironment.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        computeEnvironmentSelector:
                          description: Selector for a ComputeEnvironment in batch
                            to populate computeEnvironment.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        order:
                          description: The order of the compute environment. Compute
                            environments are tried in ascending order. For example,
                            if two compute environments are associated with a job
                            queue, the compute environment with a lower order integer
                            value is tried for job placement first.
                          type: number
                      type: object
                    type: array
                  computeEnvironments:
                    description: (Deprecated)  This parameter is deprecated, please
                      use compute_environment_order instead. List of compute environment
                      ARNs mapped to a job queue. The position of the compute environments
                      in the list will dictate the order. When importing a AWS Batch
                      Job Queue, the parameter compute_environments will always be
                      used over compute_environment_order. Please adjust your HCL
                      accordingly.
                    items:
                      type: string
                    type: array
                  jobStateTimeLimitAction:
                    description: The set of job state time limit actions mapped to
                      a job queue. Specifies an action that AWS Batch will take after
                      the job has remained at the head of the queue in the specified
                      state for longer than the specified time.
                    items:
                      properties:
                        action:
                          description: The action to take when a job is at the head
                            of the job queue in the specified state for the specified
                            period of time. Valid values include "CANCEL"
                          type: string
                        maxTimeSeconds:
                          description: The approximate amount of time, in seconds,
                            that must pass with the job in the specified state before
                            the action is taken. Valid values include integers between
                            600 & 86400
                          type: number
                        reason:
                          description: The reason to log for the action being taken.
                          type: string
                        state:
                          description: The state of the job needed to trigger the
                            action. Valid values include "RUNNABLE".
                          type: string
                      type: object
                    type: array
                  priority:
                    description: |-
                      The priority of the job queue. Job queues with a higher priority
                      are evaluated first when associated with the same compute environment.
                    type: number
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  schedulingPolicyArn:
                    description: The ARN of the fair share scheduling policy. If this
                      parameter is specified, the job queue uses a fair share scheduling
                      policy. If this parameter isn't specified, the job queue uses
                      a first in, first out (FIFO) scheduling policy. After a job
                      queue is created, you can replace but can't remove the fair
                      share scheduling policy.
                    type: string
                  schedulingPolicyArnRef:
                    description: Reference to a SchedulingPolicy in batch to populate
                      schedulingPolicyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  schedulingPolicyArnSelector:
                    description: Selector for a SchedulingPolicy in batch to populate
                      schedulingPolicyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  state:
                    description: 'The state of the job queue. Must be one of: ENABLED
                      or DISABLED'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  computeEnvironmentOrder:
                    description: The set of compute environments mapped to a job queue
                      and their order relative to each other. The job scheduler uses
                      this parameter to determine which compute environment runs a
                      specific job. Compute environments must be in the VALID state
                      before you can associate them with a job queue. You can associate
                      up to three compute environments with a job queue.
                    items:
                      properties:
                        computeEnvironment:
                          description: The Amazon Resource Name (ARN) of the compute
                            environment.
                          type: string
                        computeEnvironmentRef:
                          description: Reference to a ComputeEnvironment in batch
                            to populate computeEnvironment.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        computeEnvironmentSelector:
                          description: Selector for a ComputeEnvironment in batch
                            to populate computeEnvironment.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        order:
                          description: The order of the compute environment. Compute
                            environments are tried in ascending order. For example,
                            if two compute environments are associated with a job
                            queue, the compute environment with a lower order integer
                            value is tried for job placement first.
                          type: number
                      type: object
                    type: array
                  computeEnvironments:
                    description: (Deprecated)  This parameter is deprecated, please
                      use compute_environment_order instead. List of compute environment
                      ARNs mapped to a job queue. The position of the compute environments
                      in the list will dictate the order. When importing a AWS Batch
                      Job Queue, the parameter compute_environments will always be
                      used over compute_environment_order. Please adjust your HCL
                      accordingly.
                    items:
                      type: string
                    type: array
                  jobStateTimeLimitAction:
                    description: The set of job state time limit actions mapped to
                      a job queue. Specifies an action that AWS Batch will take after
                      the job has remained at the head of the queue in the specified
                      state for longer than the specified time.
                    items:
                      properties:
                        action:
                          description: The action to take when a job is at the head
                            of the job queue in the specified state for the specified
                            period of time. Valid values include "CANCEL"
                          type: string
                        maxTimeSeconds:
                          description: The approximate amount of time, in seconds,
                            that must pass with the job in the specified state before
                            the action is taken. Valid values include integers between
                            600 & 86400
                          type: number
                        reason:
                          description: The reason to log for the action being taken.
                          type: string
                        state:
                          description: The state of the job needed to trigger the
                            action. Valid values include "RUNNABLE".
                          type: string
                      type: object
                    type: array
                  priority:
                    description: |-
                      The priority of the job queue. Job queues with a higher priority
                      are evaluated first when associated with the same compute environment.
                    type: number
                  schedulingPolicyArn:
                    description: The ARN of the fair share scheduling policy. If this
                      parameter is specified, the job queue uses a fair share scheduling
                      policy. If this parameter isn't specified, the job queue uses
                      a first in, first out (FIFO) scheduling policy. After a job
                      queue is created, you can replace but can't remove the fair
                      share scheduling policy.
                    type: string
                  schedulingPolicyArnRef:
                    description: Reference to a SchedulingPolicy in batch to populate
                      schedulingPolicyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  schedulingPolicyArnSelector:
                    description: Selector for a SchedulingPolicy in batch to populate
                      schedulingPolicyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  state:
                    description: 'The state of the job queue. Must be one of: ENABLED
                      or DISABLED'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.priority is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.priority)
                || (has(self.initProvider) && has(self.initProvider.priority))'
            - message: spec.forProvider.state is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.state)
                || (has(self.initProvider) && has(self.initProvider.state))'
          status:
            description: JobQueueStatus defines the observed state of JobQueue.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The Amazon Resource Name of the job queue.
                    type: string
                  computeEnvironmentOrder:
                    description: The set of compute environments mapped to a job queue
                      and their order relative to each other. The job scheduler uses
                      this parameter to determine which compute environment runs a
                      specific job. Compute environments must be in the VALID state
                      before you can associate them with a job queue. You can associate
                      up to three compute environments with a job queue.
                    items:
                      properties:
                        computeEnvironment:
                          description: The Amazon Resource Name (ARN) of the compute
                            environment.
                          type: string
                        order:
                          description: The order of the compute environment. Compute
                            environments are tried in ascending order. For example,
                            if two compute environments are associated with a job
                            queue, the compute environment with a lower order integer
                            value is tried for job placement first.
                          type: number
                      type: object
                    type: array
                  computeEnvironments:
                    description: (Deprecated)  This parameter is deprecated, please
                      use compute_environment_order instead. List of compute environment
                      ARNs mapped to a job queue. The position of the compute environments
                      in the list will dictate the order. When importing a AWS Batch
                      Job Queue, the parameter compute_environments will always be
                      used over compute_environment_order. Please adjust your HCL
                      accordingly.
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  jobStateTimeLimitAction:
                    description: The set of job state time limit actions mapped to
                      a job queue. Specifies an action that AWS Batch will take after
                      the job has remained at the head of the queue in the specified
                      state for longer than the specified time.
                    items:
                      properties:
                        action:
                          description: The action to take when a job is at the head
                            of the job queue in the specified state for the specified
                            period of time. Valid values include "CANCEL"
                          type: string
                        maxTimeSeconds:
                          description: The approximate amount of time, in seconds,
                            that must pass with the job in the specified state before
                            the action is taken. Valid values include integers between
                            600 & 86400
                          type: number
                        reason:
                          description: The reason to log for the action being taken.
                          type: string
                        state:
                          description: The state of the job needed to trigger the
                            action. Valid values include "RUNNABLE".
                          type: string
                      type: object
                    type: array
                  priority:
                    description: |-
                      The priority of the job queue. Job queues with a higher priority
                      are evaluated first when associated with the same compute environment.
                    type: number
                  schedulingPolicyArn:
                    description: The ARN of the fair share scheduling policy. If this
                      parameter is specified, the job queue uses a fair share scheduling
                      policy. If this parameter isn't specified, the job queue uses
                      a first in, first out (FIFO) scheduling policy. After a job
                      queue is created, you can replace but can't remove the fair
                      share scheduling policy.
                    type: string
                  state:
                    description: 'The state of the job queue. Must be one of: ENABLED
                      or DISABLED'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

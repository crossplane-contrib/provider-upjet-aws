---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: agents.bedrockagent.aws.upbound.io
spec:
  group: bedrockagent.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the Agents API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  agentName:
                    description: Name of the agent.
                    type: string
                  agentResourceRoleArn:
                    description: ARN of the IAM role with permissions to invoke API
                      operations on the agent.
                    type: string
                  agentResourceRoleArnRef:
                    description: Reference to a Role in iam to populate agentResourceRoleArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  agentResourceRoleArnSelector:
                    description: Selector for a Role in iam to populate agentResourceRoleArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  customerEncryptionKeyArn:
                    description: ARN of the AWS KMS key that encrypts the agent.
                    type: string
                  description:
                    description: Description of the agent.
                    type: string
                  foundationModel:
                    description: Foundation model used for orchestration by the agent.
                    type: string
                  idleSessionTtlInSeconds:
                    description: Number of seconds for which Amazon Bedrock keeps
                      information about a user's conversation with the agent. A user
                      interaction remains active for the amount of time specified.
                      If no conversation occurs during this time, the session expires
                      and Amazon Bedrock deletes any data provided before the timeout.
                    type: number
                  instruction:
                    description: Instructions that tell the agent what it should do
                      and how it should interact with users.
                    type: string
                  prepareAgent:
                    description: Whether to prepare the agent after creation or modification.
                      Defaults to true.
                    type: boolean
                  promptOverrideConfiguration:
                    description: Configurations to override prompt templates in different
                      parts of an agent sequence. For more information, see Advanced
                      prompts. See prompt_override_configuration block for details.
                    items:
                      properties:
                        overrideLambda:
                          description: ARN of the Lambda function to use when parsing
                            the raw foundation model output in parts of the agent
                            sequence. If you specify this field, at least one of the
                            prompt_configurations block must contain a parser_mode
                            value that is set to OVERRIDDEN.
                          type: string
                        promptConfigurations:
                          description: Configurations to override a prompt template
                            in one part of an agent sequence. See prompt_configurations
                            block for details.
                          items:
                            properties:
                              basePromptTemplate:
                                description: prompt template with which to replace
                                  the default prompt template. You can use placeholder
                                  variables in the base prompt template to customize
                                  the prompt. For more information, see Prompt template
                                  placeholder variables.
                                type: string
                              inferenceConfiguration:
                                description: Inference parameters to use when the
                                  agent invokes a foundation model in the part of
                                  the agent sequence defined by the prompt_type. For
                                  more information, see Inference parameters for foundation
                                  models. See inference_configuration block for details.
                                items:
                                  properties:
                                    maxLength:
                                      description: Maximum number of tokens to allow
                                        in the generated response.
                                      type: number
                                    stopSequences:
                                      description: List of stop sequences. A stop
                                        sequence is a sequence of characters that
                                        causes the model to stop generating the response.
                                      items:
                                        type: string
                                      type: array
                                    temperature:
                                      description: Likelihood of the model selecting
                                        higher-probability options while generating
                                        a response. A lower value makes the model
                                        more likely to choose higher-probability options,
                                        while a higher value makes the model more
                                        likely to choose lower-probability options.
                                      type: number
                                    topK:
                                      description: Number of top most-likely candidates,
                                        between 0 and 500, from which the model chooses
                                        the next token in the sequence.
                                      type: number
                                    topP:
                                      description: Top percentage of the probability
                                        distribution of next tokens, between 0 and
                                        1 (denoting 0% and 100%), from which the model
                                        chooses the next token in the sequence.
                                      type: number
                                  type: object
                                type: array
                              parserMode:
                                description: 'Whether to override the default parser
                                  Lambda function when parsing the raw foundation
                                  model output in the part of the agent sequence defined
                                  by the prompt_type. If you set the argument as OVERRIDDEN,
                                  the override_lambda argument in the prompt_override_configuration
                                  block must be specified with the ARN of a Lambda
                                  function. Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptCreationMode:
                                description: 'Whether to override the default prompt
                                  template for this prompt_type. Set this argument
                                  to OVERRIDDEN to use the prompt that you provide
                                  in the base_prompt_template. If you leave it as
                                  DEFAULT, the agent uses a default prompt template.
                                  Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptState:
                                description: 'Whether to allow the agent to carry
                                  out the step specified in the prompt_type. If you
                                  set this argument to DISABLED, the agent skips that
                                  step. Valid Values: ENABLED, DISABLED.'
                                type: string
                              promptType:
                                description: 'Step in the agent sequence that this
                                  prompt configuration applies to. Valid values: PRE_PROCESSING,
                                  ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  agentName:
                    description: Name of the agent.
                    type: string
                  agentResourceRoleArn:
                    description: ARN of the IAM role with permissions to invoke API
                      operations on the agent.
                    type: string
                  agentResourceRoleArnRef:
                    description: Reference to a Role in iam to populate agentResourceRoleArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  agentResourceRoleArnSelector:
                    description: Selector for a Role in iam to populate agentResourceRoleArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  customerEncryptionKeyArn:
                    description: ARN of the AWS KMS key that encrypts the agent.
                    type: string
                  description:
                    description: Description of the agent.
                    type: string
                  foundationModel:
                    description: Foundation model used for orchestration by the agent.
                    type: string
                  idleSessionTtlInSeconds:
                    description: Number of seconds for which Amazon Bedrock keeps
                      information about a user's conversation with the agent. A user
                      interaction remains active for the amount of time specified.
                      If no conversation occurs during this time, the session expires
                      and Amazon Bedrock deletes any data provided before the timeout.
                    type: number
                  instruction:
                    description: Instructions that tell the agent what it should do
                      and how it should interact with users.
                    type: string
                  prepareAgent:
                    description: Whether to prepare the agent after creation or modification.
                      Defaults to true.
                    type: boolean
                  promptOverrideConfiguration:
                    description: Configurations to override prompt templates in different
                      parts of an agent sequence. For more information, see Advanced
                      prompts. See prompt_override_configuration block for details.
                    items:
                      properties:
                        overrideLambda:
                          description: ARN of the Lambda function to use when parsing
                            the raw foundation model output in parts of the agent
                            sequence. If you specify this field, at least one of the
                            prompt_configurations block must contain a parser_mode
                            value that is set to OVERRIDDEN.
                          type: string
                        promptConfigurations:
                          description: Configurations to override a prompt template
                            in one part of an agent sequence. See prompt_configurations
                            block for details.
                          items:
                            properties:
                              basePromptTemplate:
                                description: prompt template with which to replace
                                  the default prompt template. You can use placeholder
                                  variables in the base prompt template to customize
                                  the prompt. For more information, see Prompt template
                                  placeholder variables.
                                type: string
                              inferenceConfiguration:
                                description: Inference parameters to use when the
                                  agent invokes a foundation model in the part of
                                  the agent sequence defined by the prompt_type. For
                                  more information, see Inference parameters for foundation
                                  models. See inference_configuration block for details.
                                items:
                                  properties:
                                    maxLength:
                                      description: Maximum number of tokens to allow
                                        in the generated response.
                                      type: number
                                    stopSequences:
                                      description: List of stop sequences. A stop
                                        sequence is a sequence of characters that
                                        causes the model to stop generating the response.
                                      items:
                                        type: string
                                      type: array
                                    temperature:
                                      description: Likelihood of the model selecting
                                        higher-probability options while generating
                                        a response. A lower value makes the model
                                        more likely to choose higher-probability options,
                                        while a higher value makes the model more
                                        likely to choose lower-probability options.
                                      type: number
                                    topK:
                                      description: Number of top most-likely candidates,
                                        between 0 and 500, from which the model chooses
                                        the next token in the sequence.
                                      type: number
                                    topP:
                                      description: Top percentage of the probability
                                        distribution of next tokens, between 0 and
                                        1 (denoting 0% and 100%), from which the model
                                        chooses the next token in the sequence.
                                      type: number
                                  type: object
                                type: array
                              parserMode:
                                description: 'Whether to override the default parser
                                  Lambda function when parsing the raw foundation
                                  model output in the part of the agent sequence defined
                                  by the prompt_type. If you set the argument as OVERRIDDEN,
                                  the override_lambda argument in the prompt_override_configuration
                                  block must be specified with the ARN of a Lambda
                                  function. Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptCreationMode:
                                description: 'Whether to override the default prompt
                                  template for this prompt_type. Set this argument
                                  to OVERRIDDEN to use the prompt that you provide
                                  in the base_prompt_template. If you leave it as
                                  DEFAULT, the agent uses a default prompt template.
                                  Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptState:
                                description: 'Whether to allow the agent to carry
                                  out the step specified in the prompt_type. If you
                                  set this argument to DISABLED, the agent skips that
                                  step. Valid Values: ENABLED, DISABLED.'
                                type: string
                              promptType:
                                description: 'Step in the agent sequence that this
                                  prompt configuration applies to. Valid values: PRE_PROCESSING,
                                  ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.agentName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.agentName)
                || (has(self.initProvider) && has(self.initProvider.agentName))'
            - message: spec.forProvider.foundationModel is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.foundationModel)
                || (has(self.initProvider) && has(self.initProvider.foundationModel))'
          status:
            description: AgentStatus defines the observed state of Agent.
            properties:
              atProvider:
                properties:
                  agentArn:
                    description: ARN of the agent.
                    type: string
                  agentId:
                    description: Unique identifier of the agent.
                    type: string
                  agentName:
                    description: Name of the agent.
                    type: string
                  agentResourceRoleArn:
                    description: ARN of the IAM role with permissions to invoke API
                      operations on the agent.
                    type: string
                  agentVersion:
                    description: Version of the agent.
                    type: string
                  customerEncryptionKeyArn:
                    description: ARN of the AWS KMS key that encrypts the agent.
                    type: string
                  description:
                    description: Description of the agent.
                    type: string
                  foundationModel:
                    description: Foundation model used for orchestration by the agent.
                    type: string
                  id:
                    description: Unique identifier of the agent.
                    type: string
                  idleSessionTtlInSeconds:
                    description: Number of seconds for which Amazon Bedrock keeps
                      information about a user's conversation with the agent. A user
                      interaction remains active for the amount of time specified.
                      If no conversation occurs during this time, the session expires
                      and Amazon Bedrock deletes any data provided before the timeout.
                    type: number
                  instruction:
                    description: Instructions that tell the agent what it should do
                      and how it should interact with users.
                    type: string
                  prepareAgent:
                    description: Whether to prepare the agent after creation or modification.
                      Defaults to true.
                    type: boolean
                  promptOverrideConfiguration:
                    description: Configurations to override prompt templates in different
                      parts of an agent sequence. For more information, see Advanced
                      prompts. See prompt_override_configuration block for details.
                    items:
                      properties:
                        overrideLambda:
                          description: ARN of the Lambda function to use when parsing
                            the raw foundation model output in parts of the agent
                            sequence. If you specify this field, at least one of the
                            prompt_configurations block must contain a parser_mode
                            value that is set to OVERRIDDEN.
                          type: string
                        promptConfigurations:
                          description: Configurations to override a prompt template
                            in one part of an agent sequence. See prompt_configurations
                            block for details.
                          items:
                            properties:
                              basePromptTemplate:
                                description: prompt template with which to replace
                                  the default prompt template. You can use placeholder
                                  variables in the base prompt template to customize
                                  the prompt. For more information, see Prompt template
                                  placeholder variables.
                                type: string
                              inferenceConfiguration:
                                description: Inference parameters to use when the
                                  agent invokes a foundation model in the part of
                                  the agent sequence defined by the prompt_type. For
                                  more information, see Inference parameters for foundation
                                  models. See inference_configuration block for details.
                                items:
                                  properties:
                                    maxLength:
                                      description: Maximum number of tokens to allow
                                        in the generated response.
                                      type: number
                                    stopSequences:
                                      description: List of stop sequences. A stop
                                        sequence is a sequence of characters that
                                        causes the model to stop generating the response.
                                      items:
                                        type: string
                                      type: array
                                    temperature:
                                      description: Likelihood of the model selecting
                                        higher-probability options while generating
                                        a response. A lower value makes the model
                                        more likely to choose higher-probability options,
                                        while a higher value makes the model more
                                        likely to choose lower-probability options.
                                      type: number
                                    topK:
                                      description: Number of top most-likely candidates,
                                        between 0 and 500, from which the model chooses
                                        the next token in the sequence.
                                      type: number
                                    topP:
                                      description: Top percentage of the probability
                                        distribution of next tokens, between 0 and
                                        1 (denoting 0% and 100%), from which the model
                                        chooses the next token in the sequence.
                                      type: number
                                  type: object
                                type: array
                              parserMode:
                                description: 'Whether to override the default parser
                                  Lambda function when parsing the raw foundation
                                  model output in the part of the agent sequence defined
                                  by the prompt_type. If you set the argument as OVERRIDDEN,
                                  the override_lambda argument in the prompt_override_configuration
                                  block must be specified with the ARN of a Lambda
                                  function. Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptCreationMode:
                                description: 'Whether to override the default prompt
                                  template for this prompt_type. Set this argument
                                  to OVERRIDDEN to use the prompt that you provide
                                  in the base_prompt_template. If you leave it as
                                  DEFAULT, the agent uses a default prompt template.
                                  Valid values: DEFAULT, OVERRIDDEN.'
                                type: string
                              promptState:
                                description: 'Whether to allow the agent to carry
                                  out the step specified in the prompt_type. If you
                                  set this argument to DISABLED, the agent skips that
                                  step. Valid Values: ENABLED, DISABLED.'
                                type: string
                              promptType:
                                description: 'Step in the agent sequence that this
                                  prompt configuration applies to. Valid values: PRE_PROCESSING,
                                  ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

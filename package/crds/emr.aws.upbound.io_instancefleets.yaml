---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: instancefleets.emr.aws.upbound.io
spec:
  group: emr.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: InstanceFleet
    listKind: InstanceFleetList
    plural: instancefleets
    singular: instancefleet
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: InstanceFleet is the Schema for the InstanceFleets API. Provides
          an Elastic MapReduce Cluster Instance Fleet
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstanceFleetSpec defines the desired state of InstanceFleet
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterId:
                    description: ID of the EMR Cluster to attach to. Changing this
                      forces a new resource to be created.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster in emr to populate clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster in emr to populate clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  instanceTypeConfigs:
                    description: Configuration block for instance fleet
                    items:
                      properties:
                        bidPrice:
                          description: The bid price for each EC2 Spot instance type
                            as defined by instance_type. Expressed in USD. If neither
                            bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: string
                        bidPriceAsPercentageOfOnDemandPrice:
                          description: The bid price, as a percentage of On-Demand
                            price, for each EC2 Spot instance as defined by instance_type.
                            Expressed as a number (for example, 20 specifies 20%).
                            If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: number
                        configurations:
                          description: A configuration classification that applies
                            when provisioning cluster instances, which can include
                            configurations for applications and software that run
                            on the cluster. List of configuration blocks.
                          items:
                            properties:
                              classification:
                                description: The classification within a configuration.
                                type: string
                              properties:
                                additionalProperties:
                                  type: string
                                description: A map of properties specified within
                                  a configuration classification
                                type: object
                                x-kubernetes-map-type: granular
                            type: object
                          type: array
                        ebsConfig:
                          description: Configuration block(s) for EBS volumes attached
                            to each instance in the instance group. Detailed below.
                          items:
                            properties:
                              iops:
                                description: The number of I/O operations per second
                                  (IOPS) that the volume supports
                                type: number
                              size:
                                description: The volume size, in gibibytes (GiB).
                                type: number
                              type:
                                description: The volume type. Valid options are gp2,
                                  io1, standard and st1. See EBS Volume Types.
                                type: string
                              volumesPerInstance:
                                description: The number of EBS volumes with this configuration
                                  to attach to each EC2 instance in the instance group
                                  (default is 1)
                                type: number
                            type: object
                          type: array
                        instanceType:
                          description: An EC2 instance type, such as m4.xlarge.
                          type: string
                        weightedCapacity:
                          description: The number of units that a provisioned instance
                            of this type provides toward fulfilling the target capacities
                            defined in aws_emr_instance_fleet.
                          type: number
                      type: object
                    type: array
                  launchSpecifications:
                    description: Configuration block for launch specification
                    properties:
                      onDemandSpecification:
                        description: Configuration block for on demand instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                          type: object
                        type: array
                      spotSpecification:
                        description: Configuration block for spot instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                            blockDurationMinutes:
                              description: The defined duration for Spot instances
                                (also known as Spot blocks) in minutes. When specified,
                                the Spot instance does not terminate before the defined
                                duration expires, and defined duration pricing for
                                Spot instances applies. Valid values are 60, 120,
                                180, 240, 300, or 360. The duration period starts
                                as soon as a Spot instance receives its instance ID.
                                At the end of the duration, Amazon EC2 marks the Spot
                                instance for termination and provides a Spot instance
                                termination notice, which gives the instance a two-minute
                                warning before it terminates.
                              type: number
                            timeoutAction:
                              description: The action to take when TargetSpotCapacity
                                has not been fulfilled when the TimeoutDurationMinutes
                                has expired; that is, when all Spot instances could
                                not be provisioned within the Spot provisioning timeout.
                                Valid values are TERMINATE_CLUSTER and SWITCH_TO_ON_DEMAND.
                                SWITCH_TO_ON_DEMAND specifies that if no Spot instances
                                are available, On-Demand Instances should be provisioned
                                to fulfill any remaining Spot capacity.
                              type: string
                            timeoutDurationMinutes:
                              description: The spot provisioning timeout period in
                                minutes. If Spot instances are not provisioned within
                                this time period, the TimeOutAction is taken. Minimum
                                value is 5 and maximum value is 1440. The timeout
                                applies only during initial provisioning, when the
                                cluster is first created.
                              type: number
                          type: object
                        type: array
                    type: object
                  name:
                    description: Friendly name given to the instance fleet.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  targetOnDemandCapacity:
                    description: The target capacity of On-Demand units for the instance
                      fleet, which determines how many On-Demand instances to provision.
                    type: number
                  targetSpotCapacity:
                    description: The target capacity of Spot units for the instance
                      fleet, which determines how many Spot instances to provision.
                    type: number
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  clusterId:
                    description: ID of the EMR Cluster to attach to. Changing this
                      forces a new resource to be created.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster in emr to populate clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster in emr to populate clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  instanceTypeConfigs:
                    description: Configuration block for instance fleet
                    items:
                      properties:
                        bidPrice:
                          description: The bid price for each EC2 Spot instance type
                            as defined by instance_type. Expressed in USD. If neither
                            bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: string
                        bidPriceAsPercentageOfOnDemandPrice:
                          description: The bid price, as a percentage of On-Demand
                            price, for each EC2 Spot instance as defined by instance_type.
                            Expressed as a number (for example, 20 specifies 20%).
                            If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: number
                        configurations:
                          description: A configuration classification that applies
                            when provisioning cluster instances, which can include
                            configurations for applications and software that run
                            on the cluster. List of configuration blocks.
                          items:
                            properties:
                              classification:
                                description: The classification within a configuration.
                                type: string
                              properties:
                                additionalProperties:
                                  type: string
                                description: A map of properties specified within
                                  a configuration classification
                                type: object
                                x-kubernetes-map-type: granular
                            type: object
                          type: array
                        ebsConfig:
                          description: Configuration block(s) for EBS volumes attached
                            to each instance in the instance group. Detailed below.
                          items:
                            properties:
                              iops:
                                description: The number of I/O operations per second
                                  (IOPS) that the volume supports
                                type: number
                              size:
                                description: The volume size, in gibibytes (GiB).
                                type: number
                              type:
                                description: The volume type. Valid options are gp2,
                                  io1, standard and st1. See EBS Volume Types.
                                type: string
                              volumesPerInstance:
                                description: The number of EBS volumes with this configuration
                                  to attach to each EC2 instance in the instance group
                                  (default is 1)
                                type: number
                            type: object
                          type: array
                        instanceType:
                          description: An EC2 instance type, such as m4.xlarge.
                          type: string
                        weightedCapacity:
                          description: The number of units that a provisioned instance
                            of this type provides toward fulfilling the target capacities
                            defined in aws_emr_instance_fleet.
                          type: number
                      type: object
                    type: array
                  launchSpecifications:
                    description: Configuration block for launch specification
                    properties:
                      onDemandSpecification:
                        description: Configuration block for on demand instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                          type: object
                        type: array
                      spotSpecification:
                        description: Configuration block for spot instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                            blockDurationMinutes:
                              description: The defined duration for Spot instances
                                (also known as Spot blocks) in minutes. When specified,
                                the Spot instance does not terminate before the defined
                                duration expires, and defined duration pricing for
                                Spot instances applies. Valid values are 60, 120,
                                180, 240, 300, or 360. The duration period starts
                                as soon as a Spot instance receives its instance ID.
                                At the end of the duration, Amazon EC2 marks the Spot
                                instance for termination and provides a Spot instance
                                termination notice, which gives the instance a two-minute
                                warning before it terminates.
                              type: number
                            timeoutAction:
                              description: The action to take when TargetSpotCapacity
                                has not been fulfilled when the TimeoutDurationMinutes
                                has expired; that is, when all Spot instances could
                                not be provisioned within the Spot provisioning timeout.
                                Valid values are TERMINATE_CLUSTER and SWITCH_TO_ON_DEMAND.
                                SWITCH_TO_ON_DEMAND specifies that if no Spot instances
                                are available, On-Demand Instances should be provisioned
                                to fulfill any remaining Spot capacity.
                              type: string
                            timeoutDurationMinutes:
                              description: The spot provisioning timeout period in
                                minutes. If Spot instances are not provisioned within
                                this time period, the TimeOutAction is taken. Minimum
                                value is 5 and maximum value is 1440. The timeout
                                applies only during initial provisioning, when the
                                cluster is first created.
                              type: number
                          type: object
                        type: array
                    type: object
                  name:
                    description: Friendly name given to the instance fleet.
                    type: string
                  targetOnDemandCapacity:
                    description: The target capacity of On-Demand units for the instance
                      fleet, which determines how many On-Demand instances to provision.
                    type: number
                  targetSpotCapacity:
                    description: The target capacity of Spot units for the instance
                      fleet, which determines how many Spot instances to provision.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceFleetStatus defines the observed state of InstanceFleet.
            properties:
              atProvider:
                properties:
                  clusterId:
                    description: ID of the EMR Cluster to attach to. Changing this
                      forces a new resource to be created.
                    type: string
                  id:
                    description: The unique identifier of the instance fleet.
                    type: string
                  instanceTypeConfigs:
                    description: Configuration block for instance fleet
                    items:
                      properties:
                        bidPrice:
                          description: The bid price for each EC2 Spot instance type
                            as defined by instance_type. Expressed in USD. If neither
                            bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: string
                        bidPriceAsPercentageOfOnDemandPrice:
                          description: The bid price, as a percentage of On-Demand
                            price, for each EC2 Spot instance as defined by instance_type.
                            Expressed as a number (for example, 20 specifies 20%).
                            If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                            is provided, bid_price_as_percentage_of_on_demand_price
                            defaults to 100%.
                          type: number
                        configurations:
                          description: A configuration classification that applies
                            when provisioning cluster instances, which can include
                            configurations for applications and software that run
                            on the cluster. List of configuration blocks.
                          items:
                            properties:
                              classification:
                                description: The classification within a configuration.
                                type: string
                              properties:
                                additionalProperties:
                                  type: string
                                description: A map of properties specified within
                                  a configuration classification
                                type: object
                                x-kubernetes-map-type: granular
                            type: object
                          type: array
                        ebsConfig:
                          description: Configuration block(s) for EBS volumes attached
                            to each instance in the instance group. Detailed below.
                          items:
                            properties:
                              iops:
                                description: The number of I/O operations per second
                                  (IOPS) that the volume supports
                                type: number
                              size:
                                description: The volume size, in gibibytes (GiB).
                                type: number
                              type:
                                description: The volume type. Valid options are gp2,
                                  io1, standard and st1. See EBS Volume Types.
                                type: string
                              volumesPerInstance:
                                description: The number of EBS volumes with this configuration
                                  to attach to each EC2 instance in the instance group
                                  (default is 1)
                                type: number
                            type: object
                          type: array
                        instanceType:
                          description: An EC2 instance type, such as m4.xlarge.
                          type: string
                        weightedCapacity:
                          description: The number of units that a provisioned instance
                            of this type provides toward fulfilling the target capacities
                            defined in aws_emr_instance_fleet.
                          type: number
                      type: object
                    type: array
                  launchSpecifications:
                    description: Configuration block for launch specification
                    properties:
                      onDemandSpecification:
                        description: Configuration block for on demand instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                          type: object
                        type: array
                      spotSpecification:
                        description: Configuration block for spot instances launch
                          specifications
                        items:
                          properties:
                            allocationStrategy:
                              description: Specifies the strategy to use in launching
                                On-Demand instance fleets. Currently, the only option
                                is lowest-price (the default), which launches the
                                lowest price first.
                              type: string
                            blockDurationMinutes:
                              description: The defined duration for Spot instances
                                (also known as Spot blocks) in minutes. When specified,
                                the Spot instance does not terminate before the defined
                                duration expires, and defined duration pricing for
                                Spot instances applies. Valid values are 60, 120,
                                180, 240, 300, or 360. The duration period starts
                                as soon as a Spot instance receives its instance ID.
                                At the end of the duration, Amazon EC2 marks the Spot
                                instance for termination and provides a Spot instance
                                termination notice, which gives the instance a two-minute
                                warning before it terminates.
                              type: number
                            timeoutAction:
                              description: The action to take when TargetSpotCapacity
                                has not been fulfilled when the TimeoutDurationMinutes
                                has expired; that is, when all Spot instances could
                                not be provisioned within the Spot provisioning timeout.
                                Valid values are TERMINATE_CLUSTER and SWITCH_TO_ON_DEMAND.
                                SWITCH_TO_ON_DEMAND specifies that if no Spot instances
                                are available, On-Demand Instances should be provisioned
                                to fulfill any remaining Spot capacity.
                              type: string
                            timeoutDurationMinutes:
                              description: The spot provisioning timeout period in
                                minutes. If Spot instances are not provisioned within
                                this time period, the TimeOutAction is taken. Minimum
                                value is 5 and maximum value is 1440. The timeout
                                applies only during initial provisioning, when the
                                cluster is first created.
                              type: number
                          type: object
                        type: array
                    type: object
                  name:
                    description: Friendly name given to the instance fleet.
                    type: string
                  provisionedOnDemandCapacity:
                    description: |-
                      Demand units that have been provisioned for the instance
                      fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
                    type: number
                  provisionedSpotCapacity:
                    description: |-
                      The number of Spot units that have been provisioned for this instance fleet
                      to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
                    type: number
                  targetOnDemandCapacity:
                    description: The target capacity of On-Demand units for the instance
                      fleet, which determines how many On-Demand instances to provision.
                    type: number
                  targetSpotCapacity:
                    description: The target capacity of Spot units for the instance
                      fleet, which determines how many Spot instances to provision.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: cachepolicies.cloudfront.aws.upbound.io
spec:
  group: cloudfront.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CachePolicy
    listKind: CachePolicyList
    plural: cachepolicies
    singular: cachepolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CachePolicy is the Schema for the CachePolicys API. Provides
          a cache policy for a CloudFront ditribution. When itâ€™s attached to a cache
          behavior, the cache policy determines the values that CloudFront includes
          in the cache key. These values can include HTTP headers, cookies, and URL
          query strings. CloudFront uses the cache key to find an object in its cache
          that it can return to the viewer. It also determines the default, minimum,
          and maximum time to live (TTL) values that you want objects to stay in the
          CloudFront cache.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CachePolicySpec defines the desired state of CachePolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  comment:
                    description: A comment to describe the cache policy.
                    type: string
                  defaultTtl:
                    description: The default amount of time, in seconds, that you
                      want objects to stay in the CloudFront cache before CloudFront
                      sends another request to the origin to see if the object has
                      been updated.
                    type: number
                  maxTtl:
                    description: The maximum amount of time, in seconds, that objects
                      stay in the CloudFront cache before CloudFront sends another
                      request to the origin to see if the object has been updated.
                    type: number
                  minTtl:
                    description: The minimum amount of time, in seconds, that you
                      want objects to stay in the CloudFront cache before CloudFront
                      sends another request to the origin to see if the object has
                      been updated.
                    type: number
                  name:
                    description: A unique name to identify the cache policy.
                    type: string
                  parametersInCacheKeyAndForwardedToOrigin:
                    description: The HTTP headers, cookies, and URL query strings
                      to include in the cache key. See Parameters In Cache Key And
                      Forwarded To Origin for more information.
                    items:
                      properties:
                        cookiesConfig:
                          description: Object that determines whether any cookies
                            in viewer requests (and if so, which cookies) are included
                            in the cache key and automatically included in requests
                            that CloudFront sends to the origin. See Cookies Config
                            for more information.
                          items:
                            properties:
                              cookieBehavior:
                                description: Determines whether any cookies in viewer
                                  requests are included in the cache key and automatically
                                  included in requests that CloudFront sends to the
                                  origin. Valid values are none, whitelist, allExcept,
                                  all.
                                type: string
                              cookies:
                                description: Object that contains a list of cookie
                                  names. See Items for more information.
                                items:
                                  properties:
                                    items:
                                      description: A list of item names (cookies,
                                        headers, or query strings).
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            required:
                            - cookieBehavior
                            type: object
                          type: array
                        enableAcceptEncodingBrotli:
                          description: A flag that can affect whether the Accept-Encoding
                            HTTP header is included in the cache key and included
                            in requests that CloudFront sends to the origin.
                          type: boolean
                        enableAcceptEncodingGzip:
                          description: A flag that can affect whether the Accept-Encoding
                            HTTP header is included in the cache key and included
                            in requests that CloudFront sends to the origin.
                          type: boolean
                        headersConfig:
                          description: Object that determines whether any HTTP headers
                            (and if so, which headers) are included in the cache key
                            and automatically included in requests that CloudFront
                            sends to the origin. See Headers Config for more information.
                          items:
                            properties:
                              headerBehavior:
                                description: Determines whether any HTTP headers are
                                  included in the cache key and automatically included
                                  in requests that CloudFront sends to the origin.
                                  Valid values are none, whitelist.
                                type: string
                              headers:
                                description: Object that contains a list of header
                                  names. See Items for more information.
                                items:
                                  properties:
                                    items:
                                      description: A list of item names (cookies,
                                        headers, or query strings).
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        queryStringsConfig:
                          description: Object that determines whether any URL query
                            strings in viewer requests (and if so, which query strings)
                            are included in the cache key and automatically included
                            in requests that CloudFront sends to the origin. See Query
                            String Config for more information.
                          items:
                            properties:
                              queryStringBehavior:
                                description: Determines whether any URL query strings
                                  in viewer requests are included in the cache key
                                  and automatically included in requests that CloudFront
                                  sends to the origin. Valid values are none, whitelist,
                                  allExcept, all.
                                type: string
                              queryStrings:
                                description: Object that contains a list of query
                                  string names. See Items for more information.
                                items:
                                  properties:
                                    items:
                                      description: A list of item names (cookies,
                                        headers, or query strings).
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            required:
                            - queryStringBehavior
                            type: object
                          type: array
                      required:
                      - cookiesConfig
                      - headersConfig
                      - queryStringsConfig
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - name
                - parametersInCacheKeyAndForwardedToOrigin
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CachePolicyStatus defines the observed state of CachePolicy.
            properties:
              atProvider:
                properties:
                  etag:
                    description: The current version of the cache policy.
                    type: string
                  id:
                    description: The identifier for the cache policy.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

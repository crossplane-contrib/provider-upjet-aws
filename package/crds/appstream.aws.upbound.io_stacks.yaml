---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: stacks.appstream.aws.upbound.io
spec:
  group: appstream.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Stack
    listKind: StackList
    plural: stacks
    singular: stack
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Stack is the Schema for the Stacks API. Provides an AppStream
          stack
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Stack
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessEndpoints:
                    description: Set of configuration blocks defining the interface
                      VPC endpoints. Users of the stack can connect to AppStream 2.0
                      only through the specified endpoints. See access_endpoints below.
                    items:
                      properties:
                        endpointType:
                          description: Type of the interface endpoint. See the AccessEndpoint
                            AWS API documentation for valid values.
                          type: string
                        vpceId:
                          description: ID of the VPC in which the interface endpoint
                            is used.
                          type: string
                      required:
                      - endpointType
                      type: object
                    type: array
                  applicationSettings:
                    description: Settings for application settings persistence. See
                      application_settings below.
                    items:
                      properties:
                        enabled:
                          description: Whether application settings should be persisted.
                          type: boolean
                        settingsGroup:
                          description: Name of the settings group. Required when enabled
                            is true. Can be up to 100 characters.
                          type: string
                      required:
                      - enabled
                      type: object
                    type: array
                  description:
                    description: Description for the AppStream stack.
                    type: string
                  displayName:
                    description: Stack name to display.
                    type: string
                  embedHostDomains:
                    description: Domains where AppStream 2.0 streaming sessions can
                      be embedded in an iframe. You must approve the domains that
                      you want to host embedded AppStream 2.0 streaming sessions.
                    items:
                      type: string
                    type: array
                  feedbackUrl:
                    description: URL that users are redirected to after they click
                      the Send Feedback link. If no URL is specified, no Send Feedback
                      link is displayed. .
                    type: string
                  name:
                    description: Unique name for the AppStream stack.
                    type: string
                  redirectUrl:
                    description: URL that users are redirected to after their streaming
                      session ends.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  storageConnectors:
                    description: Configuration block for the storage connectors to
                      enable. See storage_connectors below.
                    items:
                      properties:
                        connectorType:
                          description: Type of storage connector. Valid values are
                            HOMEFOLDERS, GOOGLE_DRIVE, or ONE_DRIVE.
                          type: string
                        domains:
                          description: Names of the domains for the account.
                          items:
                            type: string
                          type: array
                        resourceIdentifier:
                          description: ARN of the storage connector.
                          type: string
                      required:
                      - connectorType
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  userSettings:
                    description: Configuration block for the actions that are enabled
                      or disabled for users during their streaming sessions. If not
                      provided, these settings are configured automatically by AWS.
                      See user_settings below.
                    items:
                      properties:
                        action:
                          description: Action that is enabled or disabled. Valid values
                            are CLIPBOARD_COPY_FROM_LOCAL_DEVICE,  CLIPBOARD_COPY_TO_LOCAL_DEVICE,
                            FILE_UPLOAD, FILE_DOWNLOAD, PRINTING_TO_LOCAL_DEVICE,
                            DOMAIN_PASSWORD_SIGNIN, or DOMAIN_SMART_CARD_SIGNIN.
                          type: string
                        permission:
                          description: Whether the action is enabled or disabled.
                            Valid values are ENABLED or DISABLED.
                          type: string
                      required:
                      - action
                      - permission
                      type: object
                    type: array
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: StackStatus defines the observed state of Stack.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the appstream stack.
                    type: string
                  createdTime:
                    description: Date and time, in UTC and extended RFC 3339 format,
                      when the stack was created.
                    type: string
                  id:
                    description: Unique ID of the appstream stack.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

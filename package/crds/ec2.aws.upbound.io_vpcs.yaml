---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vpcs.ec2.aws.upbound.io
spec:
  group: ec2.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VPC is the Schema for the VPCs API. Provides a VPC resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VPCSpec defines the desired state of VPC
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  assignGeneratedIpv6CidrBlock:
                    description: Requests an Amazon-provided IPv6 CIDR block with
                      a /56 prefix length for the VPC. You cannot specify the range
                      of IP addresses, or the size of the CIDR block. Default is false.
                      Conflicts with ipv6_ipam_pool_id
                    type: boolean
                  cidrBlock:
                    description: The IPv4 CIDR block for the VPC. CIDR can be explicitly
                      set or it can be derived from IPAM using ipv4_netmask_length.
                    type: string
                  enableClassiclink:
                    description: A boolean flag to enable/disable ClassicLink for
                      the VPC. Only valid in regions and accounts that support EC2
                      Classic. See the ClassicLink documentation for more information.
                      Defaults false.
                    type: boolean
                  enableClassiclinkDnsSupport:
                    description: A boolean flag to enable/disable ClassicLink DNS
                      Support for the VPC. Only valid in regions and accounts that
                      support EC2 Classic.
                    type: boolean
                  enableDnsHostnames:
                    description: A boolean flag to enable/disable DNS hostnames in
                      the VPC. Defaults false.
                    type: boolean
                  enableDnsSupport:
                    description: A boolean flag to enable/disable DNS support in the
                      VPC. Defaults to true.
                    type: boolean
                  enableNetworkAddressUsageMetrics:
                    description: Indicates whether Network Address Usage metrics are
                      enabled for your VPC. Defaults to false.
                    type: boolean
                  instanceTenancy:
                    description: A tenancy option for instances launched into the
                      VPC. Default is default, which ensures that EC2 instances launched
                      in this VPC use the EC2 instance tenancy attribute specified
                      when the EC2 instance is launched. The only other option is
                      dedicated, which ensures that EC2 instances launched in this
                      VPC are run on dedicated tenancy instances regardless of the
                      tenancy attribute specified at launch. This has a dedicated
                      per region fee of $2 per hour, plus an hourly per instance usage
                      fee.
                    type: string
                  ipv4IpamPoolId:
                    description: The ID of an IPv4 IPAM pool you want to use for allocating
                      this VPC's CIDR. IPAM is a VPC feature that you can use to automate
                      your IP address management workflows including assigning, tracking,
                      troubleshooting, and auditing IP addresses across AWS Regions
                      and accounts. Using IPAM you can monitor IP address usage throughout
                      your AWS Organization.
                    type: string
                  ipv4IpamPoolIdRef:
                    description: Reference to a VPCIpamPool in ec2 to populate ipv4IpamPoolId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  ipv4IpamPoolIdSelector:
                    description: Selector for a VPCIpamPool in ec2 to populate ipv4IpamPoolId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ipv4NetmaskLength:
                    description: The netmask length of the IPv4 CIDR you want to allocate
                      to this VPC. Requires specifying a ipv4_ipam_pool_id.
                    type: number
                  ipv6CidrBlock:
                    description: IPv6 CIDR block to request from an IPAM Pool. Can
                      be set explicitly or derived from IPAM using ipv6_netmask_length.
                    type: string
                  ipv6CidrBlockNetworkBorderGroup:
                    description: By default when an IPv6 CIDR is assigned to a VPC
                      a default ipv6_cidr_block_network_border_group will be set to
                      the region of the VPC. This can be changed to restrict advertisement
                      of public addresses to specific Network Border Groups such as
                      LocalZones.
                    type: string
                  ipv6IpamPoolId:
                    description: IPAM Pool ID for a IPv6 pool. Conflicts with assign_generated_ipv6_cidr_block.
                    type: string
                  ipv6NetmaskLength:
                    description: 'Netmask length to request from IPAM Pool. Conflicts
                      with ipv6_cidr_block. This can be omitted if IPAM pool as a
                      allocation_default_netmask_length set. Valid values: 56.'
                    type: number
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VPCStatus defines the observed state of VPC.
            properties:
              atProvider:
                properties:
                  arn:
                    description: Amazon Resource Name (ARN) of VPC
                    type: string
                  defaultNetworkAclId:
                    description: The ID of the network ACL created by default on VPC
                      creation
                    type: string
                  defaultRouteTableId:
                    description: The ID of the route table created by default on VPC
                      creation
                    type: string
                  defaultSecurityGroupId:
                    description: The ID of the security group created by default on
                      VPC creation
                    type: string
                  dhcpOptionsId:
                    description: The ID of the VPC
                    type: string
                  id:
                    description: The ID of the VPC
                    type: string
                  ipv6AssociationId:
                    description: The association ID for the IPv6 CIDR block.
                    type: string
                  mainRouteTableId:
                    description: The ID of the main route table associated with this
                      VPC. Note that you can change a VPC's main route table by using
                      an aws_main_route_table_association.
                    type: string
                  ownerId:
                    description: The ID of the AWS account that owns the VPC.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

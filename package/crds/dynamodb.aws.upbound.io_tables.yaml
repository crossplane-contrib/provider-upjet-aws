---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tables.dynamodb.aws.upbound.io
spec:
  group: dynamodb.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the Tables API. Provides a DynamoDB table
          resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attribute:
                    description: Set of nested attribute definitions. Only required
                      for hash_key and range_key attributes. See below.
                    items:
                      properties:
                        name:
                          description: Name of the attribute
                          type: string
                        type:
                          description: Attribute type. Valid values are S (string),
                            N (number), B (binary).
                          type: string
                      required:
                      - name
                      - type
                      type: object
                    type: array
                  billingMode:
                    description: Controls how you are charged for read and write throughput
                      and how you manage capacity. The valid values are PROVISIONED
                      and PAY_PER_REQUEST. Defaults to PROVISIONED.
                    type: string
                  globalSecondaryIndex:
                    description: Describe a GSI for the table; subject to the normal
                      limits on the number of GSIs, projected attributes, etc. See
                      below.
                    items:
                      properties:
                        hashKey:
                          description: Name of the hash key in the index; must be
                            defined as an attribute in the resource.
                          type: string
                        name:
                          description: Name of the index.
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key; must be defined
                          type: string
                        readCapacity:
                          description: Number of read units for this index. Must be
                            set if billing_mode is set to PROVISIONED.
                          type: number
                        writeCapacity:
                          description: Number of write units for this index. Must
                            be set if billing_mode is set to PROVISIONED.
                          type: number
                      required:
                      - hashKey
                      - name
                      - projectionType
                      type: object
                    type: array
                  hashKey:
                    description: Attribute to use as the hash (partition) key. Must
                      also be defined as an attribute. See below.
                    type: string
                  localSecondaryIndex:
                    description: Describe an LSI on the table; these can only be allocated
                      at creation so you cannot change this definition after you have
                      created the resource. See below.
                    items:
                      properties:
                        name:
                          description: Name of the index
                          type: string
                        nonKeyAttributes:
                          description: Only required with INCLUDE as a projection
                            type; a list of attributes to project into the index.
                            These do not need to be defined as attributes on the table.
                          items:
                            type: string
                          type: array
                        projectionType:
                          description: One of ALL, INCLUDE or KEYS_ONLY where ALL
                            projects every attribute into the index, KEYS_ONLY projects  into
                            the index only the table and index hash_key and sort_key
                            attributes ,  INCLUDE projects into the index all of the
                            attributes that are defined in non_key_attributes in addition
                            to the attributes that thatKEYS_ONLY project.
                          type: string
                        rangeKey:
                          description: Name of the range key.
                          type: string
                      required:
                      - name
                      - projectionType
                      - rangeKey
                      type: object
                    type: array
                  pointInTimeRecovery:
                    description: Enable point-in-time recovery options. See below.
                    items:
                      properties:
                        enabled:
                          description: Whether to enable point-in-time recovery. It
                            can take 10 minutes to enable for new tables. If the point_in_time_recovery
                            block is not provided, this defaults to false.
                          type: boolean
                      required:
                      - enabled
                      type: object
                    type: array
                  rangeKey:
                    description: Attribute to use as the range (sort) key. Must also
                      be defined as an attribute, see below.
                    type: string
                  readCapacity:
                    description: Number of read units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  replica:
                    description: Configuration block(s) with DynamoDB Global Tables
                      V2 (version 2019.11.21) replication configurations. See below.
                    items:
                      properties:
                        kmsKeyArn:
                          description: 'ARN of the CMK that should be used for the
                            AWS KMS encryption. This argument should only be used
                            if the key is different from the default KMS-managed DynamoDB
                            key, alias/aws/dynamodb. Note: This attribute will not
                            be populated with the ARN of default keys.'
                          type: string
                        pointInTimeRecovery:
                          description: Whether to enable Point In Time Recovery for
                            the replica. Default is false.
                          type: boolean
                        propagateTags:
                          description: 'Whether to propagate the global table''s tags
                            to a replica. Default is false. Changes to tags only move
                            in one direction: from global (source) to replica. In
                            other words, tag drift on a replica will not trigger an
                            update. Tag or replica changes on the global table, whether
                            from drift or configuration changes, are propagated to
                            replicas. Changing from true to false on a subsequent
                            apply means replica tags are left as they were, unmanaged,
                            not deleted.'
                          type: boolean
                        regionName:
                          description: Region name of the replica.
                          type: string
                      required:
                      - regionName
                      type: object
                    type: array
                  restoreDateTime:
                    description: Time of the point-in-time recovery point to restore.
                    type: string
                  restoreSourceName:
                    description: Name of the table to restore. Must match the name
                      of an existing table.
                    type: string
                  restoreToLatestTime:
                    description: If set, restores table to the most recent point-in-time
                      recovery point.
                    type: boolean
                  serverSideEncryption:
                    description: Encryption at rest options. AWS DynamoDB tables are
                      automatically encrypted at rest with an AWS-owned Customer Master
                      Key if this argument isn't specified. See below.
                    items:
                      properties:
                        enabled:
                          description: Whether or not to enable encryption at rest
                            using an AWS managed KMS customer master key (CMK). If
                            enabled is false then server-side encryption is set to
                            AWS-owned key (shown as DEFAULT in the AWS console). Potentially
                            confusingly, if enabled is true and no kms_key_arn is
                            specified then server-side encryption is set to the default
                            KMS-managed key (shown as KMS in the AWS console). The
                            AWS KMS documentation explains the difference between
                            AWS-owned and KMS-managed keys.
                          type: boolean
                        kmsKeyArn:
                          description: 'ARN of the CMK that should be used for the
                            AWS KMS encryption. This argument should only be used
                            if the key is different from the default KMS-managed DynamoDB
                            key, alias/aws/dynamodb. Note: This attribute will not
                            be populated with the ARN of default keys.'
                          type: string
                      required:
                      - enabled
                      type: object
                    type: array
                  streamEnabled:
                    description: Whether Streams are enabled.
                    type: boolean
                  streamViewType:
                    description: When an item in the table is modified, StreamViewType
                      determines what information is written to the table's stream.
                      Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
                    type: string
                  tableClass:
                    description: Storage class of the table. Valid values are STANDARD
                      and STANDARD_INFREQUENT_ACCESS.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  ttl:
                    description: Configuration block for TTL. See below.
                    items:
                      properties:
                        attributeName:
                          description: Name of the table attribute to store the TTL
                            timestamp in.
                          type: string
                        enabled:
                          description: Whether TTL is enabled.
                          type: boolean
                      required:
                      - attributeName
                      type: object
                    type: array
                  writeCapacity:
                    description: Number of write units for this table. If the billing_mode
                      is PROVISIONED, this field is required.
                    type: number
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TableStatus defines the observed state of Table.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the table
                    type: string
                  id:
                    description: Name of the table
                    type: string
                  replica:
                    description: Configuration block(s) with DynamoDB Global Tables
                      V2 (version 2019.11.21) replication configurations. See below.
                    items:
                      properties:
                        arn:
                          description: ARN of the replica
                          type: string
                        streamArn:
                          description: ARN of the Table Stream. Only available when
                            stream_enabled = true
                          type: string
                        streamLabel:
                          description: Timestamp, in ISO 8601 format, for this stream.
                            Note that this timestamp is not a unique identifier for
                            the stream on its own. However, the combination of AWS
                            customer ID, table name and this field is guaranteed to
                            be unique. It can be used for creating CloudWatch Alarms.
                            Only available when stream_enabled = true.
                          type: string
                      type: object
                    type: array
                  streamArn:
                    description: ARN of the Table Stream. Only available when stream_enabled
                      = true
                    type: string
                  streamLabel:
                    description: Timestamp, in ISO 8601 format, for this stream. Note
                      that this timestamp is not a unique identifier for the stream
                      on its own. However, the combination of AWS customer ID, table
                      name and this field is guaranteed to be unique. It can be used
                      for creating CloudWatch Alarms. Only available when stream_enabled
                      = true.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

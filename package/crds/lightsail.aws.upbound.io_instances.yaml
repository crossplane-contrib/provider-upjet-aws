---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: instances.lightsail.aws.upbound.io
spec:
  group: lightsail.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. Provides an Lightsail
          Instance
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addOn:
                    description: The add on configuration for the instance. Detailed
                      below.
                    items:
                      properties:
                        snapshotTime:
                          description: The daily time when an automatic snapshot will
                            be created. Must be in HH:00 format, and in an hourly
                            increment and specified in Coordinated Universal Time
                            (UTC). The snapshot will be automatically created between
                            the time specified and up to 45 minutes after.
                          type: string
                        status:
                          description: 'The status of the add on. Valid Values: Enabled,
                            Disabled.'
                          type: string
                        type:
                          description: The add-on type. There is currently only one
                            valid type AutoSnapshot.
                          type: string
                      required:
                      - snapshotTime
                      - status
                      - type
                      type: object
                    type: array
                  availabilityZone:
                    description: The Availability Zone in which to create your instance
                      (see list below)
                    type: string
                  blueprintId:
                    description: 'The ID for a virtual private server image. A list
                      of available blueprint IDs can be obtained using the AWS CLI
                      command: aws lightsail get-blueprints'
                    type: string
                  bundleId:
                    description: The bundle of specification information (see list
                      below)
                    type: string
                  ipAddressType:
                    description: 'The IP address type of the Lightsail Instance. Valid
                      Values: dualstack | ipv4.'
                    type: string
                  keyPairName:
                    description: The name of your key pair. Created in the Lightsail
                      console (cannot use aws_key_pair at this time)
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  userData:
                    description: launch script to configure server with additional
                      user data
                    type: string
                required:
                - availabilityZone
                - blueprintId
                - bundleId
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the Lightsail instance (matches id).
                    type: string
                  cpuCount:
                    description: The number of vCPUs the instance has.
                    type: number
                  createdAt:
                    description: The timestamp when the instance was created.
                    type: string
                  id:
                    description: The ARN of the Lightsail instance (matches arn).
                    type: string
                  ipv6Address:
                    description: (Deprecated) The first IPv6 address of the Lightsail
                      instance. Use ipv6_addresses attribute instead.
                    type: string
                  ipv6Addresses:
                    description: List of IPv6 addresses for the Lightsail instance.
                    items:
                      type: string
                    type: array
                  isStaticIp:
                    description: A Boolean value indicating whether this instance
                      has a static IP assigned to it.
                    type: boolean
                  privateIpAddress:
                    description: The private IP address of the instance.
                    type: string
                  publicIpAddress:
                    description: The public IP address of the instance.
                    type: string
                  ramSize:
                    description: The amount of RAM in GB on the instance (e.g., 1.0).
                    type: number
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                  username:
                    description: The user name for connecting to the instance (e.g.,
                      ec2-user).
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

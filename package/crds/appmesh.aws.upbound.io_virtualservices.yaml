---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: virtualservices.appmesh.aws.upbound.io
spec:
  group: appmesh.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VirtualService is the Schema for the VirtualServices API. Provides
          an AWS App Mesh virtual service resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualServiceSpec defines the desired state of VirtualService
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  meshName:
                    description: Name of the service mesh in which to create the virtual
                      service. Must be between 1 and 255 characters in length.
                    type: string
                  meshNameRef:
                    description: Reference to a Mesh in appmesh to populate meshName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  meshNameSelector:
                    description: Selector for a Mesh in appmesh to populate meshName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  meshOwner:
                    description: AWS account ID of the service mesh's owner. Defaults
                      to the account ID the AWS provider is currently connected to.
                    type: string
                  name:
                    description: Name to use for the virtual service. Must be between
                      1 and 255 characters in length.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  spec:
                    description: Virtual service specification to apply.
                    items:
                      properties:
                        provider:
                          description: App Mesh object that is acting as the provider
                            for a virtual service. You can specify a single virtual
                            node or virtual router.
                          items:
                            properties:
                              virtualNode:
                                description: Virtual node associated with a virtual
                                  service.
                                items:
                                  properties:
                                    virtualNodeName:
                                      description: Name of the virtual node that is
                                        acting as a service provider. Must be between
                                        1 and 255 characters in length.
                                      type: string
                                    virtualNodeNameRef:
                                      description: Reference to a VirtualNode in appmesh
                                        to populate virtualNodeName.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    virtualNodeNameSelector:
                                      description: Selector for a VirtualNode in appmesh
                                        to populate virtualNodeName.
                                      properties:
                                        matchControllerRef:
                                          description: MatchControllerRef ensures
                                            an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              virtualRouter:
                                description: Virtual router associated with a virtual
                                  service.
                                items:
                                  properties:
                                    virtualRouterName:
                                      description: Name of the virtual router that
                                        is acting as a service provider. Must be between
                                        1 and 255 characters in length.
                                      type: string
                                    virtualRouterNameRef:
                                      description: Reference to a VirtualRouter in
                                        appmesh to populate virtualRouterName.
                                      properties:
                                        name:
                                          description: Name of the referenced object.
                                          type: string
                                        policy:
                                          description: Policies for referencing.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      required:
                                      - name
                                      type: object
                                    virtualRouterNameSelector:
                                      description: Selector for a VirtualRouter in
                                        appmesh to populate virtualRouterName.
                                      properties:
                                        matchControllerRef:
                                          description: MatchControllerRef ensures
                                            an object with the same controller reference
                                            as the selecting object is selected.
                                          type: boolean
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: MatchLabels ensures an object
                                            with matching labels is selected.
                                          type: object
                                        policy:
                                          description: Policies for selection.
                                          properties:
                                            resolution:
                                              default: Required
                                              description: Resolution specifies whether
                                                resolution of this reference is required.
                                                The default is 'Required', which means
                                                the reconcile will fail if the reference
                                                cannot be resolved. 'Optional' means
                                                this reference will be a no-op if
                                                it cannot be resolved.
                                              enum:
                                              - Required
                                              - Optional
                                              type: string
                                            resolve:
                                              description: Resolve specifies when
                                                this reference should be resolved.
                                                The default is 'IfNotPresent', which
                                                will attempt to resolve the reference
                                                only when the corresponding field
                                                is not present. Use 'Always' to resolve
                                                the reference on every reconcile.
                                              enum:
                                              - Always
                                              - IfNotPresent
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - name
                - region
                - spec
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VirtualServiceStatus defines the observed state of VirtualService.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the virtual service.
                    type: string
                  createdDate:
                    description: Creation date of the virtual service.
                    type: string
                  id:
                    description: ID of the virtual service.
                    type: string
                  lastUpdatedDate:
                    description: Last update date of the virtual service.
                    type: string
                  resourceOwner:
                    description: Resource owner's AWS account ID.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: corenetworks.networkmanager.aws.upbound.io
spec:
  group: networkmanager.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CoreNetwork
    listKind: CoreNetworkList
    plural: corenetworks
    singular: corenetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CoreNetwork is the Schema for the CoreNetworks API. Provides
          a core network resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CoreNetworkSpec defines the desired state of CoreNetwork
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  basePolicyRegion:
                    description: The base policy created by setting the create_base_policy
                      argument to true requires a region to be set in the edge-locations,
                      location key. If base_policy_region is not specified, the region
                      used in the base policy defaults to the region specified in
                      the provider block.
                    type: string
                  basePolicyRegions:
                    description: A list of regions to add to the base policy. The
                      base policy created by setting the create_base_policy argument
                      to true requires one or more regions to be set in the edge-locations,
                      location key. If base_policy_regions is not specified, the region
                      used in the base policy defaults to the region specified in
                      the provider block.
                    items:
                      type: string
                    type: array
                  createBasePolicy:
                    description: Specifies whether to create a base policy when a
                      core network is created or updated. A base policy is created
                      and set to LIVE to allow attachments to the core network (e.g.
                      VPC Attachments) before applying a policy document provided
                      using the aws_networkmanager_core_network_policy_attachment
                      resource. This base policy is needed if your core network does
                      not have any LIVE policies (e.g. a core network resource created
                      without the policy_document argument) and your policy document
                      has static routes pointing to VPC attachments and you want to
                      attach your VPCs to the core network before applying the desired
                      policy document. Valid values are true or false. Conflicts with
                      policy_document. An example base policy is shown below. This
                      base policy is overridden with the policy that you specify in
                      the aws_networkmanager_core_network_policy_attachment resource.
                    type: boolean
                  description:
                    description: Description of the Core Network.
                    type: string
                  globalNetworkId:
                    description: The ID of the global network that a core network
                      will be a part of.
                    type: string
                  globalNetworkIdRef:
                    description: Reference to a GlobalNetwork in networkmanager to
                      populate globalNetworkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  globalNetworkIdSelector:
                    description: Selector for a GlobalNetwork in networkmanager to
                      populate globalNetworkId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policyDocument:
                    description: Policy document for creating a core network. Note
                      that updating this argument will result in the new policy document
                      version being set as the LATEST and LIVE policy document. Refer
                      to the Core network policies documentation for more information.
                      Conflicts with create_base_policy.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - region
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CoreNetworkStatus defines the observed state of CoreNetwork.
            properties:
              atProvider:
                properties:
                  arn:
                    description: Core Network Amazon Resource Name (ARN).
                    type: string
                  basePolicyRegion:
                    description: The base policy created by setting the create_base_policy
                      argument to true requires a region to be set in the edge-locations,
                      location key. If base_policy_region is not specified, the region
                      used in the base policy defaults to the region specified in
                      the provider block.
                    type: string
                  basePolicyRegions:
                    description: A list of regions to add to the base policy. The
                      base policy created by setting the create_base_policy argument
                      to true requires one or more regions to be set in the edge-locations,
                      location key. If base_policy_regions is not specified, the region
                      used in the base policy defaults to the region specified in
                      the provider block.
                    items:
                      type: string
                    type: array
                  createBasePolicy:
                    description: Specifies whether to create a base policy when a
                      core network is created or updated. A base policy is created
                      and set to LIVE to allow attachments to the core network (e.g.
                      VPC Attachments) before applying a policy document provided
                      using the aws_networkmanager_core_network_policy_attachment
                      resource. This base policy is needed if your core network does
                      not have any LIVE policies (e.g. a core network resource created
                      without the policy_document argument) and your policy document
                      has static routes pointing to VPC attachments and you want to
                      attach your VPCs to the core network before applying the desired
                      policy document. Valid values are true or false. Conflicts with
                      policy_document. An example base policy is shown below. This
                      base policy is overridden with the policy that you specify in
                      the aws_networkmanager_core_network_policy_attachment resource.
                    type: boolean
                  createdAt:
                    description: Timestamp when a core network was created.
                    type: string
                  description:
                    description: Description of the Core Network.
                    type: string
                  edges:
                    description: One or more blocks detailing the edges within a core
                      network. Detailed below.
                    items:
                      properties:
                        asn:
                          description: ASN of a core network edge.
                          type: number
                        edgeLocation:
                          description: Region where a core network edge is located.
                          type: string
                        insideCidrBlocks:
                          description: Inside IP addresses used for core network edges.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  globalNetworkId:
                    description: The ID of the global network that a core network
                      will be a part of.
                    type: string
                  id:
                    description: Core Network ID.
                    type: string
                  policyDocument:
                    description: Policy document for creating a core network. Note
                      that updating this argument will result in the new policy document
                      version being set as the LATEST and LIVE policy document. Refer
                      to the Core network policies documentation for more information.
                      Conflicts with create_base_policy.
                    type: string
                  segments:
                    description: One or more blocks detailing the segments within
                      a core network. Detailed below.
                    items:
                      properties:
                        edgeLocations:
                          description: Regions where the edges are located.
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of a core network segment.
                          type: string
                        sharedSegments:
                          description: Shared segments of a core network.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  state:
                    description: Current state of a core network.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

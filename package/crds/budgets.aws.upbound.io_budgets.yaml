---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: budgets.budgets.aws.upbound.io
spec:
  group: budgets.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Budget
    listKind: BudgetList
    plural: budgets
    singular: budget
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Budget is the Schema for the Budgets API. Provides a budgets
          budget resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BudgetSpec defines the desired state of Budget
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: The ID of the target account for budget. Will use
                      current user's account_id by default if omitted.
                    type: string
                  autoAdjustData:
                    description: Object containing [AutoAdjustData] which determines
                      the budget amount for an auto-adjusting budget.
                    items:
                      properties:
                        autoAdjustType:
                          type: string
                        historicalOptions:
                          items:
                            properties:
                              budgetAdjustmentPeriod:
                                type: number
                            required:
                            - budgetAdjustmentPeriod
                            type: object
                          type: array
                      required:
                      - autoAdjustType
                      type: object
                    type: array
                  budgetType:
                    description: Whether this budget tracks monetary cost or usage.
                    type: string
                  costFilter:
                    description: A list of CostFilter name/values pair to apply to
                      budget.
                    items:
                      properties:
                        name:
                          description: The name of a budget. Unique within accounts.
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  costFilters:
                    additionalProperties:
                      type: string
                    description: Map of CostFilters key/value pairs to apply to the
                      budget.
                    type: object
                  costTypes:
                    description: Object containing CostTypes The types of cost included
                      in a budget, such as tax and subscriptions.
                    items:
                      properties:
                        includeCredit:
                          description: A boolean value whether to include credits
                            in the cost budget. Defaults to true
                          type: boolean
                        includeDiscount:
                          description: Whether a budget includes discounts. Defaults
                            to true
                          type: boolean
                        includeOtherSubscription:
                          description: A boolean value whether to include other subscription
                            costs in the cost budget. Defaults to true
                          type: boolean
                        includeRecurring:
                          description: A boolean value whether to include recurring
                            costs in the cost budget. Defaults to true
                          type: boolean
                        includeRefund:
                          description: A boolean value whether to include refunds
                            in the cost budget. Defaults to true
                          type: boolean
                        includeSubscription:
                          description: A boolean value whether to include subscriptions
                            in the cost budget. Defaults to true
                          type: boolean
                        includeSupport:
                          description: A boolean value whether to include support
                            costs in the cost budget. Defaults to true
                          type: boolean
                        includeTax:
                          description: A boolean value whether to include tax in the
                            cost budget. Defaults to true
                          type: boolean
                        includeUpfront:
                          description: A boolean value whether to include upfront
                            costs in the cost budget. Defaults to true
                          type: boolean
                        useAmortized:
                          description: Whether a budget uses the amortized rate. Defaults
                            to false
                          type: boolean
                        useBlended:
                          description: A boolean value whether to use blended costs
                            in the cost budget. Defaults to false
                          type: boolean
                      type: object
                    type: array
                  limitAmount:
                    description: The amount of cost or usage being measured for a
                      budget.
                    type: string
                  limitUnit:
                    description: The unit of measurement used for the budget forecast,
                      actual spend, or budget threshold, such as dollars or GB. See
                      Spend documentation.
                    type: string
                  notification:
                    description: Object containing Budget Notifications. Can be used
                      multiple times to define more than one budget notification.
                    items:
                      properties:
                        comparisonOperator:
                          description: Comparison operator to use to evaluate the
                            condition. Can be LESS_THAN, EQUAL_TO or GREATER_THAN.
                          type: string
                        notificationType:
                          description: What kind of budget value to notify on. Can
                            be ACTUAL or FORECASTED
                          type: string
                        subscriberEmailAddresses:
                          description: E-Mail addresses to notify. Either this or
                            subscriber_sns_topic_arns is required.
                          items:
                            type: string
                          type: array
                        subscriberSnsTopicArns:
                          description: SNS topics to notify. Either this or subscriber_email_addresses
                            is required.
                          items:
                            type: string
                          type: array
                        threshold:
                          description: Threshold when the notification should be sent.
                          type: number
                        thresholdType:
                          description: What kind of threshold is defined. Can be PERCENTAGE
                            OR ABSOLUTE_VALUE.
                          type: string
                      required:
                      - comparisonOperator
                      - notificationType
                      - threshold
                      - thresholdType
                      type: object
                    type: array
                  plannedLimit:
                    description: Object containing Planned Budget Limits. Can be used
                      multiple times to plan more than one budget limit. See PlannedBudgetLimits
                      documentation.
                    items:
                      properties:
                        amount:
                          description: The amount of cost or usage being measured
                            for a budget.
                          type: string
                        startTime:
                          description: 'The start time of the budget limit. Format:
                            2017-01-01_12:00. See PlannedBudgetLimits documentation.'
                          type: string
                        unit:
                          description: The unit of measurement used for the budget
                            forecast, actual spend, or budget threshold, such as dollars
                            or GB. See Spend documentation.
                          type: string
                      required:
                      - amount
                      - startTime
                      - unit
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  timePeriodEnd:
                    description: 'The end of the time period covered by the budget.
                      There are no restrictions on the end date. Format: 2017-01-01_12:00.'
                    type: string
                  timePeriodStart:
                    description: 'The start of the time period covered by the budget.
                      If you don''t specify a start date, AWS defaults to the start
                      of your chosen time period. The start date must come before
                      the end date. Format: 2017-01-01_12:00.'
                    type: string
                  timeUnit:
                    description: 'The length of time until a budget resets the actual
                      and forecasted spend. Valid values: MONTHLY, QUARTERLY, ANNUALLY,
                      and DAILY.'
                    type: string
                required:
                - budgetType
                - region
                - timeUnit
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BudgetStatus defines the observed state of Budget.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The ARN of the budget.
                    type: string
                  autoAdjustData:
                    description: Object containing [AutoAdjustData] which determines
                      the budget amount for an auto-adjusting budget.
                    items:
                      properties:
                        historicalOptions:
                          items:
                            properties:
                              lookbackAvailablePeriods:
                                type: number
                            type: object
                          type: array
                        lastAutoAdjustTime:
                          type: string
                      type: object
                    type: array
                  id:
                    description: id of resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

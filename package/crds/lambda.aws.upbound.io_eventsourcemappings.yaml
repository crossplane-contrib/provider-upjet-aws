---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: eventsourcemappings.lambda.aws.upbound.io
spec:
  group: lambda.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: EventSourceMapping
    listKind: EventSourceMappingList
    plural: eventsourcemappings
    singular: eventsourcemapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: EventSourceMapping is the Schema for the EventSourceMappings
          API. Manages an AWS Lambda Event Source Mapping.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EventSourceMappingSpec defines the desired state of EventSourceMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See AmazonManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    items:
                      properties:
                        onFailure:
                          description: Destination configuration for failed invocations.
                            See below.
                          items:
                            properties:
                              destinationArn:
                                description: ARN of the destination resource.
                                type: string
                              destinationArnRef:
                                description: Reference to a Queue in sqs to populate
                                  destinationArn.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              destinationArnSelector:
                                description: Selector for a Queue in sqs to populate
                                  destinationArn.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    items:
                      properties:
                        collectionName:
                          description: Name of the collection to consume within the
                            database. If you do not specify a collection, Lambda consumes
                            all collections.
                          type: string
                        databaseName:
                          description: Name of the database to consume within the
                            DocumentDB cluster.
                          type: string
                        fullDocument:
                          description: 'Determines what DocumentDB sends to your event
                            stream during document update operations. If set to UpdateLookup,
                            DocumentDB sends a delta describing the changes, along
                            with a copy of the entire document. Otherwise, DocumentDB
                            sends only a partial document that contains the changes.
                            Valid values: UpdateLookup, Default.'
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    items:
                      properties:
                        filter:
                          description: Set of up to 5 filter. If an event satisfies
                            at least one, Lambda sends the event to the function or
                            adds it to the next batch. See below.
                          items:
                            properties:
                              pattern:
                                description: Filter pattern up to 4096 characters.
                                  See Filter Rule Syntax.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionNameRef:
                    description: Reference to a Function in lambda to populate functionName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  functionNameSelector:
                    description: Selector for a Function in lambda to populate functionName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  kmsKeyArnRef:
                    description: Reference to a Key in kms to populate kmsKeyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyArnSelector:
                    description: Selector for a Key in kms to populate kmsKeyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    items:
                      properties:
                        metrics:
                          description: 'List containing the metrics to be produced
                            by the event source mapping. Valid values: EventCount.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    items:
                      properties:
                        maximumPollers:
                          description: Maximum number of event pollers this event
                            source can scale up to. The range is between 1 and 2000.
                          type: number
                        minimumPollers:
                          description: Minimum number of event pollers this event
                            source can scale down to. The range is between 1 and 200.
                          type: number
                      type: object
                    type: array
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    items:
                      properties:
                        maximumConcurrency:
                          description: Limits the number of concurrent instances that
                            the Amazon SQS event source can invoke. Must be greater
                            than or equal to 2. See Configuring maximum concurrency
                            for Amazon SQS event sources. You need to raise a Service
                            Quota Ticket to increase the concurrency beyond 1000.
                          type: number
                      type: object
                    type: array
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    items:
                      properties:
                        endpoints:
                          additionalProperties:
                            type: string
                          description: Map of endpoints for the self managed source.
                            For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                            and the value should be a string with a comma separated
                            list of broker endpoints.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See SelfManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See AmazonManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    items:
                      properties:
                        onFailure:
                          description: Destination configuration for failed invocations.
                            See below.
                          items:
                            properties:
                              destinationArn:
                                description: ARN of the destination resource.
                                type: string
                              destinationArnRef:
                                description: Reference to a Queue in sqs to populate
                                  destinationArn.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              destinationArnSelector:
                                description: Selector for a Queue in sqs to populate
                                  destinationArn.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    items:
                      properties:
                        collectionName:
                          description: Name of the collection to consume within the
                            database. If you do not specify a collection, Lambda consumes
                            all collections.
                          type: string
                        databaseName:
                          description: Name of the database to consume within the
                            DocumentDB cluster.
                          type: string
                        fullDocument:
                          description: 'Determines what DocumentDB sends to your event
                            stream during document update operations. If set to UpdateLookup,
                            DocumentDB sends a delta describing the changes, along
                            with a copy of the entire document. Otherwise, DocumentDB
                            sends only a partial document that contains the changes.
                            Valid values: UpdateLookup, Default.'
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    items:
                      properties:
                        filter:
                          description: Set of up to 5 filter. If an event satisfies
                            at least one, Lambda sends the event to the function or
                            adds it to the next batch. See below.
                          items:
                            properties:
                              pattern:
                                description: Filter pattern up to 4096 characters.
                                  See Filter Rule Syntax.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionNameRef:
                    description: Reference to a Function in lambda to populate functionName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  functionNameSelector:
                    description: Selector for a Function in lambda to populate functionName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  kmsKeyArnRef:
                    description: Reference to a Key in kms to populate kmsKeyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyArnSelector:
                    description: Selector for a Key in kms to populate kmsKeyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    items:
                      properties:
                        metrics:
                          description: 'List containing the metrics to be produced
                            by the event source mapping. Valid values: EventCount.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    items:
                      properties:
                        maximumPollers:
                          description: Maximum number of event pollers this event
                            source can scale up to. The range is between 1 and 2000.
                          type: number
                        minimumPollers:
                          description: Minimum number of event pollers this event
                            source can scale down to. The range is between 1 and 200.
                          type: number
                      type: object
                    type: array
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    items:
                      properties:
                        maximumConcurrency:
                          description: Limits the number of concurrent instances that
                            the Amazon SQS event source can invoke. Must be greater
                            than or equal to 2. See Configuring maximum concurrency
                            for Amazon SQS event sources. You need to raise a Service
                            Quota Ticket to increase the concurrency beyond 1000.
                          type: number
                      type: object
                    type: array
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    items:
                      properties:
                        endpoints:
                          additionalProperties:
                            type: string
                          description: Map of endpoints for the self managed source.
                            For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                            and the value should be a string with a comma separated
                            list of broker endpoints.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See SelfManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EventSourceMappingStatus defines the observed state of EventSourceMapping.
            properties:
              atProvider:
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See AmazonManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  arn:
                    description: Event source mapping ARN.
                    type: string
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    items:
                      properties:
                        onFailure:
                          description: Destination configuration for failed invocations.
                            See below.
                          items:
                            properties:
                              destinationArn:
                                description: ARN of the destination resource.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    items:
                      properties:
                        collectionName:
                          description: Name of the collection to consume within the
                            database. If you do not specify a collection, Lambda consumes
                            all collections.
                          type: string
                        databaseName:
                          description: Name of the database to consume within the
                            DocumentDB cluster.
                          type: string
                        fullDocument:
                          description: 'Determines what DocumentDB sends to your event
                            stream during document update operations. If set to UpdateLookup,
                            DocumentDB sends a delta describing the changes, along
                            with a copy of the entire document. Otherwise, DocumentDB
                            sends only a partial document that contains the changes.
                            Valid values: UpdateLookup, Default.'
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    items:
                      properties:
                        filter:
                          description: Set of up to 5 filter. If an event satisfies
                            at least one, Lambda sends the event to the function or
                            adds it to the next batch. See below.
                          items:
                            properties:
                              pattern:
                                description: Filter pattern up to 4096 characters.
                                  See Filter Rule Syntax.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionArn:
                    description: 'ARN of the Lambda function the event source mapping
                      is sending events to. (Note: this is a computed value that differs
                      from function_name above.)'
                    type: string
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  lastModified:
                    description: Date this resource was last modified.
                    type: string
                  lastProcessingResult:
                    description: Result of the last AWS Lambda invocation of your
                      Lambda function.
                    type: string
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    items:
                      properties:
                        metrics:
                          description: 'List containing the metrics to be produced
                            by the event source mapping. Valid values: EventCount.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    items:
                      properties:
                        maximumPollers:
                          description: Maximum number of event pollers this event
                            source can scale up to. The range is between 1 and 2000.
                          type: number
                        minimumPollers:
                          description: Minimum number of event pollers this event
                            source can scale down to. The range is between 1 and 200.
                          type: number
                      type: object
                    type: array
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    items:
                      properties:
                        maximumConcurrency:
                          description: Limits the number of concurrent instances that
                            the Amazon SQS event source can invoke. Must be greater
                            than or equal to 2. See Configuring maximum concurrency
                            for Amazon SQS event sources. You need to raise a Service
                            Quota Ticket to increase the concurrency beyond 1000.
                          type: number
                      type: object
                    type: array
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    items:
                      properties:
                        endpoints:
                          additionalProperties:
                            type: string
                          description: Map of endpoints for the self managed source.
                            For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                            and the value should be a string with a comma separated
                            list of broker endpoints.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    items:
                      properties:
                        consumerGroupId:
                          description: Kafka consumer group ID between 1 and 200 characters
                            for use when creating this event source mapping. If one
                            is not specified, this value will be automatically generated.
                            See SelfManagedKafkaEventSourceConfig Syntax.
                          type: string
                      type: object
                    type: array
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  state:
                    description: State of the event source mapping.
                    type: string
                  stateTransitionReason:
                    description: Reason the event source mapping is in its current
                      state.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                  uuid:
                    description: UUID of the created event source mapping.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: EventSourceMapping is the Schema for the EventSourceMappings
          API. Manages an AWS Lambda Event Source Mapping.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EventSourceMappingSpec defines the desired state of EventSourceMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See AmazonManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    properties:
                      onFailure:
                        description: Destination configuration for failed invocations.
                          See below.
                        properties:
                          destinationArn:
                            description: ARN of the destination resource.
                            type: string
                          destinationArnRef:
                            description: Reference to a Queue in sqs to populate destinationArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          destinationArnSelector:
                            description: Selector for a Queue in sqs to populate destinationArn.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    properties:
                      collectionName:
                        description: Name of the collection to consume within the
                          database. If you do not specify a collection, Lambda consumes
                          all collections.
                        type: string
                      databaseName:
                        description: Name of the database to consume within the DocumentDB
                          cluster.
                        type: string
                      fullDocument:
                        description: 'Determines what DocumentDB sends to your event
                          stream during document update operations. If set to UpdateLookup,
                          DocumentDB sends a delta describing the changes, along with
                          a copy of the entire document. Otherwise, DocumentDB sends
                          only a partial document that contains the changes. Valid
                          values: UpdateLookup, Default.'
                        type: string
                    type: object
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    properties:
                      filter:
                        description: Set of up to 5 filter. If an event satisfies
                          at least one, Lambda sends the event to the function or
                          adds it to the next batch. See below.
                        items:
                          properties:
                            pattern:
                              description: Filter pattern up to 4096 characters. See
                                Filter Rule Syntax.
                              type: string
                          type: object
                        type: array
                    type: object
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionNameRef:
                    description: Reference to a Function in lambda to populate functionName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  functionNameSelector:
                    description: Selector for a Function in lambda to populate functionName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  kmsKeyArnRef:
                    description: Reference to a Key in kms to populate kmsKeyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyArnSelector:
                    description: Selector for a Key in kms to populate kmsKeyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    properties:
                      metrics:
                        description: 'List containing the metrics to be produced by
                          the event source mapping. Valid values: EventCount.'
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    properties:
                      maximumPollers:
                        description: Maximum number of event pollers this event source
                          can scale up to. The range is between 1 and 2000.
                        type: number
                      minimumPollers:
                        description: Minimum number of event pollers this event source
                          can scale down to. The range is between 1 and 200.
                        type: number
                    type: object
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    properties:
                      maximumConcurrency:
                        description: Limits the number of concurrent instances that
                          the Amazon SQS event source can invoke. Must be greater
                          than or equal to 2. See Configuring maximum concurrency
                          for Amazon SQS event sources. You need to raise a Service
                          Quota Ticket to increase the concurrency beyond 1000.
                        type: number
                    type: object
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    properties:
                      endpoints:
                        additionalProperties:
                          type: string
                        description: Map of endpoints for the self managed source.
                          For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                          and the value should be a string with a comma separated
                          list of broker endpoints.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See SelfManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See AmazonManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    properties:
                      onFailure:
                        description: Destination configuration for failed invocations.
                          See below.
                        properties:
                          destinationArn:
                            description: ARN of the destination resource.
                            type: string
                          destinationArnRef:
                            description: Reference to a Queue in sqs to populate destinationArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          destinationArnSelector:
                            description: Selector for a Queue in sqs to populate destinationArn.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    properties:
                      collectionName:
                        description: Name of the collection to consume within the
                          database. If you do not specify a collection, Lambda consumes
                          all collections.
                        type: string
                      databaseName:
                        description: Name of the database to consume within the DocumentDB
                          cluster.
                        type: string
                      fullDocument:
                        description: 'Determines what DocumentDB sends to your event
                          stream during document update operations. If set to UpdateLookup,
                          DocumentDB sends a delta describing the changes, along with
                          a copy of the entire document. Otherwise, DocumentDB sends
                          only a partial document that contains the changes. Valid
                          values: UpdateLookup, Default.'
                        type: string
                    type: object
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    properties:
                      filter:
                        description: Set of up to 5 filter. If an event satisfies
                          at least one, Lambda sends the event to the function or
                          adds it to the next batch. See below.
                        items:
                          properties:
                            pattern:
                              description: Filter pattern up to 4096 characters. See
                                Filter Rule Syntax.
                              type: string
                          type: object
                        type: array
                    type: object
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionNameRef:
                    description: Reference to a Function in lambda to populate functionName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  functionNameSelector:
                    description: Selector for a Function in lambda to populate functionName.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  kmsKeyArnRef:
                    description: Reference to a Key in kms to populate kmsKeyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyArnSelector:
                    description: Selector for a Key in kms to populate kmsKeyArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    properties:
                      metrics:
                        description: 'List containing the metrics to be produced by
                          the event source mapping. Valid values: EventCount.'
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    properties:
                      maximumPollers:
                        description: Maximum number of event pollers this event source
                          can scale up to. The range is between 1 and 2000.
                        type: number
                      minimumPollers:
                        description: Minimum number of event pollers this event source
                          can scale down to. The range is between 1 and 200.
                        type: number
                    type: object
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    properties:
                      maximumConcurrency:
                        description: Limits the number of concurrent instances that
                          the Amazon SQS event source can invoke. Must be greater
                          than or equal to 2. See Configuring maximum concurrency
                          for Amazon SQS event sources. You need to raise a Service
                          Quota Ticket to increase the concurrency beyond 1000.
                        type: number
                    type: object
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    properties:
                      endpoints:
                        additionalProperties:
                          type: string
                        description: Map of endpoints for the self managed source.
                          For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                          and the value should be a string with a comma separated
                          list of broker endpoints.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See SelfManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EventSourceMappingStatus defines the observed state of EventSourceMapping.
            properties:
              atProvider:
                properties:
                  amazonManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Amazon Managed
                      Kafka sources. Incompatible with self_managed_event_source and
                      self_managed_kafka_event_source_config. See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See AmazonManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  arn:
                    description: Event source mapping ARN.
                    type: string
                  batchSize:
                    description: Largest number of records that Lambda will retrieve
                      from your event source at the time of invocation. Defaults to
                      100 for DynamoDB, Kinesis, MQ and MSK, 10 for SQS.
                    type: number
                  bisectBatchOnFunctionError:
                    description: Whether to split the batch in two and retry if the
                      function returns an error. Only available for stream sources
                      (DynamoDB and Kinesis). Defaults to false.
                    type: boolean
                  destinationConfig:
                    description: Amazon SQS queue, Amazon SNS topic or Amazon S3 bucket
                      (only available for Kafka sources) destination for failed records.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      Kafka sources (Amazon MSK and Self-managed Apache Kafka). See
                      below.
                    properties:
                      onFailure:
                        description: Destination configuration for failed invocations.
                          See below.
                        properties:
                          destinationArn:
                            description: ARN of the destination resource.
                            type: string
                        type: object
                    type: object
                  documentDbEventSourceConfig:
                    description: Configuration settings for a DocumentDB event source.
                      See below.
                    properties:
                      collectionName:
                        description: Name of the collection to consume within the
                          database. If you do not specify a collection, Lambda consumes
                          all collections.
                        type: string
                      databaseName:
                        description: Name of the database to consume within the DocumentDB
                          cluster.
                        type: string
                      fullDocument:
                        description: 'Determines what DocumentDB sends to your event
                          stream during document update operations. If set to UpdateLookup,
                          DocumentDB sends a delta describing the changes, along with
                          a copy of the entire document. Otherwise, DocumentDB sends
                          only a partial document that contains the changes. Valid
                          values: UpdateLookup, Default.'
                        type: string
                    type: object
                  enabled:
                    description: Whether the mapping is enabled. Defaults to true.
                    type: boolean
                  eventSourceArn:
                    description: Event source ARN - required for Kinesis stream, DynamoDB
                      stream, SQS queue, MQ broker, MSK cluster or DocumentDB change
                      stream. Incompatible with Self Managed Kafka source.
                    type: string
                  filterCriteria:
                    description: Criteria to use for event filtering Kinesis stream,
                      DynamoDB stream, SQS queue event sources. See below.
                    properties:
                      filter:
                        description: Set of up to 5 filter. If an event satisfies
                          at least one, Lambda sends the event to the function or
                          adds it to the next batch. See below.
                        items:
                          properties:
                            pattern:
                              description: Filter pattern up to 4096 characters. See
                                Filter Rule Syntax.
                              type: string
                          type: object
                        type: array
                    type: object
                  functionArn:
                    description: 'ARN of the Lambda function the event source mapping
                      is sending events to. (Note: this is a computed value that differs
                      from function_name above.)'
                    type: string
                  functionName:
                    description: Name or ARN of the Lambda function that will be subscribing
                      to events.
                    type: string
                  functionResponseTypes:
                    description: 'List of current response type enums applied to the
                      event source mapping for AWS Lambda checkpointing. Only available
                      for SQS and stream sources (DynamoDB and Kinesis). Valid values:
                      ReportBatchItemFailures.'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  kmsKeyArn:
                    description: ARN of the Key Management Service (KMS) customer
                      managed key that Lambda uses to encrypt your function's filter
                      criteria.
                    type: string
                  lastModified:
                    description: Date this resource was last modified.
                    type: string
                  lastProcessingResult:
                    description: Result of the last AWS Lambda invocation of your
                      Lambda function.
                    type: string
                  maximumBatchingWindowInSeconds:
                    description: Maximum amount of time to gather records before invoking
                      the function, in seconds (between 0 and 300). Records will continue
                      to buffer until either maximum_batching_window_in_seconds expires
                      or batch_size has been met. For streaming event sources, defaults
                      to as soon as records are available in the stream. Only available
                      for stream sources (DynamoDB and Kinesis) and SQS standard queues.
                    type: number
                  maximumRecordAgeInSeconds:
                    description: Maximum age of a record that Lambda sends to a function
                      for processing. Only available for stream sources (DynamoDB
                      and Kinesis). Must be either -1 (forever, and the default value)
                      or between 60 and 604800 (inclusive).
                    type: number
                  maximumRetryAttempts:
                    description: Maximum number of times to retry when the function
                      returns an error. Only available for stream sources (DynamoDB
                      and Kinesis). Minimum and default of -1 (forever), maximum of
                      10000.
                    type: number
                  metricsConfig:
                    description: CloudWatch metrics configuration of the event source.
                      Only available for stream sources (DynamoDB and Kinesis) and
                      SQS queues. See below.
                    properties:
                      metrics:
                        description: 'List containing the metrics to be produced by
                          the event source mapping. Valid values: EventCount.'
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  parallelizationFactor:
                    description: Number of batches to process from each shard concurrently.
                      Only available for stream sources (DynamoDB and Kinesis). Minimum
                      and default of 1, maximum of 10.
                    type: number
                  provisionedPollerConfig:
                    description: Event poller configuration for the event source.
                      Only valid for Amazon MSK or self-managed Apache Kafka sources.
                      See below.
                    properties:
                      maximumPollers:
                        description: Maximum number of event pollers this event source
                          can scale up to. The range is between 1 and 2000.
                        type: number
                      minimumPollers:
                        description: Minimum number of event pollers this event source
                          can scale down to. The range is between 1 and 200.
                        type: number
                    type: object
                  queues:
                    description: Name of the Amazon MQ broker destination queue to
                      consume. Only available for MQ sources. The list must contain
                      exactly one queue name.
                    items:
                      type: string
                    type: array
                  region:
                    description: |-
                      Region where this resource will be managed. Defaults to the Region set in the provider configuration.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  scalingConfig:
                    description: Scaling configuration of the event source. Only available
                      for SQS queues. See below.
                    properties:
                      maximumConcurrency:
                        description: Limits the number of concurrent instances that
                          the Amazon SQS event source can invoke. Must be greater
                          than or equal to 2. See Configuring maximum concurrency
                          for Amazon SQS event sources. You need to raise a Service
                          Quota Ticket to increase the concurrency beyond 1000.
                        type: number
                    type: object
                  selfManagedEventSource:
                    description: For Self Managed Kafka sources, the location of the
                      self managed cluster. If set, configuration must also include
                      source_access_configuration. See below.
                    properties:
                      endpoints:
                        additionalProperties:
                          type: string
                        description: Map of endpoints for the self managed source.
                          For Kafka self-managed sources, the key should be KAFKA_BOOTSTRAP_SERVERS
                          and the value should be a string with a comma separated
                          list of broker endpoints.
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                  selfManagedKafkaEventSourceConfig:
                    description: Additional configuration block for Self Managed Kafka
                      sources. Incompatible with event_source_arn and amazon_managed_kafka_event_source_config.
                      See below.
                    properties:
                      consumerGroupId:
                        description: Kafka consumer group ID between 1 and 200 characters
                          for use when creating this event source mapping. If one
                          is not specified, this value will be automatically generated.
                          See SelfManagedKafkaEventSourceConfig Syntax.
                        type: string
                    type: object
                  sourceAccessConfiguration:
                    description: For Self Managed Kafka sources, the access configuration
                      for the source. If set, configuration must also include self_managed_event_source.
                      See below.
                    items:
                      properties:
                        type:
                          description: Type of authentication protocol, VPC components,
                            or virtual host for your event source. For valid values,
                            refer to the AWS documentation.
                          type: string
                        uri:
                          description: URI for this configuration. For type VPC_SUBNET
                            the value should be subnet:subnet_id where subnet_id is
                            the value you would find in an aws_subnet resource's id
                            attribute. For type VPC_SECURITY_GROUP the value should
                            be security_group:security_group_id where security_group_id
                            is the value you would find in an aws_security_group resource's
                            id attribute.
                          type: string
                      type: object
                    type: array
                  startingPosition:
                    description: Position in the stream where AWS Lambda should start
                      reading. Must be one of AT_TIMESTAMP (Kinesis only), LATEST
                      or TRIM_HORIZON if getting events from Kinesis, DynamoDB, MSK
                      or Self Managed Apache Kafka. Must not be provided if getting
                      events from SQS. More information about these positions can
                      be found in the AWS DynamoDB Streams API Reference and AWS Kinesis
                      API Reference.
                    type: string
                  startingPositionTimestamp:
                    description: Timestamp in RFC3339 format of the data record which
                      to start reading when using starting_position set to AT_TIMESTAMP.
                      If a record with this exact timestamp does not exist, the next
                      later record is chosen. If the timestamp is older than the current
                      trim horizon, the oldest available record is chosen.
                    type: string
                  state:
                    description: State of the event source mapping.
                    type: string
                  stateTransitionReason:
                    description: Reason the event source mapping is in its current
                      state.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  topics:
                    description: Name of the Kafka topics. Only available for MSK
                      sources. A single topic name must be specified.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  tumblingWindowInSeconds:
                    description: Duration in seconds of a processing window for AWS
                      Lambda streaming analytics. The range is between 1 second up
                      to 900 seconds. Only available for stream sources (DynamoDB
                      and Kinesis).
                    type: number
                  uuid:
                    description: UUID of the created event source mapping.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: applications.emrserverless.aws.upbound.io
spec:
  group: emrserverless.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Application is the Schema for the Applications API. Manages an
          EMR Serverless Application
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec defines the desired state of Application
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  architecture:
                    description: –  The CPU architecture of an application. Valid
                      values are ARM64 or X86_64. Default value is X86_64.
                    type: string
                  autoStartConfiguration:
                    description: –  The configuration for an application to automatically
                      start on job submission.
                    items:
                      properties:
                        enabled:
                          description: Enables the application to automatically start
                            on job submission. Defaults to true.
                          type: boolean
                      type: object
                    type: array
                  autoStopConfiguration:
                    description: –  The configuration for an application to automatically
                      stop after a certain amount of time being idle.
                    items:
                      properties:
                        enabled:
                          description: Enables the application to automatically start
                            on job submission. Defaults to true.
                          type: boolean
                        idleTimeoutMinutes:
                          description: The amount of idle time in minutes after which
                            your application will automatically stop. Defaults to
                            15 minutes.
                          type: number
                      type: object
                    type: array
                  imageConfiguration:
                    description: –  The image configuration applied to all worker
                      types.
                    items:
                      properties:
                        imageUri:
                          description: The image URI.
                          type: string
                      required:
                      - imageUri
                      type: object
                    type: array
                  initialCapacity:
                    description: –  The capacity to initialize when the application
                      is created.
                    items:
                      properties:
                        initialCapacityConfig:
                          description: The initial capacity configuration per worker.
                          items:
                            properties:
                              workerConfiguration:
                                description: The resource configuration of the initial
                                  capacity configuration.
                                items:
                                  properties:
                                    cpu:
                                      description: The maximum allowed CPU for an
                                        application.
                                      type: string
                                    disk:
                                      description: The maximum allowed disk for an
                                        application.
                                      type: string
                                    memory:
                                      description: The maximum allowed resources for
                                        an application.
                                      type: string
                                  required:
                                  - cpu
                                  - memory
                                  type: object
                                type: array
                              workerCount:
                                description: The number of workers in the initial
                                  capacity configuration.
                                type: number
                            required:
                            - workerCount
                            type: object
                          type: array
                        initialCapacityType:
                          description: The worker type for an analytics framework.
                            For Spark applications, the key can either be set to Driver
                            or Executor. For Hive applications, it can be set to HiveDriver
                            or TezTask.
                          type: string
                      required:
                      - initialCapacityType
                      type: object
                    type: array
                  maximumCapacity:
                    description: –  The maximum capacity to allocate when the application
                      is created. This is cumulative across all workers at any given
                      point in time, not just when an application is created. No new
                      resources will be created once any one of the defined limits
                      is hit.
                    items:
                      properties:
                        cpu:
                          description: The maximum allowed CPU for an application.
                          type: string
                        disk:
                          description: The maximum allowed disk for an application.
                          type: string
                        memory:
                          description: The maximum allowed resources for an application.
                          type: string
                      required:
                      - cpu
                      - memory
                      type: object
                    type: array
                  name:
                    description: –  The name of the application.
                    type: string
                  networkConfiguration:
                    description: –  The network configuration for customer VPC connectivity.
                    items:
                      properties:
                        securityGroupIds:
                          description: The array of security group Ids for customer
                            VPC connectivity.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: The array of subnet Ids for customer VPC connectivity.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  releaseLabel:
                    description: –  The EMR release version associated with the application.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  type:
                    description: –  The type of application you want to start, such
                      as spark or hive.
                    type: string
                required:
                - region
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
            - message: releaseLabel is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.releaseLabel)
            - message: type is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)
          status:
            description: ApplicationStatus defines the observed state of Application.
            properties:
              atProvider:
                properties:
                  architecture:
                    description: –  The CPU architecture of an application. Valid
                      values are ARM64 or X86_64. Default value is X86_64.
                    type: string
                  arn:
                    description: ARN of the cluster.
                    type: string
                  autoStartConfiguration:
                    description: –  The configuration for an application to automatically
                      start on job submission.
                    items:
                      properties:
                        enabled:
                          description: Enables the application to automatically start
                            on job submission. Defaults to true.
                          type: boolean
                      type: object
                    type: array
                  autoStopConfiguration:
                    description: –  The configuration for an application to automatically
                      stop after a certain amount of time being idle.
                    items:
                      properties:
                        enabled:
                          description: Enables the application to automatically start
                            on job submission. Defaults to true.
                          type: boolean
                        idleTimeoutMinutes:
                          description: The amount of idle time in minutes after which
                            your application will automatically stop. Defaults to
                            15 minutes.
                          type: number
                      type: object
                    type: array
                  id:
                    description: The ID of the cluster.
                    type: string
                  imageConfiguration:
                    description: –  The image configuration applied to all worker
                      types.
                    items:
                      properties:
                        imageUri:
                          description: The image URI.
                          type: string
                      type: object
                    type: array
                  initialCapacity:
                    description: –  The capacity to initialize when the application
                      is created.
                    items:
                      properties:
                        initialCapacityConfig:
                          description: The initial capacity configuration per worker.
                          items:
                            properties:
                              workerConfiguration:
                                description: The resource configuration of the initial
                                  capacity configuration.
                                items:
                                  properties:
                                    cpu:
                                      description: The maximum allowed CPU for an
                                        application.
                                      type: string
                                    disk:
                                      description: The maximum allowed disk for an
                                        application.
                                      type: string
                                    memory:
                                      description: The maximum allowed resources for
                                        an application.
                                      type: string
                                  type: object
                                type: array
                              workerCount:
                                description: The number of workers in the initial
                                  capacity configuration.
                                type: number
                            type: object
                          type: array
                        initialCapacityType:
                          description: The worker type for an analytics framework.
                            For Spark applications, the key can either be set to Driver
                            or Executor. For Hive applications, it can be set to HiveDriver
                            or TezTask.
                          type: string
                      type: object
                    type: array
                  maximumCapacity:
                    description: –  The maximum capacity to allocate when the application
                      is created. This is cumulative across all workers at any given
                      point in time, not just when an application is created. No new
                      resources will be created once any one of the defined limits
                      is hit.
                    items:
                      properties:
                        cpu:
                          description: The maximum allowed CPU for an application.
                          type: string
                        disk:
                          description: The maximum allowed disk for an application.
                          type: string
                        memory:
                          description: The maximum allowed resources for an application.
                          type: string
                      type: object
                    type: array
                  name:
                    description: –  The name of the application.
                    type: string
                  networkConfiguration:
                    description: –  The network configuration for customer VPC connectivity.
                    items:
                      properties:
                        securityGroupIds:
                          description: The array of security group Ids for customer
                            VPC connectivity.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: The array of subnet Ids for customer VPC connectivity.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  releaseLabel:
                    description: –  The EMR release version associated with the application.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                  type:
                    description: –  The type of application you want to start, such
                      as spark or hive.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusters.emr.aws.upbound.io
spec:
  group: emr.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API. Provides an Elastic
          MapReduce Cluster
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalInfo:
                    description: JSON string for selecting additional features such
                      as adding proxy information.
                    type: string
                  applications:
                    description: A case-insensitive list of applications for Amazon
                      EMR to install and configure when launching the cluster. For
                      a list of applications available for each Amazon EMR release
                      version, see the Amazon EMR Release Guide.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  autoTerminationPolicy:
                    description: An auto-termination policy for an Amazon EMR cluster.
                      An auto-termination policy defines the amount of idle time in
                      seconds after which a cluster automatically terminates. See
                      Auto Termination Policy Below.
                    properties:
                      idleTimeout:
                        description: Specifies the amount of idle time in seconds
                          after which the cluster automatically terminates. You can
                          specify a minimum of 60 seconds and a maximum of 604800
                          seconds (seven days).
                        type: number
                    type: object
                  autoscalingRole:
                    description: IAM role for automatic scaling policies. The IAM
                      role provides permissions that the automatic scaling feature
                      requires to launch and terminate EC2 instances in an instance
                      group.
                    type: string
                  bootstrapAction:
                    description: Ordered list of bootstrap actions that will be run
                      before Hadoop is started on the cluster nodes. See below.
                    items:
                      properties:
                        args:
                          description: List of command line arguments to pass to the
                            bootstrap action script.
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the bootstrap action.
                          type: string
                        path:
                          description: Location of the script to run during a bootstrap
                            action. Can be either a location in Amazon S3 or on a
                            local file system.
                          type: string
                      type: object
                    type: array
                  configurations:
                    description: List of configurations supplied for the EMR cluster
                      you are creating. Supply a configuration object for applications
                      to override their default configuration. See AWS Documentation
                      for more information.
                    type: string
                  configurationsJson:
                    description: JSON string for supplying list of configurations
                      for the EMR cluster.
                    type: string
                  coreInstanceFleet:
                    description: Configuration block to use an Instance Fleet for
                      the core node type. Cannot be specified if any core_instance_group
                      configuration blocks are set. Detailed below.
                    properties:
                      instanceTypeConfigs:
                        description: Configuration block for instance fleet.
                        items:
                          properties:
                            bidPrice:
                              description: Bid price for each EC2 Spot instance type
                                as defined by instance_type. Expressed in USD. If
                                neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: string
                            bidPriceAsPercentageOfOnDemandPrice:
                              description: Bid price, as a percentage of On-Demand
                                price, for each EC2 Spot instance as defined by instance_type.
                                Expressed as a number (for example, 20 specifies 20%).
                                If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: number
                            configurations:
                              description: Configuration classification that applies
                                when provisioning cluster instances, which can include
                                configurations for applications and software that
                                run on the cluster. List of configuration blocks.
                              items:
                                properties:
                                  classification:
                                    description: Classification within a configuration.
                                    type: string
                                  properties:
                                    additionalProperties:
                                      type: string
                                    description: Key-Value map of Java properties
                                      that are set when the step runs. You can use
                                      these properties to pass key value pairs to
                                      your main function.
                                    type: object
                                    x-kubernetes-map-type: granular
                                type: object
                              type: array
                            ebsConfig:
                              description: Configuration block(s) for EBS volumes
                                attached to each instance in the instance group. Detailed
                                below.
                              items:
                                properties:
                                  iops:
                                    description: Number of I/O operations per second
                                      (IOPS) that the volume supports.
                                    type: number
                                  size:
                                    description: Volume size, in gibibytes (GiB).
                                    type: number
                                  type:
                                    description: Volume type. Valid options are gp3,
                                      gp2, io1, io2, standard, st1 and sc1. See EBS
                                      Volume Types.
                                    type: string
                                  volumesPerInstance:
                                    description: Number of EBS volumes with this configuration
                                      to attach to each EC2 instance in the instance
                                      group (default is 1).
                                    type: number
                                type: object
                              type: array
                            instanceType:
                              description: EC2 instance type, such as m4.xlarge.
                              type: string
                            weightedCapacity:
                              description: Number of units that a provisioned instance
                                of this type provides toward fulfilling the target
                                capacities defined in aws_emr_instance_fleet.
                              type: number
                          type: object
                        type: array
                      launchSpecifications:
                        description: Configuration block for launch specification.
                        properties:
                          onDemandSpecification:
                            description: Configuration block for on demand instances
                              launch specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    On-Demand instance fleets. Currently, the only
                                    option is lowest-price (the default), which launches
                                    the lowest price first.
                                  type: string
                              type: object
                            type: array
                          spotSpecification:
                            description: Configuration block for spot instances launch
                              specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    Spot instance fleets. Valid values include capacity-optimized,
                                    diversified, lowest-price, price-capacity-optimized.
                                    See the AWS documentation for details on each
                                    strategy type.
                                  type: string
                                blockDurationMinutes:
                                  description: Defined duration for Spot instances
                                    (also known as Spot blocks) in minutes. When specified,
                                    the Spot instance does not terminate before the
                                    defined duration expires, and defined duration
                                    pricing for Spot instances applies. Valid values
                                    are 60, 120, 180, 240, 300, or 360. The duration
                                    period starts as soon as a Spot instance receives
                                    its instance ID. At the end of the duration, Amazon
                                    EC2 marks the Spot instance for termination and
                                    provides a Spot instance termination notice, which
                                    gives the instance a two-minute warning before
                                    it terminates.
                                  type: number
                                timeoutAction:
                                  description: Action to take when TargetSpotCapacity
                                    has not been fulfilled when the TimeoutDurationMinutes
                                    has expired; that is, when all Spot instances
                                    could not be provisioned within the Spot provisioning
                                    timeout. Valid values are TERMINATE_CLUSTER and
                                    SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies
                                    that if no Spot instances are available, On-Demand
                                    Instances should be provisioned to fulfill any
                                    remaining Spot capacity.
                                  type: string
                                timeoutDurationMinutes:
                                  description: Spot provisioning timeout period in
                                    minutes. If Spot instances are not provisioned
                                    within this time period, the TimeOutAction is
                                    taken. Minimum value is 5 and maximum value is
                                    1440. The timeout applies only during initial
                                    provisioning, when the cluster is first created.
                                  type: number
                              type: object
                            type: array
                        type: object
                      name:
                        description: Friendly name given to the instance fleet.
                        type: string
                      targetOnDemandCapacity:
                        description: The target capacity of On-Demand units for the
                          instance fleet, which determines how many On-Demand instances
                          to provision.
                        type: number
                      targetSpotCapacity:
                        description: Target capacity of Spot units for the instance
                          fleet, which determines how many Spot instances to provision.
                        type: number
                    type: object
                  coreInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the core node type.
                    properties:
                      autoscalingPolicy:
                        description: String containing the EMR Auto Scaling Policy
                          JSON.
                        type: string
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be at least 1. Defaults to 1.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  customAmiId:
                    description: Custom Amazon Linux AMI for the cluster (instead
                      of an EMR-owned AMI). Available in Amazon EMR version 5.7.0
                      and later.
                    type: string
                  ebsRootVolumeSize:
                    description: Size in GiB of the EBS root device volume of the
                      Linux AMI that is used for each EC2 instance. Available in Amazon
                      EMR version 4.x and later.
                    type: number
                  ec2Attributes:
                    description: Attributes for the EC2 instances running the job
                      flow. See below.
                    properties:
                      additionalMasterSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the master node.
                        type: string
                      additionalMasterSecurityGroupsRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          additionalMasterSecurityGroups.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      additionalMasterSecurityGroupsSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          additionalMasterSecurityGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      additionalSlaveSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the slave nodes as a comma
                          separated string.
                        type: string
                      additionalSlaveSecurityGroupsRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          additionalSlaveSecurityGroups.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      additionalSlaveSecurityGroupsSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          additionalSlaveSecurityGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      emrManagedMasterSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the master node.
                        type: string
                      emrManagedMasterSecurityGroupRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          emrManagedMasterSecurityGroup.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      emrManagedMasterSecurityGroupSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          emrManagedMasterSecurityGroup.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      emrManagedSlaveSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the slave nodes.
                        type: string
                      emrManagedSlaveSecurityGroupRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          emrManagedSlaveSecurityGroup.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      emrManagedSlaveSecurityGroupSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          emrManagedSlaveSecurityGroup.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      instanceProfile:
                        description: Instance Profile for EC2 instances of the cluster
                          assume this role.
                        type: string
                      instanceProfileRef:
                        description: Reference to a InstanceProfile in iam to populate
                          instanceProfile.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      instanceProfileSelector:
                        description: Selector for a InstanceProfile in iam to populate
                          instanceProfile.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      keyName:
                        description: Amazon EC2 key pair that can be used to ssh to
                          the master node as the user called hadoop.
                        type: string
                      keyNameRef:
                        description: Reference to a KeyPair in ec2 to populate keyName.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      keyNameSelector:
                        description: Selector for a KeyPair in ec2 to populate keyName.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      serviceAccessSecurityGroup:
                        description: Identifier of the Amazon EC2 service-access security
                          group - required when the cluster runs on a private subnet.
                        type: string
                      subnetId:
                        description: VPC subnet id where you want the job flow to
                          launch. Cannot specify the cc1.4xlarge instance type for
                          nodes of a job flow launched in an Amazon VPC.
                        type: string
                      subnetIdRef:
                        description: Reference to a Subnet in ec2 to populate subnetId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      subnetIdSelector:
                        description: Selector for a Subnet in ec2 to populate subnetId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      subnetIds:
                        description: List of VPC subnet id-s where you want the job
                          flow to launch.  Amazon EMR identifies the best Availability
                          Zone to launch instances according to your fleet specifications.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  keepJobFlowAliveWhenNoSteps:
                    description: Switch on/off run cluster with no steps or when all
                      steps are complete (default is on)
                    type: boolean
                  kerberosAttributes:
                    description: Kerberos configuration for the cluster. See below.
                    properties:
                      adDomainJoinPasswordSecretRef:
                        description: Active Directory password for ad_domain_join_user.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      adDomainJoinUser:
                        description: Required only when establishing a cross-realm
                          trust with an Active Directory domain. A user with sufficient
                          privileges to join resources to the domain.
                        type: string
                      crossRealmTrustPrincipalPasswordSecretRef:
                        description: Required only when establishing a cross-realm
                          trust with a KDC in a different realm. The cross-realm principal
                          password, which must be identical across realms.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      kdcAdminPasswordSecretRef:
                        description: Password used within the cluster for the kadmin
                          service on the cluster-dedicated KDC, which maintains Kerberos
                          principals, password policies, and keytabs for the cluster.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      realm:
                        description: Name of the Kerberos realm to which all nodes
                          in a cluster belong. For example, EC2.INTERNAL
                        type: string
                    type: object
                  listStepsStates:
                    description: List of step states used to filter returned steps
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  logEncryptionKmsKeyId:
                    description: AWS KMS customer master key (CMK) key ID or arn used
                      for encrypting log files. This attribute is only available with
                      EMR version 5.30.0 and later, excluding EMR 6.0.0.
                    type: string
                  logUri:
                    description: S3 bucket to write the log files of the job flow.
                      If a value is not provided, logs are not created.
                    type: string
                  logUriRef:
                    description: Reference to a Bucket in s3 to populate logUri.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  logUriSelector:
                    description: Selector for a Bucket in s3 to populate logUri.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  masterInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the master node type.
                    properties:
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be 1 or 3. Defaults to 1. Launching with multiple master
                          nodes is only supported in EMR version 5.23.0+, and requires
                          this resource's core_instance_group to be configured. Public
                          (Internet accessible) instances must be created in VPC subnets
                          that have map public IP on launch enabled.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  name:
                    description: Name of the job flow.
                    type: string
                  placementGroupConfig:
                    description: The specified placement group configuration for an
                      Amazon EMR cluster.
                    items:
                      properties:
                        instanceRole:
                          description: 'Role of the instance in the cluster. Valid
                            Values: MASTER, CORE, TASK.'
                          type: string
                        placementStrategy:
                          description: 'EC2 Placement Group strategy associated with
                            instance role. Valid Values: SPREAD, PARTITION, CLUSTER,
                            NONE.'
                          type: string
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  releaseLabel:
                    description: Release label for the Amazon EMR release.
                    type: string
                  scaleDownBehavior:
                    description: Way that individual Amazon EC2 instances terminate
                      when an automatic scale-in activity occurs or an instance group
                      is resized.
                    type: string
                  securityConfiguration:
                    description: Security configuration name to attach to the EMR
                      cluster. Only valid for EMR clusters with release_label 4.8.0
                      or greater.
                    type: string
                  serviceRole:
                    description: IAM role that will be assumed by the Amazon EMR service
                      to access AWS resources.
                    type: string
                  serviceRoleRef:
                    description: Reference to a Role in iam to populate serviceRole.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceRoleSelector:
                    description: Selector for a Role in iam to populate serviceRole.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  step:
                    description: List of steps to run when creating the cluster. See
                      below. This argument is processed in attribute-as-blocks mode.
                    items:
                      properties:
                        actionOnFailure:
                          description: 'Action to take if the step fails. Valid values:
                            TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT,
                            and CONTINUE'
                          type: string
                        hadoopJarStep:
                          description: JAR file used for the step. See below.
                          properties:
                            args:
                              description: List of command line arguments to pass
                                to the bootstrap action script.
                              items:
                                type: string
                              type: array
                            jar:
                              description: Path to a JAR file run during the step.
                              type: string
                            mainClass:
                              description: Name of the main class in the specified
                                Java file. If not specified, the JAR file should specify
                                a Main-Class in its manifest file.
                              type: string
                            properties:
                              additionalProperties:
                                type: string
                              description: Key-Value map of Java properties that are
                                set when the step runs. You can use these properties
                                to pass key value pairs to your main function.
                              type: object
                              x-kubernetes-map-type: granular
                          type: object
                        name:
                          description: Name of the job flow.
                          type: string
                      type: object
                    type: array
                  stepConcurrencyLevel:
                    description: Number of steps that can be executed concurrently.
                      You can specify a maximum of 256 steps. Only valid for EMR clusters
                      with release_label 5.28.0 or greater (default is 1).
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  terminationProtection:
                    description: Switch on/off termination protection (default is
                      false, except when using multiple master nodes). Before attempting
                      to destroy the resource when termination protection is enabled,
                      this configuration must be applied with its value set to false.
                    type: boolean
                  unhealthyNodeReplacement:
                    description: Whether whether Amazon EMR should gracefully replace
                      core nodes that have degraded within the cluster. Default value
                      is false.
                    type: boolean
                  visibleToAllUsers:
                    description: Whether the job flow is visible to all IAM users
                      of the AWS account associated with the job flow. Default value
                      is true.
                    type: boolean
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  additionalInfo:
                    description: JSON string for selecting additional features such
                      as adding proxy information.
                    type: string
                  applications:
                    description: A case-insensitive list of applications for Amazon
                      EMR to install and configure when launching the cluster. For
                      a list of applications available for each Amazon EMR release
                      version, see the Amazon EMR Release Guide.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  autoTerminationPolicy:
                    description: An auto-termination policy for an Amazon EMR cluster.
                      An auto-termination policy defines the amount of idle time in
                      seconds after which a cluster automatically terminates. See
                      Auto Termination Policy Below.
                    properties:
                      idleTimeout:
                        description: Specifies the amount of idle time in seconds
                          after which the cluster automatically terminates. You can
                          specify a minimum of 60 seconds and a maximum of 604800
                          seconds (seven days).
                        type: number
                    type: object
                  autoscalingRole:
                    description: IAM role for automatic scaling policies. The IAM
                      role provides permissions that the automatic scaling feature
                      requires to launch and terminate EC2 instances in an instance
                      group.
                    type: string
                  bootstrapAction:
                    description: Ordered list of bootstrap actions that will be run
                      before Hadoop is started on the cluster nodes. See below.
                    items:
                      properties:
                        args:
                          description: List of command line arguments to pass to the
                            bootstrap action script.
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the bootstrap action.
                          type: string
                        path:
                          description: Location of the script to run during a bootstrap
                            action. Can be either a location in Amazon S3 or on a
                            local file system.
                          type: string
                      type: object
                    type: array
                  configurations:
                    description: List of configurations supplied for the EMR cluster
                      you are creating. Supply a configuration object for applications
                      to override their default configuration. See AWS Documentation
                      for more information.
                    type: string
                  configurationsJson:
                    description: JSON string for supplying list of configurations
                      for the EMR cluster.
                    type: string
                  coreInstanceFleet:
                    description: Configuration block to use an Instance Fleet for
                      the core node type. Cannot be specified if any core_instance_group
                      configuration blocks are set. Detailed below.
                    properties:
                      instanceTypeConfigs:
                        description: Configuration block for instance fleet.
                        items:
                          properties:
                            bidPrice:
                              description: Bid price for each EC2 Spot instance type
                                as defined by instance_type. Expressed in USD. If
                                neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: string
                            bidPriceAsPercentageOfOnDemandPrice:
                              description: Bid price, as a percentage of On-Demand
                                price, for each EC2 Spot instance as defined by instance_type.
                                Expressed as a number (for example, 20 specifies 20%).
                                If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: number
                            configurations:
                              description: Configuration classification that applies
                                when provisioning cluster instances, which can include
                                configurations for applications and software that
                                run on the cluster. List of configuration blocks.
                              items:
                                properties:
                                  classification:
                                    description: Classification within a configuration.
                                    type: string
                                  properties:
                                    additionalProperties:
                                      type: string
                                    description: Key-Value map of Java properties
                                      that are set when the step runs. You can use
                                      these properties to pass key value pairs to
                                      your main function.
                                    type: object
                                    x-kubernetes-map-type: granular
                                type: object
                              type: array
                            ebsConfig:
                              description: Configuration block(s) for EBS volumes
                                attached to each instance in the instance group. Detailed
                                below.
                              items:
                                properties:
                                  iops:
                                    description: Number of I/O operations per second
                                      (IOPS) that the volume supports.
                                    type: number
                                  size:
                                    description: Volume size, in gibibytes (GiB).
                                    type: number
                                  type:
                                    description: Volume type. Valid options are gp3,
                                      gp2, io1, io2, standard, st1 and sc1. See EBS
                                      Volume Types.
                                    type: string
                                  volumesPerInstance:
                                    description: Number of EBS volumes with this configuration
                                      to attach to each EC2 instance in the instance
                                      group (default is 1).
                                    type: number
                                type: object
                              type: array
                            instanceType:
                              description: EC2 instance type, such as m4.xlarge.
                              type: string
                            weightedCapacity:
                              description: Number of units that a provisioned instance
                                of this type provides toward fulfilling the target
                                capacities defined in aws_emr_instance_fleet.
                              type: number
                          type: object
                        type: array
                      launchSpecifications:
                        description: Configuration block for launch specification.
                        properties:
                          onDemandSpecification:
                            description: Configuration block for on demand instances
                              launch specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    On-Demand instance fleets. Currently, the only
                                    option is lowest-price (the default), which launches
                                    the lowest price first.
                                  type: string
                              type: object
                            type: array
                          spotSpecification:
                            description: Configuration block for spot instances launch
                              specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    Spot instance fleets. Valid values include capacity-optimized,
                                    diversified, lowest-price, price-capacity-optimized.
                                    See the AWS documentation for details on each
                                    strategy type.
                                  type: string
                                blockDurationMinutes:
                                  description: Defined duration for Spot instances
                                    (also known as Spot blocks) in minutes. When specified,
                                    the Spot instance does not terminate before the
                                    defined duration expires, and defined duration
                                    pricing for Spot instances applies. Valid values
                                    are 60, 120, 180, 240, 300, or 360. The duration
                                    period starts as soon as a Spot instance receives
                                    its instance ID. At the end of the duration, Amazon
                                    EC2 marks the Spot instance for termination and
                                    provides a Spot instance termination notice, which
                                    gives the instance a two-minute warning before
                                    it terminates.
                                  type: number
                                timeoutAction:
                                  description: Action to take when TargetSpotCapacity
                                    has not been fulfilled when the TimeoutDurationMinutes
                                    has expired; that is, when all Spot instances
                                    could not be provisioned within the Spot provisioning
                                    timeout. Valid values are TERMINATE_CLUSTER and
                                    SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies
                                    that if no Spot instances are available, On-Demand
                                    Instances should be provisioned to fulfill any
                                    remaining Spot capacity.
                                  type: string
                                timeoutDurationMinutes:
                                  description: Spot provisioning timeout period in
                                    minutes. If Spot instances are not provisioned
                                    within this time period, the TimeOutAction is
                                    taken. Minimum value is 5 and maximum value is
                                    1440. The timeout applies only during initial
                                    provisioning, when the cluster is first created.
                                  type: number
                              type: object
                            type: array
                        type: object
                      name:
                        description: Friendly name given to the instance fleet.
                        type: string
                      targetOnDemandCapacity:
                        description: The target capacity of On-Demand units for the
                          instance fleet, which determines how many On-Demand instances
                          to provision.
                        type: number
                      targetSpotCapacity:
                        description: Target capacity of Spot units for the instance
                          fleet, which determines how many Spot instances to provision.
                        type: number
                    type: object
                  coreInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the core node type.
                    properties:
                      autoscalingPolicy:
                        description: String containing the EMR Auto Scaling Policy
                          JSON.
                        type: string
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be at least 1. Defaults to 1.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  customAmiId:
                    description: Custom Amazon Linux AMI for the cluster (instead
                      of an EMR-owned AMI). Available in Amazon EMR version 5.7.0
                      and later.
                    type: string
                  ebsRootVolumeSize:
                    description: Size in GiB of the EBS root device volume of the
                      Linux AMI that is used for each EC2 instance. Available in Amazon
                      EMR version 4.x and later.
                    type: number
                  ec2Attributes:
                    description: Attributes for the EC2 instances running the job
                      flow. See below.
                    properties:
                      additionalMasterSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the master node.
                        type: string
                      additionalMasterSecurityGroupsRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          additionalMasterSecurityGroups.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      additionalMasterSecurityGroupsSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          additionalMasterSecurityGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      additionalSlaveSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the slave nodes as a comma
                          separated string.
                        type: string
                      additionalSlaveSecurityGroupsRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          additionalSlaveSecurityGroups.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      additionalSlaveSecurityGroupsSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          additionalSlaveSecurityGroups.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      emrManagedMasterSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the master node.
                        type: string
                      emrManagedMasterSecurityGroupRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          emrManagedMasterSecurityGroup.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      emrManagedMasterSecurityGroupSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          emrManagedMasterSecurityGroup.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      emrManagedSlaveSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the slave nodes.
                        type: string
                      emrManagedSlaveSecurityGroupRef:
                        description: Reference to a SecurityGroup in ec2 to populate
                          emrManagedSlaveSecurityGroup.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      emrManagedSlaveSecurityGroupSelector:
                        description: Selector for a SecurityGroup in ec2 to populate
                          emrManagedSlaveSecurityGroup.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      instanceProfile:
                        description: Instance Profile for EC2 instances of the cluster
                          assume this role.
                        type: string
                      instanceProfileRef:
                        description: Reference to a InstanceProfile in iam to populate
                          instanceProfile.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      instanceProfileSelector:
                        description: Selector for a InstanceProfile in iam to populate
                          instanceProfile.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      keyName:
                        description: Amazon EC2 key pair that can be used to ssh to
                          the master node as the user called hadoop.
                        type: string
                      keyNameRef:
                        description: Reference to a KeyPair in ec2 to populate keyName.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      keyNameSelector:
                        description: Selector for a KeyPair in ec2 to populate keyName.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      serviceAccessSecurityGroup:
                        description: Identifier of the Amazon EC2 service-access security
                          group - required when the cluster runs on a private subnet.
                        type: string
                      subnetId:
                        description: VPC subnet id where you want the job flow to
                          launch. Cannot specify the cc1.4xlarge instance type for
                          nodes of a job flow launched in an Amazon VPC.
                        type: string
                      subnetIdRef:
                        description: Reference to a Subnet in ec2 to populate subnetId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      subnetIdSelector:
                        description: Selector for a Subnet in ec2 to populate subnetId.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      subnetIds:
                        description: List of VPC subnet id-s where you want the job
                          flow to launch.  Amazon EMR identifies the best Availability
                          Zone to launch instances according to your fleet specifications.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  keepJobFlowAliveWhenNoSteps:
                    description: Switch on/off run cluster with no steps or when all
                      steps are complete (default is on)
                    type: boolean
                  kerberosAttributes:
                    description: Kerberos configuration for the cluster. See below.
                    properties:
                      adDomainJoinPasswordSecretRef:
                        description: Active Directory password for ad_domain_join_user.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      adDomainJoinUser:
                        description: Required only when establishing a cross-realm
                          trust with an Active Directory domain. A user with sufficient
                          privileges to join resources to the domain.
                        type: string
                      crossRealmTrustPrincipalPasswordSecretRef:
                        description: Required only when establishing a cross-realm
                          trust with a KDC in a different realm. The cross-realm principal
                          password, which must be identical across realms.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      kdcAdminPasswordSecretRef:
                        description: Password used within the cluster for the kadmin
                          service on the cluster-dedicated KDC, which maintains Kerberos
                          principals, password policies, and keytabs for the cluster.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      realm:
                        description: Name of the Kerberos realm to which all nodes
                          in a cluster belong. For example, EC2.INTERNAL
                        type: string
                    required:
                    - kdcAdminPasswordSecretRef
                    type: object
                  listStepsStates:
                    description: List of step states used to filter returned steps
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  logEncryptionKmsKeyId:
                    description: AWS KMS customer master key (CMK) key ID or arn used
                      for encrypting log files. This attribute is only available with
                      EMR version 5.30.0 and later, excluding EMR 6.0.0.
                    type: string
                  logUri:
                    description: S3 bucket to write the log files of the job flow.
                      If a value is not provided, logs are not created.
                    type: string
                  logUriRef:
                    description: Reference to a Bucket in s3 to populate logUri.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  logUriSelector:
                    description: Selector for a Bucket in s3 to populate logUri.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  masterInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the master node type.
                    properties:
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be 1 or 3. Defaults to 1. Launching with multiple master
                          nodes is only supported in EMR version 5.23.0+, and requires
                          this resource's core_instance_group to be configured. Public
                          (Internet accessible) instances must be created in VPC subnets
                          that have map public IP on launch enabled.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  name:
                    description: Name of the job flow.
                    type: string
                  placementGroupConfig:
                    description: The specified placement group configuration for an
                      Amazon EMR cluster.
                    items:
                      properties:
                        instanceRole:
                          description: 'Role of the instance in the cluster. Valid
                            Values: MASTER, CORE, TASK.'
                          type: string
                        placementStrategy:
                          description: 'EC2 Placement Group strategy associated with
                            instance role. Valid Values: SPREAD, PARTITION, CLUSTER,
                            NONE.'
                          type: string
                      type: object
                    type: array
                  releaseLabel:
                    description: Release label for the Amazon EMR release.
                    type: string
                  scaleDownBehavior:
                    description: Way that individual Amazon EC2 instances terminate
                      when an automatic scale-in activity occurs or an instance group
                      is resized.
                    type: string
                  securityConfiguration:
                    description: Security configuration name to attach to the EMR
                      cluster. Only valid for EMR clusters with release_label 4.8.0
                      or greater.
                    type: string
                  serviceRole:
                    description: IAM role that will be assumed by the Amazon EMR service
                      to access AWS resources.
                    type: string
                  serviceRoleRef:
                    description: Reference to a Role in iam to populate serviceRole.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceRoleSelector:
                    description: Selector for a Role in iam to populate serviceRole.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  step:
                    description: List of steps to run when creating the cluster. See
                      below. This argument is processed in attribute-as-blocks mode.
                    items:
                      properties:
                        actionOnFailure:
                          description: 'Action to take if the step fails. Valid values:
                            TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT,
                            and CONTINUE'
                          type: string
                        hadoopJarStep:
                          description: JAR file used for the step. See below.
                          properties:
                            args:
                              description: List of command line arguments to pass
                                to the bootstrap action script.
                              items:
                                type: string
                              type: array
                            jar:
                              description: Path to a JAR file run during the step.
                              type: string
                            mainClass:
                              description: Name of the main class in the specified
                                Java file. If not specified, the JAR file should specify
                                a Main-Class in its manifest file.
                              type: string
                            properties:
                              additionalProperties:
                                type: string
                              description: Key-Value map of Java properties that are
                                set when the step runs. You can use these properties
                                to pass key value pairs to your main function.
                              type: object
                              x-kubernetes-map-type: granular
                          type: object
                        name:
                          description: Name of the job flow.
                          type: string
                      type: object
                    type: array
                  stepConcurrencyLevel:
                    description: Number of steps that can be executed concurrently.
                      You can specify a maximum of 256 steps. Only valid for EMR clusters
                      with release_label 5.28.0 or greater (default is 1).
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  terminationProtection:
                    description: Switch on/off termination protection (default is
                      false, except when using multiple master nodes). Before attempting
                      to destroy the resource when termination protection is enabled,
                      this configuration must be applied with its value set to false.
                    type: boolean
                  unhealthyNodeReplacement:
                    description: Whether whether Amazon EMR should gracefully replace
                      core nodes that have degraded within the cluster. Default value
                      is false.
                    type: boolean
                  visibleToAllUsers:
                    description: Whether the job flow is visible to all IAM users
                      of the AWS account associated with the job flow. Default value
                      is true.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.releaseLabel is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.releaseLabel)
                || (has(self.initProvider) && has(self.initProvider.releaseLabel))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  additionalInfo:
                    description: JSON string for selecting additional features such
                      as adding proxy information.
                    type: string
                  applications:
                    description: A case-insensitive list of applications for Amazon
                      EMR to install and configure when launching the cluster. For
                      a list of applications available for each Amazon EMR release
                      version, see the Amazon EMR Release Guide.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  arn:
                    description: ARN of the cluster.
                    type: string
                  autoTerminationPolicy:
                    description: An auto-termination policy for an Amazon EMR cluster.
                      An auto-termination policy defines the amount of idle time in
                      seconds after which a cluster automatically terminates. See
                      Auto Termination Policy Below.
                    properties:
                      idleTimeout:
                        description: Specifies the amount of idle time in seconds
                          after which the cluster automatically terminates. You can
                          specify a minimum of 60 seconds and a maximum of 604800
                          seconds (seven days).
                        type: number
                    type: object
                  autoscalingRole:
                    description: IAM role for automatic scaling policies. The IAM
                      role provides permissions that the automatic scaling feature
                      requires to launch and terminate EC2 instances in an instance
                      group.
                    type: string
                  bootstrapAction:
                    description: Ordered list of bootstrap actions that will be run
                      before Hadoop is started on the cluster nodes. See below.
                    items:
                      properties:
                        args:
                          description: List of command line arguments to pass to the
                            bootstrap action script.
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the bootstrap action.
                          type: string
                        path:
                          description: Location of the script to run during a bootstrap
                            action. Can be either a location in Amazon S3 or on a
                            local file system.
                          type: string
                      type: object
                    type: array
                  clusterState:
                    type: string
                  configurations:
                    description: List of configurations supplied for the EMR cluster
                      you are creating. Supply a configuration object for applications
                      to override their default configuration. See AWS Documentation
                      for more information.
                    type: string
                  configurationsJson:
                    description: JSON string for supplying list of configurations
                      for the EMR cluster.
                    type: string
                  coreInstanceFleet:
                    description: Configuration block to use an Instance Fleet for
                      the core node type. Cannot be specified if any core_instance_group
                      configuration blocks are set. Detailed below.
                    properties:
                      id:
                        description: Master node type Instance Group ID, if using
                          Instance Group for this node type.
                        type: string
                      instanceTypeConfigs:
                        description: Configuration block for instance fleet.
                        items:
                          properties:
                            bidPrice:
                              description: Bid price for each EC2 Spot instance type
                                as defined by instance_type. Expressed in USD. If
                                neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: string
                            bidPriceAsPercentageOfOnDemandPrice:
                              description: Bid price, as a percentage of On-Demand
                                price, for each EC2 Spot instance as defined by instance_type.
                                Expressed as a number (for example, 20 specifies 20%).
                                If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: number
                            configurations:
                              description: Configuration classification that applies
                                when provisioning cluster instances, which can include
                                configurations for applications and software that
                                run on the cluster. List of configuration blocks.
                              items:
                                properties:
                                  classification:
                                    description: Classification within a configuration.
                                    type: string
                                  properties:
                                    additionalProperties:
                                      type: string
                                    description: Key-Value map of Java properties
                                      that are set when the step runs. You can use
                                      these properties to pass key value pairs to
                                      your main function.
                                    type: object
                                    x-kubernetes-map-type: granular
                                type: object
                              type: array
                            ebsConfig:
                              description: Configuration block(s) for EBS volumes
                                attached to each instance in the instance group. Detailed
                                below.
                              items:
                                properties:
                                  iops:
                                    description: Number of I/O operations per second
                                      (IOPS) that the volume supports.
                                    type: number
                                  size:
                                    description: Volume size, in gibibytes (GiB).
                                    type: number
                                  type:
                                    description: Volume type. Valid options are gp3,
                                      gp2, io1, io2, standard, st1 and sc1. See EBS
                                      Volume Types.
                                    type: string
                                  volumesPerInstance:
                                    description: Number of EBS volumes with this configuration
                                      to attach to each EC2 instance in the instance
                                      group (default is 1).
                                    type: number
                                type: object
                              type: array
                            instanceType:
                              description: EC2 instance type, such as m4.xlarge.
                              type: string
                            weightedCapacity:
                              description: Number of units that a provisioned instance
                                of this type provides toward fulfilling the target
                                capacities defined in aws_emr_instance_fleet.
                              type: number
                          type: object
                        type: array
                      launchSpecifications:
                        description: Configuration block for launch specification.
                        properties:
                          onDemandSpecification:
                            description: Configuration block for on demand instances
                              launch specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    On-Demand instance fleets. Currently, the only
                                    option is lowest-price (the default), which launches
                                    the lowest price first.
                                  type: string
                              type: object
                            type: array
                          spotSpecification:
                            description: Configuration block for spot instances launch
                              specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    Spot instance fleets. Valid values include capacity-optimized,
                                    diversified, lowest-price, price-capacity-optimized.
                                    See the AWS documentation for details on each
                                    strategy type.
                                  type: string
                                blockDurationMinutes:
                                  description: Defined duration for Spot instances
                                    (also known as Spot blocks) in minutes. When specified,
                                    the Spot instance does not terminate before the
                                    defined duration expires, and defined duration
                                    pricing for Spot instances applies. Valid values
                                    are 60, 120, 180, 240, 300, or 360. The duration
                                    period starts as soon as a Spot instance receives
                                    its instance ID. At the end of the duration, Amazon
                                    EC2 marks the Spot instance for termination and
                                    provides a Spot instance termination notice, which
                                    gives the instance a two-minute warning before
                                    it terminates.
                                  type: number
                                timeoutAction:
                                  description: Action to take when TargetSpotCapacity
                                    has not been fulfilled when the TimeoutDurationMinutes
                                    has expired; that is, when all Spot instances
                                    could not be provisioned within the Spot provisioning
                                    timeout. Valid values are TERMINATE_CLUSTER and
                                    SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies
                                    that if no Spot instances are available, On-Demand
                                    Instances should be provisioned to fulfill any
                                    remaining Spot capacity.
                                  type: string
                                timeoutDurationMinutes:
                                  description: Spot provisioning timeout period in
                                    minutes. If Spot instances are not provisioned
                                    within this time period, the TimeOutAction is
                                    taken. Minimum value is 5 and maximum value is
                                    1440. The timeout applies only during initial
                                    provisioning, when the cluster is first created.
                                  type: number
                              type: object
                            type: array
                        type: object
                      name:
                        description: Friendly name given to the instance fleet.
                        type: string
                      provisionedOnDemandCapacity:
                        type: number
                      provisionedSpotCapacity:
                        type: number
                      targetOnDemandCapacity:
                        description: The target capacity of On-Demand units for the
                          instance fleet, which determines how many On-Demand instances
                          to provision.
                        type: number
                      targetSpotCapacity:
                        description: Target capacity of Spot units for the instance
                          fleet, which determines how many Spot instances to provision.
                        type: number
                    type: object
                  coreInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the core node type.
                    properties:
                      autoscalingPolicy:
                        description: String containing the EMR Auto Scaling Policy
                          JSON.
                        type: string
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      id:
                        description: Master node type Instance Group ID, if using
                          Instance Group for this node type.
                        type: string
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be at least 1. Defaults to 1.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  customAmiId:
                    description: Custom Amazon Linux AMI for the cluster (instead
                      of an EMR-owned AMI). Available in Amazon EMR version 5.7.0
                      and later.
                    type: string
                  ebsRootVolumeSize:
                    description: Size in GiB of the EBS root device volume of the
                      Linux AMI that is used for each EC2 instance. Available in Amazon
                      EMR version 4.x and later.
                    type: number
                  ec2Attributes:
                    description: Attributes for the EC2 instances running the job
                      flow. See below.
                    properties:
                      additionalMasterSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the master node.
                        type: string
                      additionalSlaveSecurityGroups:
                        description: String containing a comma separated list of additional
                          Amazon EC2 security group IDs for the slave nodes as a comma
                          separated string.
                        type: string
                      emrManagedMasterSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the master node.
                        type: string
                      emrManagedSlaveSecurityGroup:
                        description: Identifier of the Amazon EC2 EMR-Managed security
                          group for the slave nodes.
                        type: string
                      instanceProfile:
                        description: Instance Profile for EC2 instances of the cluster
                          assume this role.
                        type: string
                      keyName:
                        description: Amazon EC2 key pair that can be used to ssh to
                          the master node as the user called hadoop.
                        type: string
                      serviceAccessSecurityGroup:
                        description: Identifier of the Amazon EC2 service-access security
                          group - required when the cluster runs on a private subnet.
                        type: string
                      subnetId:
                        description: VPC subnet id where you want the job flow to
                          launch. Cannot specify the cc1.4xlarge instance type for
                          nodes of a job flow launched in an Amazon VPC.
                        type: string
                      subnetIds:
                        description: List of VPC subnet id-s where you want the job
                          flow to launch.  Amazon EMR identifies the best Availability
                          Zone to launch instances according to your fleet specifications.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  id:
                    description: ID of the cluster.
                    type: string
                  keepJobFlowAliveWhenNoSteps:
                    description: Switch on/off run cluster with no steps or when all
                      steps are complete (default is on)
                    type: boolean
                  kerberosAttributes:
                    description: Kerberos configuration for the cluster. See below.
                    properties:
                      adDomainJoinUser:
                        description: Required only when establishing a cross-realm
                          trust with an Active Directory domain. A user with sufficient
                          privileges to join resources to the domain.
                        type: string
                      realm:
                        description: Name of the Kerberos realm to which all nodes
                          in a cluster belong. For example, EC2.INTERNAL
                        type: string
                    type: object
                  listStepsStates:
                    description: List of step states used to filter returned steps
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  logEncryptionKmsKeyId:
                    description: AWS KMS customer master key (CMK) key ID or arn used
                      for encrypting log files. This attribute is only available with
                      EMR version 5.30.0 and later, excluding EMR 6.0.0.
                    type: string
                  logUri:
                    description: S3 bucket to write the log files of the job flow.
                      If a value is not provided, logs are not created.
                    type: string
                  masterInstanceFleet:
                    description: Configuration block to use an Instance Fleet for
                      the master node type. Cannot be specified if any master_instance_group
                      configuration blocks are set. Detailed below.
                    properties:
                      id:
                        description: Master node type Instance Group ID, if using
                          Instance Group for this node type.
                        type: string
                      instanceTypeConfigs:
                        description: Configuration block for instance fleet.
                        items:
                          properties:
                            bidPrice:
                              description: Bid price for each EC2 instance in the
                                instance group, expressed in USD. By setting this
                                attribute, the instance group is being declared as
                                a Spot Instance, and will implicitly create a Spot
                                request. Leave this blank to use On-Demand Instances.
                              type: string
                            bidPriceAsPercentageOfOnDemandPrice:
                              description: Bid price, as a percentage of On-Demand
                                price, for each EC2 Spot instance as defined by instance_type.
                                Expressed as a number (for example, 20 specifies 20%).
                                If neither bid_price nor bid_price_as_percentage_of_on_demand_price
                                is provided, bid_price_as_percentage_of_on_demand_price
                                defaults to 100%.
                              type: number
                            configurations:
                              description: Configuration classification that applies
                                when provisioning cluster instances, which can include
                                configurations for applications and software that
                                run on the cluster. List of configuration blocks.
                              items:
                                properties:
                                  classification:
                                    description: Classification within a configuration.
                                    type: string
                                  properties:
                                    additionalProperties:
                                      type: string
                                    description: Key-Value map of Java properties
                                      that are set when the step runs. You can use
                                      these properties to pass key value pairs to
                                      your main function.
                                    type: object
                                    x-kubernetes-map-type: granular
                                type: object
                              type: array
                            ebsConfig:
                              description: Configuration block(s) for EBS volumes
                                attached to each instance in the instance group. Detailed
                                below.
                              items:
                                properties:
                                  iops:
                                    description: Number of I/O operations per second
                                      (IOPS) that the volume supports.
                                    type: number
                                  size:
                                    description: Volume size, in gibibytes (GiB).
                                    type: number
                                  type:
                                    description: Volume type. Valid options are gp3,
                                      gp2, io1, io2, standard, st1 and sc1. See EBS
                                      Volume Types.
                                    type: string
                                  volumesPerInstance:
                                    description: Number of EBS volumes with this configuration
                                      to attach to each EC2 instance in the instance
                                      group (default is 1).
                                    type: number
                                type: object
                              type: array
                            instanceType:
                              description: EC2 instance type for all instances in
                                the instance group.
                              type: string
                            weightedCapacity:
                              description: Number of units that a provisioned instance
                                of this type provides toward fulfilling the target
                                capacities defined in aws_emr_instance_fleet.
                              type: number
                          type: object
                        type: array
                      launchSpecifications:
                        description: Configuration block for launch specification.
                        properties:
                          onDemandSpecification:
                            description: Configuration block for on demand instances
                              launch specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    Spot instance fleets. Valid values include capacity-optimized,
                                    diversified, lowest-price, price-capacity-optimized.
                                    See the AWS documentation for details on each
                                    strategy type.
                                  type: string
                              type: object
                            type: array
                          spotSpecification:
                            description: Configuration block for spot instances launch
                              specifications.
                            items:
                              properties:
                                allocationStrategy:
                                  description: Specifies the strategy to use in launching
                                    Spot instance fleets. Valid values include capacity-optimized,
                                    diversified, lowest-price, price-capacity-optimized.
                                    See the AWS documentation for details on each
                                    strategy type.
                                  type: string
                                blockDurationMinutes:
                                  description: Defined duration for Spot instances
                                    (also known as Spot blocks) in minutes. When specified,
                                    the Spot instance does not terminate before the
                                    defined duration expires, and defined duration
                                    pricing for Spot instances applies. Valid values
                                    are 60, 120, 180, 240, 300, or 360. The duration
                                    period starts as soon as a Spot instance receives
                                    its instance ID. At the end of the duration, Amazon
                                    EC2 marks the Spot instance for termination and
                                    provides a Spot instance termination notice, which
                                    gives the instance a two-minute warning before
                                    it terminates.
                                  type: number
                                timeoutAction:
                                  description: Action to take when TargetSpotCapacity
                                    has not been fulfilled when the TimeoutDurationMinutes
                                    has expired; that is, when all Spot instances
                                    could not be provisioned within the Spot provisioning
                                    timeout. Valid values are TERMINATE_CLUSTER and
                                    SWITCH_TO_ON_DEMAND. SWITCH_TO_ON_DEMAND specifies
                                    that if no Spot instances are available, On-Demand
                                    Instances should be provisioned to fulfill any
                                    remaining Spot capacity.
                                  type: string
                                timeoutDurationMinutes:
                                  description: Spot provisioning timeout period in
                                    minutes. If Spot instances are not provisioned
                                    within this time period, the TimeOutAction is
                                    taken. Minimum value is 5 and maximum value is
                                    1440. The timeout applies only during initial
                                    provisioning, when the cluster is first created.
                                  type: number
                              type: object
                            type: array
                        type: object
                      name:
                        description: Friendly name given to the instance fleet.
                        type: string
                      provisionedOnDemandCapacity:
                        type: number
                      provisionedSpotCapacity:
                        type: number
                      targetOnDemandCapacity:
                        description: Target capacity of On-Demand units for the instance
                          fleet, which determines how many On-Demand instances to
                          provision.
                        type: number
                      targetSpotCapacity:
                        description: Target capacity of Spot units for the instance
                          fleet, which determines how many Spot instances to provision.
                        type: number
                    type: object
                  masterInstanceGroup:
                    description: Configuration block to use an Instance Group for
                      the master node type.
                    properties:
                      bidPrice:
                        description: Bid price for each EC2 instance in the instance
                          group, expressed in USD. By setting this attribute, the
                          instance group is being declared as a Spot Instance, and
                          will implicitly create a Spot request. Leave this blank
                          to use On-Demand Instances.
                        type: string
                      ebsConfig:
                        description: Configuration block(s) for EBS volumes attached
                          to each instance in the instance group. Detailed below.
                        items:
                          properties:
                            iops:
                              description: Number of I/O operations per second (IOPS)
                                that the volume supports.
                              type: number
                            size:
                              description: Volume size, in gibibytes (GiB).
                              type: number
                            throughput:
                              description: The throughput, in mebibyte per second
                                (MiB/s).
                              type: number
                            type:
                              description: Volume type. Valid options are gp3, gp2,
                                io1, io2, standard, st1 and sc1. See EBS Volume Types.
                              type: string
                            volumesPerInstance:
                              description: Number of EBS volumes with this configuration
                                to attach to each EC2 instance in the instance group
                                (default is 1).
                              type: number
                          type: object
                        type: array
                      id:
                        description: Master node type Instance Group ID, if using
                          Instance Group for this node type.
                        type: string
                      instanceCount:
                        description: Target number of instances for the instance group.
                          Must be 1 or 3. Defaults to 1. Launching with multiple master
                          nodes is only supported in EMR version 5.23.0+, and requires
                          this resource's core_instance_group to be configured. Public
                          (Internet accessible) instances must be created in VPC subnets
                          that have map public IP on launch enabled.
                        type: number
                      instanceType:
                        description: EC2 instance type for all instances in the instance
                          group.
                        type: string
                      name:
                        description: Friendly name given to the instance group.
                        type: string
                    type: object
                  masterPublicDns:
                    description: The DNS name of the master node. If the cluster is
                      on a private subnet, this is the private DNS name. On a public
                      subnet, this is the public DNS name.
                    type: string
                  name:
                    description: Name of the job flow.
                    type: string
                  placementGroupConfig:
                    description: The specified placement group configuration for an
                      Amazon EMR cluster.
                    items:
                      properties:
                        instanceRole:
                          description: 'Role of the instance in the cluster. Valid
                            Values: MASTER, CORE, TASK.'
                          type: string
                        placementStrategy:
                          description: 'EC2 Placement Group strategy associated with
                            instance role. Valid Values: SPREAD, PARTITION, CLUSTER,
                            NONE.'
                          type: string
                      type: object
                    type: array
                  releaseLabel:
                    description: Release label for the Amazon EMR release.
                    type: string
                  scaleDownBehavior:
                    description: Way that individual Amazon EC2 instances terminate
                      when an automatic scale-in activity occurs or an instance group
                      is resized.
                    type: string
                  securityConfiguration:
                    description: Security configuration name to attach to the EMR
                      cluster. Only valid for EMR clusters with release_label 4.8.0
                      or greater.
                    type: string
                  serviceRole:
                    description: IAM role that will be assumed by the Amazon EMR service
                      to access AWS resources.
                    type: string
                  step:
                    description: List of steps to run when creating the cluster. See
                      below. This argument is processed in attribute-as-blocks mode.
                    items:
                      properties:
                        actionOnFailure:
                          description: 'Action to take if the step fails. Valid values:
                            TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT,
                            and CONTINUE'
                          type: string
                        hadoopJarStep:
                          description: JAR file used for the step. See below.
                          properties:
                            args:
                              description: List of command line arguments to pass
                                to the bootstrap action script.
                              items:
                                type: string
                              type: array
                            jar:
                              description: Path to a JAR file run during the step.
                              type: string
                            mainClass:
                              description: Name of the main class in the specified
                                Java file. If not specified, the JAR file should specify
                                a Main-Class in its manifest file.
                              type: string
                            properties:
                              additionalProperties:
                                type: string
                              description: Key-Value map of Java properties that are
                                set when the step runs. You can use these properties
                                to pass key value pairs to your main function.
                              type: object
                              x-kubernetes-map-type: granular
                          type: object
                        name:
                          description: Name of the job flow.
                          type: string
                      type: object
                    type: array
                  stepConcurrencyLevel:
                    description: Number of steps that can be executed concurrently.
                      You can specify a maximum of 256 steps. Only valid for EMR clusters
                      with release_label 5.28.0 or greater (default is 1).
                    type: number
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                    x-kubernetes-map-type: granular
                  terminationProtection:
                    description: Switch on/off termination protection (default is
                      false, except when using multiple master nodes). Before attempting
                      to destroy the resource when termination protection is enabled,
                      this configuration must be applied with its value set to false.
                    type: boolean
                  unhealthyNodeReplacement:
                    description: Whether whether Amazon EMR should gracefully replace
                      core nodes that have degraded within the cluster. Default value
                      is false.
                    type: boolean
                  visibleToAllUsers:
                    description: Whether the job flow is visible to all IAM users
                      of the AWS account associated with the job flow. Default value
                      is true.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

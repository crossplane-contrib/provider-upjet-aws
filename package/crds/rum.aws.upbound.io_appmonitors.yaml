---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: appmonitors.rum.aws.upbound.io
spec:
  group: rum.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: AppMonitor
    listKind: AppMonitorList
    plural: appmonitors
    singular: appmonitor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AppMonitor is the Schema for the AppMonitors API. Provides a
          CloudWatch RUM App Monitor resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppMonitorSpec defines the desired state of AppMonitor
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appMonitorConfiguration:
                    description: configuration data for the app monitor. See app_monitor_configuration
                      below.
                    items:
                      properties:
                        allowCookies:
                          description: If you set this to true, RUM web client sets
                            two cookies, a session cookie  and a user cookie. The
                            cookies allow the RUM web client to collect data relating
                            to the number of users an application has and the behavior
                            of the application across a sequence of events. Cookies
                            are stored in the top-level domain of the current page.
                          type: boolean
                        enableXray:
                          description: If you set this to true, RUM enables X-Ray
                            tracing for the user sessions  that RUM samples. RUM adds
                            an X-Ray trace header to allowed HTTP requests. It also
                            records an X-Ray segment for allowed HTTP requests.
                          type: boolean
                        excludedPages:
                          description: A list of URLs in your website or application
                            to exclude from RUM data collection.
                          items:
                            type: string
                          type: array
                        favoritePages:
                          description: A list of pages in the CloudWatch RUM console
                            that are to be displayed with a "favorite" icon.
                          items:
                            type: string
                          type: array
                        guestRoleArn:
                          description: The ARN of the guest IAM role that is attached
                            to the Amazon Cognito identity pool that is used to authorize
                            the sending of data to RUM.
                          type: string
                        identityPoolId:
                          description: The ID of the Amazon Cognito identity pool
                            that is used to authorize the sending of data to RUM.
                          type: string
                        includedPages:
                          description: If this app monitor is to collect data from
                            only certain pages in your application, this structure
                            lists those pages.
                          items:
                            type: string
                          type: array
                        sessionSampleRate:
                          description: Specifies the percentage of user sessions to
                            use for RUM data collection. Choosing a higher percentage
                            gives you more data but also incurs more costs. The number
                            you specify is the percentage of user sessions that will
                            be used. Default value is 0.1.
                          type: number
                        telemetries:
                          description: An array that lists the types of telemetry
                            data that this app monitor is to collect. Valid values
                            are errors, performance, and http.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  customEvents:
                    description: Specifies whether this app monitor allows the web
                      client to define and send custom events. If you omit this parameter,
                      custom events are DISABLED. See custom_events below.
                    items:
                      properties:
                        status:
                          description: Specifies whether this app monitor allows the
                            web client to define and send custom events. The default
                            is for custom events to be DISABLED. Valid values are
                            DISABLED and ENABLED.
                          type: string
                      type: object
                    type: array
                  cwLogEnabled:
                    description: Data collected by RUM is kept by RUM for 30 days
                      and then deleted. This parameter  specifies whether RUM sends
                      a copy of this telemetry data to Amazon CloudWatch Logs in your
                      account. This enables you to keep the telemetry data for more
                      than 30 days, but it does incur Amazon CloudWatch Logs charges.
                      Default value is false.
                    type: boolean
                  domain:
                    description: The top-level internet domain name for which your
                      application has administrative authority.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - domain
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AppMonitorStatus defines the observed state of AppMonitor.
            properties:
              atProvider:
                properties:
                  appMonitorId:
                    description: The unique ID of the app monitor. Useful for JS templates.
                    type: string
                  arn:
                    description: The Amazon Resource Name (ARN) specifying the app
                      monitor.
                    type: string
                  cwLogGroup:
                    description: The name of the log group where the copies are stored.
                    type: string
                  id:
                    description: The CloudWatch RUM name as it is the identifier of
                      a RUM.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

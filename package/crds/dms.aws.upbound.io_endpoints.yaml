---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: endpoints.dms.aws.upbound.io
spec:
  group: dms.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Endpoint is the Schema for the Endpoints API. Provides a DMS
          (Data Migration Service) endpoint resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EndpointSpec defines the desired state of Endpoint
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  certificateArn:
                    description: ARN for the certificate.
                    type: string
                  databaseName:
                    description: Name of the endpoint database.
                    type: string
                  elasticsearchSettings:
                    description: Configuration block for OpenSearch settings. See
                      below.
                    items:
                      properties:
                        endpointUri:
                          description: Endpoint for the OpenSearch cluster.
                          type: string
                        errorRetryDuration:
                          description: Maximum number of seconds for which DMS retries
                            failed API requests to the OpenSearch cluster. Default
                            is 300.
                          type: number
                        fullLoadErrorPercentage:
                          description: Maximum percentage of records that can fail
                            to be written before a full load operation stops. Default
                            is 10.
                          type: number
                        serviceAccessRoleArn:
                          description: ARN of the IAM Role with permissions to write
                            to the OpenSearch cluster.
                          type: string
                      required:
                      - endpointUri
                      - serviceAccessRoleArn
                      type: object
                    type: array
                  endpointType:
                    description: Type of endpoint. Valid values are source, target.
                    type: string
                  engineName:
                    description: Type of engine for the endpoint. Valid values are
                      aurora, aurora-postgresql, azuredb, db2, docdb, dynamodb, elasticsearch,
                      kafka, kinesis, mariadb, mongodb, mysql, opensearch, oracle,
                      postgres, redshift, s3, sqlserver, sybase. Please note that
                      some of engine names are available only for target endpoint
                      type (e.g. redshift).
                    type: string
                  extraConnectionAttributes:
                    description: Additional attributes associated with the connection.
                      For available attributes for a source Endpoint, see Sources
                      for data migration. For available attributes for a target Endpoint,
                      see Targets for data migration.
                    type: string
                  kafkaSettings:
                    description: Configuration block for Kafka settings. See below.
                    items:
                      properties:
                        broker:
                          description: Kafka broker location. Specify in the form
                            broker-hostname-or-ip:port.
                          type: string
                        includeControlDetails:
                          description: Shows detailed control information for table
                            definition, column definition, and table and column changes
                            in the Kafka message output. Default is false.
                          type: boolean
                        includeNullAndEmpty:
                          description: Include NULL and empty columns for records
                            migrated to the endpoint. Default is false.
                          type: boolean
                        includePartitionValue:
                          description: Shows the partition value within the Kafka
                            message output unless the partition type is schema-table-type.
                            Default is false.
                          type: boolean
                        includeTableAlterOperations:
                          description: Includes any data definition language (DDL)
                            operations that change the table in the control data,
                            such as rename-table, drop-table, add-column, drop-column,
                            and rename-column. Default is false.
                          type: boolean
                        includeTransactionDetails:
                          description: Provides detailed transaction information from
                            the source database. This information includes a commit
                            timestamp, a log position, and values for transaction_id,
                            previous transaction_id, and transaction_record_id (the
                            record offset within a transaction). Default is false.
                          type: boolean
                        messageFormat:
                          description: Output format for the records created on the
                            endpoint. Message format is JSON (default) or JSON_UNFORMATTED
                            (a single line with no tab).
                          type: string
                        messageMaxBytes:
                          description: Maximum size in bytes for records created on
                            the endpoint Default is 1,000,000.
                          type: number
                        noHexPrefix:
                          description: Set this optional parameter to true to avoid
                            adding a '0x' prefix to raw data in hexadecimal format.
                            For example, by default, AWS DMS adds a '0x' prefix to
                            the LOB column type in hexadecimal format moving from
                            an Oracle source to a Kafka target. Use the no_hex_prefix
                            endpoint setting to enable migration of RAW data type
                            columns without adding the '0x' prefix.
                          type: boolean
                        partitionIncludeSchemaTable:
                          description: Prefixes schema and table names to partition
                            values, when the partition type is primary-key-type. Doing
                            this increases data distribution among Kafka partitions.
                            For example, suppose that a SysBench schema has thousands
                            of tables and each table has only limited range for a
                            primary key. In this case, the same primary key is sent
                            from thousands of tables to the same partition, which
                            causes throttling. Default is false.
                          type: boolean
                        saslPasswordSecretRef:
                          description: Secure password you created when you first
                            set up your MSK cluster to validate a client identity
                            and make an encrypted connection between server and client
                            using SASL-SSL authentication.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        saslUsername:
                          description: Secure user name you created when you first
                            set up your MSK cluster to validate a client identity
                            and make an encrypted connection between server and client
                            using SASL-SSL authentication.
                          type: string
                        securityProtocol:
                          description: Set secure connection to a Kafka target endpoint
                            using Transport Layer Security (TLS). Options include
                            ssl-encryption, ssl-authentication, and sasl-ssl. sasl-ssl
                            requires sasl_username and sasl_password.
                          type: string
                        sslCaCertificateArn:
                          description: ARN for the private certificate authority (CA)
                            cert that AWS DMS uses to securely connect to your Kafka
                            target endpoint.
                          type: string
                        sslClientCertificateArn:
                          description: ARN of the client certificate used to securely
                            connect to a Kafka target endpoint.
                          type: string
                        sslClientKeyArn:
                          description: ARN for the client private key used to securely
                            connect to a Kafka target endpoint.
                          type: string
                        sslClientKeyPasswordSecretRef:
                          description: Password for the client private key used to
                            securely connect to a Kafka target endpoint.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        topic:
                          description: Kafka topic for migration. Default is kafka-default-topic.
                          type: string
                      required:
                      - broker
                      type: object
                    type: array
                  kinesisSettings:
                    description: Configuration block for Kinesis settings. See below.
                    items:
                      properties:
                        includeControlDetails:
                          description: Shows detailed control information for table
                            definition, column definition, and table and column changes
                            in the Kinesis message output. Default is false.
                          type: boolean
                        includeNullAndEmpty:
                          description: Include NULL and empty columns in the target.
                            Default is false.
                          type: boolean
                        includePartitionValue:
                          description: Shows the partition value within the Kinesis
                            message output, unless the partition type is schema-table-type.
                            Default is false.
                          type: boolean
                        includeTableAlterOperations:
                          description: Includes any data definition language (DDL)
                            operations that change the table in the control data.
                            Default is false.
                          type: boolean
                        includeTransactionDetails:
                          description: Provides detailed transaction information from
                            the source database. Default is false.
                          type: boolean
                        messageFormat:
                          description: Output format for the records created. Default
                            is json. Valid values are json and json-unformatted (a
                            single line with no tab).
                          type: string
                        partitionIncludeSchemaTable:
                          description: Prefixes schema and table names to partition
                            values, when the partition type is primary-key-type. Default
                            is false.
                          type: boolean
                        serviceAccessRoleArn:
                          description: ARN of the IAM Role with permissions to write
                            to the Kinesis data stream.
                          type: string
                        streamArn:
                          description: ARN of the Kinesis data stream.
                          type: string
                      type: object
                    type: array
                  kmsKeyArn:
                    description: ARN for the KMS key that will be used to encrypt
                      the connection parameters. If you do not specify a value for
                      kms_key_arn, then AWS DMS will use your default encryption key.
                      AWS KMS creates the default encryption key for your AWS account.
                      Your AWS account has a different default encryption key for
                      each AWS region. To encrypt an S3 target with a KMS Key, use
                      the parameter s3_settings.server_side_encryption_kms_key_id.
                      When engine_name is redshift, kms_key_arn is the KMS Key for
                      the Redshift target and the parameter redshift_settings.server_side_encryption_kms_key_id
                      encrypts the S3 intermediate storage.
                    type: string
                  kmsKeyArnRef:
                    description: Reference to a Key in kms to populate kmsKeyArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyArnSelector:
                    description: Selector for a Key in kms to populate kmsKeyArn.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  mongodbSettings:
                    description: Configuration block for MongoDB settings. See below.
                    items:
                      properties:
                        authMechanism:
                          description: Authentication mechanism to access the MongoDB
                            source endpoint. Default is default.
                          type: string
                        authSource:
                          description: Authentication database name. Not used when
                            auth_type is no. Default is admin.
                          type: string
                        authType:
                          description: Authentication type to access the MongoDB source
                            endpoint. Default is password.
                          type: string
                        docsToInvestigate:
                          description: Number of documents to preview to determine
                            the document organization. Use this setting when nesting_level
                            is set to one. Default is 1000.
                          type: string
                        extractDocId:
                          description: Document ID. Use this setting when nesting_level
                            is set to none. Default is false.
                          type: string
                        nestingLevel:
                          description: Specifies either document or table mode. Default
                            is none. Valid values are one (table mode) and none (document
                            mode).
                          type: string
                      type: object
                    type: array
                  passwordSecretRef:
                    description: Password to be used to login to the endpoint database.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  port:
                    description: Port used by the endpoint database.
                    type: number
                  redisSettings:
                    items:
                      properties:
                        authPasswordSecretRef:
                          description: The password provided with the auth-role and
                            auth-token options of the AuthType setting for a Redis
                            target endpoint.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authType:
                          description: Authentication type to access the MongoDB source
                            endpoint. Default is password.
                          type: string
                        authUserName:
                          description: The username provided with the auth-role option
                            of the AuthType setting for a Redis target endpoint.
                          type: string
                        port:
                          description: Port used by the endpoint database.
                          type: number
                        serverName:
                          description: Host name of the server.
                          type: string
                        sslCaCertificateArn:
                          description: The Amazon Resource Name (ARN) for the certificate
                            authority (CA) that DMS uses to connect to your Redis
                            target endpoint.
                          type: string
                        sslSecurityProtocol:
                          description: The plaintext option doesn't provide Transport
                            Layer Security (TLS) encryption for traffic between endpoint
                            and database. Options include plaintext, ssl-encryption.
                            The default is ssl-encryption.
                          type: string
                      required:
                      - authType
                      - port
                      - serverName
                      type: object
                    type: array
                  redshiftSettings:
                    description: Configuration block for Redshift settings. See below.
                    items:
                      properties:
                        bucketFolder:
                          description: Custom S3 Bucket Object prefix for intermediate
                            storage.
                          type: string
                        bucketName:
                          description: Custom S3 Bucket name for intermediate storage.
                          type: string
                        encryptionMode:
                          description: The server-side encryption mode that you want
                            to encrypt your intermediate .csv object files copied
                            to S3. Defaults to SSE_S3. Valid values are SSE_S3 and
                            SSE_KMS.
                          type: string
                        serverSideEncryptionKmsKeyId:
                          description: ARN or Id of KMS Key to use when encryption_mode
                            is SSE_KMS.
                          type: string
                        serviceAccessRoleArn:
                          description: Amazon Resource Name (ARN) of the IAM Role
                            with permissions to read from or write to the S3 Bucket
                            for intermediate storage.
                          type: string
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  s3Settings:
                    description: Configuration block for S3 settings. See below.
                    items:
                      properties:
                        addColumnName:
                          description: Whether to add column name information to the
                            .csv output file. Default is false.
                          type: boolean
                        bucketFolder:
                          description: S3 object prefix.
                          type: string
                        bucketName:
                          description: S3 bucket name.
                          type: string
                        cannedAclForObjects:
                          description: Predefined (canned) access control list for
                            objects created in an S3 bucket. Valid values include
                            none, private, public-read, public-read-write, authenticated-read,
                            aws-exec-read, bucket-owner-read, and bucket-owner-full-control.
                            Default is none.
                          type: string
                        cdcInsertsAndUpdates:
                          description: Whether to write insert and update operations
                            to .csv or .parquet output files. Default is false.
                          type: boolean
                        cdcInsertsOnly:
                          description: Whether to write insert operations to .csv
                            or .parquet output files. Default is false.
                          type: boolean
                        cdcMaxBatchInterval:
                          description: Maximum length of the interval, defined in
                            seconds, after which to output a file to Amazon S3. Default
                            is 60.
                          type: number
                        cdcMinFileSize:
                          description: 'Minimum file size condition as defined in
                            kilobytes to output a file to Amazon S3. Default is 32000.
                            NOTE: Previously, this setting was measured in megabytes
                            but now represents kilobytes. Update configurations accordingly.'
                          type: number
                        cdcPath:
                          description: Folder path of CDC files. For an S3 source,
                            this setting is required if a task captures change data;
                            otherwise, it's optional. If cdc_path is set, AWS DMS
                            reads CDC files from this path and replicates the data
                            changes to the target endpoint. Supported in AWS DMS versions
                            3.4.2 and later.
                          type: string
                        compressionType:
                          description: Set to compress target files. Default is NONE.
                            Valid values are GZIP and NONE.
                          type: string
                        csvDelimiter:
                          description: Delimiter used to separate columns in the source
                            files. Default is ,.
                          type: string
                        csvNoSupValue:
                          description: String to use for all columns not included
                            in the supplemental log.
                          type: string
                        csvNullValue:
                          description: String to as null when writing to the target.
                          type: string
                        csvRowDelimiter:
                          description: Delimiter used to separate rows in the source
                            files. Default is \n.
                          type: string
                        dataFormat:
                          description: Output format for the files that AWS DMS uses
                            to create S3 objects. Valid values are csv and parquet.
                            Default is csv.
                          type: string
                        dataPageSize:
                          description: Size of one data page in bytes. Default is
                            1048576 (1 MiB).
                          type: number
                        datePartitionDelimiter:
                          description: Date separating delimiter to use during folder
                            partitioning. Valid values are SLASH, UNDERSCORE, DASH,
                            and NONE. Default is SLASH.
                          type: string
                        datePartitionEnabled:
                          description: Partition S3 bucket folders based on transaction
                            commit dates. Default is false.
                          type: boolean
                        datePartitionSequence:
                          description: Date format to use during folder partitioning.
                            Use this parameter when date_partition_enabled is set
                            to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM,
                            MMYYYYDD, and DDMMYYYY. Default is YYYYMMDD.
                          type: string
                        dictPageSizeLimit:
                          description: Maximum size in bytes of an encoded dictionary
                            page of a column. Default is 1048576 (1 MiB).
                          type: number
                        enableStatistics:
                          description: Whether to enable statistics for Parquet pages
                            and row groups. Default is true.
                          type: boolean
                        encodingType:
                          description: Type of encoding to use. Value values are rle_dictionary,
                            plain, and plain_dictionary. Default is rle_dictionary.
                          type: string
                        encryptionMode:
                          description: Server-side encryption mode that you want to
                            encrypt your .csv or .parquet object files copied to S3.
                            Valid values are SSE_S3 and SSE_KMS. Default is SSE_S3.
                          type: string
                        externalTableDefinition:
                          description: JSON document that describes how AWS DMS should
                            interpret the data.
                          type: string
                        ignoreHeaderRows:
                          description: When this value is set to 1, DMS ignores the
                            first row header in a .csv file. Default is 0.
                          type: number
                        ignoreHeadersRow:
                          description: Deprecated. This setting has no effect. Will
                            be removed in a future version. This setting has no effect,
                            is deprecated, and will be removed in a future version
                          type: number
                        includeOpForFullLoad:
                          description: Whether to enable a full load to write INSERT
                            operations to the .csv output files only to indicate how
                            the rows were added to the source database. Default is
                            false.
                          type: boolean
                        maxFileSize:
                          description: Maximum size (in KB) of any .csv file to be
                            created while migrating to an S3 target during full load.
                            Valid values are from 1 to 1048576. Default is 1048576
                            (1 GB).
                          type: number
                        parquetTimestampInMillisecond:
                          description: '- Specifies the precision of any TIMESTAMP
                            column values written to an S3 object file in .parquet
                            format. Default is false.'
                          type: boolean
                        parquetVersion:
                          description: Version of the .parquet file format. Default
                            is parquet-1-0. Valid values are parquet-1-0 and parquet-2-0.
                          type: string
                        preserveTransactions:
                          description: Whether DMS saves the transaction order for
                            a CDC load on the S3 target specified by cdc_path. Default
                            is false.
                          type: boolean
                        rfc4180:
                          description: For an S3 source, whether each leading double
                            quotation mark has to be followed by an ending double
                            quotation mark. Default is true.
                          type: boolean
                        rowGroupLength:
                          description: Number of rows in a row group. Default is 10000.
                          type: number
                        serverSideEncryptionKmsKeyId:
                          description: ARN or Id of KMS Key to use when encryption_mode
                            is SSE_KMS.
                          type: string
                        serviceAccessRoleArn:
                          description: ARN of the IAM Role with permissions to read
                            from or write to the S3 Bucket.
                          type: string
                        timestampColumnName:
                          description: Column to add with timestamp information to
                            the endpoint data for an Amazon S3 target.
                          type: string
                        useCsvNoSupValue:
                          description: Whether to use csv_no_sup_value for columns
                            not included in the supplemental log.
                          type: boolean
                        useTaskStartTimeForFullLoadTimestamp:
                          description: When set to true, uses the task start time
                            as the timestamp column value instead of the time data
                            is written to target. For full load, when set to true,
                            each row of the timestamp column contains the task start
                            time. For CDC loads, each row of the timestamp column
                            contains the transaction commit time. When set to false,
                            the full load timestamp in the timestamp column increments
                            with the time data arrives at the target. Default is false.
                          type: boolean
                      type: object
                    type: array
                  secretsManagerAccessRoleArn:
                    description: ARN of the IAM role that specifies AWS DMS as the
                      trusted entity and has the required permissions to access the
                      value in SecretsManagerSecret.
                    type: string
                  secretsManagerAccessRoleArnRef:
                    description: Reference to a Role in iam to populate secretsManagerAccessRoleArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  secretsManagerAccessRoleArnSelector:
                    description: Selector for a Role in iam to populate secretsManagerAccessRoleArn.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretsManagerArn:
                    description: Full ARN, partial ARN, or friendly name of the SecretsManagerSecret
                      that contains the endpoint connection details. Supported only
                      when engine_name is aurora, aurora-postgresql, mariadb, mongodb,
                      mysql, oracle, postgres, redshift, or sqlserver.
                    type: string
                  serverName:
                    description: Host name of the server.
                    type: string
                  serviceAccessRole:
                    description: ARN used by the service access IAM role for dynamodb
                      endpoints.
                    type: string
                  sslMode:
                    description: SSL mode to use for the connection. Valid values
                      are none, require, verify-ca, verify-full
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                  username:
                    description: User name to be used to login to the endpoint database.
                    type: string
                required:
                - endpointType
                - engineName
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EndpointStatus defines the observed state of Endpoint.
            properties:
              atProvider:
                properties:
                  endpointArn:
                    description: ARN for the endpoint.
                    type: string
                  id:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

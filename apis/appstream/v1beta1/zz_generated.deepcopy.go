//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointInitParameters) DeepCopyInto(out *AccessEndpointInitParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointInitParameters.
func (in *AccessEndpointInitParameters) DeepCopy() *AccessEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointObservation) DeepCopyInto(out *AccessEndpointObservation) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointObservation.
func (in *AccessEndpointObservation) DeepCopy() *AccessEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointParameters) DeepCopyInto(out *AccessEndpointParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointParameters.
func (in *AccessEndpointParameters) DeepCopy() *AccessEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointsInitParameters) DeepCopyInto(out *AccessEndpointsInitParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointsInitParameters.
func (in *AccessEndpointsInitParameters) DeepCopy() *AccessEndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointsObservation) DeepCopyInto(out *AccessEndpointsObservation) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointsObservation.
func (in *AccessEndpointsObservation) DeepCopy() *AccessEndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessEndpointsParameters) DeepCopyInto(out *AccessEndpointsParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.VpceID != nil {
		in, out := &in.VpceID, &out.VpceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessEndpointsParameters.
func (in *AccessEndpointsParameters) DeepCopy() *AccessEndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(AccessEndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSettingsInitParameters) DeepCopyInto(out *ApplicationSettingsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SettingsGroup != nil {
		in, out := &in.SettingsGroup, &out.SettingsGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSettingsInitParameters.
func (in *ApplicationSettingsInitParameters) DeepCopy() *ApplicationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSettingsObservation) DeepCopyInto(out *ApplicationSettingsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SettingsGroup != nil {
		in, out := &in.SettingsGroup, &out.SettingsGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSettingsObservation.
func (in *ApplicationSettingsObservation) DeepCopy() *ApplicationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSettingsParameters) DeepCopyInto(out *ApplicationSettingsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SettingsGroup != nil {
		in, out := &in.SettingsGroup, &out.SettingsGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSettingsParameters.
func (in *ApplicationSettingsParameters) DeepCopy() *ApplicationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityInitParameters) DeepCopyInto(out *ComputeCapacityInitParameters) {
	*out = *in
	if in.DesiredInstances != nil {
		in, out := &in.DesiredInstances, &out.DesiredInstances
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityInitParameters.
func (in *ComputeCapacityInitParameters) DeepCopy() *ComputeCapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityObservation) DeepCopyInto(out *ComputeCapacityObservation) {
	*out = *in
	if in.Available != nil {
		in, out := &in.Available, &out.Available
		*out = new(int64)
		**out = **in
	}
	if in.DesiredInstances != nil {
		in, out := &in.DesiredInstances, &out.DesiredInstances
		*out = new(int64)
		**out = **in
	}
	if in.InUse != nil {
		in, out := &in.InUse, &out.InUse
		*out = new(int64)
		**out = **in
	}
	if in.Running != nil {
		in, out := &in.Running, &out.Running
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityObservation.
func (in *ComputeCapacityObservation) DeepCopy() *ComputeCapacityObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityParameters) DeepCopyInto(out *ComputeCapacityParameters) {
	*out = *in
	if in.DesiredInstances != nil {
		in, out := &in.DesiredInstances, &out.DesiredInstances
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityParameters.
func (in *ComputeCapacityParameters) DeepCopy() *ComputeCapacityParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfig) DeepCopyInto(out *DirectoryConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfig.
func (in *DirectoryConfig) DeepCopy() *DirectoryConfig {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigInitParameters) DeepCopyInto(out *DirectoryConfigInitParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedNames != nil {
		in, out := &in.OrganizationalUnitDistinguishedNames, &out.OrganizationalUnitDistinguishedNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountCredentials != nil {
		in, out := &in.ServiceAccountCredentials, &out.ServiceAccountCredentials
		*out = make([]ServiceAccountCredentialsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigInitParameters.
func (in *DirectoryConfigInitParameters) DeepCopy() *DirectoryConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigList) DeepCopyInto(out *DirectoryConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DirectoryConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigList.
func (in *DirectoryConfigList) DeepCopy() *DirectoryConfigList {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigObservation) DeepCopyInto(out *DirectoryConfigObservation) {
	*out = *in
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedNames != nil {
		in, out := &in.OrganizationalUnitDistinguishedNames, &out.OrganizationalUnitDistinguishedNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountCredentials != nil {
		in, out := &in.ServiceAccountCredentials, &out.ServiceAccountCredentials
		*out = make([]ServiceAccountCredentialsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigObservation.
func (in *DirectoryConfigObservation) DeepCopy() *DirectoryConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigParameters) DeepCopyInto(out *DirectoryConfigParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedNames != nil {
		in, out := &in.OrganizationalUnitDistinguishedNames, &out.OrganizationalUnitDistinguishedNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountCredentials != nil {
		in, out := &in.ServiceAccountCredentials, &out.ServiceAccountCredentials
		*out = make([]ServiceAccountCredentialsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigParameters.
func (in *DirectoryConfigParameters) DeepCopy() *DirectoryConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigSpec) DeepCopyInto(out *DirectoryConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigSpec.
func (in *DirectoryConfigSpec) DeepCopy() *DirectoryConfigSpec {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryConfigStatus) DeepCopyInto(out *DirectoryConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryConfigStatus.
func (in *DirectoryConfigStatus) DeepCopy() *DirectoryConfigStatus {
	if in == nil {
		return nil
	}
	out := new(DirectoryConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainJoinInfoInitParameters) DeepCopyInto(out *DomainJoinInfoInitParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainJoinInfoInitParameters.
func (in *DomainJoinInfoInitParameters) DeepCopy() *DomainJoinInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainJoinInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainJoinInfoObservation) DeepCopyInto(out *DomainJoinInfoObservation) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainJoinInfoObservation.
func (in *DomainJoinInfoObservation) DeepCopy() *DomainJoinInfoObservation {
	if in == nil {
		return nil
	}
	out := new(DomainJoinInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainJoinInfoParameters) DeepCopyInto(out *DomainJoinInfoParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainJoinInfoParameters.
func (in *DomainJoinInfoParameters) DeepCopy() *DomainJoinInfoParameters {
	if in == nil {
		return nil
	}
	out := new(DomainJoinInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Fleet) DeepCopyInto(out *Fleet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Fleet.
func (in *Fleet) DeepCopy() *Fleet {
	if in == nil {
		return nil
	}
	out := new(Fleet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Fleet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetInitParameters) DeepCopyInto(out *FleetInitParameters) {
	*out = *in
	if in.ComputeCapacity != nil {
		in, out := &in.ComputeCapacity, &out.ComputeCapacity
		*out = make([]ComputeCapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisconnectTimeoutInSeconds != nil {
		in, out := &in.DisconnectTimeoutInSeconds, &out.DisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]DomainJoinInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IdleDisconnectTimeoutInSeconds != nil {
		in, out := &in.IdleDisconnectTimeoutInSeconds, &out.IdleDisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MaxUserDurationInSeconds != nil {
		in, out := &in.MaxUserDurationInSeconds, &out.MaxUserDurationInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StreamView != nil {
		in, out := &in.StreamView, &out.StreamView
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetInitParameters.
func (in *FleetInitParameters) DeepCopy() *FleetInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetList) DeepCopyInto(out *FleetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Fleet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetList.
func (in *FleetList) DeepCopy() *FleetList {
	if in == nil {
		return nil
	}
	out := new(FleetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FleetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetObservation) DeepCopyInto(out *FleetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ComputeCapacity != nil {
		in, out := &in.ComputeCapacity, &out.ComputeCapacity
		*out = make([]ComputeCapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisconnectTimeoutInSeconds != nil {
		in, out := &in.DisconnectTimeoutInSeconds, &out.DisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]DomainJoinInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdleDisconnectTimeoutInSeconds != nil {
		in, out := &in.IdleDisconnectTimeoutInSeconds, &out.IdleDisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MaxUserDurationInSeconds != nil {
		in, out := &in.MaxUserDurationInSeconds, &out.MaxUserDurationInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StreamView != nil {
		in, out := &in.StreamView, &out.StreamView
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetObservation.
func (in *FleetObservation) DeepCopy() *FleetObservation {
	if in == nil {
		return nil
	}
	out := new(FleetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetParameters) DeepCopyInto(out *FleetParameters) {
	*out = *in
	if in.ComputeCapacity != nil {
		in, out := &in.ComputeCapacity, &out.ComputeCapacity
		*out = make([]ComputeCapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisconnectTimeoutInSeconds != nil {
		in, out := &in.DisconnectTimeoutInSeconds, &out.DisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]DomainJoinInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IdleDisconnectTimeoutInSeconds != nil {
		in, out := &in.IdleDisconnectTimeoutInSeconds, &out.IdleDisconnectTimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MaxUserDurationInSeconds != nil {
		in, out := &in.MaxUserDurationInSeconds, &out.MaxUserDurationInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StreamView != nil {
		in, out := &in.StreamView, &out.StreamView
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetParameters.
func (in *FleetParameters) DeepCopy() *FleetParameters {
	if in == nil {
		return nil
	}
	out := new(FleetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpec) DeepCopyInto(out *FleetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpec.
func (in *FleetSpec) DeepCopy() *FleetSpec {
	if in == nil {
		return nil
	}
	out := new(FleetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociation) DeepCopyInto(out *FleetStackAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociation.
func (in *FleetStackAssociation) DeepCopy() *FleetStackAssociation {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FleetStackAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationInitParameters) DeepCopyInto(out *FleetStackAssociationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationInitParameters.
func (in *FleetStackAssociationInitParameters) DeepCopy() *FleetStackAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationList) DeepCopyInto(out *FleetStackAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FleetStackAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationList.
func (in *FleetStackAssociationList) DeepCopy() *FleetStackAssociationList {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FleetStackAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationObservation) DeepCopyInto(out *FleetStackAssociationObservation) {
	*out = *in
	if in.FleetName != nil {
		in, out := &in.FleetName, &out.FleetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.StackName != nil {
		in, out := &in.StackName, &out.StackName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationObservation.
func (in *FleetStackAssociationObservation) DeepCopy() *FleetStackAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationParameters) DeepCopyInto(out *FleetStackAssociationParameters) {
	*out = *in
	if in.FleetName != nil {
		in, out := &in.FleetName, &out.FleetName
		*out = new(string)
		**out = **in
	}
	if in.FleetNameRef != nil {
		in, out := &in.FleetNameRef, &out.FleetNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FleetNameSelector != nil {
		in, out := &in.FleetNameSelector, &out.FleetNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackName != nil {
		in, out := &in.StackName, &out.StackName
		*out = new(string)
		**out = **in
	}
	if in.StackNameRef != nil {
		in, out := &in.StackNameRef, &out.StackNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackNameSelector != nil {
		in, out := &in.StackNameSelector, &out.StackNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationParameters.
func (in *FleetStackAssociationParameters) DeepCopy() *FleetStackAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationSpec) DeepCopyInto(out *FleetStackAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationSpec.
func (in *FleetStackAssociationSpec) DeepCopy() *FleetStackAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStackAssociationStatus) DeepCopyInto(out *FleetStackAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStackAssociationStatus.
func (in *FleetStackAssociationStatus) DeepCopy() *FleetStackAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(FleetStackAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStatus) DeepCopyInto(out *FleetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStatus.
func (in *FleetStatus) DeepCopy() *FleetStatus {
	if in == nil {
		return nil
	}
	out := new(FleetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilder) DeepCopyInto(out *ImageBuilder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilder.
func (in *ImageBuilder) DeepCopy() *ImageBuilder {
	if in == nil {
		return nil
	}
	out := new(ImageBuilder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageBuilder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderDomainJoinInfoInitParameters) DeepCopyInto(out *ImageBuilderDomainJoinInfoInitParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderDomainJoinInfoInitParameters.
func (in *ImageBuilderDomainJoinInfoInitParameters) DeepCopy() *ImageBuilderDomainJoinInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderDomainJoinInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderDomainJoinInfoObservation) DeepCopyInto(out *ImageBuilderDomainJoinInfoObservation) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderDomainJoinInfoObservation.
func (in *ImageBuilderDomainJoinInfoObservation) DeepCopy() *ImageBuilderDomainJoinInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderDomainJoinInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderDomainJoinInfoParameters) DeepCopyInto(out *ImageBuilderDomainJoinInfoParameters) {
	*out = *in
	if in.DirectoryName != nil {
		in, out := &in.DirectoryName, &out.DirectoryName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitDistinguishedName != nil {
		in, out := &in.OrganizationalUnitDistinguishedName, &out.OrganizationalUnitDistinguishedName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderDomainJoinInfoParameters.
func (in *ImageBuilderDomainJoinInfoParameters) DeepCopy() *ImageBuilderDomainJoinInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderDomainJoinInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderInitParameters) DeepCopyInto(out *ImageBuilderInitParameters) {
	*out = *in
	if in.AccessEndpoint != nil {
		in, out := &in.AccessEndpoint, &out.AccessEndpoint
		*out = make([]AccessEndpointInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppstreamAgentVersion != nil {
		in, out := &in.AppstreamAgentVersion, &out.AppstreamAgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]ImageBuilderDomainJoinInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]ImageBuilderVPCConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderInitParameters.
func (in *ImageBuilderInitParameters) DeepCopy() *ImageBuilderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderList) DeepCopyInto(out *ImageBuilderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ImageBuilder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderList.
func (in *ImageBuilderList) DeepCopy() *ImageBuilderList {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageBuilderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderObservation) DeepCopyInto(out *ImageBuilderObservation) {
	*out = *in
	if in.AccessEndpoint != nil {
		in, out := &in.AccessEndpoint, &out.AccessEndpoint
		*out = make([]AccessEndpointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppstreamAgentVersion != nil {
		in, out := &in.AppstreamAgentVersion, &out.AppstreamAgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]ImageBuilderDomainJoinInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]ImageBuilderVPCConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderObservation.
func (in *ImageBuilderObservation) DeepCopy() *ImageBuilderObservation {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderParameters) DeepCopyInto(out *ImageBuilderParameters) {
	*out = *in
	if in.AccessEndpoint != nil {
		in, out := &in.AccessEndpoint, &out.AccessEndpoint
		*out = make([]AccessEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppstreamAgentVersion != nil {
		in, out := &in.AppstreamAgentVersion, &out.AppstreamAgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainJoinInfo != nil {
		in, out := &in.DomainJoinInfo, &out.DomainJoinInfo
		*out = make([]ImageBuilderDomainJoinInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDefaultInternetAccess != nil {
		in, out := &in.EnableDefaultInternetAccess, &out.EnableDefaultInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageArn != nil {
		in, out := &in.ImageArn, &out.ImageArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]ImageBuilderVPCConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderParameters.
func (in *ImageBuilderParameters) DeepCopy() *ImageBuilderParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderSpec) DeepCopyInto(out *ImageBuilderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderSpec.
func (in *ImageBuilderSpec) DeepCopy() *ImageBuilderSpec {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderStatus) DeepCopyInto(out *ImageBuilderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderStatus.
func (in *ImageBuilderStatus) DeepCopy() *ImageBuilderStatus {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderVPCConfigInitParameters) DeepCopyInto(out *ImageBuilderVPCConfigInitParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderVPCConfigInitParameters.
func (in *ImageBuilderVPCConfigInitParameters) DeepCopy() *ImageBuilderVPCConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderVPCConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderVPCConfigObservation) DeepCopyInto(out *ImageBuilderVPCConfigObservation) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderVPCConfigObservation.
func (in *ImageBuilderVPCConfigObservation) DeepCopy() *ImageBuilderVPCConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderVPCConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageBuilderVPCConfigParameters) DeepCopyInto(out *ImageBuilderVPCConfigParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageBuilderVPCConfigParameters.
func (in *ImageBuilderVPCConfigParameters) DeepCopy() *ImageBuilderVPCConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ImageBuilderVPCConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountCredentialsInitParameters) DeepCopyInto(out *ServiceAccountCredentialsInitParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountCredentialsInitParameters.
func (in *ServiceAccountCredentialsInitParameters) DeepCopy() *ServiceAccountCredentialsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountCredentialsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountCredentialsObservation) DeepCopyInto(out *ServiceAccountCredentialsObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountCredentialsObservation.
func (in *ServiceAccountCredentialsObservation) DeepCopy() *ServiceAccountCredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountCredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountCredentialsParameters) DeepCopyInto(out *ServiceAccountCredentialsParameters) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	out.AccountPasswordSecretRef = in.AccountPasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountCredentialsParameters.
func (in *ServiceAccountCredentialsParameters) DeepCopy() *ServiceAccountCredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountCredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stack) DeepCopyInto(out *Stack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stack.
func (in *Stack) DeepCopy() *Stack {
	if in == nil {
		return nil
	}
	out := new(Stack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackInitParameters) DeepCopyInto(out *StackInitParameters) {
	*out = *in
	if in.AccessEndpoints != nil {
		in, out := &in.AccessEndpoints, &out.AccessEndpoints
		*out = make([]AccessEndpointsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationSettings != nil {
		in, out := &in.ApplicationSettings, &out.ApplicationSettings
		*out = make([]ApplicationSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedHostDomains != nil {
		in, out := &in.EmbedHostDomains, &out.EmbedHostDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FeedbackURL != nil {
		in, out := &in.FeedbackURL, &out.FeedbackURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.StorageConnectors != nil {
		in, out := &in.StorageConnectors, &out.StorageConnectors
		*out = make([]StorageConnectorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamingExperienceSettings != nil {
		in, out := &in.StreamingExperienceSettings, &out.StreamingExperienceSettings
		*out = make([]StreamingExperienceSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserSettings != nil {
		in, out := &in.UserSettings, &out.UserSettings
		*out = make([]UserSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackInitParameters.
func (in *StackInitParameters) DeepCopy() *StackInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackList) DeepCopyInto(out *StackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackList.
func (in *StackList) DeepCopy() *StackList {
	if in == nil {
		return nil
	}
	out := new(StackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackObservation) DeepCopyInto(out *StackObservation) {
	*out = *in
	if in.AccessEndpoints != nil {
		in, out := &in.AccessEndpoints, &out.AccessEndpoints
		*out = make([]AccessEndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationSettings != nil {
		in, out := &in.ApplicationSettings, &out.ApplicationSettings
		*out = make([]ApplicationSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedHostDomains != nil {
		in, out := &in.EmbedHostDomains, &out.EmbedHostDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FeedbackURL != nil {
		in, out := &in.FeedbackURL, &out.FeedbackURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.StorageConnectors != nil {
		in, out := &in.StorageConnectors, &out.StorageConnectors
		*out = make([]StorageConnectorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamingExperienceSettings != nil {
		in, out := &in.StreamingExperienceSettings, &out.StreamingExperienceSettings
		*out = make([]StreamingExperienceSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserSettings != nil {
		in, out := &in.UserSettings, &out.UserSettings
		*out = make([]UserSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackObservation.
func (in *StackObservation) DeepCopy() *StackObservation {
	if in == nil {
		return nil
	}
	out := new(StackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackParameters) DeepCopyInto(out *StackParameters) {
	*out = *in
	if in.AccessEndpoints != nil {
		in, out := &in.AccessEndpoints, &out.AccessEndpoints
		*out = make([]AccessEndpointsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApplicationSettings != nil {
		in, out := &in.ApplicationSettings, &out.ApplicationSettings
		*out = make([]ApplicationSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EmbedHostDomains != nil {
		in, out := &in.EmbedHostDomains, &out.EmbedHostDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FeedbackURL != nil {
		in, out := &in.FeedbackURL, &out.FeedbackURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageConnectors != nil {
		in, out := &in.StorageConnectors, &out.StorageConnectors
		*out = make([]StorageConnectorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamingExperienceSettings != nil {
		in, out := &in.StreamingExperienceSettings, &out.StreamingExperienceSettings
		*out = make([]StreamingExperienceSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserSettings != nil {
		in, out := &in.UserSettings, &out.UserSettings
		*out = make([]UserSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackParameters.
func (in *StackParameters) DeepCopy() *StackParameters {
	if in == nil {
		return nil
	}
	out := new(StackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackSpec) DeepCopyInto(out *StackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackSpec.
func (in *StackSpec) DeepCopy() *StackSpec {
	if in == nil {
		return nil
	}
	out := new(StackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackStatus) DeepCopyInto(out *StackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackStatus.
func (in *StackStatus) DeepCopy() *StackStatus {
	if in == nil {
		return nil
	}
	out := new(StackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConnectorsInitParameters) DeepCopyInto(out *StorageConnectorsInitParameters) {
	*out = *in
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceIdentifier != nil {
		in, out := &in.ResourceIdentifier, &out.ResourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConnectorsInitParameters.
func (in *StorageConnectorsInitParameters) DeepCopy() *StorageConnectorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConnectorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConnectorsObservation) DeepCopyInto(out *StorageConnectorsObservation) {
	*out = *in
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceIdentifier != nil {
		in, out := &in.ResourceIdentifier, &out.ResourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConnectorsObservation.
func (in *StorageConnectorsObservation) DeepCopy() *StorageConnectorsObservation {
	if in == nil {
		return nil
	}
	out := new(StorageConnectorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageConnectorsParameters) DeepCopyInto(out *StorageConnectorsParameters) {
	*out = *in
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResourceIdentifier != nil {
		in, out := &in.ResourceIdentifier, &out.ResourceIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageConnectorsParameters.
func (in *StorageConnectorsParameters) DeepCopy() *StorageConnectorsParameters {
	if in == nil {
		return nil
	}
	out := new(StorageConnectorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingExperienceSettingsInitParameters) DeepCopyInto(out *StreamingExperienceSettingsInitParameters) {
	*out = *in
	if in.PreferredProtocol != nil {
		in, out := &in.PreferredProtocol, &out.PreferredProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingExperienceSettingsInitParameters.
func (in *StreamingExperienceSettingsInitParameters) DeepCopy() *StreamingExperienceSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamingExperienceSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingExperienceSettingsObservation) DeepCopyInto(out *StreamingExperienceSettingsObservation) {
	*out = *in
	if in.PreferredProtocol != nil {
		in, out := &in.PreferredProtocol, &out.PreferredProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingExperienceSettingsObservation.
func (in *StreamingExperienceSettingsObservation) DeepCopy() *StreamingExperienceSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(StreamingExperienceSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingExperienceSettingsParameters) DeepCopyInto(out *StreamingExperienceSettingsParameters) {
	*out = *in
	if in.PreferredProtocol != nil {
		in, out := &in.PreferredProtocol, &out.PreferredProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingExperienceSettingsParameters.
func (in *StreamingExperienceSettingsParameters) DeepCopy() *StreamingExperienceSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(StreamingExperienceSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSettingsInitParameters) DeepCopyInto(out *UserSettingsInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSettingsInitParameters.
func (in *UserSettingsInitParameters) DeepCopy() *UserSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSettingsObservation) DeepCopyInto(out *UserSettingsObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSettingsObservation.
func (in *UserSettingsObservation) DeepCopy() *UserSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(UserSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSettingsParameters) DeepCopyInto(out *UserSettingsParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSettingsParameters.
func (in *UserSettingsParameters) DeepCopy() *UserSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(UserSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociation) DeepCopyInto(out *UserStackAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociation.
func (in *UserStackAssociation) DeepCopy() *UserStackAssociation {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserStackAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationInitParameters) DeepCopyInto(out *UserStackAssociationInitParameters) {
	*out = *in
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationInitParameters.
func (in *UserStackAssociationInitParameters) DeepCopy() *UserStackAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationList) DeepCopyInto(out *UserStackAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserStackAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationList.
func (in *UserStackAssociationList) DeepCopy() *UserStackAssociationList {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserStackAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationObservation) DeepCopyInto(out *UserStackAssociationObservation) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
	if in.StackName != nil {
		in, out := &in.StackName, &out.StackName
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationObservation.
func (in *UserStackAssociationObservation) DeepCopy() *UserStackAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationParameters) DeepCopyInto(out *UserStackAssociationParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationTypeRef != nil {
		in, out := &in.AuthenticationTypeRef, &out.AuthenticationTypeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticationTypeSelector != nil {
		in, out := &in.AuthenticationTypeSelector, &out.AuthenticationTypeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SendEmailNotification != nil {
		in, out := &in.SendEmailNotification, &out.SendEmailNotification
		*out = new(bool)
		**out = **in
	}
	if in.StackName != nil {
		in, out := &in.StackName, &out.StackName
		*out = new(string)
		**out = **in
	}
	if in.StackNameRef != nil {
		in, out := &in.StackNameRef, &out.StackNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackNameSelector != nil {
		in, out := &in.StackNameSelector, &out.StackNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.UserNameRef != nil {
		in, out := &in.UserNameRef, &out.UserNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserNameSelector != nil {
		in, out := &in.UserNameSelector, &out.UserNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationParameters.
func (in *UserStackAssociationParameters) DeepCopy() *UserStackAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationSpec) DeepCopyInto(out *UserStackAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationSpec.
func (in *UserStackAssociationSpec) DeepCopy() *UserStackAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStackAssociationStatus) DeepCopyInto(out *UserStackAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStackAssociationStatus.
func (in *UserStackAssociationStatus) DeepCopy() *UserStackAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(UserStackAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigInitParameters) DeepCopyInto(out *VPCConfigInitParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigInitParameters.
func (in *VPCConfigInitParameters) DeepCopy() *VPCConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigObservation) DeepCopyInto(out *VPCConfigObservation) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigObservation.
func (in *VPCConfigObservation) DeepCopy() *VPCConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VPCConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigParameters) DeepCopyInto(out *VPCConfigParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigParameters.
func (in *VPCConfigParameters) DeepCopy() *VPCConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigParameters)
	in.DeepCopyInto(out)
	return out
}

//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTag) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTag) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTag.
func (in *CognitoIdentityPoolProviderPrincipalTag) DeepCopy() *CognitoIdentityPoolProviderPrincipalTag {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CognitoIdentityPoolProviderPrincipalTag) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagInitParameters) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagInitParameters) {
	*out = *in
	if in.PrincipalTags != nil {
		in, out := &in.PrincipalTags, &out.PrincipalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseDefaults != nil {
		in, out := &in.UseDefaults, &out.UseDefaults
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagInitParameters.
func (in *CognitoIdentityPoolProviderPrincipalTagInitParameters) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagInitParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagList) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CognitoIdentityPoolProviderPrincipalTag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagList.
func (in *CognitoIdentityPoolProviderPrincipalTagList) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagList {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CognitoIdentityPoolProviderPrincipalTagList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagObservation) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.IdentityProviderName != nil {
		in, out := &in.IdentityProviderName, &out.IdentityProviderName
		*out = new(string)
		**out = **in
	}
	if in.PrincipalTags != nil {
		in, out := &in.PrincipalTags, &out.PrincipalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseDefaults != nil {
		in, out := &in.UseDefaults, &out.UseDefaults
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagObservation.
func (in *CognitoIdentityPoolProviderPrincipalTagObservation) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagObservation {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagParameters) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagParameters) {
	*out = *in
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolIDRef != nil {
		in, out := &in.IdentityPoolIDRef, &out.IdentityPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityPoolIDSelector != nil {
		in, out := &in.IdentityPoolIDSelector, &out.IdentityPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProviderName != nil {
		in, out := &in.IdentityProviderName, &out.IdentityProviderName
		*out = new(string)
		**out = **in
	}
	if in.IdentityProviderNameRef != nil {
		in, out := &in.IdentityProviderNameRef, &out.IdentityProviderNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityProviderNameSelector != nil {
		in, out := &in.IdentityProviderNameSelector, &out.IdentityProviderNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalTags != nil {
		in, out := &in.PrincipalTags, &out.PrincipalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UseDefaults != nil {
		in, out := &in.UseDefaults, &out.UseDefaults
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagParameters.
func (in *CognitoIdentityPoolProviderPrincipalTagParameters) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagSpec) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagSpec.
func (in *CognitoIdentityPoolProviderPrincipalTagSpec) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagSpec {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityPoolProviderPrincipalTagStatus) DeepCopyInto(out *CognitoIdentityPoolProviderPrincipalTagStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityPoolProviderPrincipalTagStatus.
func (in *CognitoIdentityPoolProviderPrincipalTagStatus) DeepCopy() *CognitoIdentityPoolProviderPrincipalTagStatus {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityPoolProviderPrincipalTagStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityProvidersInitParameters) DeepCopyInto(out *CognitoIdentityProvidersInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ServerSideTokenCheck != nil {
		in, out := &in.ServerSideTokenCheck, &out.ServerSideTokenCheck
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityProvidersInitParameters.
func (in *CognitoIdentityProvidersInitParameters) DeepCopy() *CognitoIdentityProvidersInitParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityProvidersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityProvidersObservation) DeepCopyInto(out *CognitoIdentityProvidersObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ServerSideTokenCheck != nil {
		in, out := &in.ServerSideTokenCheck, &out.ServerSideTokenCheck
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityProvidersObservation.
func (in *CognitoIdentityProvidersObservation) DeepCopy() *CognitoIdentityProvidersObservation {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityProvidersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoIdentityProvidersParameters) DeepCopyInto(out *CognitoIdentityProvidersParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ServerSideTokenCheck != nil {
		in, out := &in.ServerSideTokenCheck, &out.ServerSideTokenCheck
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoIdentityProvidersParameters.
func (in *CognitoIdentityProvidersParameters) DeepCopy() *CognitoIdentityProvidersParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoIdentityProvidersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingRuleInitParameters) DeepCopyInto(out *MappingRuleInitParameters) {
	*out = *in
	if in.Claim != nil {
		in, out := &in.Claim, &out.Claim
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingRuleInitParameters.
func (in *MappingRuleInitParameters) DeepCopy() *MappingRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MappingRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingRuleObservation) DeepCopyInto(out *MappingRuleObservation) {
	*out = *in
	if in.Claim != nil {
		in, out := &in.Claim, &out.Claim
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingRuleObservation.
func (in *MappingRuleObservation) DeepCopy() *MappingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MappingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingRuleParameters) DeepCopyInto(out *MappingRuleParameters) {
	*out = *in
	if in.Claim != nil {
		in, out := &in.Claim, &out.Claim
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingRuleParameters.
func (in *MappingRuleParameters) DeepCopy() *MappingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MappingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pool) DeepCopyInto(out *Pool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pool.
func (in *Pool) DeepCopy() *Pool {
	if in == nil {
		return nil
	}
	out := new(Pool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolInitParameters) DeepCopyInto(out *PoolInitParameters) {
	*out = *in
	if in.AllowClassicFlow != nil {
		in, out := &in.AllowClassicFlow, &out.AllowClassicFlow
		*out = new(bool)
		**out = **in
	}
	if in.AllowUnauthenticatedIdentities != nil {
		in, out := &in.AllowUnauthenticatedIdentities, &out.AllowUnauthenticatedIdentities
		*out = new(bool)
		**out = **in
	}
	if in.CognitoIdentityProviders != nil {
		in, out := &in.CognitoIdentityProviders, &out.CognitoIdentityProviders
		*out = make([]CognitoIdentityProvidersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeveloperProviderName != nil {
		in, out := &in.DeveloperProviderName, &out.DeveloperProviderName
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolName != nil {
		in, out := &in.IdentityPoolName, &out.IdentityPoolName
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConnectProviderArns != nil {
		in, out := &in.OpenIDConnectProviderArns, &out.OpenIDConnectProviderArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedLoginProviders != nil {
		in, out := &in.SupportedLoginProviders, &out.SupportedLoginProviders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolInitParameters.
func (in *PoolInitParameters) DeepCopy() *PoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolList) DeepCopyInto(out *PoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolList.
func (in *PoolList) DeepCopy() *PoolList {
	if in == nil {
		return nil
	}
	out := new(PoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolObservation) DeepCopyInto(out *PoolObservation) {
	*out = *in
	if in.AllowClassicFlow != nil {
		in, out := &in.AllowClassicFlow, &out.AllowClassicFlow
		*out = new(bool)
		**out = **in
	}
	if in.AllowUnauthenticatedIdentities != nil {
		in, out := &in.AllowUnauthenticatedIdentities, &out.AllowUnauthenticatedIdentities
		*out = new(bool)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CognitoIdentityProviders != nil {
		in, out := &in.CognitoIdentityProviders, &out.CognitoIdentityProviders
		*out = make([]CognitoIdentityProvidersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeveloperProviderName != nil {
		in, out := &in.DeveloperProviderName, &out.DeveloperProviderName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolName != nil {
		in, out := &in.IdentityPoolName, &out.IdentityPoolName
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConnectProviderArns != nil {
		in, out := &in.OpenIDConnectProviderArns, &out.OpenIDConnectProviderArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SAMLProviderArns != nil {
		in, out := &in.SAMLProviderArns, &out.SAMLProviderArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SupportedLoginProviders != nil {
		in, out := &in.SupportedLoginProviders, &out.SupportedLoginProviders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolObservation.
func (in *PoolObservation) DeepCopy() *PoolObservation {
	if in == nil {
		return nil
	}
	out := new(PoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolParameters) DeepCopyInto(out *PoolParameters) {
	*out = *in
	if in.AllowClassicFlow != nil {
		in, out := &in.AllowClassicFlow, &out.AllowClassicFlow
		*out = new(bool)
		**out = **in
	}
	if in.AllowUnauthenticatedIdentities != nil {
		in, out := &in.AllowUnauthenticatedIdentities, &out.AllowUnauthenticatedIdentities
		*out = new(bool)
		**out = **in
	}
	if in.CognitoIdentityProviders != nil {
		in, out := &in.CognitoIdentityProviders, &out.CognitoIdentityProviders
		*out = make([]CognitoIdentityProvidersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeveloperProviderName != nil {
		in, out := &in.DeveloperProviderName, &out.DeveloperProviderName
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolName != nil {
		in, out := &in.IdentityPoolName, &out.IdentityPoolName
		*out = new(string)
		**out = **in
	}
	if in.OpenIDConnectProviderArns != nil {
		in, out := &in.OpenIDConnectProviderArns, &out.OpenIDConnectProviderArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SAMLProviderArns != nil {
		in, out := &in.SAMLProviderArns, &out.SAMLProviderArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SAMLProviderArnsRefs != nil {
		in, out := &in.SAMLProviderArnsRefs, &out.SAMLProviderArnsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SAMLProviderArnsSelector != nil {
		in, out := &in.SAMLProviderArnsSelector, &out.SAMLProviderArnsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SupportedLoginProviders != nil {
		in, out := &in.SupportedLoginProviders, &out.SupportedLoginProviders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolParameters.
func (in *PoolParameters) DeepCopy() *PoolParameters {
	if in == nil {
		return nil
	}
	out := new(PoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachment) DeepCopyInto(out *PoolRolesAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachment.
func (in *PoolRolesAttachment) DeepCopy() *PoolRolesAttachment {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PoolRolesAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentInitParameters) DeepCopyInto(out *PoolRolesAttachmentInitParameters) {
	*out = *in
	if in.RoleMapping != nil {
		in, out := &in.RoleMapping, &out.RoleMapping
		*out = make([]RoleMappingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentInitParameters.
func (in *PoolRolesAttachmentInitParameters) DeepCopy() *PoolRolesAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentList) DeepCopyInto(out *PoolRolesAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PoolRolesAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentList.
func (in *PoolRolesAttachmentList) DeepCopy() *PoolRolesAttachmentList {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PoolRolesAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentObservation) DeepCopyInto(out *PoolRolesAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.RoleMapping != nil {
		in, out := &in.RoleMapping, &out.RoleMapping
		*out = make([]RoleMappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentObservation.
func (in *PoolRolesAttachmentObservation) DeepCopy() *PoolRolesAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentParameters) DeepCopyInto(out *PoolRolesAttachmentParameters) {
	*out = *in
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.IdentityPoolIDRef != nil {
		in, out := &in.IdentityPoolIDRef, &out.IdentityPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityPoolIDSelector != nil {
		in, out := &in.IdentityPoolIDSelector, &out.IdentityPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleMapping != nil {
		in, out := &in.RoleMapping, &out.RoleMapping
		*out = make([]RoleMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentParameters.
func (in *PoolRolesAttachmentParameters) DeepCopy() *PoolRolesAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentSpec) DeepCopyInto(out *PoolRolesAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentSpec.
func (in *PoolRolesAttachmentSpec) DeepCopy() *PoolRolesAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolRolesAttachmentStatus) DeepCopyInto(out *PoolRolesAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolRolesAttachmentStatus.
func (in *PoolRolesAttachmentStatus) DeepCopy() *PoolRolesAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(PoolRolesAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolSpec) DeepCopyInto(out *PoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolSpec.
func (in *PoolSpec) DeepCopy() *PoolSpec {
	if in == nil {
		return nil
	}
	out := new(PoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolStatus) DeepCopyInto(out *PoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolStatus.
func (in *PoolStatus) DeepCopy() *PoolStatus {
	if in == nil {
		return nil
	}
	out := new(PoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleMappingInitParameters) DeepCopyInto(out *RoleMappingInitParameters) {
	*out = *in
	if in.AmbiguousRoleResolution != nil {
		in, out := &in.AmbiguousRoleResolution, &out.AmbiguousRoleResolution
		*out = new(string)
		**out = **in
	}
	if in.IdentityProvider != nil {
		in, out := &in.IdentityProvider, &out.IdentityProvider
		*out = new(string)
		**out = **in
	}
	if in.MappingRule != nil {
		in, out := &in.MappingRule, &out.MappingRule
		*out = make([]MappingRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleMappingInitParameters.
func (in *RoleMappingInitParameters) DeepCopy() *RoleMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoleMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleMappingObservation) DeepCopyInto(out *RoleMappingObservation) {
	*out = *in
	if in.AmbiguousRoleResolution != nil {
		in, out := &in.AmbiguousRoleResolution, &out.AmbiguousRoleResolution
		*out = new(string)
		**out = **in
	}
	if in.IdentityProvider != nil {
		in, out := &in.IdentityProvider, &out.IdentityProvider
		*out = new(string)
		**out = **in
	}
	if in.MappingRule != nil {
		in, out := &in.MappingRule, &out.MappingRule
		*out = make([]MappingRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleMappingObservation.
func (in *RoleMappingObservation) DeepCopy() *RoleMappingObservation {
	if in == nil {
		return nil
	}
	out := new(RoleMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleMappingParameters) DeepCopyInto(out *RoleMappingParameters) {
	*out = *in
	if in.AmbiguousRoleResolution != nil {
		in, out := &in.AmbiguousRoleResolution, &out.AmbiguousRoleResolution
		*out = new(string)
		**out = **in
	}
	if in.IdentityProvider != nil {
		in, out := &in.IdentityProvider, &out.IdentityProvider
		*out = new(string)
		**out = **in
	}
	if in.MappingRule != nil {
		in, out := &in.MappingRule, &out.MappingRule
		*out = make([]MappingRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleMappingParameters.
func (in *RoleMappingParameters) DeepCopy() *RoleMappingParameters {
	if in == nil {
		return nil
	}
	out := new(RoleMappingParameters)
	in.DeepCopyInto(out)
	return out
}

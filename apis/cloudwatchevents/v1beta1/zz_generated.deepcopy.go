//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestination) DeepCopyInto(out *APIDestination) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestination.
func (in *APIDestination) DeepCopy() *APIDestination {
	if in == nil {
		return nil
	}
	out := new(APIDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIDestination) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationInitParameters) DeepCopyInto(out *APIDestinationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.InvocationEndpoint != nil {
		in, out := &in.InvocationEndpoint, &out.InvocationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.InvocationRateLimitPerSecond != nil {
		in, out := &in.InvocationRateLimitPerSecond, &out.InvocationRateLimitPerSecond
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationInitParameters.
func (in *APIDestinationInitParameters) DeepCopy() *APIDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationList) DeepCopyInto(out *APIDestinationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationList.
func (in *APIDestinationList) DeepCopy() *APIDestinationList {
	if in == nil {
		return nil
	}
	out := new(APIDestinationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIDestinationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationObservation) DeepCopyInto(out *APIDestinationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ConnectionArn != nil {
		in, out := &in.ConnectionArn, &out.ConnectionArn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvocationEndpoint != nil {
		in, out := &in.InvocationEndpoint, &out.InvocationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.InvocationRateLimitPerSecond != nil {
		in, out := &in.InvocationRateLimitPerSecond, &out.InvocationRateLimitPerSecond
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationObservation.
func (in *APIDestinationObservation) DeepCopy() *APIDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(APIDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationParameters) DeepCopyInto(out *APIDestinationParameters) {
	*out = *in
	if in.ConnectionArn != nil {
		in, out := &in.ConnectionArn, &out.ConnectionArn
		*out = new(string)
		**out = **in
	}
	if in.ConnectionArnRef != nil {
		in, out := &in.ConnectionArnRef, &out.ConnectionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionArnSelector != nil {
		in, out := &in.ConnectionArnSelector, &out.ConnectionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.InvocationEndpoint != nil {
		in, out := &in.InvocationEndpoint, &out.InvocationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.InvocationRateLimitPerSecond != nil {
		in, out := &in.InvocationRateLimitPerSecond, &out.InvocationRateLimitPerSecond
		*out = new(int64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationParameters.
func (in *APIDestinationParameters) DeepCopy() *APIDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(APIDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationSpec) DeepCopyInto(out *APIDestinationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationSpec.
func (in *APIDestinationSpec) DeepCopy() *APIDestinationSpec {
	if in == nil {
		return nil
	}
	out := new(APIDestinationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIDestinationStatus) DeepCopyInto(out *APIDestinationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIDestinationStatus.
func (in *APIDestinationStatus) DeepCopy() *APIDestinationStatus {
	if in == nil {
		return nil
	}
	out := new(APIDestinationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyInitParameters) DeepCopyInto(out *APIKeyInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyInitParameters.
func (in *APIKeyInitParameters) DeepCopy() *APIKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyObservation) DeepCopyInto(out *APIKeyObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyObservation.
func (in *APIKeyObservation) DeepCopy() *APIKeyObservation {
	if in == nil {
		return nil
	}
	out := new(APIKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyParameters) DeepCopyInto(out *APIKeyParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyParameters.
func (in *APIKeyParameters) DeepCopy() *APIKeyParameters {
	if in == nil {
		return nil
	}
	out := new(APIKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Archive) DeepCopyInto(out *Archive) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Archive.
func (in *Archive) DeepCopy() *Archive {
	if in == nil {
		return nil
	}
	out := new(Archive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Archive) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveInitParameters) DeepCopyInto(out *ArchiveInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveInitParameters.
func (in *ArchiveInitParameters) DeepCopy() *ArchiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveList) DeepCopyInto(out *ArchiveList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Archive, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveList.
func (in *ArchiveList) DeepCopy() *ArchiveList {
	if in == nil {
		return nil
	}
	out := new(ArchiveList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArchiveList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveObservation) DeepCopyInto(out *ArchiveObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.EventSourceArn != nil {
		in, out := &in.EventSourceArn, &out.EventSourceArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveObservation.
func (in *ArchiveObservation) DeepCopy() *ArchiveObservation {
	if in == nil {
		return nil
	}
	out := new(ArchiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveParameters) DeepCopyInto(out *ArchiveParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.EventSourceArn != nil {
		in, out := &in.EventSourceArn, &out.EventSourceArn
		*out = new(string)
		**out = **in
	}
	if in.EventSourceArnRef != nil {
		in, out := &in.EventSourceArnRef, &out.EventSourceArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventSourceArnSelector != nil {
		in, out := &in.EventSourceArnSelector, &out.EventSourceArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionDays != nil {
		in, out := &in.RetentionDays, &out.RetentionDays
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveParameters.
func (in *ArchiveParameters) DeepCopy() *ArchiveParameters {
	if in == nil {
		return nil
	}
	out := new(ArchiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveSpec) DeepCopyInto(out *ArchiveSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveSpec.
func (in *ArchiveSpec) DeepCopy() *ArchiveSpec {
	if in == nil {
		return nil
	}
	out := new(ArchiveSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArchiveStatus) DeepCopyInto(out *ArchiveStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArchiveStatus.
func (in *ArchiveStatus) DeepCopy() *ArchiveStatus {
	if in == nil {
		return nil
	}
	out := new(ArchiveStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthParametersInitParameters) DeepCopyInto(out *AuthParametersInitParameters) {
	*out = *in
	if in.APIKey != nil {
		in, out := &in.APIKey, &out.APIKey
		*out = make([]APIKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Basic != nil {
		in, out := &in.Basic, &out.Basic
		*out = make([]BasicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InvocationHTTPParameters != nil {
		in, out := &in.InvocationHTTPParameters, &out.InvocationHTTPParameters
		*out = make([]InvocationHTTPParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthParametersInitParameters.
func (in *AuthParametersInitParameters) DeepCopy() *AuthParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthParametersObservation) DeepCopyInto(out *AuthParametersObservation) {
	*out = *in
	if in.APIKey != nil {
		in, out := &in.APIKey, &out.APIKey
		*out = make([]APIKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Basic != nil {
		in, out := &in.Basic, &out.Basic
		*out = make([]BasicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InvocationHTTPParameters != nil {
		in, out := &in.InvocationHTTPParameters, &out.InvocationHTTPParameters
		*out = make([]InvocationHTTPParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthParametersObservation.
func (in *AuthParametersObservation) DeepCopy() *AuthParametersObservation {
	if in == nil {
		return nil
	}
	out := new(AuthParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthParametersParameters) DeepCopyInto(out *AuthParametersParameters) {
	*out = *in
	if in.APIKey != nil {
		in, out := &in.APIKey, &out.APIKey
		*out = make([]APIKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Basic != nil {
		in, out := &in.Basic, &out.Basic
		*out = make([]BasicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InvocationHTTPParameters != nil {
		in, out := &in.InvocationHTTPParameters, &out.InvocationHTTPParameters
		*out = make([]InvocationHTTPParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Oauth != nil {
		in, out := &in.Oauth, &out.Oauth
		*out = make([]OauthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthParametersParameters.
func (in *AuthParametersParameters) DeepCopy() *AuthParametersParameters {
	if in == nil {
		return nil
	}
	out := new(AuthParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicInitParameters) DeepCopyInto(out *BasicInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicInitParameters.
func (in *BasicInitParameters) DeepCopy() *BasicInitParameters {
	if in == nil {
		return nil
	}
	out := new(BasicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicObservation) DeepCopyInto(out *BasicObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicObservation.
func (in *BasicObservation) DeepCopy() *BasicObservation {
	if in == nil {
		return nil
	}
	out := new(BasicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicParameters) DeepCopyInto(out *BasicParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicParameters.
func (in *BasicParameters) DeepCopy() *BasicParameters {
	if in == nil {
		return nil
	}
	out := new(BasicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTargetInitParameters) DeepCopyInto(out *BatchTargetInitParameters) {
	*out = *in
	if in.ArraySize != nil {
		in, out := &in.ArraySize, &out.ArraySize
		*out = new(int64)
		**out = **in
	}
	if in.JobAttempts != nil {
		in, out := &in.JobAttempts, &out.JobAttempts
		*out = new(int64)
		**out = **in
	}
	if in.JobDefinition != nil {
		in, out := &in.JobDefinition, &out.JobDefinition
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTargetInitParameters.
func (in *BatchTargetInitParameters) DeepCopy() *BatchTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(BatchTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTargetObservation) DeepCopyInto(out *BatchTargetObservation) {
	*out = *in
	if in.ArraySize != nil {
		in, out := &in.ArraySize, &out.ArraySize
		*out = new(int64)
		**out = **in
	}
	if in.JobAttempts != nil {
		in, out := &in.JobAttempts, &out.JobAttempts
		*out = new(int64)
		**out = **in
	}
	if in.JobDefinition != nil {
		in, out := &in.JobDefinition, &out.JobDefinition
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTargetObservation.
func (in *BatchTargetObservation) DeepCopy() *BatchTargetObservation {
	if in == nil {
		return nil
	}
	out := new(BatchTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BatchTargetParameters) DeepCopyInto(out *BatchTargetParameters) {
	*out = *in
	if in.ArraySize != nil {
		in, out := &in.ArraySize, &out.ArraySize
		*out = new(int64)
		**out = **in
	}
	if in.JobAttempts != nil {
		in, out := &in.JobAttempts, &out.JobAttempts
		*out = new(int64)
		**out = **in
	}
	if in.JobDefinition != nil {
		in, out := &in.JobDefinition, &out.JobDefinition
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BatchTargetParameters.
func (in *BatchTargetParameters) DeepCopy() *BatchTargetParameters {
	if in == nil {
		return nil
	}
	out := new(BatchTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BodyInitParameters) DeepCopyInto(out *BodyInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BodyInitParameters.
func (in *BodyInitParameters) DeepCopy() *BodyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BodyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BodyObservation) DeepCopyInto(out *BodyObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BodyObservation.
func (in *BodyObservation) DeepCopy() *BodyObservation {
	if in == nil {
		return nil
	}
	out := new(BodyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BodyParameters) DeepCopyInto(out *BodyParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BodyParameters.
func (in *BodyParameters) DeepCopy() *BodyParameters {
	if in == nil {
		return nil
	}
	out := new(BodyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bus) DeepCopyInto(out *Bus) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bus.
func (in *Bus) DeepCopy() *Bus {
	if in == nil {
		return nil
	}
	out := new(Bus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Bus) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusInitParameters) DeepCopyInto(out *BusInitParameters) {
	*out = *in
	if in.EventSourceName != nil {
		in, out := &in.EventSourceName, &out.EventSourceName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusInitParameters.
func (in *BusInitParameters) DeepCopy() *BusInitParameters {
	if in == nil {
		return nil
	}
	out := new(BusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusList) DeepCopyInto(out *BusList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Bus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusList.
func (in *BusList) DeepCopy() *BusList {
	if in == nil {
		return nil
	}
	out := new(BusList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BusList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusObservation) DeepCopyInto(out *BusObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.EventSourceName != nil {
		in, out := &in.EventSourceName, &out.EventSourceName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusObservation.
func (in *BusObservation) DeepCopy() *BusObservation {
	if in == nil {
		return nil
	}
	out := new(BusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusParameters) DeepCopyInto(out *BusParameters) {
	*out = *in
	if in.EventSourceName != nil {
		in, out := &in.EventSourceName, &out.EventSourceName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusParameters.
func (in *BusParameters) DeepCopy() *BusParameters {
	if in == nil {
		return nil
	}
	out := new(BusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicy) DeepCopyInto(out *BusPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicy.
func (in *BusPolicy) DeepCopy() *BusPolicy {
	if in == nil {
		return nil
	}
	out := new(BusPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BusPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicyInitParameters) DeepCopyInto(out *BusPolicyInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicyInitParameters.
func (in *BusPolicyInitParameters) DeepCopy() *BusPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BusPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicyList) DeepCopyInto(out *BusPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BusPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicyList.
func (in *BusPolicyList) DeepCopy() *BusPolicyList {
	if in == nil {
		return nil
	}
	out := new(BusPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BusPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicyObservation) DeepCopyInto(out *BusPolicyObservation) {
	*out = *in
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicyObservation.
func (in *BusPolicyObservation) DeepCopy() *BusPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(BusPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicyParameters) DeepCopyInto(out *BusPolicyParameters) {
	*out = *in
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.EventBusNameRef != nil {
		in, out := &in.EventBusNameRef, &out.EventBusNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventBusNameSelector != nil {
		in, out := &in.EventBusNameSelector, &out.EventBusNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicyParameters.
func (in *BusPolicyParameters) DeepCopy() *BusPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(BusPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicySpec) DeepCopyInto(out *BusPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicySpec.
func (in *BusPolicySpec) DeepCopy() *BusPolicySpec {
	if in == nil {
		return nil
	}
	out := new(BusPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusPolicyStatus) DeepCopyInto(out *BusPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusPolicyStatus.
func (in *BusPolicyStatus) DeepCopy() *BusPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(BusPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusSpec) DeepCopyInto(out *BusSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusSpec.
func (in *BusSpec) DeepCopy() *BusSpec {
	if in == nil {
		return nil
	}
	out := new(BusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BusStatus) DeepCopyInto(out *BusStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BusStatus.
func (in *BusStatus) DeepCopy() *BusStatus {
	if in == nil {
		return nil
	}
	out := new(BusStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyInitParameters) DeepCopyInto(out *CapacityProviderStrategyInitParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyInitParameters.
func (in *CapacityProviderStrategyInitParameters) DeepCopy() *CapacityProviderStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyObservation) DeepCopyInto(out *CapacityProviderStrategyObservation) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyObservation.
func (in *CapacityProviderStrategyObservation) DeepCopy() *CapacityProviderStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyParameters) DeepCopyInto(out *CapacityProviderStrategyParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyParameters.
func (in *CapacityProviderStrategyParameters) DeepCopy() *CapacityProviderStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientParametersInitParameters) DeepCopyInto(out *ClientParametersInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientParametersInitParameters.
func (in *ClientParametersInitParameters) DeepCopy() *ClientParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientParametersObservation) DeepCopyInto(out *ClientParametersObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientParametersObservation.
func (in *ClientParametersObservation) DeepCopy() *ClientParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ClientParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientParametersParameters) DeepCopyInto(out *ClientParametersParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientParametersParameters.
func (in *ClientParametersParameters) DeepCopy() *ClientParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ClientParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueRef != nil {
		in, out := &in.ValueRef, &out.ValueRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ValueSelector != nil {
		in, out := &in.ValueSelector, &out.ValueSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.AuthParameters != nil {
		in, out := &in.AuthParameters, &out.AuthParameters
		*out = make([]AuthParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AuthParameters != nil {
		in, out := &in.AuthParameters, &out.AuthParameters
		*out = make([]AuthParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SecretArn != nil {
		in, out := &in.SecretArn, &out.SecretArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.AuthParameters != nil {
		in, out := &in.AuthParameters, &out.AuthParameters
		*out = make([]AuthParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigInitParameters) DeepCopyInto(out *DeadLetterConfigInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigInitParameters.
func (in *DeadLetterConfigInitParameters) DeepCopy() *DeadLetterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigObservation) DeepCopyInto(out *DeadLetterConfigObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigObservation.
func (in *DeadLetterConfigObservation) DeepCopy() *DeadLetterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigParameters) DeepCopyInto(out *DeadLetterConfigParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigParameters.
func (in *DeadLetterConfigParameters) DeepCopy() *DeadLetterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsTargetInitParameters) DeepCopyInto(out *EcsTargetInitParameters) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = make([]PlacementConstraintInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsTargetInitParameters.
func (in *EcsTargetInitParameters) DeepCopy() *EcsTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcsTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsTargetObservation) DeepCopyInto(out *EcsTargetObservation) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = make([]PlacementConstraintObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(int64)
		**out = **in
	}
	if in.TaskDefinitionArn != nil {
		in, out := &in.TaskDefinitionArn, &out.TaskDefinitionArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsTargetObservation.
func (in *EcsTargetObservation) DeepCopy() *EcsTargetObservation {
	if in == nil {
		return nil
	}
	out := new(EcsTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsTargetParameters) DeepCopyInto(out *EcsTargetParameters) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = make([]PlacementConstraintParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskCount != nil {
		in, out := &in.TaskCount, &out.TaskCount
		*out = new(int64)
		**out = **in
	}
	if in.TaskDefinitionArn != nil {
		in, out := &in.TaskDefinitionArn, &out.TaskDefinitionArn
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionArnRef != nil {
		in, out := &in.TaskDefinitionArnRef, &out.TaskDefinitionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskDefinitionArnSelector != nil {
		in, out := &in.TaskDefinitionArnSelector, &out.TaskDefinitionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsTargetParameters.
func (in *EcsTargetParameters) DeepCopy() *EcsTargetParameters {
	if in == nil {
		return nil
	}
	out := new(EcsTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPTargetInitParameters) DeepCopyInto(out *HTTPTargetInitParameters) {
	*out = *in
	if in.HeaderParameters != nil {
		in, out := &in.HeaderParameters, &out.HeaderParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PathParameterValues != nil {
		in, out := &in.PathParameterValues, &out.PathParameterValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPTargetInitParameters.
func (in *HTTPTargetInitParameters) DeepCopy() *HTTPTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPTargetObservation) DeepCopyInto(out *HTTPTargetObservation) {
	*out = *in
	if in.HeaderParameters != nil {
		in, out := &in.HeaderParameters, &out.HeaderParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PathParameterValues != nil {
		in, out := &in.PathParameterValues, &out.PathParameterValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPTargetObservation.
func (in *HTTPTargetObservation) DeepCopy() *HTTPTargetObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPTargetParameters) DeepCopyInto(out *HTTPTargetParameters) {
	*out = *in
	if in.HeaderParameters != nil {
		in, out := &in.HeaderParameters, &out.HeaderParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PathParameterValues != nil {
		in, out := &in.PathParameterValues, &out.PathParameterValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringParameters != nil {
		in, out := &in.QueryStringParameters, &out.QueryStringParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPTargetParameters.
func (in *HTTPTargetParameters) DeepCopy() *HTTPTargetParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderInitParameters) DeepCopyInto(out *HeaderInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderInitParameters.
func (in *HeaderInitParameters) DeepCopy() *HeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderObservation) DeepCopyInto(out *HeaderObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderObservation.
func (in *HeaderObservation) DeepCopy() *HeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderParameters) DeepCopyInto(out *HeaderParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderParameters.
func (in *HeaderParameters) DeepCopy() *HeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputTransformerInitParameters) DeepCopyInto(out *InputTransformerInitParameters) {
	*out = *in
	if in.InputPaths != nil {
		in, out := &in.InputPaths, &out.InputPaths
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputTemplate != nil {
		in, out := &in.InputTemplate, &out.InputTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputTransformerInitParameters.
func (in *InputTransformerInitParameters) DeepCopy() *InputTransformerInitParameters {
	if in == nil {
		return nil
	}
	out := new(InputTransformerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputTransformerObservation) DeepCopyInto(out *InputTransformerObservation) {
	*out = *in
	if in.InputPaths != nil {
		in, out := &in.InputPaths, &out.InputPaths
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputTemplate != nil {
		in, out := &in.InputTemplate, &out.InputTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputTransformerObservation.
func (in *InputTransformerObservation) DeepCopy() *InputTransformerObservation {
	if in == nil {
		return nil
	}
	out := new(InputTransformerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputTransformerParameters) DeepCopyInto(out *InputTransformerParameters) {
	*out = *in
	if in.InputPaths != nil {
		in, out := &in.InputPaths, &out.InputPaths
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InputTemplate != nil {
		in, out := &in.InputTemplate, &out.InputTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputTransformerParameters.
func (in *InputTransformerParameters) DeepCopy() *InputTransformerParameters {
	if in == nil {
		return nil
	}
	out := new(InputTransformerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationHTTPParametersInitParameters) DeepCopyInto(out *InvocationHTTPParametersInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]BodyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]QueryStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationHTTPParametersInitParameters.
func (in *InvocationHTTPParametersInitParameters) DeepCopy() *InvocationHTTPParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(InvocationHTTPParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationHTTPParametersObservation) DeepCopyInto(out *InvocationHTTPParametersObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]BodyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]QueryStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationHTTPParametersObservation.
func (in *InvocationHTTPParametersObservation) DeepCopy() *InvocationHTTPParametersObservation {
	if in == nil {
		return nil
	}
	out := new(InvocationHTTPParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationHTTPParametersParameters) DeepCopyInto(out *InvocationHTTPParametersParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]BodyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]QueryStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationHTTPParametersParameters.
func (in *InvocationHTTPParametersParameters) DeepCopy() *InvocationHTTPParametersParameters {
	if in == nil {
		return nil
	}
	out := new(InvocationHTTPParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisTargetInitParameters) DeepCopyInto(out *KinesisTargetInitParameters) {
	*out = *in
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisTargetInitParameters.
func (in *KinesisTargetInitParameters) DeepCopy() *KinesisTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(KinesisTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisTargetObservation) DeepCopyInto(out *KinesisTargetObservation) {
	*out = *in
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisTargetObservation.
func (in *KinesisTargetObservation) DeepCopy() *KinesisTargetObservation {
	if in == nil {
		return nil
	}
	out := new(KinesisTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisTargetParameters) DeepCopyInto(out *KinesisTargetParameters) {
	*out = *in
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisTargetParameters.
func (in *KinesisTargetParameters) DeepCopy() *KinesisTargetParameters {
	if in == nil {
		return nil
	}
	out := new(KinesisTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationInitParameters) DeepCopyInto(out *NetworkConfigurationInitParameters) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationInitParameters.
func (in *NetworkConfigurationInitParameters) DeepCopy() *NetworkConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationObservation) DeepCopyInto(out *NetworkConfigurationObservation) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationObservation.
func (in *NetworkConfigurationObservation) DeepCopy() *NetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationParameters) DeepCopyInto(out *NetworkConfigurationParameters) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationParameters.
func (in *NetworkConfigurationParameters) DeepCopy() *NetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersBodyInitParameters) DeepCopyInto(out *OauthHTTPParametersBodyInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersBodyInitParameters.
func (in *OauthHTTPParametersBodyInitParameters) DeepCopy() *OauthHTTPParametersBodyInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersBodyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersBodyObservation) DeepCopyInto(out *OauthHTTPParametersBodyObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersBodyObservation.
func (in *OauthHTTPParametersBodyObservation) DeepCopy() *OauthHTTPParametersBodyObservation {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersBodyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersBodyParameters) DeepCopyInto(out *OauthHTTPParametersBodyParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersBodyParameters.
func (in *OauthHTTPParametersBodyParameters) DeepCopy() *OauthHTTPParametersBodyParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersBodyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersHeaderInitParameters) DeepCopyInto(out *OauthHTTPParametersHeaderInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersHeaderInitParameters.
func (in *OauthHTTPParametersHeaderInitParameters) DeepCopy() *OauthHTTPParametersHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersHeaderObservation) DeepCopyInto(out *OauthHTTPParametersHeaderObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersHeaderObservation.
func (in *OauthHTTPParametersHeaderObservation) DeepCopy() *OauthHTTPParametersHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersHeaderParameters) DeepCopyInto(out *OauthHTTPParametersHeaderParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersHeaderParameters.
func (in *OauthHTTPParametersHeaderParameters) DeepCopy() *OauthHTTPParametersHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersInitParameters) DeepCopyInto(out *OauthHTTPParametersInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]OauthHTTPParametersBodyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]OauthHTTPParametersHeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]OauthHTTPParametersQueryStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersInitParameters.
func (in *OauthHTTPParametersInitParameters) DeepCopy() *OauthHTTPParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersObservation) DeepCopyInto(out *OauthHTTPParametersObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]OauthHTTPParametersBodyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]OauthHTTPParametersHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]OauthHTTPParametersQueryStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersObservation.
func (in *OauthHTTPParametersObservation) DeepCopy() *OauthHTTPParametersObservation {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersParameters) DeepCopyInto(out *OauthHTTPParametersParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = make([]OauthHTTPParametersBodyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]OauthHTTPParametersHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]OauthHTTPParametersQueryStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersParameters.
func (in *OauthHTTPParametersParameters) DeepCopy() *OauthHTTPParametersParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersQueryStringInitParameters) DeepCopyInto(out *OauthHTTPParametersQueryStringInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersQueryStringInitParameters.
func (in *OauthHTTPParametersQueryStringInitParameters) DeepCopy() *OauthHTTPParametersQueryStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersQueryStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersQueryStringObservation) DeepCopyInto(out *OauthHTTPParametersQueryStringObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersQueryStringObservation.
func (in *OauthHTTPParametersQueryStringObservation) DeepCopy() *OauthHTTPParametersQueryStringObservation {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersQueryStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthHTTPParametersQueryStringParameters) DeepCopyInto(out *OauthHTTPParametersQueryStringParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthHTTPParametersQueryStringParameters.
func (in *OauthHTTPParametersQueryStringParameters) DeepCopy() *OauthHTTPParametersQueryStringParameters {
	if in == nil {
		return nil
	}
	out := new(OauthHTTPParametersQueryStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthInitParameters) DeepCopyInto(out *OauthInitParameters) {
	*out = *in
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientParameters != nil {
		in, out := &in.ClientParameters, &out.ClientParameters
		*out = make([]ClientParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.OauthHTTPParameters != nil {
		in, out := &in.OauthHTTPParameters, &out.OauthHTTPParameters
		*out = make([]OauthHTTPParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthInitParameters.
func (in *OauthInitParameters) DeepCopy() *OauthInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthObservation) DeepCopyInto(out *OauthObservation) {
	*out = *in
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientParameters != nil {
		in, out := &in.ClientParameters, &out.ClientParameters
		*out = make([]ClientParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.OauthHTTPParameters != nil {
		in, out := &in.OauthHTTPParameters, &out.OauthHTTPParameters
		*out = make([]OauthHTTPParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthObservation.
func (in *OauthObservation) DeepCopy() *OauthObservation {
	if in == nil {
		return nil
	}
	out := new(OauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthParameters) DeepCopyInto(out *OauthParameters) {
	*out = *in
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientParameters != nil {
		in, out := &in.ClientParameters, &out.ClientParameters
		*out = make([]ClientParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.OauthHTTPParameters != nil {
		in, out := &in.OauthHTTPParameters, &out.OauthHTTPParameters
		*out = make([]OauthHTTPParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthParameters.
func (in *OauthParameters) DeepCopy() *OauthParameters {
	if in == nil {
		return nil
	}
	out := new(OauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyInitParameters) DeepCopyInto(out *OrderedPlacementStrategyInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyInitParameters.
func (in *OrderedPlacementStrategyInitParameters) DeepCopy() *OrderedPlacementStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyObservation) DeepCopyInto(out *OrderedPlacementStrategyObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyObservation.
func (in *OrderedPlacementStrategyObservation) DeepCopy() *OrderedPlacementStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyParameters) DeepCopyInto(out *OrderedPlacementStrategyParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyParameters.
func (in *OrderedPlacementStrategyParameters) DeepCopy() *OrderedPlacementStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionInitParameters) DeepCopyInto(out *PermissionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionInitParameters.
func (in *PermissionInitParameters) DeepCopy() *PermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionList) DeepCopyInto(out *PermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionList.
func (in *PermissionList) DeepCopy() *PermissionList {
	if in == nil {
		return nil
	}
	out := new(PermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionObservation) DeepCopyInto(out *PermissionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionObservation.
func (in *PermissionObservation) DeepCopy() *PermissionObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionParameters) DeepCopyInto(out *PermissionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.EventBusNameRef != nil {
		in, out := &in.EventBusNameRef, &out.EventBusNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventBusNameSelector != nil {
		in, out := &in.EventBusNameSelector, &out.EventBusNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionParameters.
func (in *PermissionParameters) DeepCopy() *PermissionParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionSpec) DeepCopyInto(out *PermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionSpec.
func (in *PermissionSpec) DeepCopy() *PermissionSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionStatus) DeepCopyInto(out *PermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionStatus.
func (in *PermissionStatus) DeepCopy() *PermissionStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameterListInitParameters) DeepCopyInto(out *PipelineParameterListInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameterListInitParameters.
func (in *PipelineParameterListInitParameters) DeepCopy() *PipelineParameterListInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameterListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameterListObservation) DeepCopyInto(out *PipelineParameterListObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameterListObservation.
func (in *PipelineParameterListObservation) DeepCopy() *PipelineParameterListObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineParameterListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameterListParameters) DeepCopyInto(out *PipelineParameterListParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameterListParameters.
func (in *PipelineParameterListParameters) DeepCopy() *PipelineParameterListParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameterListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintInitParameters) DeepCopyInto(out *PlacementConstraintInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintInitParameters.
func (in *PlacementConstraintInitParameters) DeepCopy() *PlacementConstraintInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintObservation) DeepCopyInto(out *PlacementConstraintObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintObservation.
func (in *PlacementConstraintObservation) DeepCopy() *PlacementConstraintObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintParameters) DeepCopyInto(out *PlacementConstraintParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintParameters.
func (in *PlacementConstraintParameters) DeepCopy() *PlacementConstraintParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringInitParameters) DeepCopyInto(out *QueryStringInitParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringInitParameters.
func (in *QueryStringInitParameters) DeepCopy() *QueryStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringObservation) DeepCopyInto(out *QueryStringObservation) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringObservation.
func (in *QueryStringObservation) DeepCopy() *QueryStringObservation {
	if in == nil {
		return nil
	}
	out := new(QueryStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringParameters) DeepCopyInto(out *QueryStringParameters) {
	*out = *in
	if in.IsValueSecret != nil {
		in, out := &in.IsValueSecret, &out.IsValueSecret
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringParameters.
func (in *QueryStringParameters) DeepCopy() *QueryStringParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftTargetInitParameters) DeepCopyInto(out *RedshiftTargetInitParameters) {
	*out = *in
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerArn != nil {
		in, out := &in.SecretsManagerArn, &out.SecretsManagerArn
		*out = new(string)
		**out = **in
	}
	if in.StatementName != nil {
		in, out := &in.StatementName, &out.StatementName
		*out = new(string)
		**out = **in
	}
	if in.WithEvent != nil {
		in, out := &in.WithEvent, &out.WithEvent
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftTargetInitParameters.
func (in *RedshiftTargetInitParameters) DeepCopy() *RedshiftTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftTargetObservation) DeepCopyInto(out *RedshiftTargetObservation) {
	*out = *in
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerArn != nil {
		in, out := &in.SecretsManagerArn, &out.SecretsManagerArn
		*out = new(string)
		**out = **in
	}
	if in.StatementName != nil {
		in, out := &in.StatementName, &out.StatementName
		*out = new(string)
		**out = **in
	}
	if in.WithEvent != nil {
		in, out := &in.WithEvent, &out.WithEvent
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftTargetObservation.
func (in *RedshiftTargetObservation) DeepCopy() *RedshiftTargetObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftTargetParameters) DeepCopyInto(out *RedshiftTargetParameters) {
	*out = *in
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SecretsManagerArn != nil {
		in, out := &in.SecretsManagerArn, &out.SecretsManagerArn
		*out = new(string)
		**out = **in
	}
	if in.StatementName != nil {
		in, out := &in.StatementName, &out.StatementName
		*out = new(string)
		**out = **in
	}
	if in.WithEvent != nil {
		in, out := &in.WithEvent, &out.WithEvent
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftTargetParameters.
func (in *RedshiftTargetParameters) DeepCopy() *RedshiftTargetParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyInitParameters) DeepCopyInto(out *RetryPolicyInitParameters) {
	*out = *in
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyInitParameters.
func (in *RetryPolicyInitParameters) DeepCopy() *RetryPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyObservation) DeepCopyInto(out *RetryPolicyObservation) {
	*out = *in
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyObservation.
func (in *RetryPolicyObservation) DeepCopy() *RetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyParameters) DeepCopyInto(out *RetryPolicyParameters) {
	*out = *in
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyParameters.
func (in *RetryPolicyParameters) DeepCopy() *RetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Rule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleList) DeepCopyInto(out *RuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleList.
func (in *RuleList) DeepCopy() *RuleList {
	if in == nil {
		return nil
	}
	out := new(RuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.EventBusNameRef != nil {
		in, out := &in.EventBusNameRef, &out.EventBusNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventBusNameSelector != nil {
		in, out := &in.EventBusNameSelector, &out.EventBusNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventPattern != nil {
		in, out := &in.EventPattern, &out.EventPattern
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpec) DeepCopyInto(out *RuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpec.
func (in *RuleSpec) DeepCopy() *RuleSpec {
	if in == nil {
		return nil
	}
	out := new(RuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleStatus) DeepCopyInto(out *RuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleStatus.
func (in *RuleStatus) DeepCopy() *RuleStatus {
	if in == nil {
		return nil
	}
	out := new(RuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandTargetsInitParameters) DeepCopyInto(out *RunCommandTargetsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandTargetsInitParameters.
func (in *RunCommandTargetsInitParameters) DeepCopy() *RunCommandTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandTargetsObservation) DeepCopyInto(out *RunCommandTargetsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandTargetsObservation.
func (in *RunCommandTargetsObservation) DeepCopy() *RunCommandTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(RunCommandTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandTargetsParameters) DeepCopyInto(out *RunCommandTargetsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandTargetsParameters.
func (in *RunCommandTargetsParameters) DeepCopy() *RunCommandTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SagemakerPipelineTargetInitParameters) DeepCopyInto(out *SagemakerPipelineTargetInitParameters) {
	*out = *in
	if in.PipelineParameterList != nil {
		in, out := &in.PipelineParameterList, &out.PipelineParameterList
		*out = make([]PipelineParameterListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SagemakerPipelineTargetInitParameters.
func (in *SagemakerPipelineTargetInitParameters) DeepCopy() *SagemakerPipelineTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SagemakerPipelineTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SagemakerPipelineTargetObservation) DeepCopyInto(out *SagemakerPipelineTargetObservation) {
	*out = *in
	if in.PipelineParameterList != nil {
		in, out := &in.PipelineParameterList, &out.PipelineParameterList
		*out = make([]PipelineParameterListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SagemakerPipelineTargetObservation.
func (in *SagemakerPipelineTargetObservation) DeepCopy() *SagemakerPipelineTargetObservation {
	if in == nil {
		return nil
	}
	out := new(SagemakerPipelineTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SagemakerPipelineTargetParameters) DeepCopyInto(out *SagemakerPipelineTargetParameters) {
	*out = *in
	if in.PipelineParameterList != nil {
		in, out := &in.PipelineParameterList, &out.PipelineParameterList
		*out = make([]PipelineParameterListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SagemakerPipelineTargetParameters.
func (in *SagemakerPipelineTargetParameters) DeepCopy() *SagemakerPipelineTargetParameters {
	if in == nil {
		return nil
	}
	out := new(SagemakerPipelineTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsTargetInitParameters) DeepCopyInto(out *SqsTargetInitParameters) {
	*out = *in
	if in.MessageGroupID != nil {
		in, out := &in.MessageGroupID, &out.MessageGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsTargetInitParameters.
func (in *SqsTargetInitParameters) DeepCopy() *SqsTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SqsTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsTargetObservation) DeepCopyInto(out *SqsTargetObservation) {
	*out = *in
	if in.MessageGroupID != nil {
		in, out := &in.MessageGroupID, &out.MessageGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsTargetObservation.
func (in *SqsTargetObservation) DeepCopy() *SqsTargetObservation {
	if in == nil {
		return nil
	}
	out := new(SqsTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsTargetParameters) DeepCopyInto(out *SqsTargetParameters) {
	*out = *in
	if in.MessageGroupID != nil {
		in, out := &in.MessageGroupID, &out.MessageGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsTargetParameters.
func (in *SqsTargetParameters) DeepCopy() *SqsTargetParameters {
	if in == nil {
		return nil
	}
	out := new(SqsTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Target) DeepCopyInto(out *Target) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Target.
func (in *Target) DeepCopy() *Target {
	if in == nil {
		return nil
	}
	out := new(Target)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Target) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInitParameters) DeepCopyInto(out *TargetInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BatchTarget != nil {
		in, out := &in.BatchTarget, &out.BatchTarget
		*out = make([]BatchTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsTarget != nil {
		in, out := &in.EcsTarget, &out.EcsTarget
		*out = make([]EcsTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPTarget != nil {
		in, out := &in.HTTPTarget, &out.HTTPTarget
		*out = make([]HTTPTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.InputPath != nil {
		in, out := &in.InputPath, &out.InputPath
		*out = new(string)
		**out = **in
	}
	if in.InputTransformer != nil {
		in, out := &in.InputTransformer, &out.InputTransformer
		*out = make([]InputTransformerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KinesisTarget != nil {
		in, out := &in.KinesisTarget, &out.KinesisTarget
		*out = make([]KinesisTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedshiftTarget != nil {
		in, out := &in.RedshiftTarget, &out.RedshiftTarget
		*out = make([]RedshiftTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunCommandTargets != nil {
		in, out := &in.RunCommandTargets, &out.RunCommandTargets
		*out = make([]RunCommandTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SagemakerPipelineTarget != nil {
		in, out := &in.SagemakerPipelineTarget, &out.SagemakerPipelineTarget
		*out = make([]SagemakerPipelineTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SqsTarget != nil {
		in, out := &in.SqsTarget, &out.SqsTarget
		*out = make([]SqsTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInitParameters.
func (in *TargetInitParameters) DeepCopy() *TargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetList) DeepCopyInto(out *TargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Target, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetList.
func (in *TargetList) DeepCopy() *TargetList {
	if in == nil {
		return nil
	}
	out := new(TargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetObservation) DeepCopyInto(out *TargetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BatchTarget != nil {
		in, out := &in.BatchTarget, &out.BatchTarget
		*out = make([]BatchTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsTarget != nil {
		in, out := &in.EcsTarget, &out.EcsTarget
		*out = make([]EcsTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.HTTPTarget != nil {
		in, out := &in.HTTPTarget, &out.HTTPTarget
		*out = make([]HTTPTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.InputPath != nil {
		in, out := &in.InputPath, &out.InputPath
		*out = new(string)
		**out = **in
	}
	if in.InputTransformer != nil {
		in, out := &in.InputTransformer, &out.InputTransformer
		*out = make([]InputTransformerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KinesisTarget != nil {
		in, out := &in.KinesisTarget, &out.KinesisTarget
		*out = make([]KinesisTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedshiftTarget != nil {
		in, out := &in.RedshiftTarget, &out.RedshiftTarget
		*out = make([]RedshiftTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.RunCommandTargets != nil {
		in, out := &in.RunCommandTargets, &out.RunCommandTargets
		*out = make([]RunCommandTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SagemakerPipelineTarget != nil {
		in, out := &in.SagemakerPipelineTarget, &out.SagemakerPipelineTarget
		*out = make([]SagemakerPipelineTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SqsTarget != nil {
		in, out := &in.SqsTarget, &out.SqsTarget
		*out = make([]SqsTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetObservation.
func (in *TargetObservation) DeepCopy() *TargetObservation {
	if in == nil {
		return nil
	}
	out := new(TargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetParameters) DeepCopyInto(out *TargetParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BatchTarget != nil {
		in, out := &in.BatchTarget, &out.BatchTarget
		*out = make([]BatchTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsTarget != nil {
		in, out := &in.EcsTarget, &out.EcsTarget
		*out = make([]EcsTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventBusName != nil {
		in, out := &in.EventBusName, &out.EventBusName
		*out = new(string)
		**out = **in
	}
	if in.EventBusNameRef != nil {
		in, out := &in.EventBusNameRef, &out.EventBusNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EventBusNameSelector != nil {
		in, out := &in.EventBusNameSelector, &out.EventBusNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPTarget != nil {
		in, out := &in.HTTPTarget, &out.HTTPTarget
		*out = make([]HTTPTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.InputPath != nil {
		in, out := &in.InputPath, &out.InputPath
		*out = new(string)
		**out = **in
	}
	if in.InputTransformer != nil {
		in, out := &in.InputTransformer, &out.InputTransformer
		*out = make([]InputTransformerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KinesisTarget != nil {
		in, out := &in.KinesisTarget, &out.KinesisTarget
		*out = make([]KinesisTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedshiftTarget != nil {
		in, out := &in.RedshiftTarget, &out.RedshiftTarget
		*out = make([]RedshiftTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.RuleRef != nil {
		in, out := &in.RuleRef, &out.RuleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleSelector != nil {
		in, out := &in.RuleSelector, &out.RuleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RunCommandTargets != nil {
		in, out := &in.RunCommandTargets, &out.RunCommandTargets
		*out = make([]RunCommandTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SagemakerPipelineTarget != nil {
		in, out := &in.SagemakerPipelineTarget, &out.SagemakerPipelineTarget
		*out = make([]SagemakerPipelineTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SqsTarget != nil {
		in, out := &in.SqsTarget, &out.SqsTarget
		*out = make([]SqsTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetParameters.
func (in *TargetParameters) DeepCopy() *TargetParameters {
	if in == nil {
		return nil
	}
	out := new(TargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSpec) DeepCopyInto(out *TargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSpec.
func (in *TargetSpec) DeepCopy() *TargetSpec {
	if in == nil {
		return nil
	}
	out := new(TargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetStatus) DeepCopyInto(out *TargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetStatus.
func (in *TargetStatus) DeepCopy() *TargetStatus {
	if in == nil {
		return nil
	}
	out := new(TargetStatus)
	in.DeepCopyInto(out)
	return out
}

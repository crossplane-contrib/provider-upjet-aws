// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApacheKafkaClusterInitParameters struct {

	// The bootstrap servers of the cluster.
	BootstrapServers *string `json:"bootstrapServers,omitempty" tf:"bootstrap_servers,omitempty"`

	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	VPC []VPCInitParameters `json:"vpc,omitempty" tf:"vpc,omitempty"`
}

type ApacheKafkaClusterObservation struct {

	// The bootstrap servers of the cluster.
	BootstrapServers *string `json:"bootstrapServers,omitempty" tf:"bootstrap_servers,omitempty"`

	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	VPC []VPCObservation `json:"vpc,omitempty" tf:"vpc,omitempty"`
}

type ApacheKafkaClusterParameters struct {

	// The bootstrap servers of the cluster.
	// +kubebuilder:validation:Optional
	BootstrapServers *string `json:"bootstrapServers" tf:"bootstrap_servers,omitempty"`

	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	// +kubebuilder:validation:Optional
	VPC []VPCParameters `json:"vpc" tf:"vpc,omitempty"`
}

type AutoscalingInitParameters struct {

	// The maximum number of workers allocated to the connector.
	MaxWorkerCount *float64 `json:"maxWorkerCount,omitempty" tf:"max_worker_count,omitempty"`

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The minimum number of workers allocated to the connector.
	MinWorkerCount *float64 `json:"minWorkerCount,omitempty" tf:"min_worker_count,omitempty"`

	// The scale-in policy for the connector. See below.
	ScaleInPolicy []ScaleInPolicyInitParameters `json:"scaleInPolicy,omitempty" tf:"scale_in_policy,omitempty"`

	// The scale-out policy for the connector. See below.
	ScaleOutPolicy []ScaleOutPolicyInitParameters `json:"scaleOutPolicy,omitempty" tf:"scale_out_policy,omitempty"`
}

type AutoscalingObservation struct {

	// The maximum number of workers allocated to the connector.
	MaxWorkerCount *float64 `json:"maxWorkerCount,omitempty" tf:"max_worker_count,omitempty"`

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The minimum number of workers allocated to the connector.
	MinWorkerCount *float64 `json:"minWorkerCount,omitempty" tf:"min_worker_count,omitempty"`

	// The scale-in policy for the connector. See below.
	ScaleInPolicy []ScaleInPolicyObservation `json:"scaleInPolicy,omitempty" tf:"scale_in_policy,omitempty"`

	// The scale-out policy for the connector. See below.
	ScaleOutPolicy []ScaleOutPolicyObservation `json:"scaleOutPolicy,omitempty" tf:"scale_out_policy,omitempty"`
}

type AutoscalingParameters struct {

	// The maximum number of workers allocated to the connector.
	// +kubebuilder:validation:Optional
	MaxWorkerCount *float64 `json:"maxWorkerCount" tf:"max_worker_count,omitempty"`

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	// +kubebuilder:validation:Optional
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The minimum number of workers allocated to the connector.
	// +kubebuilder:validation:Optional
	MinWorkerCount *float64 `json:"minWorkerCount" tf:"min_worker_count,omitempty"`

	// The scale-in policy for the connector. See below.
	// +kubebuilder:validation:Optional
	ScaleInPolicy []ScaleInPolicyParameters `json:"scaleInPolicy,omitempty" tf:"scale_in_policy,omitempty"`

	// The scale-out policy for the connector. See below.
	// +kubebuilder:validation:Optional
	ScaleOutPolicy []ScaleOutPolicyParameters `json:"scaleOutPolicy,omitempty" tf:"scale_out_policy,omitempty"`
}

type CapacityInitParameters struct {

	// Information about the auto scaling parameters for the connector. See below.
	Autoscaling []AutoscalingInitParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// Details about a fixed capacity allocated to a connector. See below.
	ProvisionedCapacity []ProvisionedCapacityInitParameters `json:"provisionedCapacity,omitempty" tf:"provisioned_capacity,omitempty"`
}

type CapacityObservation struct {

	// Information about the auto scaling parameters for the connector. See below.
	Autoscaling []AutoscalingObservation `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// Details about a fixed capacity allocated to a connector. See below.
	ProvisionedCapacity []ProvisionedCapacityObservation `json:"provisionedCapacity,omitempty" tf:"provisioned_capacity,omitempty"`
}

type CapacityParameters struct {

	// Information about the auto scaling parameters for the connector. See below.
	// +kubebuilder:validation:Optional
	Autoscaling []AutoscalingParameters `json:"autoscaling,omitempty" tf:"autoscaling,omitempty"`

	// Details about a fixed capacity allocated to a connector. See below.
	// +kubebuilder:validation:Optional
	ProvisionedCapacity []ProvisionedCapacityParameters `json:"provisionedCapacity,omitempty" tf:"provisioned_capacity,omitempty"`
}

type CloudwatchLogsInitParameters struct {

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name of the CloudWatch log group that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	LogGroup *string `json:"logGroup,omitempty" tf:"log_group,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroup.
	// +kubebuilder:validation:Optional
	LogGroupRef *v1.Reference `json:"logGroupRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroup.
	// +kubebuilder:validation:Optional
	LogGroupSelector *v1.Selector `json:"logGroupSelector,omitempty" tf:"-"`
}

type CloudwatchLogsObservation struct {

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name of the CloudWatch log group that is the destination for log delivery.
	LogGroup *string `json:"logGroup,omitempty" tf:"log_group,omitempty"`
}

type CloudwatchLogsParameters struct {

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// The name of the CloudWatch log group that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	// +kubebuilder:validation:Optional
	LogGroup *string `json:"logGroup,omitempty" tf:"log_group,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroup.
	// +kubebuilder:validation:Optional
	LogGroupRef *v1.Reference `json:"logGroupRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroup.
	// +kubebuilder:validation:Optional
	LogGroupSelector *v1.Selector `json:"logGroupSelector,omitempty" tf:"-"`
}

type ConnectorInitParameters struct {

	// Information about the capacity allocated to the connector. See below.
	Capacity []CapacityInitParameters `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// A map of keys to values that represent the configuration for the connector.
	// +mapType=granular
	ConnectorConfiguration map[string]*string `json:"connectorConfiguration,omitempty" tf:"connector_configuration,omitempty"`

	// A summary description of the connector.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies which Apache Kafka cluster to connect to. See below.
	KafkaCluster []KafkaClusterInitParameters `json:"kafkaCluster,omitempty" tf:"kafka_cluster,omitempty"`

	// Details of the client authentication used by the Apache Kafka cluster. See below.
	KafkaClusterClientAuthentication []KafkaClusterClientAuthenticationInitParameters `json:"kafkaClusterClientAuthentication,omitempty" tf:"kafka_cluster_client_authentication,omitempty"`

	// Details of encryption in transit to the Apache Kafka cluster. See below.
	KafkaClusterEncryptionInTransit []KafkaClusterEncryptionInTransitInitParameters `json:"kafkaClusterEncryptionInTransit,omitempty" tf:"kafka_cluster_encryption_in_transit,omitempty"`

	// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
	KafkaconnectVersion *string `json:"kafkaconnectVersion,omitempty" tf:"kafkaconnect_version,omitempty"`

	// Details about log delivery. See below.
	LogDelivery []LogDeliveryInitParameters `json:"logDelivery,omitempty" tf:"log_delivery,omitempty"`

	// Specifies which plugins to use for the connector. See below.
	Plugin []PluginInitParameters `json:"plugin,omitempty" tf:"plugin,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	ServiceExecutionRoleArn *string `json:"serviceExecutionRoleArn,omitempty" tf:"service_execution_role_arn,omitempty"`

	// Reference to a Role in iam to populate serviceExecutionRoleArn.
	// +kubebuilder:validation:Optional
	ServiceExecutionRoleArnRef *v1.Reference `json:"serviceExecutionRoleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate serviceExecutionRoleArn.
	// +kubebuilder:validation:Optional
	ServiceExecutionRoleArnSelector *v1.Selector `json:"serviceExecutionRoleArnSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies which worker configuration to use with the connector. See below.
	WorkerConfiguration []WorkerConfigurationInitParameters `json:"workerConfiguration,omitempty" tf:"worker_configuration,omitempty"`
}

type ConnectorObservation struct {

	// The Amazon Resource Name (ARN) of the custom plugin.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Information about the capacity allocated to the connector. See below.
	Capacity []CapacityObservation `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// A map of keys to values that represent the configuration for the connector.
	// +mapType=granular
	ConnectorConfiguration map[string]*string `json:"connectorConfiguration,omitempty" tf:"connector_configuration,omitempty"`

	// A summary description of the connector.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies which Apache Kafka cluster to connect to. See below.
	KafkaCluster []KafkaClusterObservation `json:"kafkaCluster,omitempty" tf:"kafka_cluster,omitempty"`

	// Details of the client authentication used by the Apache Kafka cluster. See below.
	KafkaClusterClientAuthentication []KafkaClusterClientAuthenticationObservation `json:"kafkaClusterClientAuthentication,omitempty" tf:"kafka_cluster_client_authentication,omitempty"`

	// Details of encryption in transit to the Apache Kafka cluster. See below.
	KafkaClusterEncryptionInTransit []KafkaClusterEncryptionInTransitObservation `json:"kafkaClusterEncryptionInTransit,omitempty" tf:"kafka_cluster_encryption_in_transit,omitempty"`

	// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
	KafkaconnectVersion *string `json:"kafkaconnectVersion,omitempty" tf:"kafkaconnect_version,omitempty"`

	// Details about log delivery. See below.
	LogDelivery []LogDeliveryObservation `json:"logDelivery,omitempty" tf:"log_delivery,omitempty"`

	// The name of the connector.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies which plugins to use for the connector. See below.
	Plugin []PluginObservation `json:"plugin,omitempty" tf:"plugin,omitempty"`

	// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
	ServiceExecutionRoleArn *string `json:"serviceExecutionRoleArn,omitempty" tf:"service_execution_role_arn,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// The current version of the connector.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`

	// Specifies which worker configuration to use with the connector. See below.
	WorkerConfiguration []WorkerConfigurationObservation `json:"workerConfiguration,omitempty" tf:"worker_configuration,omitempty"`
}

type ConnectorParameters struct {

	// Information about the capacity allocated to the connector. See below.
	// +kubebuilder:validation:Optional
	Capacity []CapacityParameters `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// A map of keys to values that represent the configuration for the connector.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ConnectorConfiguration map[string]*string `json:"connectorConfiguration,omitempty" tf:"connector_configuration,omitempty"`

	// A summary description of the connector.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies which Apache Kafka cluster to connect to. See below.
	// +kubebuilder:validation:Optional
	KafkaCluster []KafkaClusterParameters `json:"kafkaCluster,omitempty" tf:"kafka_cluster,omitempty"`

	// Details of the client authentication used by the Apache Kafka cluster. See below.
	// +kubebuilder:validation:Optional
	KafkaClusterClientAuthentication []KafkaClusterClientAuthenticationParameters `json:"kafkaClusterClientAuthentication,omitempty" tf:"kafka_cluster_client_authentication,omitempty"`

	// Details of encryption in transit to the Apache Kafka cluster. See below.
	// +kubebuilder:validation:Optional
	KafkaClusterEncryptionInTransit []KafkaClusterEncryptionInTransitParameters `json:"kafkaClusterEncryptionInTransit,omitempty" tf:"kafka_cluster_encryption_in_transit,omitempty"`

	// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
	// +kubebuilder:validation:Optional
	KafkaconnectVersion *string `json:"kafkaconnectVersion,omitempty" tf:"kafkaconnect_version,omitempty"`

	// Details about log delivery. See below.
	// +kubebuilder:validation:Optional
	LogDelivery []LogDeliveryParameters `json:"logDelivery,omitempty" tf:"log_delivery,omitempty"`

	// The name of the connector.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies which plugins to use for the connector. See below.
	// +kubebuilder:validation:Optional
	Plugin []PluginParameters `json:"plugin,omitempty" tf:"plugin,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	ServiceExecutionRoleArn *string `json:"serviceExecutionRoleArn,omitempty" tf:"service_execution_role_arn,omitempty"`

	// Reference to a Role in iam to populate serviceExecutionRoleArn.
	// +kubebuilder:validation:Optional
	ServiceExecutionRoleArnRef *v1.Reference `json:"serviceExecutionRoleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate serviceExecutionRoleArn.
	// +kubebuilder:validation:Optional
	ServiceExecutionRoleArnSelector *v1.Selector `json:"serviceExecutionRoleArnSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies which worker configuration to use with the connector. See below.
	// +kubebuilder:validation:Optional
	WorkerConfiguration []WorkerConfigurationParameters `json:"workerConfiguration,omitempty" tf:"worker_configuration,omitempty"`
}

type CustomPluginInitParameters struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kafkaconnect/v1beta1.CustomPlugin
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a CustomPlugin in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.Reference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a CustomPlugin in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.Selector `json:"arnSelector,omitempty" tf:"-"`

	// The revision of the worker configuration.
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`
}

type CustomPluginObservation struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The revision of the worker configuration.
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`
}

type CustomPluginParameters struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kafkaconnect/v1beta1.CustomPlugin
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a CustomPlugin in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.Reference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a CustomPlugin in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.Selector `json:"arnSelector,omitempty" tf:"-"`

	// The revision of the worker configuration.
	// +kubebuilder:validation:Optional
	Revision *float64 `json:"revision" tf:"revision,omitempty"`
}

type FirehoseInitParameters struct {

	// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	DeliveryStream *string `json:"deliveryStream,omitempty" tf:"delivery_stream,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStream.
	// +kubebuilder:validation:Optional
	DeliveryStreamRef *v1.Reference `json:"deliveryStreamRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStream.
	// +kubebuilder:validation:Optional
	DeliveryStreamSelector *v1.Selector `json:"deliveryStreamSelector,omitempty" tf:"-"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type FirehoseObservation struct {

	// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
	DeliveryStream *string `json:"deliveryStream,omitempty" tf:"delivery_stream,omitempty"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type FirehoseParameters struct {

	// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	DeliveryStream *string `json:"deliveryStream,omitempty" tf:"delivery_stream,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStream.
	// +kubebuilder:validation:Optional
	DeliveryStreamRef *v1.Reference `json:"deliveryStreamRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStream.
	// +kubebuilder:validation:Optional
	DeliveryStreamSelector *v1.Selector `json:"deliveryStreamSelector,omitempty" tf:"-"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type KafkaClusterClientAuthenticationInitParameters struct {

	// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`
}

type KafkaClusterClientAuthenticationObservation struct {

	// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`
}

type KafkaClusterClientAuthenticationParameters struct {

	// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
	// +kubebuilder:validation:Optional
	AuthenticationType *string `json:"authenticationType,omitempty" tf:"authentication_type,omitempty"`
}

type KafkaClusterEncryptionInTransitInitParameters struct {

	// The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`
}

type KafkaClusterEncryptionInTransitObservation struct {

	// The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`
}

type KafkaClusterEncryptionInTransitParameters struct {

	// The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
	// +kubebuilder:validation:Optional
	EncryptionType *string `json:"encryptionType,omitempty" tf:"encryption_type,omitempty"`
}

type KafkaClusterInitParameters struct {

	// The Apache Kafka cluster to which the connector is connected.
	ApacheKafkaCluster []ApacheKafkaClusterInitParameters `json:"apacheKafkaCluster,omitempty" tf:"apache_kafka_cluster,omitempty"`
}

type KafkaClusterObservation struct {

	// The Apache Kafka cluster to which the connector is connected.
	ApacheKafkaCluster []ApacheKafkaClusterObservation `json:"apacheKafkaCluster,omitempty" tf:"apache_kafka_cluster,omitempty"`
}

type KafkaClusterParameters struct {

	// The Apache Kafka cluster to which the connector is connected.
	// +kubebuilder:validation:Optional
	ApacheKafkaCluster []ApacheKafkaClusterParameters `json:"apacheKafkaCluster" tf:"apache_kafka_cluster,omitempty"`
}

type LogDeliveryInitParameters struct {

	// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
	WorkerLogDelivery []WorkerLogDeliveryInitParameters `json:"workerLogDelivery,omitempty" tf:"worker_log_delivery,omitempty"`
}

type LogDeliveryObservation struct {

	// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
	WorkerLogDelivery []WorkerLogDeliveryObservation `json:"workerLogDelivery,omitempty" tf:"worker_log_delivery,omitempty"`
}

type LogDeliveryParameters struct {

	// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
	// +kubebuilder:validation:Optional
	WorkerLogDelivery []WorkerLogDeliveryParameters `json:"workerLogDelivery" tf:"worker_log_delivery,omitempty"`
}

type PluginInitParameters struct {

	// Details about a custom plugin. See below.
	CustomPlugin []CustomPluginInitParameters `json:"customPlugin,omitempty" tf:"custom_plugin,omitempty"`
}

type PluginObservation struct {

	// Details about a custom plugin. See below.
	CustomPlugin []CustomPluginObservation `json:"customPlugin,omitempty" tf:"custom_plugin,omitempty"`
}

type PluginParameters struct {

	// Details about a custom plugin. See below.
	// +kubebuilder:validation:Optional
	CustomPlugin []CustomPluginParameters `json:"customPlugin" tf:"custom_plugin,omitempty"`
}

type ProvisionedCapacityInitParameters struct {

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The number of workers that are allocated to the connector.
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type ProvisionedCapacityObservation struct {

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The number of workers that are allocated to the connector.
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type ProvisionedCapacityParameters struct {

	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
	// +kubebuilder:validation:Optional
	McuCount *float64 `json:"mcuCount,omitempty" tf:"mcu_count,omitempty"`

	// The number of workers that are allocated to the connector.
	// +kubebuilder:validation:Optional
	WorkerCount *float64 `json:"workerCount" tf:"worker_count,omitempty"`
}

type S3InitParameters struct {

	// The name of the S3 bucket that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The S3 prefix that is the destination for log delivery.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type S3Observation struct {

	// The name of the S3 bucket that is the destination for log delivery.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The S3 prefix that is the destination for log delivery.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type S3Parameters struct {

	// The name of the S3 bucket that is the destination for log delivery.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// The S3 prefix that is the destination for log delivery.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type ScaleInPolicyInitParameters struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type ScaleInPolicyObservation struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type ScaleInPolicyParameters struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	// +kubebuilder:validation:Optional
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type ScaleOutPolicyInitParameters struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type ScaleOutPolicyObservation struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type ScaleOutPolicyParameters struct {

	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	// +kubebuilder:validation:Optional
	CPUUtilizationPercentage *float64 `json:"cpuUtilizationPercentage,omitempty" tf:"cpu_utilization_percentage,omitempty"`
}

type VPCInitParameters struct {

	// References to SecurityGroup in ec2 to populate securityGroups.
	// +kubebuilder:validation:Optional
	SecurityGroupRefs []v1.Reference `json:"securityGroupRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ec2 to populate securityGroups.
	// +kubebuilder:validation:Optional
	SecurityGroupSelector *v1.Selector `json:"securityGroupSelector,omitempty" tf:"-"`

	// The security groups for the connector.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupSelector
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// References to Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetRefs []v1.Reference `json:"subnetRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetSelector *v1.Selector `json:"subnetSelector,omitempty" tf:"-"`

	// The subnets for the connector.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetSelector
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type VPCObservation struct {

	// The security groups for the connector.
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// The subnets for the connector.
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type VPCParameters struct {

	// References to SecurityGroup in ec2 to populate securityGroups.
	// +kubebuilder:validation:Optional
	SecurityGroupRefs []v1.Reference `json:"securityGroupRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ec2 to populate securityGroups.
	// +kubebuilder:validation:Optional
	SecurityGroupSelector *v1.Selector `json:"securityGroupSelector,omitempty" tf:"-"`

	// The security groups for the connector.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupSelector
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// References to Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetRefs []v1.Reference `json:"subnetRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetSelector *v1.Selector `json:"subnetSelector,omitempty" tf:"-"`

	// The subnets for the connector.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetSelector
	// +kubebuilder:validation:Optional
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type WorkerConfigurationInitParameters struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kafkaconnect/v1beta1.WorkerConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a WorkerConfiguration in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.Reference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a WorkerConfiguration in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.Selector `json:"arnSelector,omitempty" tf:"-"`

	// The revision of the worker configuration.
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`
}

type WorkerConfigurationObservation struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The revision of the worker configuration.
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`
}

type WorkerConfigurationParameters struct {

	// The Amazon Resource Name (ARN) of the worker configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kafkaconnect/v1beta1.WorkerConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a WorkerConfiguration in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.Reference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a WorkerConfiguration in kafkaconnect to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.Selector `json:"arnSelector,omitempty" tf:"-"`

	// The revision of the worker configuration.
	// +kubebuilder:validation:Optional
	Revision *float64 `json:"revision" tf:"revision,omitempty"`
}

type WorkerLogDeliveryInitParameters struct {

	// Details about delivering logs to Amazon CloudWatch Logs. See below.
	CloudwatchLogs []CloudwatchLogsInitParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
	Firehose []FirehoseInitParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	// Details about delivering logs to Amazon S3. See below.
	S3 []S3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

type WorkerLogDeliveryObservation struct {

	// Details about delivering logs to Amazon CloudWatch Logs. See below.
	CloudwatchLogs []CloudwatchLogsObservation `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
	Firehose []FirehoseObservation `json:"firehose,omitempty" tf:"firehose,omitempty"`

	// Details about delivering logs to Amazon S3. See below.
	S3 []S3Observation `json:"s3,omitempty" tf:"s3,omitempty"`
}

type WorkerLogDeliveryParameters struct {

	// Details about delivering logs to Amazon CloudWatch Logs. See below.
	// +kubebuilder:validation:Optional
	CloudwatchLogs []CloudwatchLogsParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
	// +kubebuilder:validation:Optional
	Firehose []FirehoseParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	// Details about delivering logs to Amazon S3. See below.
	// +kubebuilder:validation:Optional
	S3 []S3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`
}

// ConnectorSpec defines the desired state of Connector
type ConnectorSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ConnectorParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConnectorInitParameters `json:"initProvider,omitempty"`
}

// ConnectorStatus defines the observed state of Connector.
type ConnectorStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConnectorObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Connector is the Schema for the Connectors API. Provides an Amazon MSK Connect Connector resource. Changes to any parameter besides "scaling" will be rejected. Instead you must create a new resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type Connector struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.capacity) || (has(self.initProvider) && has(self.initProvider.capacity))",message="spec.forProvider.capacity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.connectorConfiguration) || (has(self.initProvider) && has(self.initProvider.connectorConfiguration))",message="spec.forProvider.connectorConfiguration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kafkaCluster) || (has(self.initProvider) && has(self.initProvider.kafkaCluster))",message="spec.forProvider.kafkaCluster is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kafkaClusterClientAuthentication) || (has(self.initProvider) && has(self.initProvider.kafkaClusterClientAuthentication))",message="spec.forProvider.kafkaClusterClientAuthentication is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kafkaClusterEncryptionInTransit) || (has(self.initProvider) && has(self.initProvider.kafkaClusterEncryptionInTransit))",message="spec.forProvider.kafkaClusterEncryptionInTransit is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kafkaconnectVersion) || (has(self.initProvider) && has(self.initProvider.kafkaconnectVersion))",message="spec.forProvider.kafkaconnectVersion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.plugin) || (has(self.initProvider) && has(self.initProvider.plugin))",message="spec.forProvider.plugin is a required parameter"
	Spec   ConnectorSpec   `json:"spec"`
	Status ConnectorStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectorList contains a list of Connectors
type ConnectorList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Connector `json:"items"`
}

// Repository type metadata.
var (
	Connector_Kind             = "Connector"
	Connector_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Connector_Kind}.String()
	Connector_KindAPIVersion   = Connector_Kind + "." + CRDGroupVersion.String()
	Connector_GroupVersionKind = CRDGroupVersion.WithKind(Connector_Kind)
)

func init() {
	SchemeBuilder.Register(&Connector{}, &ConnectorList{})
}

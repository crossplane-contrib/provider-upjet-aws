//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApacheKafkaClusterInitParameters) DeepCopyInto(out *ApacheKafkaClusterInitParameters) {
	*out = *in
	if in.BootstrapServers != nil {
		in, out := &in.BootstrapServers, &out.BootstrapServers
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApacheKafkaClusterInitParameters.
func (in *ApacheKafkaClusterInitParameters) DeepCopy() *ApacheKafkaClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApacheKafkaClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApacheKafkaClusterObservation) DeepCopyInto(out *ApacheKafkaClusterObservation) {
	*out = *in
	if in.BootstrapServers != nil {
		in, out := &in.BootstrapServers, &out.BootstrapServers
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApacheKafkaClusterObservation.
func (in *ApacheKafkaClusterObservation) DeepCopy() *ApacheKafkaClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ApacheKafkaClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApacheKafkaClusterParameters) DeepCopyInto(out *ApacheKafkaClusterParameters) {
	*out = *in
	if in.BootstrapServers != nil {
		in, out := &in.BootstrapServers, &out.BootstrapServers
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApacheKafkaClusterParameters.
func (in *ApacheKafkaClusterParameters) DeepCopy() *ApacheKafkaClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ApacheKafkaClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingInitParameters) DeepCopyInto(out *AutoscalingInitParameters) {
	*out = *in
	if in.MaxWorkerCount != nil {
		in, out := &in.MaxWorkerCount, &out.MaxWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkerCount != nil {
		in, out := &in.MinWorkerCount, &out.MinWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInPolicy != nil {
		in, out := &in.ScaleInPolicy, &out.ScaleInPolicy
		*out = make([]ScaleInPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleOutPolicy != nil {
		in, out := &in.ScaleOutPolicy, &out.ScaleOutPolicy
		*out = make([]ScaleOutPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingInitParameters.
func (in *AutoscalingInitParameters) DeepCopy() *AutoscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingObservation) DeepCopyInto(out *AutoscalingObservation) {
	*out = *in
	if in.MaxWorkerCount != nil {
		in, out := &in.MaxWorkerCount, &out.MaxWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkerCount != nil {
		in, out := &in.MinWorkerCount, &out.MinWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInPolicy != nil {
		in, out := &in.ScaleInPolicy, &out.ScaleInPolicy
		*out = make([]ScaleInPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleOutPolicy != nil {
		in, out := &in.ScaleOutPolicy, &out.ScaleOutPolicy
		*out = make([]ScaleOutPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingObservation.
func (in *AutoscalingObservation) DeepCopy() *AutoscalingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingParameters) DeepCopyInto(out *AutoscalingParameters) {
	*out = *in
	if in.MaxWorkerCount != nil {
		in, out := &in.MaxWorkerCount, &out.MaxWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkerCount != nil {
		in, out := &in.MinWorkerCount, &out.MinWorkerCount
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInPolicy != nil {
		in, out := &in.ScaleInPolicy, &out.ScaleInPolicy
		*out = make([]ScaleInPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScaleOutPolicy != nil {
		in, out := &in.ScaleOutPolicy, &out.ScaleOutPolicy
		*out = make([]ScaleOutPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingParameters.
func (in *AutoscalingParameters) DeepCopy() *AutoscalingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityInitParameters) DeepCopyInto(out *CapacityInitParameters) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisionedCapacity != nil {
		in, out := &in.ProvisionedCapacity, &out.ProvisionedCapacity
		*out = make([]ProvisionedCapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityInitParameters.
func (in *CapacityInitParameters) DeepCopy() *CapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityObservation) DeepCopyInto(out *CapacityObservation) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisionedCapacity != nil {
		in, out := &in.ProvisionedCapacity, &out.ProvisionedCapacity
		*out = make([]ProvisionedCapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityObservation.
func (in *CapacityObservation) DeepCopy() *CapacityObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityParameters) DeepCopyInto(out *CapacityParameters) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisionedCapacity != nil {
		in, out := &in.ProvisionedCapacity, &out.ProvisionedCapacity
		*out = make([]ProvisionedCapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityParameters.
func (in *CapacityParameters) DeepCopy() *CapacityParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsInitParameters) DeepCopyInto(out *CloudwatchLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.LogGroupRef != nil {
		in, out := &in.LogGroupRef, &out.LogGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupSelector != nil {
		in, out := &in.LogGroupSelector, &out.LogGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsInitParameters.
func (in *CloudwatchLogsInitParameters) DeepCopy() *CloudwatchLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsObservation) DeepCopyInto(out *CloudwatchLogsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsObservation.
func (in *CloudwatchLogsObservation) DeepCopy() *CloudwatchLogsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsParameters) DeepCopyInto(out *CloudwatchLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.LogGroupRef != nil {
		in, out := &in.LogGroupRef, &out.LogGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupSelector != nil {
		in, out := &in.LogGroupSelector, &out.LogGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsParameters.
func (in *CloudwatchLogsParameters) DeepCopy() *CloudwatchLogsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connector) DeepCopyInto(out *Connector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connector.
func (in *Connector) DeepCopy() *Connector {
	if in == nil {
		return nil
	}
	out := new(Connector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorInitParameters) DeepCopyInto(out *ConnectorInitParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectorConfiguration != nil {
		in, out := &in.ConnectorConfiguration, &out.ConnectorConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KafkaCluster != nil {
		in, out := &in.KafkaCluster, &out.KafkaCluster
		*out = make([]KafkaClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterClientAuthentication != nil {
		in, out := &in.KafkaClusterClientAuthentication, &out.KafkaClusterClientAuthentication
		*out = make([]KafkaClusterClientAuthenticationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterEncryptionInTransit != nil {
		in, out := &in.KafkaClusterEncryptionInTransit, &out.KafkaClusterEncryptionInTransit
		*out = make([]KafkaClusterEncryptionInTransitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaconnectVersion != nil {
		in, out := &in.KafkaconnectVersion, &out.KafkaconnectVersion
		*out = new(string)
		**out = **in
	}
	if in.LogDelivery != nil {
		in, out := &in.LogDelivery, &out.LogDelivery
		*out = make([]LogDeliveryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = make([]PluginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceExecutionRoleArn != nil {
		in, out := &in.ServiceExecutionRoleArn, &out.ServiceExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceExecutionRoleArnRef != nil {
		in, out := &in.ServiceExecutionRoleArnRef, &out.ServiceExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceExecutionRoleArnSelector != nil {
		in, out := &in.ServiceExecutionRoleArnSelector, &out.ServiceExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerConfiguration != nil {
		in, out := &in.WorkerConfiguration, &out.WorkerConfiguration
		*out = make([]WorkerConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorInitParameters.
func (in *ConnectorInitParameters) DeepCopy() *ConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorList) DeepCopyInto(out *ConnectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorList.
func (in *ConnectorList) DeepCopy() *ConnectorList {
	if in == nil {
		return nil
	}
	out := new(ConnectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorObservation) DeepCopyInto(out *ConnectorObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectorConfiguration != nil {
		in, out := &in.ConnectorConfiguration, &out.ConnectorConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KafkaCluster != nil {
		in, out := &in.KafkaCluster, &out.KafkaCluster
		*out = make([]KafkaClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterClientAuthentication != nil {
		in, out := &in.KafkaClusterClientAuthentication, &out.KafkaClusterClientAuthentication
		*out = make([]KafkaClusterClientAuthenticationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterEncryptionInTransit != nil {
		in, out := &in.KafkaClusterEncryptionInTransit, &out.KafkaClusterEncryptionInTransit
		*out = make([]KafkaClusterEncryptionInTransitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaconnectVersion != nil {
		in, out := &in.KafkaconnectVersion, &out.KafkaconnectVersion
		*out = new(string)
		**out = **in
	}
	if in.LogDelivery != nil {
		in, out := &in.LogDelivery, &out.LogDelivery
		*out = make([]LogDeliveryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = make([]PluginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceExecutionRoleArn != nil {
		in, out := &in.ServiceExecutionRoleArn, &out.ServiceExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.WorkerConfiguration != nil {
		in, out := &in.WorkerConfiguration, &out.WorkerConfiguration
		*out = make([]WorkerConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorObservation.
func (in *ConnectorObservation) DeepCopy() *ConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorParameters) DeepCopyInto(out *ConnectorParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make([]CapacityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectorConfiguration != nil {
		in, out := &in.ConnectorConfiguration, &out.ConnectorConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KafkaCluster != nil {
		in, out := &in.KafkaCluster, &out.KafkaCluster
		*out = make([]KafkaClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterClientAuthentication != nil {
		in, out := &in.KafkaClusterClientAuthentication, &out.KafkaClusterClientAuthentication
		*out = make([]KafkaClusterClientAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaClusterEncryptionInTransit != nil {
		in, out := &in.KafkaClusterEncryptionInTransit, &out.KafkaClusterEncryptionInTransit
		*out = make([]KafkaClusterEncryptionInTransitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaconnectVersion != nil {
		in, out := &in.KafkaconnectVersion, &out.KafkaconnectVersion
		*out = new(string)
		**out = **in
	}
	if in.LogDelivery != nil {
		in, out := &in.LogDelivery, &out.LogDelivery
		*out = make([]LogDeliveryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = make([]PluginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceExecutionRoleArn != nil {
		in, out := &in.ServiceExecutionRoleArn, &out.ServiceExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceExecutionRoleArnRef != nil {
		in, out := &in.ServiceExecutionRoleArnRef, &out.ServiceExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceExecutionRoleArnSelector != nil {
		in, out := &in.ServiceExecutionRoleArnSelector, &out.ServiceExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerConfiguration != nil {
		in, out := &in.WorkerConfiguration, &out.WorkerConfiguration
		*out = make([]WorkerConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorParameters.
func (in *ConnectorParameters) DeepCopy() *ConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorSpec) DeepCopyInto(out *ConnectorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorSpec.
func (in *ConnectorSpec) DeepCopy() *ConnectorSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorStatus) DeepCopyInto(out *ConnectorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorStatus.
func (in *ConnectorStatus) DeepCopy() *ConnectorStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPlugin) DeepCopyInto(out *CustomPlugin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPlugin.
func (in *CustomPlugin) DeepCopy() *CustomPlugin {
	if in == nil {
		return nil
	}
	out := new(CustomPlugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomPlugin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginInitParameters) DeepCopyInto(out *CustomPluginInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginInitParameters.
func (in *CustomPluginInitParameters) DeepCopy() *CustomPluginInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPluginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginInitParameters_2) DeepCopyInto(out *CustomPluginInitParameters_2) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginInitParameters_2.
func (in *CustomPluginInitParameters_2) DeepCopy() *CustomPluginInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(CustomPluginInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginList) DeepCopyInto(out *CustomPluginList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomPlugin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginList.
func (in *CustomPluginList) DeepCopy() *CustomPluginList {
	if in == nil {
		return nil
	}
	out := new(CustomPluginList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomPluginList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginObservation) DeepCopyInto(out *CustomPluginObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginObservation.
func (in *CustomPluginObservation) DeepCopy() *CustomPluginObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginObservation_2) DeepCopyInto(out *CustomPluginObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LatestRevision != nil {
		in, out := &in.LatestRevision, &out.LatestRevision
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginObservation_2.
func (in *CustomPluginObservation_2) DeepCopy() *CustomPluginObservation_2 {
	if in == nil {
		return nil
	}
	out := new(CustomPluginObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginParameters) DeepCopyInto(out *CustomPluginParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginParameters.
func (in *CustomPluginParameters) DeepCopy() *CustomPluginParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginParameters_2) DeepCopyInto(out *CustomPluginParameters_2) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginParameters_2.
func (in *CustomPluginParameters_2) DeepCopy() *CustomPluginParameters_2 {
	if in == nil {
		return nil
	}
	out := new(CustomPluginParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginSpec) DeepCopyInto(out *CustomPluginSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginSpec.
func (in *CustomPluginSpec) DeepCopy() *CustomPluginSpec {
	if in == nil {
		return nil
	}
	out := new(CustomPluginSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPluginStatus) DeepCopyInto(out *CustomPluginStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPluginStatus.
func (in *CustomPluginStatus) DeepCopy() *CustomPluginStatus {
	if in == nil {
		return nil
	}
	out := new(CustomPluginStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseInitParameters) DeepCopyInto(out *FirehoseInitParameters) {
	*out = *in
	if in.DeliveryStream != nil {
		in, out := &in.DeliveryStream, &out.DeliveryStream
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamRef != nil {
		in, out := &in.DeliveryStreamRef, &out.DeliveryStreamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamSelector != nil {
		in, out := &in.DeliveryStreamSelector, &out.DeliveryStreamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseInitParameters.
func (in *FirehoseInitParameters) DeepCopy() *FirehoseInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirehoseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseObservation) DeepCopyInto(out *FirehoseObservation) {
	*out = *in
	if in.DeliveryStream != nil {
		in, out := &in.DeliveryStream, &out.DeliveryStream
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseObservation.
func (in *FirehoseObservation) DeepCopy() *FirehoseObservation {
	if in == nil {
		return nil
	}
	out := new(FirehoseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseParameters) DeepCopyInto(out *FirehoseParameters) {
	*out = *in
	if in.DeliveryStream != nil {
		in, out := &in.DeliveryStream, &out.DeliveryStream
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamRef != nil {
		in, out := &in.DeliveryStreamRef, &out.DeliveryStreamRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamSelector != nil {
		in, out := &in.DeliveryStreamSelector, &out.DeliveryStreamSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseParameters.
func (in *FirehoseParameters) DeepCopy() *FirehoseParameters {
	if in == nil {
		return nil
	}
	out := new(FirehoseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterClientAuthenticationInitParameters) DeepCopyInto(out *KafkaClusterClientAuthenticationInitParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterClientAuthenticationInitParameters.
func (in *KafkaClusterClientAuthenticationInitParameters) DeepCopy() *KafkaClusterClientAuthenticationInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterClientAuthenticationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterClientAuthenticationObservation) DeepCopyInto(out *KafkaClusterClientAuthenticationObservation) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterClientAuthenticationObservation.
func (in *KafkaClusterClientAuthenticationObservation) DeepCopy() *KafkaClusterClientAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterClientAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterClientAuthenticationParameters) DeepCopyInto(out *KafkaClusterClientAuthenticationParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterClientAuthenticationParameters.
func (in *KafkaClusterClientAuthenticationParameters) DeepCopy() *KafkaClusterClientAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterClientAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterEncryptionInTransitInitParameters) DeepCopyInto(out *KafkaClusterEncryptionInTransitInitParameters) {
	*out = *in
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterEncryptionInTransitInitParameters.
func (in *KafkaClusterEncryptionInTransitInitParameters) DeepCopy() *KafkaClusterEncryptionInTransitInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterEncryptionInTransitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterEncryptionInTransitObservation) DeepCopyInto(out *KafkaClusterEncryptionInTransitObservation) {
	*out = *in
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterEncryptionInTransitObservation.
func (in *KafkaClusterEncryptionInTransitObservation) DeepCopy() *KafkaClusterEncryptionInTransitObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterEncryptionInTransitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterEncryptionInTransitParameters) DeepCopyInto(out *KafkaClusterEncryptionInTransitParameters) {
	*out = *in
	if in.EncryptionType != nil {
		in, out := &in.EncryptionType, &out.EncryptionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterEncryptionInTransitParameters.
func (in *KafkaClusterEncryptionInTransitParameters) DeepCopy() *KafkaClusterEncryptionInTransitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterEncryptionInTransitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterInitParameters) DeepCopyInto(out *KafkaClusterInitParameters) {
	*out = *in
	if in.ApacheKafkaCluster != nil {
		in, out := &in.ApacheKafkaCluster, &out.ApacheKafkaCluster
		*out = make([]ApacheKafkaClusterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterInitParameters.
func (in *KafkaClusterInitParameters) DeepCopy() *KafkaClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterObservation) DeepCopyInto(out *KafkaClusterObservation) {
	*out = *in
	if in.ApacheKafkaCluster != nil {
		in, out := &in.ApacheKafkaCluster, &out.ApacheKafkaCluster
		*out = make([]ApacheKafkaClusterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterObservation.
func (in *KafkaClusterObservation) DeepCopy() *KafkaClusterObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaClusterParameters) DeepCopyInto(out *KafkaClusterParameters) {
	*out = *in
	if in.ApacheKafkaCluster != nil {
		in, out := &in.ApacheKafkaCluster, &out.ApacheKafkaCluster
		*out = make([]ApacheKafkaClusterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaClusterParameters.
func (in *KafkaClusterParameters) DeepCopy() *KafkaClusterParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationInitParameters) DeepCopyInto(out *LocationInitParameters) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]LocationS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationInitParameters.
func (in *LocationInitParameters) DeepCopy() *LocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationObservation) DeepCopyInto(out *LocationObservation) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]LocationS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationObservation.
func (in *LocationObservation) DeepCopy() *LocationObservation {
	if in == nil {
		return nil
	}
	out := new(LocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationParameters) DeepCopyInto(out *LocationParameters) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]LocationS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationParameters.
func (in *LocationParameters) DeepCopy() *LocationParameters {
	if in == nil {
		return nil
	}
	out := new(LocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationS3InitParameters) DeepCopyInto(out *LocationS3InitParameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BucketArnRef != nil {
		in, out := &in.BucketArnRef, &out.BucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketArnSelector != nil {
		in, out := &in.BucketArnSelector, &out.BucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FileKey != nil {
		in, out := &in.FileKey, &out.FileKey
		*out = new(string)
		**out = **in
	}
	if in.FileKeyRef != nil {
		in, out := &in.FileKeyRef, &out.FileKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileKeySelector != nil {
		in, out := &in.FileKeySelector, &out.FileKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationS3InitParameters.
func (in *LocationS3InitParameters) DeepCopy() *LocationS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationS3Observation) DeepCopyInto(out *LocationS3Observation) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.FileKey != nil {
		in, out := &in.FileKey, &out.FileKey
		*out = new(string)
		**out = **in
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationS3Observation.
func (in *LocationS3Observation) DeepCopy() *LocationS3Observation {
	if in == nil {
		return nil
	}
	out := new(LocationS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationS3Parameters) DeepCopyInto(out *LocationS3Parameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BucketArnRef != nil {
		in, out := &in.BucketArnRef, &out.BucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketArnSelector != nil {
		in, out := &in.BucketArnSelector, &out.BucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FileKey != nil {
		in, out := &in.FileKey, &out.FileKey
		*out = new(string)
		**out = **in
	}
	if in.FileKeyRef != nil {
		in, out := &in.FileKeyRef, &out.FileKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FileKeySelector != nil {
		in, out := &in.FileKeySelector, &out.FileKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationS3Parameters.
func (in *LocationS3Parameters) DeepCopy() *LocationS3Parameters {
	if in == nil {
		return nil
	}
	out := new(LocationS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogDeliveryInitParameters) DeepCopyInto(out *LogDeliveryInitParameters) {
	*out = *in
	if in.WorkerLogDelivery != nil {
		in, out := &in.WorkerLogDelivery, &out.WorkerLogDelivery
		*out = make([]WorkerLogDeliveryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogDeliveryInitParameters.
func (in *LogDeliveryInitParameters) DeepCopy() *LogDeliveryInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogDeliveryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogDeliveryObservation) DeepCopyInto(out *LogDeliveryObservation) {
	*out = *in
	if in.WorkerLogDelivery != nil {
		in, out := &in.WorkerLogDelivery, &out.WorkerLogDelivery
		*out = make([]WorkerLogDeliveryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogDeliveryObservation.
func (in *LogDeliveryObservation) DeepCopy() *LogDeliveryObservation {
	if in == nil {
		return nil
	}
	out := new(LogDeliveryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogDeliveryParameters) DeepCopyInto(out *LogDeliveryParameters) {
	*out = *in
	if in.WorkerLogDelivery != nil {
		in, out := &in.WorkerLogDelivery, &out.WorkerLogDelivery
		*out = make([]WorkerLogDeliveryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogDeliveryParameters.
func (in *LogDeliveryParameters) DeepCopy() *LogDeliveryParameters {
	if in == nil {
		return nil
	}
	out := new(LogDeliveryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginInitParameters) DeepCopyInto(out *PluginInitParameters) {
	*out = *in
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = make([]CustomPluginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginInitParameters.
func (in *PluginInitParameters) DeepCopy() *PluginInitParameters {
	if in == nil {
		return nil
	}
	out := new(PluginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginObservation) DeepCopyInto(out *PluginObservation) {
	*out = *in
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = make([]CustomPluginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginObservation.
func (in *PluginObservation) DeepCopy() *PluginObservation {
	if in == nil {
		return nil
	}
	out := new(PluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginParameters) DeepCopyInto(out *PluginParameters) {
	*out = *in
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = make([]CustomPluginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginParameters.
func (in *PluginParameters) DeepCopy() *PluginParameters {
	if in == nil {
		return nil
	}
	out := new(PluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedCapacityInitParameters) DeepCopyInto(out *ProvisionedCapacityInitParameters) {
	*out = *in
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedCapacityInitParameters.
func (in *ProvisionedCapacityInitParameters) DeepCopy() *ProvisionedCapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisionedCapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedCapacityObservation) DeepCopyInto(out *ProvisionedCapacityObservation) {
	*out = *in
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedCapacityObservation.
func (in *ProvisionedCapacityObservation) DeepCopy() *ProvisionedCapacityObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisionedCapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedCapacityParameters) DeepCopyInto(out *ProvisionedCapacityParameters) {
	*out = *in
	if in.McuCount != nil {
		in, out := &in.McuCount, &out.McuCount
		*out = new(float64)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedCapacityParameters.
func (in *ProvisionedCapacityParameters) DeepCopy() *ProvisionedCapacityParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisionedCapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInPolicyInitParameters) DeepCopyInto(out *ScaleInPolicyInitParameters) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInPolicyInitParameters.
func (in *ScaleInPolicyInitParameters) DeepCopy() *ScaleInPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInPolicyObservation) DeepCopyInto(out *ScaleInPolicyObservation) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInPolicyObservation.
func (in *ScaleInPolicyObservation) DeepCopy() *ScaleInPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ScaleInPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleInPolicyParameters) DeepCopyInto(out *ScaleInPolicyParameters) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleInPolicyParameters.
func (in *ScaleInPolicyParameters) DeepCopy() *ScaleInPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleInPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleOutPolicyInitParameters) DeepCopyInto(out *ScaleOutPolicyInitParameters) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleOutPolicyInitParameters.
func (in *ScaleOutPolicyInitParameters) DeepCopy() *ScaleOutPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleOutPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleOutPolicyObservation) DeepCopyInto(out *ScaleOutPolicyObservation) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleOutPolicyObservation.
func (in *ScaleOutPolicyObservation) DeepCopy() *ScaleOutPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ScaleOutPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleOutPolicyParameters) DeepCopyInto(out *ScaleOutPolicyParameters) {
	*out = *in
	if in.CPUUtilizationPercentage != nil {
		in, out := &in.CPUUtilizationPercentage, &out.CPUUtilizationPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleOutPolicyParameters.
func (in *ScaleOutPolicyParameters) DeepCopy() *ScaleOutPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleOutPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCInitParameters) DeepCopyInto(out *VPCInitParameters) {
	*out = *in
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetRefs != nil {
		in, out := &in.SubnetRefs, &out.SubnetRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetSelector != nil {
		in, out := &in.SubnetSelector, &out.SubnetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCInitParameters.
func (in *VPCInitParameters) DeepCopy() *VPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCObservation) DeepCopyInto(out *VPCObservation) {
	*out = *in
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCObservation.
func (in *VPCObservation) DeepCopy() *VPCObservation {
	if in == nil {
		return nil
	}
	out := new(VPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCParameters) DeepCopyInto(out *VPCParameters) {
	*out = *in
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetRefs != nil {
		in, out := &in.SubnetRefs, &out.SubnetRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetSelector != nil {
		in, out := &in.SubnetSelector, &out.SubnetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCParameters.
func (in *VPCParameters) DeepCopy() *VPCParameters {
	if in == nil {
		return nil
	}
	out := new(VPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfiguration) DeepCopyInto(out *WorkerConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfiguration.
func (in *WorkerConfiguration) DeepCopy() *WorkerConfiguration {
	if in == nil {
		return nil
	}
	out := new(WorkerConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationInitParameters) DeepCopyInto(out *WorkerConfigurationInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationInitParameters.
func (in *WorkerConfigurationInitParameters) DeepCopy() *WorkerConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationInitParameters_2) DeepCopyInto(out *WorkerConfigurationInitParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PropertiesFileContent != nil {
		in, out := &in.PropertiesFileContent, &out.PropertiesFileContent
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationInitParameters_2.
func (in *WorkerConfigurationInitParameters_2) DeepCopy() *WorkerConfigurationInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationList) DeepCopyInto(out *WorkerConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkerConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationList.
func (in *WorkerConfigurationList) DeepCopy() *WorkerConfigurationList {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationObservation) DeepCopyInto(out *WorkerConfigurationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationObservation.
func (in *WorkerConfigurationObservation) DeepCopy() *WorkerConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationObservation_2) DeepCopyInto(out *WorkerConfigurationObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LatestRevision != nil {
		in, out := &in.LatestRevision, &out.LatestRevision
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertiesFileContent != nil {
		in, out := &in.PropertiesFileContent, &out.PropertiesFileContent
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationObservation_2.
func (in *WorkerConfigurationObservation_2) DeepCopy() *WorkerConfigurationObservation_2 {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationParameters) DeepCopyInto(out *WorkerConfigurationParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationParameters.
func (in *WorkerConfigurationParameters) DeepCopy() *WorkerConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationParameters_2) DeepCopyInto(out *WorkerConfigurationParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertiesFileContent != nil {
		in, out := &in.PropertiesFileContent, &out.PropertiesFileContent
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationParameters_2.
func (in *WorkerConfigurationParameters_2) DeepCopy() *WorkerConfigurationParameters_2 {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationSpec) DeepCopyInto(out *WorkerConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationSpec.
func (in *WorkerConfigurationSpec) DeepCopy() *WorkerConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerConfigurationStatus) DeepCopyInto(out *WorkerConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerConfigurationStatus.
func (in *WorkerConfigurationStatus) DeepCopy() *WorkerConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(WorkerConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogDeliveryInitParameters) DeepCopyInto(out *WorkerLogDeliveryInitParameters) {
	*out = *in
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogDeliveryInitParameters.
func (in *WorkerLogDeliveryInitParameters) DeepCopy() *WorkerLogDeliveryInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerLogDeliveryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogDeliveryObservation) DeepCopyInto(out *WorkerLogDeliveryObservation) {
	*out = *in
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogDeliveryObservation.
func (in *WorkerLogDeliveryObservation) DeepCopy() *WorkerLogDeliveryObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerLogDeliveryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogDeliveryParameters) DeepCopyInto(out *WorkerLogDeliveryParameters) {
	*out = *in
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogDeliveryParameters.
func (in *WorkerLogDeliveryParameters) DeepCopy() *WorkerLogDeliveryParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerLogDeliveryParameters)
	in.DeepCopyInto(out)
	return out
}

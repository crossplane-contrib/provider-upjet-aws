/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1beta1 "github.com/upbound/provider-aws/apis/athena/v1beta1"
	v1beta1dynamodb "github.com/upbound/provider-aws/apis/dynamodb/v1beta1"
	v1beta1ec2 "github.com/upbound/provider-aws/apis/ec2/v1beta1"
	v1beta1ecr "github.com/upbound/provider-aws/apis/ecr/v1beta1"
	v1beta1eks "github.com/upbound/provider-aws/apis/eks/v1beta1"
	v1beta1glue "github.com/upbound/provider-aws/apis/glue/v1beta1"
	v1beta1iam "github.com/upbound/provider-aws/apis/iam/v1beta1"
	v1beta1kms "github.com/upbound/provider-aws/apis/kms/v1beta1"
	v1beta1lambda "github.com/upbound/provider-aws/apis/lambda/v1beta1"
	v1beta1rds "github.com/upbound/provider-aws/apis/rds/v1beta1"
	v1beta1route53 "github.com/upbound/provider-aws/apis/route53/v1beta1"
	v1beta1s3 "github.com/upbound/provider-aws/apis/s3/v1beta1"
	v1beta1sns "github.com/upbound/provider-aws/apis/sns/v1beta1"
	v1beta1sqs "github.com/upbound/provider-aws/apis/sqs/v1beta1"
	v1beta1transfer "github.com/upbound/provider-aws/apis/transfer/v1beta1"
	v1alpha1 "github.com/upbound/provider-aws/apis/v1alpha1"
	v1beta1apis "github.com/upbound/provider-aws/apis/v1beta1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1beta1.SchemeBuilder.AddToScheme,
		v1beta1dynamodb.SchemeBuilder.AddToScheme,
		v1beta1ec2.SchemeBuilder.AddToScheme,
		v1beta1ecr.SchemeBuilder.AddToScheme,
		v1beta1eks.SchemeBuilder.AddToScheme,
		v1beta1glue.SchemeBuilder.AddToScheme,
		v1beta1iam.SchemeBuilder.AddToScheme,
		v1beta1kms.SchemeBuilder.AddToScheme,
		v1beta1lambda.SchemeBuilder.AddToScheme,
		v1beta1rds.SchemeBuilder.AddToScheme,
		v1beta1route53.SchemeBuilder.AddToScheme,
		v1beta1s3.SchemeBuilder.AddToScheme,
		v1beta1sns.SchemeBuilder.AddToScheme,
		v1beta1sqs.SchemeBuilder.AddToScheme,
		v1beta1transfer.SchemeBuilder.AddToScheme,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1beta1apis.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}

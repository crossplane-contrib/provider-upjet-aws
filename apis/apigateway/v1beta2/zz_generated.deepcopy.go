//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStagesInitParameters) DeepCopyInto(out *APIStagesInitParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
	if in.StageRef != nil {
		in, out := &in.StageRef, &out.StageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StageSelector != nil {
		in, out := &in.StageSelector, &out.StageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = make([]ThrottleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStagesInitParameters.
func (in *APIStagesInitParameters) DeepCopy() *APIStagesInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIStagesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStagesObservation) DeepCopyInto(out *APIStagesObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = make([]ThrottleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStagesObservation.
func (in *APIStagesObservation) DeepCopy() *APIStagesObservation {
	if in == nil {
		return nil
	}
	out := new(APIStagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStagesParameters) DeepCopyInto(out *APIStagesParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
	if in.StageRef != nil {
		in, out := &in.StageRef, &out.StageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StageSelector != nil {
		in, out := &in.StageSelector, &out.StageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = make([]ThrottleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStagesParameters.
func (in *APIStagesParameters) DeepCopy() *APIStagesParameters {
	if in == nil {
		return nil
	}
	out := new(APIStagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsInitParameters) DeepCopyInto(out *AccessLogSettingsInitParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsInitParameters.
func (in *AccessLogSettingsInitParameters) DeepCopy() *AccessLogSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsObservation) DeepCopyInto(out *AccessLogSettingsObservation) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsObservation.
func (in *AccessLogSettingsObservation) DeepCopy() *AccessLogSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsParameters) DeepCopyInto(out *AccessLogSettingsParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsParameters.
func (in *AccessLogSettingsParameters) DeepCopy() *AccessLogSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanarySettingsInitParameters) DeepCopyInto(out *CanarySettingsInitParameters) {
	*out = *in
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.PercentTraffic != nil {
		in, out := &in.PercentTraffic, &out.PercentTraffic
		*out = new(float64)
		**out = **in
	}
	if in.StageVariableOverrides != nil {
		in, out := &in.StageVariableOverrides, &out.StageVariableOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseStageCache != nil {
		in, out := &in.UseStageCache, &out.UseStageCache
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanarySettingsInitParameters.
func (in *CanarySettingsInitParameters) DeepCopy() *CanarySettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CanarySettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanarySettingsObservation) DeepCopyInto(out *CanarySettingsObservation) {
	*out = *in
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.PercentTraffic != nil {
		in, out := &in.PercentTraffic, &out.PercentTraffic
		*out = new(float64)
		**out = **in
	}
	if in.StageVariableOverrides != nil {
		in, out := &in.StageVariableOverrides, &out.StageVariableOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseStageCache != nil {
		in, out := &in.UseStageCache, &out.UseStageCache
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanarySettingsObservation.
func (in *CanarySettingsObservation) DeepCopy() *CanarySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(CanarySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanarySettingsParameters) DeepCopyInto(out *CanarySettingsParameters) {
	*out = *in
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.PercentTraffic != nil {
		in, out := &in.PercentTraffic, &out.PercentTraffic
		*out = new(float64)
		**out = **in
	}
	if in.StageVariableOverrides != nil {
		in, out := &in.StageVariableOverrides, &out.StageVariableOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseStageCache != nil {
		in, out := &in.UseStageCache, &out.UseStageCache
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanarySettingsParameters.
func (in *CanarySettingsParameters) DeepCopy() *CanarySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(CanarySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPart) DeepCopyInto(out *DocumentationPart) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPart.
func (in *DocumentationPart) DeepCopy() *DocumentationPart {
	if in == nil {
		return nil
	}
	out := new(DocumentationPart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DocumentationPart) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartInitParameters) DeepCopyInto(out *DocumentationPartInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(LocationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartInitParameters.
func (in *DocumentationPartInitParameters) DeepCopy() *DocumentationPartInitParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartList) DeepCopyInto(out *DocumentationPartList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DocumentationPart, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartList.
func (in *DocumentationPartList) DeepCopy() *DocumentationPartList {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DocumentationPartList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartObservation) DeepCopyInto(out *DocumentationPartObservation) {
	*out = *in
	if in.DocumentationPartID != nil {
		in, out := &in.DocumentationPartID, &out.DocumentationPartID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(LocationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartObservation.
func (in *DocumentationPartObservation) DeepCopy() *DocumentationPartObservation {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartParameters) DeepCopyInto(out *DocumentationPartParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(LocationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartParameters.
func (in *DocumentationPartParameters) DeepCopy() *DocumentationPartParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartSpec) DeepCopyInto(out *DocumentationPartSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartSpec.
func (in *DocumentationPartSpec) DeepCopy() *DocumentationPartSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartStatus) DeepCopyInto(out *DocumentationPartStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartStatus.
func (in *DocumentationPartStatus) DeepCopy() *DocumentationPartStatus {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainName) DeepCopyInto(out *DomainName) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainName.
func (in *DomainName) DeepCopy() *DomainName {
	if in == nil {
		return nil
	}
	out := new(DomainName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainName) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameInitParameters) DeepCopyInto(out *DomainNameInitParameters) {
	*out = *in
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArnRef != nil {
		in, out := &in.CertificateArnRef, &out.CertificateArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateArnSelector != nil {
		in, out := &in.CertificateArnSelector, &out.CertificateArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateBody != nil {
		in, out := &in.CertificateBody, &out.CertificateBody
		*out = new(string)
		**out = **in
	}
	if in.CertificateChain != nil {
		in, out := &in.CertificateChain, &out.CertificateChain
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CertificatePrivateKeySecretRef != nil {
		in, out := &in.CertificatePrivateKeySecretRef, &out.CertificatePrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfigurationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = new(MutualTLSAuthenticationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateArn != nil {
		in, out := &in.RegionalCertificateArn, &out.RegionalCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateArnRef != nil {
		in, out := &in.RegionalCertificateArnRef, &out.RegionalCertificateArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionalCertificateArnSelector != nil {
		in, out := &in.RegionalCertificateArnSelector, &out.RegionalCertificateArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionalCertificateName != nil {
		in, out := &in.RegionalCertificateName, &out.RegionalCertificateName
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameInitParameters.
func (in *DomainNameInitParameters) DeepCopy() *DomainNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameList) DeepCopyInto(out *DomainNameList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainName, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameList.
func (in *DomainNameList) DeepCopy() *DomainNameList {
	if in == nil {
		return nil
	}
	out := new(DomainNameList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainNameList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameObservation) DeepCopyInto(out *DomainNameObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CertificateBody != nil {
		in, out := &in.CertificateBody, &out.CertificateBody
		*out = new(string)
		**out = **in
	}
	if in.CertificateChain != nil {
		in, out := &in.CertificateChain, &out.CertificateChain
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CertificateUploadDate != nil {
		in, out := &in.CertificateUploadDate, &out.CertificateUploadDate
		*out = new(string)
		**out = **in
	}
	if in.CloudfrontDomainName != nil {
		in, out := &in.CloudfrontDomainName, &out.CloudfrontDomainName
		*out = new(string)
		**out = **in
	}
	if in.CloudfrontZoneID != nil {
		in, out := &in.CloudfrontZoneID, &out.CloudfrontZoneID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfigurationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = new(MutualTLSAuthenticationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateArn != nil {
		in, out := &in.RegionalCertificateArn, &out.RegionalCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateName != nil {
		in, out := &in.RegionalCertificateName, &out.RegionalCertificateName
		*out = new(string)
		**out = **in
	}
	if in.RegionalDomainName != nil {
		in, out := &in.RegionalDomainName, &out.RegionalDomainName
		*out = new(string)
		**out = **in
	}
	if in.RegionalZoneID != nil {
		in, out := &in.RegionalZoneID, &out.RegionalZoneID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameObservation.
func (in *DomainNameObservation) DeepCopy() *DomainNameObservation {
	if in == nil {
		return nil
	}
	out := new(DomainNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameParameters) DeepCopyInto(out *DomainNameParameters) {
	*out = *in
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArnRef != nil {
		in, out := &in.CertificateArnRef, &out.CertificateArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateArnSelector != nil {
		in, out := &in.CertificateArnSelector, &out.CertificateArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateBody != nil {
		in, out := &in.CertificateBody, &out.CertificateBody
		*out = new(string)
		**out = **in
	}
	if in.CertificateChain != nil {
		in, out := &in.CertificateChain, &out.CertificateChain
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CertificatePrivateKeySecretRef != nil {
		in, out := &in.CertificatePrivateKeySecretRef, &out.CertificatePrivateKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfigurationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = new(MutualTLSAuthenticationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateArn != nil {
		in, out := &in.RegionalCertificateArn, &out.RegionalCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateArnRef != nil {
		in, out := &in.RegionalCertificateArnRef, &out.RegionalCertificateArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionalCertificateArnSelector != nil {
		in, out := &in.RegionalCertificateArnSelector, &out.RegionalCertificateArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionalCertificateName != nil {
		in, out := &in.RegionalCertificateName, &out.RegionalCertificateName
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameParameters.
func (in *DomainNameParameters) DeepCopy() *DomainNameParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameSpec) DeepCopyInto(out *DomainNameSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameSpec.
func (in *DomainNameSpec) DeepCopy() *DomainNameSpec {
	if in == nil {
		return nil
	}
	out := new(DomainNameSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameStatus) DeepCopyInto(out *DomainNameStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameStatus.
func (in *DomainNameStatus) DeepCopy() *DomainNameStatus {
	if in == nil {
		return nil
	}
	out := new(DomainNameStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigurationInitParameters) DeepCopyInto(out *EndpointConfigurationInitParameters) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigurationInitParameters.
func (in *EndpointConfigurationInitParameters) DeepCopy() *EndpointConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigurationObservation) DeepCopyInto(out *EndpointConfigurationObservation) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigurationObservation.
func (in *EndpointConfigurationObservation) DeepCopy() *EndpointConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfigurationParameters) DeepCopyInto(out *EndpointConfigurationParameters) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfigurationParameters.
func (in *EndpointConfigurationParameters) DeepCopy() *EndpointConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Integration) DeepCopyInto(out *Integration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Integration.
func (in *Integration) DeepCopy() *Integration {
	if in == nil {
		return nil
	}
	out := new(Integration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Integration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationInitParameters) DeepCopyInto(out *IntegrationInitParameters) {
	*out = *in
	if in.CacheKeyParameters != nil {
		in, out := &in.CacheKeyParameters, &out.CacheKeyParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheNamespace != nil {
		in, out := &in.CacheNamespace, &out.CacheNamespace
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionIDRef != nil {
		in, out := &in.ConnectionIDRef, &out.ConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionIDSelector != nil {
		in, out := &in.ConnectionIDSelector, &out.ConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethodRef != nil {
		in, out := &in.HTTPMethodRef, &out.HTTPMethodRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPMethodSelector != nil {
		in, out := &in.HTTPMethodSelector, &out.HTTPMethodSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationHTTPMethod != nil {
		in, out := &in.IntegrationHTTPMethod, &out.IntegrationHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDRef != nil {
		in, out := &in.ResourceIDRef, &out.ResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceIDSelector != nil {
		in, out := &in.ResourceIDSelector, &out.ResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.URIRef != nil {
		in, out := &in.URIRef, &out.URIRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URISelector != nil {
		in, out := &in.URISelector, &out.URISelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationInitParameters.
func (in *IntegrationInitParameters) DeepCopy() *IntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationList) DeepCopyInto(out *IntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Integration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationList.
func (in *IntegrationList) DeepCopy() *IntegrationList {
	if in == nil {
		return nil
	}
	out := new(IntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationObservation) DeepCopyInto(out *IntegrationObservation) {
	*out = *in
	if in.CacheKeyParameters != nil {
		in, out := &in.CacheKeyParameters, &out.CacheKeyParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheNamespace != nil {
		in, out := &in.CacheNamespace, &out.CacheNamespace
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationHTTPMethod != nil {
		in, out := &in.IntegrationHTTPMethod, &out.IntegrationHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationObservation.
func (in *IntegrationObservation) DeepCopy() *IntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationParameters) DeepCopyInto(out *IntegrationParameters) {
	*out = *in
	if in.CacheKeyParameters != nil {
		in, out := &in.CacheKeyParameters, &out.CacheKeyParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheNamespace != nil {
		in, out := &in.CacheNamespace, &out.CacheNamespace
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionIDRef != nil {
		in, out := &in.ConnectionIDRef, &out.ConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionIDSelector != nil {
		in, out := &in.ConnectionIDSelector, &out.ConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethodRef != nil {
		in, out := &in.HTTPMethodRef, &out.HTTPMethodRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPMethodSelector != nil {
		in, out := &in.HTTPMethodSelector, &out.HTTPMethodSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationHTTPMethod != nil {
		in, out := &in.IntegrationHTTPMethod, &out.IntegrationHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceIDRef != nil {
		in, out := &in.ResourceIDRef, &out.ResourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceIDSelector != nil {
		in, out := &in.ResourceIDSelector, &out.ResourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.URIRef != nil {
		in, out := &in.URIRef, &out.URIRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URISelector != nil {
		in, out := &in.URISelector, &out.URISelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationParameters.
func (in *IntegrationParameters) DeepCopy() *IntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpec) DeepCopyInto(out *IntegrationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpec.
func (in *IntegrationSpec) DeepCopy() *IntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationStatus) DeepCopyInto(out *IntegrationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationStatus.
func (in *IntegrationStatus) DeepCopy() *IntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationInitParameters) DeepCopyInto(out *LocationInitParameters) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationInitParameters.
func (in *LocationInitParameters) DeepCopy() *LocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationObservation) DeepCopyInto(out *LocationObservation) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationObservation.
func (in *LocationObservation) DeepCopy() *LocationObservation {
	if in == nil {
		return nil
	}
	out := new(LocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationParameters) DeepCopyInto(out *LocationParameters) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationParameters.
func (in *LocationParameters) DeepCopy() *LocationParameters {
	if in == nil {
		return nil
	}
	out := new(LocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettings) DeepCopyInto(out *MethodSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettings.
func (in *MethodSettings) DeepCopy() *MethodSettings {
	if in == nil {
		return nil
	}
	out := new(MethodSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MethodSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsInitParameters) DeepCopyInto(out *MethodSettingsInitParameters) {
	*out = *in
	if in.MethodPath != nil {
		in, out := &in.MethodPath, &out.MethodPath
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.StageNameRef != nil {
		in, out := &in.StageNameRef, &out.StageNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StageNameSelector != nil {
		in, out := &in.StageNameSelector, &out.StageNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsInitParameters.
func (in *MethodSettingsInitParameters) DeepCopy() *MethodSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsList) DeepCopyInto(out *MethodSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MethodSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsList.
func (in *MethodSettingsList) DeepCopy() *MethodSettingsList {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MethodSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsObservation) DeepCopyInto(out *MethodSettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MethodPath != nil {
		in, out := &in.MethodPath, &out.MethodPath
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsObservation.
func (in *MethodSettingsObservation) DeepCopy() *MethodSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsParameters) DeepCopyInto(out *MethodSettingsParameters) {
	*out = *in
	if in.MethodPath != nil {
		in, out := &in.MethodPath, &out.MethodPath
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.StageNameRef != nil {
		in, out := &in.StageNameRef, &out.StageNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StageNameSelector != nil {
		in, out := &in.StageNameSelector, &out.StageNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsParameters.
func (in *MethodSettingsParameters) DeepCopy() *MethodSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsSpec) DeepCopyInto(out *MethodSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsSpec.
func (in *MethodSettingsSpec) DeepCopy() *MethodSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSettingsStatus) DeepCopyInto(out *MethodSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSettingsStatus.
func (in *MethodSettingsStatus) DeepCopy() *MethodSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(MethodSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationInitParameters) DeepCopyInto(out *MutualTLSAuthenticationInitParameters) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationInitParameters.
func (in *MutualTLSAuthenticationInitParameters) DeepCopy() *MutualTLSAuthenticationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationObservation) DeepCopyInto(out *MutualTLSAuthenticationObservation) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationObservation.
func (in *MutualTLSAuthenticationObservation) DeepCopy() *MutualTLSAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationParameters) DeepCopyInto(out *MutualTLSAuthenticationParameters) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationParameters.
func (in *MutualTLSAuthenticationParameters) DeepCopy() *MutualTLSAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaSettingsInitParameters) DeepCopyInto(out *QuotaSettingsInitParameters) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaSettingsInitParameters.
func (in *QuotaSettingsInitParameters) DeepCopy() *QuotaSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QuotaSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaSettingsObservation) DeepCopyInto(out *QuotaSettingsObservation) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaSettingsObservation.
func (in *QuotaSettingsObservation) DeepCopy() *QuotaSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(QuotaSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaSettingsParameters) DeepCopyInto(out *QuotaSettingsParameters) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaSettingsParameters.
func (in *QuotaSettingsParameters) DeepCopy() *QuotaSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(QuotaSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPI) DeepCopyInto(out *RestAPI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPI.
func (in *RestAPI) DeepCopy() *RestAPI {
	if in == nil {
		return nil
	}
	out := new(RestAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestAPI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIEndpointConfigurationInitParameters) DeepCopyInto(out *RestAPIEndpointConfigurationInitParameters) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpointIds != nil {
		in, out := &in.VPCEndpointIds, &out.VPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIEndpointConfigurationInitParameters.
func (in *RestAPIEndpointConfigurationInitParameters) DeepCopy() *RestAPIEndpointConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestAPIEndpointConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIEndpointConfigurationObservation) DeepCopyInto(out *RestAPIEndpointConfigurationObservation) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpointIds != nil {
		in, out := &in.VPCEndpointIds, &out.VPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIEndpointConfigurationObservation.
func (in *RestAPIEndpointConfigurationObservation) DeepCopy() *RestAPIEndpointConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RestAPIEndpointConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIEndpointConfigurationParameters) DeepCopyInto(out *RestAPIEndpointConfigurationParameters) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpointIds != nil {
		in, out := &in.VPCEndpointIds, &out.VPCEndpointIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIEndpointConfigurationParameters.
func (in *RestAPIEndpointConfigurationParameters) DeepCopy() *RestAPIEndpointConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RestAPIEndpointConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIInitParameters) DeepCopyInto(out *RestAPIInitParameters) {
	*out = *in
	if in.APIKeySource != nil {
		in, out := &in.APIKeySource, &out.APIKeySource
		*out = new(string)
		**out = **in
	}
	if in.BinaryMediaTypes != nil {
		in, out := &in.BinaryMediaTypes, &out.BinaryMediaTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(RestAPIEndpointConfigurationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.MinimumCompressionSize != nil {
		in, out := &in.MinimumCompressionSize, &out.MinimumCompressionSize
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PutRestAPIMode != nil {
		in, out := &in.PutRestAPIMode, &out.PutRestAPIMode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIInitParameters.
func (in *RestAPIInitParameters) DeepCopy() *RestAPIInitParameters {
	if in == nil {
		return nil
	}
	out := new(RestAPIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIList) DeepCopyInto(out *RestAPIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RestAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIList.
func (in *RestAPIList) DeepCopy() *RestAPIList {
	if in == nil {
		return nil
	}
	out := new(RestAPIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestAPIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIObservation) DeepCopyInto(out *RestAPIObservation) {
	*out = *in
	if in.APIKeySource != nil {
		in, out := &in.APIKeySource, &out.APIKeySource
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BinaryMediaTypes != nil {
		in, out := &in.BinaryMediaTypes, &out.BinaryMediaTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(RestAPIEndpointConfigurationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionArn != nil {
		in, out := &in.ExecutionArn, &out.ExecutionArn
		*out = new(string)
		**out = **in
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinimumCompressionSize != nil {
		in, out := &in.MinimumCompressionSize, &out.MinimumCompressionSize
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PutRestAPIMode != nil {
		in, out := &in.PutRestAPIMode, &out.PutRestAPIMode
		*out = new(string)
		**out = **in
	}
	if in.RootResourceID != nil {
		in, out := &in.RootResourceID, &out.RootResourceID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIObservation.
func (in *RestAPIObservation) DeepCopy() *RestAPIObservation {
	if in == nil {
		return nil
	}
	out := new(RestAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIParameters) DeepCopyInto(out *RestAPIParameters) {
	*out = *in
	if in.APIKeySource != nil {
		in, out := &in.APIKeySource, &out.APIKeySource
		*out = new(string)
		**out = **in
	}
	if in.BinaryMediaTypes != nil {
		in, out := &in.BinaryMediaTypes, &out.BinaryMediaTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(RestAPIEndpointConfigurationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.MinimumCompressionSize != nil {
		in, out := &in.MinimumCompressionSize, &out.MinimumCompressionSize
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PutRestAPIMode != nil {
		in, out := &in.PutRestAPIMode, &out.PutRestAPIMode
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIParameters.
func (in *RestAPIParameters) DeepCopy() *RestAPIParameters {
	if in == nil {
		return nil
	}
	out := new(RestAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPISpec) DeepCopyInto(out *RestAPISpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPISpec.
func (in *RestAPISpec) DeepCopy() *RestAPISpec {
	if in == nil {
		return nil
	}
	out := new(RestAPISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIStatus) DeepCopyInto(out *RestAPIStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIStatus.
func (in *RestAPIStatus) DeepCopy() *RestAPIStatus {
	if in == nil {
		return nil
	}
	out := new(RestAPIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.CacheDataEncrypted != nil {
		in, out := &in.CacheDataEncrypted, &out.CacheDataEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.CacheTTLInSeconds != nil {
		in, out := &in.CacheTTLInSeconds, &out.CacheTTLInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CachingEnabled != nil {
		in, out := &in.CachingEnabled, &out.CachingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.MetricsEnabled != nil {
		in, out := &in.MetricsEnabled, &out.MetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequireAuthorizationForCacheControl != nil {
		in, out := &in.RequireAuthorizationForCacheControl, &out.RequireAuthorizationForCacheControl
		*out = new(bool)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.UnauthorizedCacheControlHeaderStrategy != nil {
		in, out := &in.UnauthorizedCacheControlHeaderStrategy, &out.UnauthorizedCacheControlHeaderStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.CacheDataEncrypted != nil {
		in, out := &in.CacheDataEncrypted, &out.CacheDataEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.CacheTTLInSeconds != nil {
		in, out := &in.CacheTTLInSeconds, &out.CacheTTLInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CachingEnabled != nil {
		in, out := &in.CachingEnabled, &out.CachingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.MetricsEnabled != nil {
		in, out := &in.MetricsEnabled, &out.MetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequireAuthorizationForCacheControl != nil {
		in, out := &in.RequireAuthorizationForCacheControl, &out.RequireAuthorizationForCacheControl
		*out = new(bool)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.UnauthorizedCacheControlHeaderStrategy != nil {
		in, out := &in.UnauthorizedCacheControlHeaderStrategy, &out.UnauthorizedCacheControlHeaderStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.CacheDataEncrypted != nil {
		in, out := &in.CacheDataEncrypted, &out.CacheDataEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.CacheTTLInSeconds != nil {
		in, out := &in.CacheTTLInSeconds, &out.CacheTTLInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CachingEnabled != nil {
		in, out := &in.CachingEnabled, &out.CachingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.MetricsEnabled != nil {
		in, out := &in.MetricsEnabled, &out.MetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequireAuthorizationForCacheControl != nil {
		in, out := &in.RequireAuthorizationForCacheControl, &out.RequireAuthorizationForCacheControl
		*out = new(bool)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.UnauthorizedCacheControlHeaderStrategy != nil {
		in, out := &in.UnauthorizedCacheControlHeaderStrategy, &out.UnauthorizedCacheControlHeaderStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stage) DeepCopyInto(out *Stage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stage.
func (in *Stage) DeepCopy() *Stage {
	if in == nil {
		return nil
	}
	out := new(Stage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageInitParameters) DeepCopyInto(out *StageInitParameters) {
	*out = *in
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = new(AccessLogSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(CanarySettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentIDRef != nil {
		in, out := &in.DeploymentIDRef, &out.DeploymentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentIDSelector != nil {
		in, out := &in.DeploymentIDSelector, &out.DeploymentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationVersion != nil {
		in, out := &in.DocumentationVersion, &out.DocumentationVersion
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.XrayTracingEnabled != nil {
		in, out := &in.XrayTracingEnabled, &out.XrayTracingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageInitParameters.
func (in *StageInitParameters) DeepCopy() *StageInitParameters {
	if in == nil {
		return nil
	}
	out := new(StageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageList) DeepCopyInto(out *StageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageList.
func (in *StageList) DeepCopy() *StageList {
	if in == nil {
		return nil
	}
	out := new(StageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageObservation) DeepCopyInto(out *StageObservation) {
	*out = *in
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = new(AccessLogSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(CanarySettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationVersion != nil {
		in, out := &in.DocumentationVersion, &out.DocumentationVersion
		*out = new(string)
		**out = **in
	}
	if in.ExecutionArn != nil {
		in, out := &in.ExecutionArn, &out.ExecutionArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvokeURL != nil {
		in, out := &in.InvokeURL, &out.InvokeURL
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WebACLArn != nil {
		in, out := &in.WebACLArn, &out.WebACLArn
		*out = new(string)
		**out = **in
	}
	if in.XrayTracingEnabled != nil {
		in, out := &in.XrayTracingEnabled, &out.XrayTracingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageObservation.
func (in *StageObservation) DeepCopy() *StageObservation {
	if in == nil {
		return nil
	}
	out := new(StageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageParameters) DeepCopyInto(out *StageParameters) {
	*out = *in
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = new(AccessLogSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(CanarySettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentIDRef != nil {
		in, out := &in.DeploymentIDRef, &out.DeploymentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentIDSelector != nil {
		in, out := &in.DeploymentIDSelector, &out.DeploymentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationVersion != nil {
		in, out := &in.DocumentationVersion, &out.DocumentationVersion
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIIDRef != nil {
		in, out := &in.RestAPIIDRef, &out.RestAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIIDSelector != nil {
		in, out := &in.RestAPIIDSelector, &out.RestAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.XrayTracingEnabled != nil {
		in, out := &in.XrayTracingEnabled, &out.XrayTracingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageParameters.
func (in *StageParameters) DeepCopy() *StageParameters {
	if in == nil {
		return nil
	}
	out := new(StageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSpec) DeepCopyInto(out *StageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSpec.
func (in *StageSpec) DeepCopy() *StageSpec {
	if in == nil {
		return nil
	}
	out := new(StageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStatus) DeepCopyInto(out *StageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStatus.
func (in *StageStatus) DeepCopy() *StageStatus {
	if in == nil {
		return nil
	}
	out := new(StageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigInitParameters) DeepCopyInto(out *TLSConfigInitParameters) {
	*out = *in
	if in.InsecureSkipVerification != nil {
		in, out := &in.InsecureSkipVerification, &out.InsecureSkipVerification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigInitParameters.
func (in *TLSConfigInitParameters) DeepCopy() *TLSConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigObservation) DeepCopyInto(out *TLSConfigObservation) {
	*out = *in
	if in.InsecureSkipVerification != nil {
		in, out := &in.InsecureSkipVerification, &out.InsecureSkipVerification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigObservation.
func (in *TLSConfigObservation) DeepCopy() *TLSConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TLSConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigParameters) DeepCopyInto(out *TLSConfigParameters) {
	*out = *in
	if in.InsecureSkipVerification != nil {
		in, out := &in.InsecureSkipVerification, &out.InsecureSkipVerification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigParameters.
func (in *TLSConfigParameters) DeepCopy() *TLSConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleInitParameters) DeepCopyInto(out *ThrottleInitParameters) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleInitParameters.
func (in *ThrottleInitParameters) DeepCopy() *ThrottleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThrottleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleObservation) DeepCopyInto(out *ThrottleObservation) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleObservation.
func (in *ThrottleObservation) DeepCopy() *ThrottleObservation {
	if in == nil {
		return nil
	}
	out := new(ThrottleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleParameters) DeepCopyInto(out *ThrottleParameters) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleParameters.
func (in *ThrottleParameters) DeepCopy() *ThrottleParameters {
	if in == nil {
		return nil
	}
	out := new(ThrottleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSettingsInitParameters) DeepCopyInto(out *ThrottleSettingsInitParameters) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSettingsInitParameters.
func (in *ThrottleSettingsInitParameters) DeepCopy() *ThrottleSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThrottleSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSettingsObservation) DeepCopyInto(out *ThrottleSettingsObservation) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSettingsObservation.
func (in *ThrottleSettingsObservation) DeepCopy() *ThrottleSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ThrottleSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSettingsParameters) DeepCopyInto(out *ThrottleSettingsParameters) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSettingsParameters.
func (in *ThrottleSettingsParameters) DeepCopy() *ThrottleSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ThrottleSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlan) DeepCopyInto(out *UsagePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlan.
func (in *UsagePlan) DeepCopy() *UsagePlan {
	if in == nil {
		return nil
	}
	out := new(UsagePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanInitParameters) DeepCopyInto(out *UsagePlanInitParameters) {
	*out = *in
	if in.APIStages != nil {
		in, out := &in.APIStages, &out.APIStages
		*out = make([]APIStagesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProductCode != nil {
		in, out := &in.ProductCode, &out.ProductCode
		*out = new(string)
		**out = **in
	}
	if in.QuotaSettings != nil {
		in, out := &in.QuotaSettings, &out.QuotaSettings
		*out = new(QuotaSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThrottleSettings != nil {
		in, out := &in.ThrottleSettings, &out.ThrottleSettings
		*out = new(ThrottleSettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanInitParameters.
func (in *UsagePlanInitParameters) DeepCopy() *UsagePlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanList) DeepCopyInto(out *UsagePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UsagePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanList.
func (in *UsagePlanList) DeepCopy() *UsagePlanList {
	if in == nil {
		return nil
	}
	out := new(UsagePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanObservation) DeepCopyInto(out *UsagePlanObservation) {
	*out = *in
	if in.APIStages != nil {
		in, out := &in.APIStages, &out.APIStages
		*out = make([]APIStagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProductCode != nil {
		in, out := &in.ProductCode, &out.ProductCode
		*out = new(string)
		**out = **in
	}
	if in.QuotaSettings != nil {
		in, out := &in.QuotaSettings, &out.QuotaSettings
		*out = new(QuotaSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThrottleSettings != nil {
		in, out := &in.ThrottleSettings, &out.ThrottleSettings
		*out = new(ThrottleSettingsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanObservation.
func (in *UsagePlanObservation) DeepCopy() *UsagePlanObservation {
	if in == nil {
		return nil
	}
	out := new(UsagePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanParameters) DeepCopyInto(out *UsagePlanParameters) {
	*out = *in
	if in.APIStages != nil {
		in, out := &in.APIStages, &out.APIStages
		*out = make([]APIStagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProductCode != nil {
		in, out := &in.ProductCode, &out.ProductCode
		*out = new(string)
		**out = **in
	}
	if in.QuotaSettings != nil {
		in, out := &in.QuotaSettings, &out.QuotaSettings
		*out = new(QuotaSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThrottleSettings != nil {
		in, out := &in.ThrottleSettings, &out.ThrottleSettings
		*out = new(ThrottleSettingsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanParameters.
func (in *UsagePlanParameters) DeepCopy() *UsagePlanParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanSpec) DeepCopyInto(out *UsagePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanSpec.
func (in *UsagePlanSpec) DeepCopy() *UsagePlanSpec {
	if in == nil {
		return nil
	}
	out := new(UsagePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanStatus) DeepCopyInto(out *UsagePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanStatus.
func (in *UsagePlanStatus) DeepCopy() *UsagePlanStatus {
	if in == nil {
		return nil
	}
	out := new(UsagePlanStatus)
	in.DeepCopyInto(out)
	return out
}

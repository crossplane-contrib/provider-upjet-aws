//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLoggingOptionsObservation) DeepCopyInto(out *CloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLoggingOptionsObservation.
func (in *CloudwatchLoggingOptionsObservation) DeepCopy() *CloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLoggingOptionsParameters) DeepCopyInto(out *CloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLoggingOptionsParameters.
func (in *CloudwatchLoggingOptionsParameters) DeepCopy() *CloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonAttributesObservation) DeepCopyInto(out *CommonAttributesObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonAttributesObservation.
func (in *CommonAttributesObservation) DeepCopy() *CommonAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(CommonAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonAttributesParameters) DeepCopyInto(out *CommonAttributesParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonAttributesParameters.
func (in *CommonAttributesParameters) DeepCopy() *CommonAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(CommonAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFormatConversionConfigurationObservation) DeepCopyInto(out *DataFormatConversionConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InputFormatConfiguration != nil {
		in, out := &in.InputFormatConfiguration, &out.InputFormatConfiguration
		*out = make([]InputFormatConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormatConfiguration != nil {
		in, out := &in.OutputFormatConfiguration, &out.OutputFormatConfiguration
		*out = make([]OutputFormatConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaConfiguration != nil {
		in, out := &in.SchemaConfiguration, &out.SchemaConfiguration
		*out = make([]SchemaConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFormatConversionConfigurationObservation.
func (in *DataFormatConversionConfigurationObservation) DeepCopy() *DataFormatConversionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DataFormatConversionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataFormatConversionConfigurationParameters) DeepCopyInto(out *DataFormatConversionConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InputFormatConfiguration != nil {
		in, out := &in.InputFormatConfiguration, &out.InputFormatConfiguration
		*out = make([]InputFormatConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputFormatConfiguration != nil {
		in, out := &in.OutputFormatConfiguration, &out.OutputFormatConfiguration
		*out = make([]OutputFormatConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaConfiguration != nil {
		in, out := &in.SchemaConfiguration, &out.SchemaConfiguration
		*out = make([]SchemaConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataFormatConversionConfigurationParameters.
func (in *DataFormatConversionConfigurationParameters) DeepCopy() *DataFormatConversionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DataFormatConversionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStream) DeepCopyInto(out *DeliveryStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStream.
func (in *DeliveryStream) DeepCopy() *DeliveryStream {
	if in == nil {
		return nil
	}
	out := new(DeliveryStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeliveryStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamList) DeepCopyInto(out *DeliveryStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeliveryStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamList.
func (in *DeliveryStreamList) DeepCopy() *DeliveryStreamList {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeliveryStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamObservation) DeepCopyInto(out *DeliveryStreamObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConfiguration != nil {
		in, out := &in.ElasticsearchConfiguration, &out.ElasticsearchConfiguration
		*out = make([]ElasticsearchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtendedS3Configuration != nil {
		in, out := &in.ExtendedS3Configuration, &out.ExtendedS3Configuration
		*out = make([]ExtendedS3ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPEndpointConfiguration != nil {
		in, out := &in.HTTPEndpointConfiguration, &out.HTTPEndpointConfiguration
		*out = make([]HTTPEndpointConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KinesisSourceConfiguration != nil {
		in, out := &in.KinesisSourceConfiguration, &out.KinesisSourceConfiguration
		*out = make([]KinesisSourceConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpensearchConfiguration != nil {
		in, out := &in.OpensearchConfiguration, &out.OpensearchConfiguration
		*out = make([]OpensearchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedshiftConfiguration != nil {
		in, out := &in.RedshiftConfiguration, &out.RedshiftConfiguration
		*out = make([]RedshiftConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = make([]S3ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = make([]ServerSideEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SplunkConfiguration != nil {
		in, out := &in.SplunkConfiguration, &out.SplunkConfiguration
		*out = make([]SplunkConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamObservation.
func (in *DeliveryStreamObservation) DeepCopy() *DeliveryStreamObservation {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamParameters) DeepCopyInto(out *DeliveryStreamParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationID != nil {
		in, out := &in.DestinationID, &out.DestinationID
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConfiguration != nil {
		in, out := &in.ElasticsearchConfiguration, &out.ElasticsearchConfiguration
		*out = make([]ElasticsearchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtendedS3Configuration != nil {
		in, out := &in.ExtendedS3Configuration, &out.ExtendedS3Configuration
		*out = make([]ExtendedS3ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPEndpointConfiguration != nil {
		in, out := &in.HTTPEndpointConfiguration, &out.HTTPEndpointConfiguration
		*out = make([]HTTPEndpointConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KinesisSourceConfiguration != nil {
		in, out := &in.KinesisSourceConfiguration, &out.KinesisSourceConfiguration
		*out = make([]KinesisSourceConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpensearchConfiguration != nil {
		in, out := &in.OpensearchConfiguration, &out.OpensearchConfiguration
		*out = make([]OpensearchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedshiftConfiguration != nil {
		in, out := &in.RedshiftConfiguration, &out.RedshiftConfiguration
		*out = make([]RedshiftConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3Configuration != nil {
		in, out := &in.S3Configuration, &out.S3Configuration
		*out = make([]S3ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = make([]ServerSideEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SplunkConfiguration != nil {
		in, out := &in.SplunkConfiguration, &out.SplunkConfiguration
		*out = make([]SplunkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamParameters.
func (in *DeliveryStreamParameters) DeepCopy() *DeliveryStreamParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamSpec) DeepCopyInto(out *DeliveryStreamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamSpec.
func (in *DeliveryStreamSpec) DeepCopy() *DeliveryStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryStreamStatus) DeepCopyInto(out *DeliveryStreamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryStreamStatus.
func (in *DeliveryStreamStatus) DeepCopy() *DeliveryStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DeliveryStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeserializerObservation) DeepCopyInto(out *DeserializerObservation) {
	*out = *in
	if in.HiveJSONSerDe != nil {
		in, out := &in.HiveJSONSerDe, &out.HiveJSONSerDe
		*out = make([]HiveJSONSerDeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpenXJSONSerDe != nil {
		in, out := &in.OpenXJSONSerDe, &out.OpenXJSONSerDe
		*out = make([]OpenXJSONSerDeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeserializerObservation.
func (in *DeserializerObservation) DeepCopy() *DeserializerObservation {
	if in == nil {
		return nil
	}
	out := new(DeserializerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeserializerParameters) DeepCopyInto(out *DeserializerParameters) {
	*out = *in
	if in.HiveJSONSerDe != nil {
		in, out := &in.HiveJSONSerDe, &out.HiveJSONSerDe
		*out = make([]HiveJSONSerDeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpenXJSONSerDe != nil {
		in, out := &in.OpenXJSONSerDe, &out.OpenXJSONSerDe
		*out = make([]OpenXJSONSerDeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeserializerParameters.
func (in *DeserializerParameters) DeepCopy() *DeserializerParameters {
	if in == nil {
		return nil
	}
	out := new(DeserializerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicPartitioningConfigurationObservation) DeepCopyInto(out *DynamicPartitioningConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicPartitioningConfigurationObservation.
func (in *DynamicPartitioningConfigurationObservation) DeepCopy() *DynamicPartitioningConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DynamicPartitioningConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamicPartitioningConfigurationParameters) DeepCopyInto(out *DynamicPartitioningConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamicPartitioningConfigurationParameters.
func (in *DynamicPartitioningConfigurationParameters) DeepCopy() *DynamicPartitioningConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DynamicPartitioningConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigurationObservation) DeepCopyInto(out *ElasticsearchConfigurationObservation) {
	*out = *in
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]CloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DomainArn != nil {
		in, out := &in.DomainArn, &out.DomainArn
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]ProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigurationObservation.
func (in *ElasticsearchConfigurationObservation) DeepCopy() *ElasticsearchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigurationParameters) DeepCopyInto(out *ElasticsearchConfigurationParameters) {
	*out = *in
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]CloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DomainArn != nil {
		in, out := &in.DomainArn, &out.DomainArn
		*out = new(string)
		**out = **in
	}
	if in.DomainArnRef != nil {
		in, out := &in.DomainArnRef, &out.DomainArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainArnSelector != nil {
		in, out := &in.DomainArnSelector, &out.DomainArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]ProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigurationParameters.
func (in *ElasticsearchConfigurationParameters) DeepCopy() *ElasticsearchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation.
func (in *ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters.
func (in *ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationObservation) DeepCopyInto(out *ExtendedS3ConfigurationObservation) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataFormatConversionConfiguration != nil {
		in, out := &in.DataFormatConversionConfiguration, &out.DataFormatConversionConfiguration
		*out = make([]DataFormatConversionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicPartitioningConfiguration != nil {
		in, out := &in.DynamicPartitioningConfiguration, &out.DynamicPartitioningConfiguration
		*out = make([]DynamicPartitioningConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]ExtendedS3ConfigurationProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = make([]S3BackupConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationObservation.
func (in *ExtendedS3ConfigurationObservation) DeepCopy() *ExtendedS3ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationParameters) DeepCopyInto(out *ExtendedS3ConfigurationParameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BucketArnRef != nil {
		in, out := &in.BucketArnRef, &out.BucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketArnSelector != nil {
		in, out := &in.BucketArnSelector, &out.BucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.DataFormatConversionConfiguration != nil {
		in, out := &in.DataFormatConversionConfiguration, &out.DataFormatConversionConfiguration
		*out = make([]DataFormatConversionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DynamicPartitioningConfiguration != nil {
		in, out := &in.DynamicPartitioningConfiguration, &out.DynamicPartitioningConfiguration
		*out = make([]DynamicPartitioningConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]ExtendedS3ConfigurationProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = make([]S3BackupConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationParameters.
func (in *ExtendedS3ConfigurationParameters) DeepCopy() *ExtendedS3ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationProcessingConfigurationObservation) DeepCopyInto(out *ExtendedS3ConfigurationProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]ProcessingConfigurationProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationProcessingConfigurationObservation.
func (in *ExtendedS3ConfigurationProcessingConfigurationObservation) DeepCopy() *ExtendedS3ConfigurationProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtendedS3ConfigurationProcessingConfigurationParameters) DeepCopyInto(out *ExtendedS3ConfigurationProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]ProcessingConfigurationProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtendedS3ConfigurationProcessingConfigurationParameters.
func (in *ExtendedS3ConfigurationProcessingConfigurationParameters) DeepCopy() *ExtendedS3ConfigurationProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ExtendedS3ConfigurationProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation.
func (in *HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters.
func (in *HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationObservation) DeepCopyInto(out *HTTPEndpointConfigurationObservation) {
	*out = *in
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]HTTPEndpointConfigurationProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestConfiguration != nil {
		in, out := &in.RequestConfiguration, &out.RequestConfiguration
		*out = make([]RequestConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationObservation.
func (in *HTTPEndpointConfigurationObservation) DeepCopy() *HTTPEndpointConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationParameters) DeepCopyInto(out *HTTPEndpointConfigurationParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]HTTPEndpointConfigurationProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestConfiguration != nil {
		in, out := &in.RequestConfiguration, &out.RequestConfiguration
		*out = make([]RequestConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationParameters.
func (in *HTTPEndpointConfigurationParameters) DeepCopy() *HTTPEndpointConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationProcessingConfigurationObservation) DeepCopyInto(out *HTTPEndpointConfigurationProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationProcessingConfigurationObservation.
func (in *HTTPEndpointConfigurationProcessingConfigurationObservation) DeepCopy() *HTTPEndpointConfigurationProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationProcessingConfigurationParameters) DeepCopyInto(out *HTTPEndpointConfigurationProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationProcessingConfigurationParameters.
func (in *HTTPEndpointConfigurationProcessingConfigurationParameters) DeepCopy() *HTTPEndpointConfigurationProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation) DeepCopyInto(out *HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ProcessingConfigurationProcessorsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation.
func (in *HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation) DeepCopy() *HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters) DeepCopyInto(out *HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ProcessingConfigurationProcessorsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters.
func (in *HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters) DeepCopy() *HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJSONSerDeObservation) DeepCopyInto(out *HiveJSONSerDeObservation) {
	*out = *in
	if in.TimestampFormats != nil {
		in, out := &in.TimestampFormats, &out.TimestampFormats
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJSONSerDeObservation.
func (in *HiveJSONSerDeObservation) DeepCopy() *HiveJSONSerDeObservation {
	if in == nil {
		return nil
	}
	out := new(HiveJSONSerDeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HiveJSONSerDeParameters) DeepCopyInto(out *HiveJSONSerDeParameters) {
	*out = *in
	if in.TimestampFormats != nil {
		in, out := &in.TimestampFormats, &out.TimestampFormats
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HiveJSONSerDeParameters.
func (in *HiveJSONSerDeParameters) DeepCopy() *HiveJSONSerDeParameters {
	if in == nil {
		return nil
	}
	out := new(HiveJSONSerDeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatConfigurationObservation) DeepCopyInto(out *InputFormatConfigurationObservation) {
	*out = *in
	if in.Deserializer != nil {
		in, out := &in.Deserializer, &out.Deserializer
		*out = make([]DeserializerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatConfigurationObservation.
func (in *InputFormatConfigurationObservation) DeepCopy() *InputFormatConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(InputFormatConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatConfigurationParameters) DeepCopyInto(out *InputFormatConfigurationParameters) {
	*out = *in
	if in.Deserializer != nil {
		in, out := &in.Deserializer, &out.Deserializer
		*out = make([]DeserializerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatConfigurationParameters.
func (in *InputFormatConfigurationParameters) DeepCopy() *InputFormatConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(InputFormatConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisSourceConfigurationObservation) DeepCopyInto(out *KinesisSourceConfigurationObservation) {
	*out = *in
	if in.KinesisStreamArn != nil {
		in, out := &in.KinesisStreamArn, &out.KinesisStreamArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisSourceConfigurationObservation.
func (in *KinesisSourceConfigurationObservation) DeepCopy() *KinesisSourceConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(KinesisSourceConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisSourceConfigurationParameters) DeepCopyInto(out *KinesisSourceConfigurationParameters) {
	*out = *in
	if in.KinesisStreamArn != nil {
		in, out := &in.KinesisStreamArn, &out.KinesisStreamArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisSourceConfigurationParameters.
func (in *KinesisSourceConfigurationParameters) DeepCopy() *KinesisSourceConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(KinesisSourceConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenXJSONSerDeObservation) DeepCopyInto(out *OpenXJSONSerDeObservation) {
	*out = *in
	if in.CaseInsensitive != nil {
		in, out := &in.CaseInsensitive, &out.CaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.ColumnToJSONKeyMappings != nil {
		in, out := &in.ColumnToJSONKeyMappings, &out.ColumnToJSONKeyMappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConvertDotsInJSONKeysToUnderscores != nil {
		in, out := &in.ConvertDotsInJSONKeysToUnderscores, &out.ConvertDotsInJSONKeysToUnderscores
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenXJSONSerDeObservation.
func (in *OpenXJSONSerDeObservation) DeepCopy() *OpenXJSONSerDeObservation {
	if in == nil {
		return nil
	}
	out := new(OpenXJSONSerDeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenXJSONSerDeParameters) DeepCopyInto(out *OpenXJSONSerDeParameters) {
	*out = *in
	if in.CaseInsensitive != nil {
		in, out := &in.CaseInsensitive, &out.CaseInsensitive
		*out = new(bool)
		**out = **in
	}
	if in.ColumnToJSONKeyMappings != nil {
		in, out := &in.ColumnToJSONKeyMappings, &out.ColumnToJSONKeyMappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConvertDotsInJSONKeysToUnderscores != nil {
		in, out := &in.ConvertDotsInJSONKeysToUnderscores, &out.ConvertDotsInJSONKeysToUnderscores
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenXJSONSerDeParameters.
func (in *OpenXJSONSerDeParameters) DeepCopy() *OpenXJSONSerDeParameters {
	if in == nil {
		return nil
	}
	out := new(OpenXJSONSerDeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *OpensearchConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationCloudwatchLoggingOptionsObservation.
func (in *OpensearchConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *OpensearchConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *OpensearchConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationCloudwatchLoggingOptionsParameters.
func (in *OpensearchConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *OpensearchConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationObservation) DeepCopyInto(out *OpensearchConfigurationObservation) {
	*out = *in
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]OpensearchConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DomainArn != nil {
		in, out := &in.DomainArn, &out.DomainArn
		*out = new(string)
		**out = **in
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]OpensearchConfigurationProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]OpensearchConfigurationVPCConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationObservation.
func (in *OpensearchConfigurationObservation) DeepCopy() *OpensearchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationParameters) DeepCopyInto(out *OpensearchConfigurationParameters) {
	*out = *in
	if in.BufferingInterval != nil {
		in, out := &in.BufferingInterval, &out.BufferingInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferingSize != nil {
		in, out := &in.BufferingSize, &out.BufferingSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]OpensearchConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterEndpoint != nil {
		in, out := &in.ClusterEndpoint, &out.ClusterEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DomainArn != nil {
		in, out := &in.DomainArn, &out.DomainArn
		*out = new(string)
		**out = **in
	}
	if in.DomainArnRef != nil {
		in, out := &in.DomainArnRef, &out.DomainArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainArnSelector != nil {
		in, out := &in.DomainArnSelector, &out.DomainArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexRotationPeriod != nil {
		in, out := &in.IndexRotationPeriod, &out.IndexRotationPeriod
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]OpensearchConfigurationProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.TypeName != nil {
		in, out := &in.TypeName, &out.TypeName
		*out = new(string)
		**out = **in
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]OpensearchConfigurationVPCConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationParameters.
func (in *OpensearchConfigurationParameters) DeepCopy() *OpensearchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationObservation) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]OpensearchConfigurationProcessingConfigurationProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationObservation.
func (in *OpensearchConfigurationProcessingConfigurationObservation) DeepCopy() *OpensearchConfigurationProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationParameters) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]OpensearchConfigurationProcessingConfigurationProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationParameters.
func (in *OpensearchConfigurationProcessingConfigurationParameters) DeepCopy() *OpensearchConfigurationProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsObservation) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationProcessorsObservation.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsObservation) DeepCopy() *OpensearchConfigurationProcessingConfigurationProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParameters) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationProcessorsParameters.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParameters) DeepCopy() *OpensearchConfigurationProcessingConfigurationProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopy() *OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationProcessorsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopyInto(out *OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters.
func (in *OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopy() *OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationProcessingConfigurationProcessorsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationVPCConfigObservation) DeepCopyInto(out *OpensearchConfigurationVPCConfigObservation) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationVPCConfigObservation.
func (in *OpensearchConfigurationVPCConfigObservation) DeepCopy() *OpensearchConfigurationVPCConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationVPCConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpensearchConfigurationVPCConfigParameters) DeepCopyInto(out *OpensearchConfigurationVPCConfigParameters) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpensearchConfigurationVPCConfigParameters.
func (in *OpensearchConfigurationVPCConfigParameters) DeepCopy() *OpensearchConfigurationVPCConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpensearchConfigurationVPCConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrcSerDeObservation) DeepCopyInto(out *OrcSerDeObservation) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.BloomFilterColumns != nil {
		in, out := &in.BloomFilterColumns, &out.BloomFilterColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BloomFilterFalsePositiveProbability != nil {
		in, out := &in.BloomFilterFalsePositiveProbability, &out.BloomFilterFalsePositiveProbability
		*out = new(float64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DictionaryKeyThreshold != nil {
		in, out := &in.DictionaryKeyThreshold, &out.DictionaryKeyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.EnablePadding != nil {
		in, out := &in.EnablePadding, &out.EnablePadding
		*out = new(bool)
		**out = **in
	}
	if in.FormatVersion != nil {
		in, out := &in.FormatVersion, &out.FormatVersion
		*out = new(string)
		**out = **in
	}
	if in.PaddingTolerance != nil {
		in, out := &in.PaddingTolerance, &out.PaddingTolerance
		*out = new(float64)
		**out = **in
	}
	if in.RowIndexStride != nil {
		in, out := &in.RowIndexStride, &out.RowIndexStride
		*out = new(float64)
		**out = **in
	}
	if in.StripeSizeBytes != nil {
		in, out := &in.StripeSizeBytes, &out.StripeSizeBytes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrcSerDeObservation.
func (in *OrcSerDeObservation) DeepCopy() *OrcSerDeObservation {
	if in == nil {
		return nil
	}
	out := new(OrcSerDeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrcSerDeParameters) DeepCopyInto(out *OrcSerDeParameters) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.BloomFilterColumns != nil {
		in, out := &in.BloomFilterColumns, &out.BloomFilterColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BloomFilterFalsePositiveProbability != nil {
		in, out := &in.BloomFilterFalsePositiveProbability, &out.BloomFilterFalsePositiveProbability
		*out = new(float64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.DictionaryKeyThreshold != nil {
		in, out := &in.DictionaryKeyThreshold, &out.DictionaryKeyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.EnablePadding != nil {
		in, out := &in.EnablePadding, &out.EnablePadding
		*out = new(bool)
		**out = **in
	}
	if in.FormatVersion != nil {
		in, out := &in.FormatVersion, &out.FormatVersion
		*out = new(string)
		**out = **in
	}
	if in.PaddingTolerance != nil {
		in, out := &in.PaddingTolerance, &out.PaddingTolerance
		*out = new(float64)
		**out = **in
	}
	if in.RowIndexStride != nil {
		in, out := &in.RowIndexStride, &out.RowIndexStride
		*out = new(float64)
		**out = **in
	}
	if in.StripeSizeBytes != nil {
		in, out := &in.StripeSizeBytes, &out.StripeSizeBytes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrcSerDeParameters.
func (in *OrcSerDeParameters) DeepCopy() *OrcSerDeParameters {
	if in == nil {
		return nil
	}
	out := new(OrcSerDeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputFormatConfigurationObservation) DeepCopyInto(out *OutputFormatConfigurationObservation) {
	*out = *in
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputFormatConfigurationObservation.
func (in *OutputFormatConfigurationObservation) DeepCopy() *OutputFormatConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(OutputFormatConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputFormatConfigurationParameters) DeepCopyInto(out *OutputFormatConfigurationParameters) {
	*out = *in
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputFormatConfigurationParameters.
func (in *OutputFormatConfigurationParameters) DeepCopy() *OutputFormatConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(OutputFormatConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersObservation) DeepCopyInto(out *ParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersObservation.
func (in *ParametersObservation) DeepCopy() *ParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParametersParameters) DeepCopyInto(out *ParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParametersParameters.
func (in *ParametersParameters) DeepCopy() *ParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetSerDeObservation) DeepCopyInto(out *ParquetSerDeObservation) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.EnableDictionaryCompression != nil {
		in, out := &in.EnableDictionaryCompression, &out.EnableDictionaryCompression
		*out = new(bool)
		**out = **in
	}
	if in.MaxPaddingBytes != nil {
		in, out := &in.MaxPaddingBytes, &out.MaxPaddingBytes
		*out = new(float64)
		**out = **in
	}
	if in.PageSizeBytes != nil {
		in, out := &in.PageSizeBytes, &out.PageSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.WriterVersion != nil {
		in, out := &in.WriterVersion, &out.WriterVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetSerDeObservation.
func (in *ParquetSerDeObservation) DeepCopy() *ParquetSerDeObservation {
	if in == nil {
		return nil
	}
	out := new(ParquetSerDeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParquetSerDeParameters) DeepCopyInto(out *ParquetSerDeParameters) {
	*out = *in
	if in.BlockSizeBytes != nil {
		in, out := &in.BlockSizeBytes, &out.BlockSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.EnableDictionaryCompression != nil {
		in, out := &in.EnableDictionaryCompression, &out.EnableDictionaryCompression
		*out = new(bool)
		**out = **in
	}
	if in.MaxPaddingBytes != nil {
		in, out := &in.MaxPaddingBytes, &out.MaxPaddingBytes
		*out = new(float64)
		**out = **in
	}
	if in.PageSizeBytes != nil {
		in, out := &in.PageSizeBytes, &out.PageSizeBytes
		*out = new(float64)
		**out = **in
	}
	if in.WriterVersion != nil {
		in, out := &in.WriterVersion, &out.WriterVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParquetSerDeParameters.
func (in *ParquetSerDeParameters) DeepCopy() *ParquetSerDeParameters {
	if in == nil {
		return nil
	}
	out := new(ParquetSerDeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationObservation) DeepCopyInto(out *ProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]ProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationObservation.
func (in *ProcessingConfigurationObservation) DeepCopy() *ProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationParameters) DeepCopyInto(out *ProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]ProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationParameters.
func (in *ProcessingConfigurationParameters) DeepCopy() *ProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationProcessorsObservation) DeepCopyInto(out *ProcessingConfigurationProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ProcessorsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationProcessorsObservation.
func (in *ProcessingConfigurationProcessorsObservation) DeepCopy() *ProcessingConfigurationProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationProcessorsParameters) DeepCopyInto(out *ProcessingConfigurationProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ProcessorsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationProcessorsParameters.
func (in *ProcessingConfigurationProcessorsParameters) DeepCopy() *ProcessingConfigurationProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationProcessorsParametersObservation) DeepCopyInto(out *ProcessingConfigurationProcessorsParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationProcessorsParametersObservation.
func (in *ProcessingConfigurationProcessorsParametersObservation) DeepCopy() *ProcessingConfigurationProcessorsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationProcessorsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessingConfigurationProcessorsParametersParameters) DeepCopyInto(out *ProcessingConfigurationProcessorsParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessingConfigurationProcessorsParametersParameters.
func (in *ProcessingConfigurationProcessorsParametersParameters) DeepCopy() *ProcessingConfigurationProcessorsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessingConfigurationProcessorsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorsObservation) DeepCopyInto(out *ProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorsObservation.
func (in *ProcessorsObservation) DeepCopy() *ProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorsParameters) DeepCopyInto(out *ProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]ParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorsParameters.
func (in *ProcessorsParameters) DeepCopy() *ProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorsParametersObservation) DeepCopyInto(out *ProcessorsParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorsParametersObservation.
func (in *ProcessorsParametersObservation) DeepCopy() *ProcessorsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessorsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessorsParametersParameters) DeepCopyInto(out *ProcessorsParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessorsParametersParameters.
func (in *ProcessorsParametersParameters) DeepCopy() *ProcessorsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessorsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *RedshiftConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationCloudwatchLoggingOptionsObservation.
func (in *RedshiftConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *RedshiftConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *RedshiftConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationCloudwatchLoggingOptionsParameters.
func (in *RedshiftConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *RedshiftConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationObservation) DeepCopyInto(out *RedshiftConfigurationObservation) {
	*out = *in
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]RedshiftConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterJdbcurl != nil {
		in, out := &in.ClusterJdbcurl, &out.ClusterJdbcurl
		*out = new(string)
		**out = **in
	}
	if in.CopyOptions != nil {
		in, out := &in.CopyOptions, &out.CopyOptions
		*out = new(string)
		**out = **in
	}
	if in.DataTableColumns != nil {
		in, out := &in.DataTableColumns, &out.DataTableColumns
		*out = new(string)
		**out = **in
	}
	if in.DataTableName != nil {
		in, out := &in.DataTableName, &out.DataTableName
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]RedshiftConfigurationProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = make([]RedshiftConfigurationS3BackupConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationObservation.
func (in *RedshiftConfigurationObservation) DeepCopy() *RedshiftConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationParameters) DeepCopyInto(out *RedshiftConfigurationParameters) {
	*out = *in
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]RedshiftConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterJdbcurl != nil {
		in, out := &in.ClusterJdbcurl, &out.ClusterJdbcurl
		*out = new(string)
		**out = **in
	}
	if in.CopyOptions != nil {
		in, out := &in.CopyOptions, &out.CopyOptions
		*out = new(string)
		**out = **in
	}
	if in.DataTableColumns != nil {
		in, out := &in.DataTableColumns, &out.DataTableColumns
		*out = new(string)
		**out = **in
	}
	if in.DataTableName != nil {
		in, out := &in.DataTableName, &out.DataTableName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]RedshiftConfigurationProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BackupConfiguration != nil {
		in, out := &in.S3BackupConfiguration, &out.S3BackupConfiguration
		*out = make([]RedshiftConfigurationS3BackupConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationParameters.
func (in *RedshiftConfigurationParameters) DeepCopy() *RedshiftConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationObservation) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]RedshiftConfigurationProcessingConfigurationProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationObservation.
func (in *RedshiftConfigurationProcessingConfigurationObservation) DeepCopy() *RedshiftConfigurationProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationParameters) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]RedshiftConfigurationProcessingConfigurationProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationParameters.
func (in *RedshiftConfigurationProcessingConfigurationParameters) DeepCopy() *RedshiftConfigurationProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsObservation) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationProcessorsObservation.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsObservation) DeepCopy() *RedshiftConfigurationProcessingConfigurationProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParameters) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationProcessorsParameters.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParameters) DeepCopy() *RedshiftConfigurationProcessingConfigurationProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopy() *RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopyInto(out *RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters.
func (in *RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopy() *RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation.
func (in *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters.
func (in *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationS3BackupConfigurationObservation) DeepCopyInto(out *RedshiftConfigurationS3BackupConfigurationObservation) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationS3BackupConfigurationObservation.
func (in *RedshiftConfigurationS3BackupConfigurationObservation) DeepCopy() *RedshiftConfigurationS3BackupConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationS3BackupConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedshiftConfigurationS3BackupConfigurationParameters) DeepCopyInto(out *RedshiftConfigurationS3BackupConfigurationParameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BucketArnRef != nil {
		in, out := &in.BucketArnRef, &out.BucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketArnSelector != nil {
		in, out := &in.BucketArnSelector, &out.BucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedshiftConfigurationS3BackupConfigurationParameters.
func (in *RedshiftConfigurationS3BackupConfigurationParameters) DeepCopy() *RedshiftConfigurationS3BackupConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RedshiftConfigurationS3BackupConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestConfigurationObservation) DeepCopyInto(out *RequestConfigurationObservation) {
	*out = *in
	if in.CommonAttributes != nil {
		in, out := &in.CommonAttributes, &out.CommonAttributes
		*out = make([]CommonAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestConfigurationObservation.
func (in *RequestConfigurationObservation) DeepCopy() *RequestConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RequestConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestConfigurationParameters) DeepCopyInto(out *RequestConfigurationParameters) {
	*out = *in
	if in.CommonAttributes != nil {
		in, out := &in.CommonAttributes, &out.CommonAttributes
		*out = make([]CommonAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentEncoding != nil {
		in, out := &in.ContentEncoding, &out.ContentEncoding
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestConfigurationParameters.
func (in *RequestConfigurationParameters) DeepCopy() *RequestConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RequestConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *S3BackupConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigurationCloudwatchLoggingOptionsObservation.
func (in *S3BackupConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *S3BackupConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *S3BackupConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigurationCloudwatchLoggingOptionsParameters.
func (in *S3BackupConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *S3BackupConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigurationObservation) DeepCopyInto(out *S3BackupConfigurationObservation) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]S3BackupConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigurationObservation.
func (in *S3BackupConfigurationObservation) DeepCopy() *S3BackupConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigurationParameters) DeepCopyInto(out *S3BackupConfigurationParameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]S3BackupConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigurationParameters.
func (in *S3BackupConfigurationParameters) DeepCopy() *S3BackupConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *S3ConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigurationCloudwatchLoggingOptionsObservation.
func (in *S3ConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *S3ConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(S3ConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *S3ConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigurationCloudwatchLoggingOptionsParameters.
func (in *S3ConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *S3ConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(S3ConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigurationObservation) DeepCopyInto(out *S3ConfigurationObservation) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]S3ConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigurationObservation.
func (in *S3ConfigurationObservation) DeepCopy() *S3ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(S3ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConfigurationParameters) DeepCopyInto(out *S3ConfigurationParameters) {
	*out = *in
	if in.BucketArn != nil {
		in, out := &in.BucketArn, &out.BucketArn
		*out = new(string)
		**out = **in
	}
	if in.BucketArnRef != nil {
		in, out := &in.BucketArnRef, &out.BucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketArnSelector != nil {
		in, out := &in.BucketArnSelector, &out.BucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BufferInterval != nil {
		in, out := &in.BufferInterval, &out.BufferInterval
		*out = new(float64)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(float64)
		**out = **in
	}
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]S3ConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionFormat != nil {
		in, out := &in.CompressionFormat, &out.CompressionFormat
		*out = new(string)
		**out = **in
	}
	if in.ErrorOutputPrefix != nil {
		in, out := &in.ErrorOutputPrefix, &out.ErrorOutputPrefix
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConfigurationParameters.
func (in *S3ConfigurationParameters) DeepCopy() *S3ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(S3ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaConfigurationObservation) DeepCopyInto(out *SchemaConfigurationObservation) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaConfigurationObservation.
func (in *SchemaConfigurationObservation) DeepCopy() *SchemaConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaConfigurationParameters) DeepCopyInto(out *SchemaConfigurationParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionID != nil {
		in, out := &in.VersionID, &out.VersionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaConfigurationParameters.
func (in *SchemaConfigurationParameters) DeepCopy() *SchemaConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerObservation) DeepCopyInto(out *SerializerObservation) {
	*out = *in
	if in.OrcSerDe != nil {
		in, out := &in.OrcSerDe, &out.OrcSerDe
		*out = make([]OrcSerDeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParquetSerDe != nil {
		in, out := &in.ParquetSerDe, &out.ParquetSerDe
		*out = make([]ParquetSerDeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerObservation.
func (in *SerializerObservation) DeepCopy() *SerializerObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParameters) DeepCopyInto(out *SerializerParameters) {
	*out = *in
	if in.OrcSerDe != nil {
		in, out := &in.OrcSerDe, &out.OrcSerDe
		*out = make([]OrcSerDeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParquetSerDe != nil {
		in, out := &in.ParquetSerDe, &out.ParquetSerDe
		*out = make([]ParquetSerDeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParameters.
func (in *SerializerParameters) DeepCopy() *SerializerParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSideEncryptionObservation) DeepCopyInto(out *ServerSideEncryptionObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSideEncryptionObservation.
func (in *ServerSideEncryptionObservation) DeepCopy() *ServerSideEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(ServerSideEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSideEncryptionParameters) DeepCopyInto(out *ServerSideEncryptionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSideEncryptionParameters.
func (in *ServerSideEncryptionParameters) DeepCopy() *ServerSideEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(ServerSideEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationCloudwatchLoggingOptionsObservation) DeepCopyInto(out *SplunkConfigurationCloudwatchLoggingOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationCloudwatchLoggingOptionsObservation.
func (in *SplunkConfigurationCloudwatchLoggingOptionsObservation) DeepCopy() *SplunkConfigurationCloudwatchLoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationCloudwatchLoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationCloudwatchLoggingOptionsParameters) DeepCopyInto(out *SplunkConfigurationCloudwatchLoggingOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogStreamName != nil {
		in, out := &in.LogStreamName, &out.LogStreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationCloudwatchLoggingOptionsParameters.
func (in *SplunkConfigurationCloudwatchLoggingOptionsParameters) DeepCopy() *SplunkConfigurationCloudwatchLoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationCloudwatchLoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationObservation) DeepCopyInto(out *SplunkConfigurationObservation) {
	*out = *in
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]SplunkConfigurationCloudwatchLoggingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HecAcknowledgmentTimeout != nil {
		in, out := &in.HecAcknowledgmentTimeout, &out.HecAcknowledgmentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HecEndpoint != nil {
		in, out := &in.HecEndpoint, &out.HecEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HecEndpointType != nil {
		in, out := &in.HecEndpointType, &out.HecEndpointType
		*out = new(string)
		**out = **in
	}
	if in.HecToken != nil {
		in, out := &in.HecToken, &out.HecToken
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]SplunkConfigurationProcessingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationObservation.
func (in *SplunkConfigurationObservation) DeepCopy() *SplunkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationParameters) DeepCopyInto(out *SplunkConfigurationParameters) {
	*out = *in
	if in.CloudwatchLoggingOptions != nil {
		in, out := &in.CloudwatchLoggingOptions, &out.CloudwatchLoggingOptions
		*out = make([]SplunkConfigurationCloudwatchLoggingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HecAcknowledgmentTimeout != nil {
		in, out := &in.HecAcknowledgmentTimeout, &out.HecAcknowledgmentTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HecEndpoint != nil {
		in, out := &in.HecEndpoint, &out.HecEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HecEndpointType != nil {
		in, out := &in.HecEndpointType, &out.HecEndpointType
		*out = new(string)
		**out = **in
	}
	if in.HecToken != nil {
		in, out := &in.HecToken, &out.HecToken
		*out = new(string)
		**out = **in
	}
	if in.ProcessingConfiguration != nil {
		in, out := &in.ProcessingConfiguration, &out.ProcessingConfiguration
		*out = make([]SplunkConfigurationProcessingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryDuration != nil {
		in, out := &in.RetryDuration, &out.RetryDuration
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupMode != nil {
		in, out := &in.S3BackupMode, &out.S3BackupMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationParameters.
func (in *SplunkConfigurationParameters) DeepCopy() *SplunkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationObservation) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]SplunkConfigurationProcessingConfigurationProcessorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationObservation.
func (in *SplunkConfigurationProcessingConfigurationObservation) DeepCopy() *SplunkConfigurationProcessingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationParameters) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]SplunkConfigurationProcessingConfigurationProcessorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationParameters.
func (in *SplunkConfigurationProcessingConfigurationParameters) DeepCopy() *SplunkConfigurationProcessingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationProcessorsObservation) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationProcessorsObservation) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]SplunkConfigurationProcessingConfigurationProcessorsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationProcessorsObservation.
func (in *SplunkConfigurationProcessingConfigurationProcessorsObservation) DeepCopy() *SplunkConfigurationProcessingConfigurationProcessorsObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationProcessorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParameters) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationProcessorsParameters) {
	*out = *in
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]SplunkConfigurationProcessingConfigurationProcessorsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationProcessorsParameters.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParameters) DeepCopy() *SplunkConfigurationProcessingConfigurationProcessorsParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationProcessorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationProcessorsParametersObservation) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationProcessorsParametersObservation.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParametersObservation) DeepCopy() *SplunkConfigurationProcessingConfigurationProcessorsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationProcessorsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopyInto(out *SplunkConfigurationProcessingConfigurationProcessorsParametersParameters) {
	*out = *in
	if in.ParameterName != nil {
		in, out := &in.ParameterName, &out.ParameterName
		*out = new(string)
		**out = **in
	}
	if in.ParameterValue != nil {
		in, out := &in.ParameterValue, &out.ParameterValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigurationProcessingConfigurationProcessorsParametersParameters.
func (in *SplunkConfigurationProcessingConfigurationProcessorsParametersParameters) DeepCopy() *SplunkConfigurationProcessingConfigurationProcessorsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigurationProcessingConfigurationProcessorsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigObservation) DeepCopyInto(out *VPCConfigObservation) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigObservation.
func (in *VPCConfigObservation) DeepCopy() *VPCConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VPCConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigParameters) DeepCopyInto(out *VPCConfigParameters) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigParameters.
func (in *VPCConfigParameters) DeepCopy() *VPCConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigParameters)
	in.DeepCopyInto(out)
	return out
}

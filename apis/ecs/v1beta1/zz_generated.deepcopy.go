//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefault) DeepCopyInto(out *AccountSettingDefault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefault.
func (in *AccountSettingDefault) DeepCopy() *AccountSettingDefault {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountSettingDefault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultInitParameters) DeepCopyInto(out *AccountSettingDefaultInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultInitParameters.
func (in *AccountSettingDefaultInitParameters) DeepCopy() *AccountSettingDefaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultList) DeepCopyInto(out *AccountSettingDefaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccountSettingDefault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultList.
func (in *AccountSettingDefaultList) DeepCopy() *AccountSettingDefaultList {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountSettingDefaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultObservation) DeepCopyInto(out *AccountSettingDefaultObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultObservation.
func (in *AccountSettingDefaultObservation) DeepCopy() *AccountSettingDefaultObservation {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultParameters) DeepCopyInto(out *AccountSettingDefaultParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultParameters.
func (in *AccountSettingDefaultParameters) DeepCopy() *AccountSettingDefaultParameters {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultSpec) DeepCopyInto(out *AccountSettingDefaultSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultSpec.
func (in *AccountSettingDefaultSpec) DeepCopy() *AccountSettingDefaultSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSettingDefaultStatus) DeepCopyInto(out *AccountSettingDefaultStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSettingDefaultStatus.
func (in *AccountSettingDefaultStatus) DeepCopy() *AccountSettingDefaultStatus {
	if in == nil {
		return nil
	}
	out := new(AccountSettingDefaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmsInitParameters) DeepCopyInto(out *AlarmsInitParameters) {
	*out = *in
	if in.AlarmNames != nil {
		in, out := &in.AlarmNames, &out.AlarmNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmsInitParameters.
func (in *AlarmsInitParameters) DeepCopy() *AlarmsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlarmsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmsObservation) DeepCopyInto(out *AlarmsObservation) {
	*out = *in
	if in.AlarmNames != nil {
		in, out := &in.AlarmNames, &out.AlarmNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmsObservation.
func (in *AlarmsObservation) DeepCopy() *AlarmsObservation {
	if in == nil {
		return nil
	}
	out := new(AlarmsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlarmsParameters) DeepCopyInto(out *AlarmsParameters) {
	*out = *in
	if in.AlarmNames != nil {
		in, out := &in.AlarmNames, &out.AlarmNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlarmsParameters.
func (in *AlarmsParameters) DeepCopy() *AlarmsParameters {
	if in == nil {
		return nil
	}
	out := new(AlarmsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationConfigInitParameters) DeepCopyInto(out *AuthorizationConfigInitParameters) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationConfigInitParameters.
func (in *AuthorizationConfigInitParameters) DeepCopy() *AuthorizationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationConfigObservation) DeepCopyInto(out *AuthorizationConfigObservation) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationConfigObservation.
func (in *AuthorizationConfigObservation) DeepCopy() *AuthorizationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationConfigParameters) DeepCopyInto(out *AuthorizationConfigParameters) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
	if in.IAM != nil {
		in, out := &in.IAM, &out.IAM
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationConfigParameters.
func (in *AuthorizationConfigParameters) DeepCopy() *AuthorizationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingGroupProviderInitParameters) DeepCopyInto(out *AutoScalingGroupProviderInitParameters) {
	*out = *in
	if in.AutoScalingGroupArn != nil {
		in, out := &in.AutoScalingGroupArn, &out.AutoScalingGroupArn
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingGroupArnRef != nil {
		in, out := &in.AutoScalingGroupArnRef, &out.AutoScalingGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalingGroupArnSelector != nil {
		in, out := &in.AutoScalingGroupArnSelector, &out.AutoScalingGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedScaling != nil {
		in, out := &in.ManagedScaling, &out.ManagedScaling
		*out = make([]ManagedScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedTerminationProtection != nil {
		in, out := &in.ManagedTerminationProtection, &out.ManagedTerminationProtection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingGroupProviderInitParameters.
func (in *AutoScalingGroupProviderInitParameters) DeepCopy() *AutoScalingGroupProviderInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingGroupProviderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingGroupProviderObservation) DeepCopyInto(out *AutoScalingGroupProviderObservation) {
	*out = *in
	if in.AutoScalingGroupArn != nil {
		in, out := &in.AutoScalingGroupArn, &out.AutoScalingGroupArn
		*out = new(string)
		**out = **in
	}
	if in.ManagedScaling != nil {
		in, out := &in.ManagedScaling, &out.ManagedScaling
		*out = make([]ManagedScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedTerminationProtection != nil {
		in, out := &in.ManagedTerminationProtection, &out.ManagedTerminationProtection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingGroupProviderObservation.
func (in *AutoScalingGroupProviderObservation) DeepCopy() *AutoScalingGroupProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AutoScalingGroupProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingGroupProviderParameters) DeepCopyInto(out *AutoScalingGroupProviderParameters) {
	*out = *in
	if in.AutoScalingGroupArn != nil {
		in, out := &in.AutoScalingGroupArn, &out.AutoScalingGroupArn
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingGroupArnRef != nil {
		in, out := &in.AutoScalingGroupArnRef, &out.AutoScalingGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoScalingGroupArnSelector != nil {
		in, out := &in.AutoScalingGroupArnSelector, &out.AutoScalingGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedScaling != nil {
		in, out := &in.ManagedScaling, &out.ManagedScaling
		*out = make([]ManagedScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedTerminationProtection != nil {
		in, out := &in.ManagedTerminationProtection, &out.ManagedTerminationProtection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingGroupProviderParameters.
func (in *AutoScalingGroupProviderParameters) DeepCopy() *AutoScalingGroupProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AutoScalingGroupProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProvider) DeepCopyInto(out *CapacityProvider) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProvider.
func (in *CapacityProvider) DeepCopy() *CapacityProvider {
	if in == nil {
		return nil
	}
	out := new(CapacityProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityProvider) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderInitParameters) DeepCopyInto(out *CapacityProviderInitParameters) {
	*out = *in
	if in.AutoScalingGroupProvider != nil {
		in, out := &in.AutoScalingGroupProvider, &out.AutoScalingGroupProvider
		*out = make([]AutoScalingGroupProviderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderInitParameters.
func (in *CapacityProviderInitParameters) DeepCopy() *CapacityProviderInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderList) DeepCopyInto(out *CapacityProviderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CapacityProvider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderList.
func (in *CapacityProviderList) DeepCopy() *CapacityProviderList {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityProviderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderObservation) DeepCopyInto(out *CapacityProviderObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingGroupProvider != nil {
		in, out := &in.AutoScalingGroupProvider, &out.AutoScalingGroupProvider
		*out = make([]AutoScalingGroupProviderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderObservation.
func (in *CapacityProviderObservation) DeepCopy() *CapacityProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderParameters) DeepCopyInto(out *CapacityProviderParameters) {
	*out = *in
	if in.AutoScalingGroupProvider != nil {
		in, out := &in.AutoScalingGroupProvider, &out.AutoScalingGroupProvider
		*out = make([]AutoScalingGroupProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderParameters.
func (in *CapacityProviderParameters) DeepCopy() *CapacityProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderSpec) DeepCopyInto(out *CapacityProviderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderSpec.
func (in *CapacityProviderSpec) DeepCopy() *CapacityProviderSpec {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStatus) DeepCopyInto(out *CapacityProviderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStatus.
func (in *CapacityProviderStatus) DeepCopy() *CapacityProviderStatus {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyInitParameters) DeepCopyInto(out *CapacityProviderStrategyInitParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyInitParameters.
func (in *CapacityProviderStrategyInitParameters) DeepCopy() *CapacityProviderStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyObservation) DeepCopyInto(out *CapacityProviderStrategyObservation) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyObservation.
func (in *CapacityProviderStrategyObservation) DeepCopy() *CapacityProviderStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyParameters) DeepCopyInto(out *CapacityProviderStrategyParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyParameters.
func (in *CapacityProviderStrategyParameters) DeepCopy() *CapacityProviderStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientAliasInitParameters) DeepCopyInto(out *ClientAliasInitParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientAliasInitParameters.
func (in *ClientAliasInitParameters) DeepCopy() *ClientAliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientAliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientAliasObservation) DeepCopyInto(out *ClientAliasObservation) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientAliasObservation.
func (in *ClientAliasObservation) DeepCopy() *ClientAliasObservation {
	if in == nil {
		return nil
	}
	out := new(ClientAliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientAliasParameters) DeepCopyInto(out *ClientAliasParameters) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientAliasParameters.
func (in *ClientAliasParameters) DeepCopy() *ClientAliasParameters {
	if in == nil {
		return nil
	}
	out := new(ClientAliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProviders) DeepCopyInto(out *ClusterCapacityProviders) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProviders.
func (in *ClusterCapacityProviders) DeepCopy() *ClusterCapacityProviders {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProviders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterCapacityProviders) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersInitParameters) DeepCopyInto(out *ClusterCapacityProvidersInitParameters) {
	*out = *in
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterNameRef != nil {
		in, out := &in.ClusterNameRef, &out.ClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNameSelector != nil {
		in, out := &in.ClusterNameSelector, &out.ClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]DefaultCapacityProviderStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersInitParameters.
func (in *ClusterCapacityProvidersInitParameters) DeepCopy() *ClusterCapacityProvidersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersList) DeepCopyInto(out *ClusterCapacityProvidersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterCapacityProviders, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersList.
func (in *ClusterCapacityProvidersList) DeepCopy() *ClusterCapacityProvidersList {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterCapacityProvidersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersObservation) DeepCopyInto(out *ClusterCapacityProvidersObservation) {
	*out = *in
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]DefaultCapacityProviderStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersObservation.
func (in *ClusterCapacityProvidersObservation) DeepCopy() *ClusterCapacityProvidersObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersParameters) DeepCopyInto(out *ClusterCapacityProvidersParameters) {
	*out = *in
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterNameRef != nil {
		in, out := &in.ClusterNameRef, &out.ClusterNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterNameSelector != nil {
		in, out := &in.ClusterNameSelector, &out.ClusterNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]DefaultCapacityProviderStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersParameters.
func (in *ClusterCapacityProvidersParameters) DeepCopy() *ClusterCapacityProvidersParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersSpec) DeepCopyInto(out *ClusterCapacityProvidersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersSpec.
func (in *ClusterCapacityProvidersSpec) DeepCopy() *ClusterCapacityProvidersSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterCapacityProvidersStatus) DeepCopyInto(out *ClusterCapacityProvidersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterCapacityProvidersStatus.
func (in *ClusterCapacityProvidersStatus) DeepCopy() *ClusterCapacityProvidersStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterCapacityProvidersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceConnectDefaults != nil {
		in, out := &in.ServiceConnectDefaults, &out.ServiceConnectDefaults
		*out = make([]ServiceConnectDefaultsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectDefaults != nil {
		in, out := &in.ServiceConnectDefaults, &out.ServiceConnectDefaults
		*out = make([]ServiceConnectDefaultsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectDefaults != nil {
		in, out := &in.ServiceConnectDefaults, &out.ServiceConnectDefaults
		*out = make([]ServiceConnectDefaultsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.ExecuteCommandConfiguration != nil {
		in, out := &in.ExecuteCommandConfiguration, &out.ExecuteCommandConfiguration
		*out = make([]ExecuteCommandConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.ExecuteCommandConfiguration != nil {
		in, out := &in.ExecuteCommandConfiguration, &out.ExecuteCommandConfiguration
		*out = make([]ExecuteCommandConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.ExecuteCommandConfiguration != nil {
		in, out := &in.ExecuteCommandConfiguration, &out.ExecuteCommandConfiguration
		*out = make([]ExecuteCommandConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultCapacityProviderStrategyInitParameters) DeepCopyInto(out *DefaultCapacityProviderStrategyInitParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultCapacityProviderStrategyInitParameters.
func (in *DefaultCapacityProviderStrategyInitParameters) DeepCopy() *DefaultCapacityProviderStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultCapacityProviderStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultCapacityProviderStrategyObservation) DeepCopyInto(out *DefaultCapacityProviderStrategyObservation) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultCapacityProviderStrategyObservation.
func (in *DefaultCapacityProviderStrategyObservation) DeepCopy() *DefaultCapacityProviderStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultCapacityProviderStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultCapacityProviderStrategyParameters) DeepCopyInto(out *DefaultCapacityProviderStrategyParameters) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(float64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultCapacityProviderStrategyParameters.
func (in *DefaultCapacityProviderStrategyParameters) DeepCopy() *DefaultCapacityProviderStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultCapacityProviderStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCircuitBreakerInitParameters) DeepCopyInto(out *DeploymentCircuitBreakerInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCircuitBreakerInitParameters.
func (in *DeploymentCircuitBreakerInitParameters) DeepCopy() *DeploymentCircuitBreakerInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentCircuitBreakerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCircuitBreakerObservation) DeepCopyInto(out *DeploymentCircuitBreakerObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCircuitBreakerObservation.
func (in *DeploymentCircuitBreakerObservation) DeepCopy() *DeploymentCircuitBreakerObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentCircuitBreakerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCircuitBreakerParameters) DeepCopyInto(out *DeploymentCircuitBreakerParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCircuitBreakerParameters.
func (in *DeploymentCircuitBreakerParameters) DeepCopy() *DeploymentCircuitBreakerParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentCircuitBreakerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentControllerInitParameters) DeepCopyInto(out *DeploymentControllerInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentControllerInitParameters.
func (in *DeploymentControllerInitParameters) DeepCopy() *DeploymentControllerInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentControllerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentControllerObservation) DeepCopyInto(out *DeploymentControllerObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentControllerObservation.
func (in *DeploymentControllerObservation) DeepCopy() *DeploymentControllerObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentControllerParameters) DeepCopyInto(out *DeploymentControllerParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentControllerParameters.
func (in *DeploymentControllerParameters) DeepCopy() *DeploymentControllerParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerVolumeConfigurationInitParameters) DeepCopyInto(out *DockerVolumeConfigurationInitParameters) {
	*out = *in
	if in.Autoprovision != nil {
		in, out := &in.Autoprovision, &out.Autoprovision
		*out = new(bool)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.DriverOpts != nil {
		in, out := &in.DriverOpts, &out.DriverOpts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerVolumeConfigurationInitParameters.
func (in *DockerVolumeConfigurationInitParameters) DeepCopy() *DockerVolumeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DockerVolumeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerVolumeConfigurationObservation) DeepCopyInto(out *DockerVolumeConfigurationObservation) {
	*out = *in
	if in.Autoprovision != nil {
		in, out := &in.Autoprovision, &out.Autoprovision
		*out = new(bool)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.DriverOpts != nil {
		in, out := &in.DriverOpts, &out.DriverOpts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerVolumeConfigurationObservation.
func (in *DockerVolumeConfigurationObservation) DeepCopy() *DockerVolumeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DockerVolumeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerVolumeConfigurationParameters) DeepCopyInto(out *DockerVolumeConfigurationParameters) {
	*out = *in
	if in.Autoprovision != nil {
		in, out := &in.Autoprovision, &out.Autoprovision
		*out = new(bool)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.DriverOpts != nil {
		in, out := &in.DriverOpts, &out.DriverOpts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerVolumeConfigurationParameters.
func (in *DockerVolumeConfigurationParameters) DeepCopy() *DockerVolumeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DockerVolumeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfigurationInitParameters) DeepCopyInto(out *EFSVolumeConfigurationInitParameters) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]AuthorizationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfigurationInitParameters.
func (in *EFSVolumeConfigurationInitParameters) DeepCopy() *EFSVolumeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfigurationObservation) DeepCopyInto(out *EFSVolumeConfigurationObservation) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]AuthorizationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfigurationObservation.
func (in *EFSVolumeConfigurationObservation) DeepCopy() *EFSVolumeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfigurationParameters) DeepCopyInto(out *EFSVolumeConfigurationParameters) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]AuthorizationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryption != nil {
		in, out := &in.TransitEncryption, &out.TransitEncryption
		*out = new(string)
		**out = **in
	}
	if in.TransitEncryptionPort != nil {
		in, out := &in.TransitEncryptionPort, &out.TransitEncryptionPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfigurationParameters.
func (in *EFSVolumeConfigurationParameters) DeepCopy() *EFSVolumeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageInitParameters) DeepCopyInto(out *EphemeralStorageInitParameters) {
	*out = *in
	if in.SizeInGib != nil {
		in, out := &in.SizeInGib, &out.SizeInGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageInitParameters.
func (in *EphemeralStorageInitParameters) DeepCopy() *EphemeralStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageObservation) DeepCopyInto(out *EphemeralStorageObservation) {
	*out = *in
	if in.SizeInGib != nil {
		in, out := &in.SizeInGib, &out.SizeInGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageObservation.
func (in *EphemeralStorageObservation) DeepCopy() *EphemeralStorageObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageParameters) DeepCopyInto(out *EphemeralStorageParameters) {
	*out = *in
	if in.SizeInGib != nil {
		in, out := &in.SizeInGib, &out.SizeInGib
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageParameters.
func (in *EphemeralStorageParameters) DeepCopy() *EphemeralStorageParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandConfigurationInitParameters) DeepCopyInto(out *ExecuteCommandConfigurationInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]LogConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandConfigurationInitParameters.
func (in *ExecuteCommandConfigurationInitParameters) DeepCopy() *ExecuteCommandConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandConfigurationObservation) DeepCopyInto(out *ExecuteCommandConfigurationObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]LogConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandConfigurationObservation.
func (in *ExecuteCommandConfigurationObservation) DeepCopy() *ExecuteCommandConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandConfigurationParameters) DeepCopyInto(out *ExecuteCommandConfigurationParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]LogConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandConfigurationParameters.
func (in *ExecuteCommandConfigurationParameters) DeepCopy() *ExecuteCommandConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters) DeepCopy() *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation) DeepCopy() *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters.
func (in *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters) DeepCopy() *FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationInitParameters) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationInitParameters) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]FSXWindowsFileServerVolumeConfigurationAuthorizationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationInitParameters.
func (in *FSXWindowsFileServerVolumeConfigurationInitParameters) DeepCopy() *FSXWindowsFileServerVolumeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationObservation) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationObservation) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]FSXWindowsFileServerVolumeConfigurationAuthorizationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationObservation.
func (in *FSXWindowsFileServerVolumeConfigurationObservation) DeepCopy() *FSXWindowsFileServerVolumeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSXWindowsFileServerVolumeConfigurationParameters) DeepCopyInto(out *FSXWindowsFileServerVolumeConfigurationParameters) {
	*out = *in
	if in.AuthorizationConfig != nil {
		in, out := &in.AuthorizationConfig, &out.AuthorizationConfig
		*out = make([]FSXWindowsFileServerVolumeConfigurationAuthorizationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSXWindowsFileServerVolumeConfigurationParameters.
func (in *FSXWindowsFileServerVolumeConfigurationParameters) DeepCopy() *FSXWindowsFileServerVolumeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(FSXWindowsFileServerVolumeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAcceleratorInitParameters) DeepCopyInto(out *InferenceAcceleratorInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAcceleratorInitParameters.
func (in *InferenceAcceleratorInitParameters) DeepCopy() *InferenceAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAcceleratorObservation) DeepCopyInto(out *InferenceAcceleratorObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAcceleratorObservation.
func (in *InferenceAcceleratorObservation) DeepCopy() *InferenceAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(InferenceAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAcceleratorParameters) DeepCopyInto(out *InferenceAcceleratorParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAcceleratorParameters.
func (in *InferenceAcceleratorParameters) DeepCopy() *InferenceAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(InferenceAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerInitParameters) DeepCopyInto(out *LoadBalancerInitParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.ELBName != nil {
		in, out := &in.ELBName, &out.ELBName
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArnRef != nil {
		in, out := &in.TargetGroupArnRef, &out.TargetGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupArnSelector != nil {
		in, out := &in.TargetGroupArnSelector, &out.TargetGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerInitParameters.
func (in *LoadBalancerInitParameters) DeepCopy() *LoadBalancerInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.ELBName != nil {
		in, out := &in.ELBName, &out.ELBName
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.ELBName != nil {
		in, out := &in.ELBName, &out.ELBName
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArnRef != nil {
		in, out := &in.TargetGroupArnRef, &out.TargetGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupArnSelector != nil {
		in, out := &in.TargetGroupArnSelector, &out.TargetGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigurationInitParameters) DeepCopyInto(out *LogConfigurationInitParameters) {
	*out = *in
	if in.CloudWatchEncryptionEnabled != nil {
		in, out := &in.CloudWatchEncryptionEnabled, &out.CloudWatchEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CloudWatchLogGroupName != nil {
		in, out := &in.CloudWatchLogGroupName, &out.CloudWatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketEncryptionEnabled != nil {
		in, out := &in.S3BucketEncryptionEnabled, &out.S3BucketEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigurationInitParameters.
func (in *LogConfigurationInitParameters) DeepCopy() *LogConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigurationObservation) DeepCopyInto(out *LogConfigurationObservation) {
	*out = *in
	if in.CloudWatchEncryptionEnabled != nil {
		in, out := &in.CloudWatchEncryptionEnabled, &out.CloudWatchEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CloudWatchLogGroupName != nil {
		in, out := &in.CloudWatchLogGroupName, &out.CloudWatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketEncryptionEnabled != nil {
		in, out := &in.S3BucketEncryptionEnabled, &out.S3BucketEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigurationObservation.
func (in *LogConfigurationObservation) DeepCopy() *LogConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LogConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigurationParameters) DeepCopyInto(out *LogConfigurationParameters) {
	*out = *in
	if in.CloudWatchEncryptionEnabled != nil {
		in, out := &in.CloudWatchEncryptionEnabled, &out.CloudWatchEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CloudWatchLogGroupName != nil {
		in, out := &in.CloudWatchLogGroupName, &out.CloudWatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketEncryptionEnabled != nil {
		in, out := &in.S3BucketEncryptionEnabled, &out.S3BucketEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigurationParameters.
func (in *LogConfigurationParameters) DeepCopy() *LogConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LogConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedScalingInitParameters) DeepCopyInto(out *ManagedScalingInitParameters) {
	*out = *in
	if in.InstanceWarmupPeriod != nil {
		in, out := &in.InstanceWarmupPeriod, &out.InstanceWarmupPeriod
		*out = new(float64)
		**out = **in
	}
	if in.MaximumScalingStepSize != nil {
		in, out := &in.MaximumScalingStepSize, &out.MaximumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.MinimumScalingStepSize != nil {
		in, out := &in.MinimumScalingStepSize, &out.MinimumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedScalingInitParameters.
func (in *ManagedScalingInitParameters) DeepCopy() *ManagedScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedScalingObservation) DeepCopyInto(out *ManagedScalingObservation) {
	*out = *in
	if in.InstanceWarmupPeriod != nil {
		in, out := &in.InstanceWarmupPeriod, &out.InstanceWarmupPeriod
		*out = new(float64)
		**out = **in
	}
	if in.MaximumScalingStepSize != nil {
		in, out := &in.MaximumScalingStepSize, &out.MaximumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.MinimumScalingStepSize != nil {
		in, out := &in.MinimumScalingStepSize, &out.MinimumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedScalingObservation.
func (in *ManagedScalingObservation) DeepCopy() *ManagedScalingObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedScalingParameters) DeepCopyInto(out *ManagedScalingParameters) {
	*out = *in
	if in.InstanceWarmupPeriod != nil {
		in, out := &in.InstanceWarmupPeriod, &out.InstanceWarmupPeriod
		*out = new(float64)
		**out = **in
	}
	if in.MaximumScalingStepSize != nil {
		in, out := &in.MaximumScalingStepSize, &out.MaximumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.MinimumScalingStepSize != nil {
		in, out := &in.MinimumScalingStepSize, &out.MinimumScalingStepSize
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedScalingParameters.
func (in *ManagedScalingParameters) DeepCopy() *ManagedScalingParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationInitParameters) DeepCopyInto(out *NetworkConfigurationInitParameters) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetRefs != nil {
		in, out := &in.SubnetRefs, &out.SubnetRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetSelector != nil {
		in, out := &in.SubnetSelector, &out.SubnetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationInitParameters.
func (in *NetworkConfigurationInitParameters) DeepCopy() *NetworkConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationObservation) DeepCopyInto(out *NetworkConfigurationObservation) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationObservation.
func (in *NetworkConfigurationObservation) DeepCopy() *NetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationParameters) DeepCopyInto(out *NetworkConfigurationParameters) {
	*out = *in
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetRefs != nil {
		in, out := &in.SubnetRefs, &out.SubnetRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetSelector != nil {
		in, out := &in.SubnetSelector, &out.SubnetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationParameters.
func (in *NetworkConfigurationParameters) DeepCopy() *NetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyInitParameters) DeepCopyInto(out *OrderedPlacementStrategyInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyInitParameters.
func (in *OrderedPlacementStrategyInitParameters) DeepCopy() *OrderedPlacementStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyObservation) DeepCopyInto(out *OrderedPlacementStrategyObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyObservation.
func (in *OrderedPlacementStrategyObservation) DeepCopy() *OrderedPlacementStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrderedPlacementStrategyParameters) DeepCopyInto(out *OrderedPlacementStrategyParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrderedPlacementStrategyParameters.
func (in *OrderedPlacementStrategyParameters) DeepCopy() *OrderedPlacementStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(OrderedPlacementStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintsInitParameters) DeepCopyInto(out *PlacementConstraintsInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintsInitParameters.
func (in *PlacementConstraintsInitParameters) DeepCopy() *PlacementConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintsObservation) DeepCopyInto(out *PlacementConstraintsObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintsObservation.
func (in *PlacementConstraintsObservation) DeepCopy() *PlacementConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraintsParameters) DeepCopyInto(out *PlacementConstraintsParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraintsParameters.
func (in *PlacementConstraintsParameters) DeepCopy() *PlacementConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigurationInitParameters) DeepCopyInto(out *ProxyConfigurationInitParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigurationInitParameters.
func (in *ProxyConfigurationInitParameters) DeepCopy() *ProxyConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigurationObservation) DeepCopyInto(out *ProxyConfigurationObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigurationObservation.
func (in *ProxyConfigurationObservation) DeepCopy() *ProxyConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfigurationParameters) DeepCopyInto(out *ProxyConfigurationParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfigurationParameters.
func (in *ProxyConfigurationParameters) DeepCopy() *ProxyConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ProxyConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimePlatformInitParameters) DeepCopyInto(out *RuntimePlatformInitParameters) {
	*out = *in
	if in.CPUArchitecture != nil {
		in, out := &in.CPUArchitecture, &out.CPUArchitecture
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemFamily != nil {
		in, out := &in.OperatingSystemFamily, &out.OperatingSystemFamily
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimePlatformInitParameters.
func (in *RuntimePlatformInitParameters) DeepCopy() *RuntimePlatformInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimePlatformInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimePlatformObservation) DeepCopyInto(out *RuntimePlatformObservation) {
	*out = *in
	if in.CPUArchitecture != nil {
		in, out := &in.CPUArchitecture, &out.CPUArchitecture
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemFamily != nil {
		in, out := &in.OperatingSystemFamily, &out.OperatingSystemFamily
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimePlatformObservation.
func (in *RuntimePlatformObservation) DeepCopy() *RuntimePlatformObservation {
	if in == nil {
		return nil
	}
	out := new(RuntimePlatformObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimePlatformParameters) DeepCopyInto(out *RuntimePlatformParameters) {
	*out = *in
	if in.CPUArchitecture != nil {
		in, out := &in.CPUArchitecture, &out.CPUArchitecture
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemFamily != nil {
		in, out := &in.OperatingSystemFamily, &out.OperatingSystemFamily
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimePlatformParameters.
func (in *RuntimePlatformParameters) DeepCopy() *RuntimePlatformParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimePlatformParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretOptionInitParameters) DeepCopyInto(out *SecretOptionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretOptionInitParameters.
func (in *SecretOptionInitParameters) DeepCopy() *SecretOptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretOptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretOptionObservation) DeepCopyInto(out *SecretOptionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretOptionObservation.
func (in *SecretOptionObservation) DeepCopy() *SecretOptionObservation {
	if in == nil {
		return nil
	}
	out := new(SecretOptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretOptionParameters) DeepCopyInto(out *SecretOptionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretOptionParameters.
func (in *SecretOptionParameters) DeepCopy() *SecretOptionParameters {
	if in == nil {
		return nil
	}
	out := new(SecretOptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Service) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationInitParameters) DeepCopyInto(out *ServiceConnectConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]ServiceConnectConfigurationLogConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = make([]ServiceConnectConfigurationServiceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationInitParameters.
func (in *ServiceConnectConfigurationInitParameters) DeepCopy() *ServiceConnectConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationLogConfigurationInitParameters) DeepCopyInto(out *ServiceConnectConfigurationLogConfigurationInitParameters) {
	*out = *in
	if in.LogDriver != nil {
		in, out := &in.LogDriver, &out.LogDriver
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretOption != nil {
		in, out := &in.SecretOption, &out.SecretOption
		*out = make([]SecretOptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationLogConfigurationInitParameters.
func (in *ServiceConnectConfigurationLogConfigurationInitParameters) DeepCopy() *ServiceConnectConfigurationLogConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationLogConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationLogConfigurationObservation) DeepCopyInto(out *ServiceConnectConfigurationLogConfigurationObservation) {
	*out = *in
	if in.LogDriver != nil {
		in, out := &in.LogDriver, &out.LogDriver
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretOption != nil {
		in, out := &in.SecretOption, &out.SecretOption
		*out = make([]SecretOptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationLogConfigurationObservation.
func (in *ServiceConnectConfigurationLogConfigurationObservation) DeepCopy() *ServiceConnectConfigurationLogConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationLogConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationLogConfigurationParameters) DeepCopyInto(out *ServiceConnectConfigurationLogConfigurationParameters) {
	*out = *in
	if in.LogDriver != nil {
		in, out := &in.LogDriver, &out.LogDriver
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SecretOption != nil {
		in, out := &in.SecretOption, &out.SecretOption
		*out = make([]SecretOptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationLogConfigurationParameters.
func (in *ServiceConnectConfigurationLogConfigurationParameters) DeepCopy() *ServiceConnectConfigurationLogConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationLogConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationObservation) DeepCopyInto(out *ServiceConnectConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]ServiceConnectConfigurationLogConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = make([]ServiceConnectConfigurationServiceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationObservation.
func (in *ServiceConnectConfigurationObservation) DeepCopy() *ServiceConnectConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationParameters) DeepCopyInto(out *ServiceConnectConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = make([]ServiceConnectConfigurationLogConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = make([]ServiceConnectConfigurationServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationParameters.
func (in *ServiceConnectConfigurationParameters) DeepCopy() *ServiceConnectConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationServiceInitParameters) DeepCopyInto(out *ServiceConnectConfigurationServiceInitParameters) {
	*out = *in
	if in.ClientAlias != nil {
		in, out := &in.ClientAlias, &out.ClientAlias
		*out = make([]ClientAliasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiscoveryName != nil {
		in, out := &in.DiscoveryName, &out.DiscoveryName
		*out = new(string)
		**out = **in
	}
	if in.IngressPortOverride != nil {
		in, out := &in.IngressPortOverride, &out.IngressPortOverride
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationServiceInitParameters.
func (in *ServiceConnectConfigurationServiceInitParameters) DeepCopy() *ServiceConnectConfigurationServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationServiceObservation) DeepCopyInto(out *ServiceConnectConfigurationServiceObservation) {
	*out = *in
	if in.ClientAlias != nil {
		in, out := &in.ClientAlias, &out.ClientAlias
		*out = make([]ClientAliasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiscoveryName != nil {
		in, out := &in.DiscoveryName, &out.DiscoveryName
		*out = new(string)
		**out = **in
	}
	if in.IngressPortOverride != nil {
		in, out := &in.IngressPortOverride, &out.IngressPortOverride
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationServiceObservation.
func (in *ServiceConnectConfigurationServiceObservation) DeepCopy() *ServiceConnectConfigurationServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfigurationServiceParameters) DeepCopyInto(out *ServiceConnectConfigurationServiceParameters) {
	*out = *in
	if in.ClientAlias != nil {
		in, out := &in.ClientAlias, &out.ClientAlias
		*out = make([]ClientAliasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiscoveryName != nil {
		in, out := &in.DiscoveryName, &out.DiscoveryName
		*out = new(string)
		**out = **in
	}
	if in.IngressPortOverride != nil {
		in, out := &in.IngressPortOverride, &out.IngressPortOverride
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfigurationServiceParameters.
func (in *ServiceConnectConfigurationServiceParameters) DeepCopy() *ServiceConnectConfigurationServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfigurationServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectDefaultsInitParameters) DeepCopyInto(out *ServiceConnectDefaultsInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectDefaultsInitParameters.
func (in *ServiceConnectDefaultsInitParameters) DeepCopy() *ServiceConnectDefaultsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectDefaultsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectDefaultsObservation) DeepCopyInto(out *ServiceConnectDefaultsObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectDefaultsObservation.
func (in *ServiceConnectDefaultsObservation) DeepCopy() *ServiceConnectDefaultsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectDefaultsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectDefaultsParameters) DeepCopyInto(out *ServiceConnectDefaultsParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectDefaultsParameters.
func (in *ServiceConnectDefaultsParameters) DeepCopy() *ServiceConnectDefaultsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectDefaultsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInitParameters) DeepCopyInto(out *ServiceInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]AlarmsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentCircuitBreaker != nil {
		in, out := &in.DeploymentCircuitBreaker, &out.DeploymentCircuitBreaker
		*out = make([]DeploymentCircuitBreakerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentController != nil {
		in, out := &in.DeploymentController, &out.DeploymentController
		*out = make([]DeploymentControllerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentMaximumPercent != nil {
		in, out := &in.DeploymentMaximumPercent, &out.DeploymentMaximumPercent
		*out = new(float64)
		**out = **in
	}
	if in.DeploymentMinimumHealthyPercent != nil {
		in, out := &in.DeploymentMinimumHealthyPercent, &out.DeploymentMinimumHealthyPercent
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(float64)
		**out = **in
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.ForceNewDeployment != nil {
		in, out := &in.ForceNewDeployment, &out.ForceNewDeployment
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriodSeconds != nil {
		in, out := &in.HealthCheckGracePeriodSeconds, &out.HealthCheckGracePeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleRef != nil {
		in, out := &in.IAMRoleRef, &out.IAMRoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleSelector != nil {
		in, out := &in.IAMRoleSelector, &out.IAMRoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]PlacementConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.SchedulingStrategy != nil {
		in, out := &in.SchedulingStrategy, &out.SchedulingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectConfiguration != nil {
		in, out := &in.ServiceConnectConfiguration, &out.ServiceConnectConfiguration
		*out = make([]ServiceConnectConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]ServiceRegistriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionRef != nil {
		in, out := &in.TaskDefinitionRef, &out.TaskDefinitionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskDefinitionSelector != nil {
		in, out := &in.TaskDefinitionSelector, &out.TaskDefinitionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForSteadyState != nil {
		in, out := &in.WaitForSteadyState, &out.WaitForSteadyState
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInitParameters.
func (in *ServiceInitParameters) DeepCopy() *ServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceList) DeepCopyInto(out *ServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Service, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceList.
func (in *ServiceList) DeepCopy() *ServiceList {
	if in == nil {
		return nil
	}
	out := new(ServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceObservation) DeepCopyInto(out *ServiceObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]AlarmsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.DeploymentCircuitBreaker != nil {
		in, out := &in.DeploymentCircuitBreaker, &out.DeploymentCircuitBreaker
		*out = make([]DeploymentCircuitBreakerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentController != nil {
		in, out := &in.DeploymentController, &out.DeploymentController
		*out = make([]DeploymentControllerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentMaximumPercent != nil {
		in, out := &in.DeploymentMaximumPercent, &out.DeploymentMaximumPercent
		*out = new(float64)
		**out = **in
	}
	if in.DeploymentMinimumHealthyPercent != nil {
		in, out := &in.DeploymentMinimumHealthyPercent, &out.DeploymentMinimumHealthyPercent
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(float64)
		**out = **in
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.ForceNewDeployment != nil {
		in, out := &in.ForceNewDeployment, &out.ForceNewDeployment
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriodSeconds != nil {
		in, out := &in.HealthCheckGracePeriodSeconds, &out.HealthCheckGracePeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]PlacementConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.SchedulingStrategy != nil {
		in, out := &in.SchedulingStrategy, &out.SchedulingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectConfiguration != nil {
		in, out := &in.ServiceConnectConfiguration, &out.ServiceConnectConfiguration
		*out = make([]ServiceConnectConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]ServiceRegistriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForSteadyState != nil {
		in, out := &in.WaitForSteadyState, &out.WaitForSteadyState
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceObservation.
func (in *ServiceObservation) DeepCopy() *ServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParameters) DeepCopyInto(out *ServiceParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]AlarmsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]CapacityProviderStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterSelector != nil {
		in, out := &in.ClusterSelector, &out.ClusterSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentCircuitBreaker != nil {
		in, out := &in.DeploymentCircuitBreaker, &out.DeploymentCircuitBreaker
		*out = make([]DeploymentCircuitBreakerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentController != nil {
		in, out := &in.DeploymentController, &out.DeploymentController
		*out = make([]DeploymentControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentMaximumPercent != nil {
		in, out := &in.DeploymentMaximumPercent, &out.DeploymentMaximumPercent
		*out = new(float64)
		**out = **in
	}
	if in.DeploymentMinimumHealthyPercent != nil {
		in, out := &in.DeploymentMinimumHealthyPercent, &out.DeploymentMinimumHealthyPercent
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(float64)
		**out = **in
	}
	if in.EnableEcsManagedTags != nil {
		in, out := &in.EnableEcsManagedTags, &out.EnableEcsManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.ForceNewDeployment != nil {
		in, out := &in.ForceNewDeployment, &out.ForceNewDeployment
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriodSeconds != nil {
		in, out := &in.HealthCheckGracePeriodSeconds, &out.HealthCheckGracePeriodSeconds
		*out = new(float64)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleRef != nil {
		in, out := &in.IAMRoleRef, &out.IAMRoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleSelector != nil {
		in, out := &in.IAMRoleSelector, &out.IAMRoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchType != nil {
		in, out := &in.LaunchType, &out.LaunchType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = make([]NetworkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrderedPlacementStrategy != nil {
		in, out := &in.OrderedPlacementStrategy, &out.OrderedPlacementStrategy
		*out = make([]OrderedPlacementStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]PlacementConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SchedulingStrategy != nil {
		in, out := &in.SchedulingStrategy, &out.SchedulingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectConfiguration != nil {
		in, out := &in.ServiceConnectConfiguration, &out.ServiceConnectConfiguration
		*out = make([]ServiceConnectConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRegistries != nil {
		in, out := &in.ServiceRegistries, &out.ServiceRegistries
		*out = make([]ServiceRegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionRef != nil {
		in, out := &in.TaskDefinitionRef, &out.TaskDefinitionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskDefinitionSelector != nil {
		in, out := &in.TaskDefinitionSelector, &out.TaskDefinitionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForSteadyState != nil {
		in, out := &in.WaitForSteadyState, &out.WaitForSteadyState
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParameters.
func (in *ServiceParameters) DeepCopy() *ServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRegistriesInitParameters) DeepCopyInto(out *ServiceRegistriesInitParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RegistryArn != nil {
		in, out := &in.RegistryArn, &out.RegistryArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRegistriesInitParameters.
func (in *ServiceRegistriesInitParameters) DeepCopy() *ServiceRegistriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceRegistriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRegistriesObservation) DeepCopyInto(out *ServiceRegistriesObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RegistryArn != nil {
		in, out := &in.RegistryArn, &out.RegistryArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRegistriesObservation.
func (in *ServiceRegistriesObservation) DeepCopy() *ServiceRegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceRegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRegistriesParameters) DeepCopyInto(out *ServiceRegistriesParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RegistryArn != nil {
		in, out := &in.RegistryArn, &out.RegistryArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRegistriesParameters.
func (in *ServiceRegistriesParameters) DeepCopy() *ServiceRegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceRegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceStatus) DeepCopyInto(out *ServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceStatus.
func (in *ServiceStatus) DeepCopy() *ServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingInitParameters) DeepCopyInto(out *SettingInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingInitParameters.
func (in *SettingInitParameters) DeepCopy() *SettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingObservation) DeepCopyInto(out *SettingObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingObservation.
func (in *SettingObservation) DeepCopy() *SettingObservation {
	if in == nil {
		return nil
	}
	out := new(SettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingParameters) DeepCopyInto(out *SettingParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingParameters.
func (in *SettingParameters) DeepCopy() *SettingParameters {
	if in == nil {
		return nil
	}
	out := new(SettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinition) DeepCopyInto(out *TaskDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinition.
func (in *TaskDefinition) DeepCopy() *TaskDefinition {
	if in == nil {
		return nil
	}
	out := new(TaskDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionInitParameters) DeepCopyInto(out *TaskDefinitionInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ContainerDefinitions != nil {
		in, out := &in.ContainerDefinitions, &out.ContainerDefinitions
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArnRef != nil {
		in, out := &in.ExecutionRoleArnRef, &out.ExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleArnSelector != nil {
		in, out := &in.ExecutionRoleArnSelector, &out.ExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerator != nil {
		in, out := &in.InferenceAccelerator, &out.InferenceAccelerator
		*out = make([]InferenceAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpcMode != nil {
		in, out := &in.IpcMode, &out.IpcMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.PidMode != nil {
		in, out := &in.PidMode, &out.PidMode
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]TaskDefinitionPlacementConstraintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProxyConfiguration != nil {
		in, out := &in.ProxyConfiguration, &out.ProxyConfiguration
		*out = make([]ProxyConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiresCompatibilities != nil {
		in, out := &in.RequiresCompatibilities, &out.RequiresCompatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimePlatform != nil {
		in, out := &in.RuntimePlatform, &out.RuntimePlatform
		*out = make([]RuntimePlatformInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskRoleArn != nil {
		in, out := &in.TaskRoleArn, &out.TaskRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionInitParameters.
func (in *TaskDefinitionInitParameters) DeepCopy() *TaskDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionList) DeepCopyInto(out *TaskDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TaskDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionList.
func (in *TaskDefinitionList) DeepCopy() *TaskDefinitionList {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionObservation) DeepCopyInto(out *TaskDefinitionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnWithoutRevision != nil {
		in, out := &in.ArnWithoutRevision, &out.ArnWithoutRevision
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ContainerDefinitions != nil {
		in, out := &in.ContainerDefinitions, &out.ContainerDefinitions
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerator != nil {
		in, out := &in.InferenceAccelerator, &out.InferenceAccelerator
		*out = make([]InferenceAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpcMode != nil {
		in, out := &in.IpcMode, &out.IpcMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.PidMode != nil {
		in, out := &in.PidMode, &out.PidMode
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]TaskDefinitionPlacementConstraintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProxyConfiguration != nil {
		in, out := &in.ProxyConfiguration, &out.ProxyConfiguration
		*out = make([]ProxyConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequiresCompatibilities != nil {
		in, out := &in.RequiresCompatibilities, &out.RequiresCompatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.RuntimePlatform != nil {
		in, out := &in.RuntimePlatform, &out.RuntimePlatform
		*out = make([]RuntimePlatformObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskRoleArn != nil {
		in, out := &in.TaskRoleArn, &out.TaskRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionObservation.
func (in *TaskDefinitionObservation) DeepCopy() *TaskDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionParameters) DeepCopyInto(out *TaskDefinitionParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ContainerDefinitions != nil {
		in, out := &in.ContainerDefinitions, &out.ContainerDefinitions
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArnRef != nil {
		in, out := &in.ExecutionRoleArnRef, &out.ExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleArnSelector != nil {
		in, out := &in.ExecutionRoleArnSelector, &out.ExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.InferenceAccelerator != nil {
		in, out := &in.InferenceAccelerator, &out.InferenceAccelerator
		*out = make([]InferenceAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpcMode != nil {
		in, out := &in.IpcMode, &out.IpcMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.PidMode != nil {
		in, out := &in.PidMode, &out.PidMode
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraints != nil {
		in, out := &in.PlacementConstraints, &out.PlacementConstraints
		*out = make([]TaskDefinitionPlacementConstraintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProxyConfiguration != nil {
		in, out := &in.ProxyConfiguration, &out.ProxyConfiguration
		*out = make([]ProxyConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequiresCompatibilities != nil {
		in, out := &in.RequiresCompatibilities, &out.RequiresCompatibilities
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuntimePlatform != nil {
		in, out := &in.RuntimePlatform, &out.RuntimePlatform
		*out = make([]RuntimePlatformParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TaskRoleArn != nil {
		in, out := &in.TaskRoleArn, &out.TaskRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionParameters.
func (in *TaskDefinitionParameters) DeepCopy() *TaskDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionPlacementConstraintsInitParameters) DeepCopyInto(out *TaskDefinitionPlacementConstraintsInitParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionPlacementConstraintsInitParameters.
func (in *TaskDefinitionPlacementConstraintsInitParameters) DeepCopy() *TaskDefinitionPlacementConstraintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionPlacementConstraintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionPlacementConstraintsObservation) DeepCopyInto(out *TaskDefinitionPlacementConstraintsObservation) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionPlacementConstraintsObservation.
func (in *TaskDefinitionPlacementConstraintsObservation) DeepCopy() *TaskDefinitionPlacementConstraintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionPlacementConstraintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionPlacementConstraintsParameters) DeepCopyInto(out *TaskDefinitionPlacementConstraintsParameters) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionPlacementConstraintsParameters.
func (in *TaskDefinitionPlacementConstraintsParameters) DeepCopy() *TaskDefinitionPlacementConstraintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionPlacementConstraintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionSpec) DeepCopyInto(out *TaskDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionSpec.
func (in *TaskDefinitionSpec) DeepCopy() *TaskDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionStatus) DeepCopyInto(out *TaskDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionStatus.
func (in *TaskDefinitionStatus) DeepCopy() *TaskDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.DockerVolumeConfiguration != nil {
		in, out := &in.DockerVolumeConfiguration, &out.DockerVolumeConfiguration
		*out = make([]DockerVolumeConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EFSVolumeConfiguration != nil {
		in, out := &in.EFSVolumeConfiguration, &out.EFSVolumeConfiguration
		*out = make([]EFSVolumeConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FSXWindowsFileServerVolumeConfiguration != nil {
		in, out := &in.FSXWindowsFileServerVolumeConfiguration, &out.FSXWindowsFileServerVolumeConfiguration
		*out = make([]FSXWindowsFileServerVolumeConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.DockerVolumeConfiguration != nil {
		in, out := &in.DockerVolumeConfiguration, &out.DockerVolumeConfiguration
		*out = make([]DockerVolumeConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EFSVolumeConfiguration != nil {
		in, out := &in.EFSVolumeConfiguration, &out.EFSVolumeConfiguration
		*out = make([]EFSVolumeConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FSXWindowsFileServerVolumeConfiguration != nil {
		in, out := &in.FSXWindowsFileServerVolumeConfiguration, &out.FSXWindowsFileServerVolumeConfiguration
		*out = make([]FSXWindowsFileServerVolumeConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.DockerVolumeConfiguration != nil {
		in, out := &in.DockerVolumeConfiguration, &out.DockerVolumeConfiguration
		*out = make([]DockerVolumeConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EFSVolumeConfiguration != nil {
		in, out := &in.EFSVolumeConfiguration, &out.EFSVolumeConfiguration
		*out = make([]EFSVolumeConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FSXWindowsFileServerVolumeConfiguration != nil {
		in, out := &in.FSXWindowsFileServerVolumeConfiguration, &out.FSXWindowsFileServerVolumeConfiguration
		*out = make([]FSXWindowsFileServerVolumeConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

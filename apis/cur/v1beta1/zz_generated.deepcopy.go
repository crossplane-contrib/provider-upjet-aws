//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinition) DeepCopyInto(out *ReportDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinition.
func (in *ReportDefinition) DeepCopy() *ReportDefinition {
	if in == nil {
		return nil
	}
	out := new(ReportDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionInitParameters) DeepCopyInto(out *ReportDefinitionInitParameters) {
	*out = *in
	if in.AdditionalArtifacts != nil {
		in, out := &in.AdditionalArtifacts, &out.AdditionalArtifacts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdditionalSchemaElements != nil {
		in, out := &in.AdditionalSchemaElements, &out.AdditionalSchemaElements
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.RefreshClosedReports != nil {
		in, out := &in.RefreshClosedReports, &out.RefreshClosedReports
		*out = new(bool)
		**out = **in
	}
	if in.ReportVersioning != nil {
		in, out := &in.ReportVersioning, &out.ReportVersioning
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3BucketRef != nil {
		in, out := &in.S3BucketRef, &out.S3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSelector != nil {
		in, out := &in.S3BucketSelector, &out.S3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Prefix != nil {
		in, out := &in.S3Prefix, &out.S3Prefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionInitParameters.
func (in *ReportDefinitionInitParameters) DeepCopy() *ReportDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionList) DeepCopyInto(out *ReportDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReportDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionList.
func (in *ReportDefinitionList) DeepCopy() *ReportDefinitionList {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionObservation) DeepCopyInto(out *ReportDefinitionObservation) {
	*out = *in
	if in.AdditionalArtifacts != nil {
		in, out := &in.AdditionalArtifacts, &out.AdditionalArtifacts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdditionalSchemaElements != nil {
		in, out := &in.AdditionalSchemaElements, &out.AdditionalSchemaElements
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RefreshClosedReports != nil {
		in, out := &in.RefreshClosedReports, &out.RefreshClosedReports
		*out = new(bool)
		**out = **in
	}
	if in.ReportVersioning != nil {
		in, out := &in.ReportVersioning, &out.ReportVersioning
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Prefix != nil {
		in, out := &in.S3Prefix, &out.S3Prefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionObservation.
func (in *ReportDefinitionObservation) DeepCopy() *ReportDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionParameters) DeepCopyInto(out *ReportDefinitionParameters) {
	*out = *in
	if in.AdditionalArtifacts != nil {
		in, out := &in.AdditionalArtifacts, &out.AdditionalArtifacts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdditionalSchemaElements != nil {
		in, out := &in.AdditionalSchemaElements, &out.AdditionalSchemaElements
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.RefreshClosedReports != nil {
		in, out := &in.RefreshClosedReports, &out.RefreshClosedReports
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReportVersioning != nil {
		in, out := &in.ReportVersioning, &out.ReportVersioning
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3BucketRef != nil {
		in, out := &in.S3BucketRef, &out.S3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSelector != nil {
		in, out := &in.S3BucketSelector, &out.S3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Prefix != nil {
		in, out := &in.S3Prefix, &out.S3Prefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
	if in.TimeUnit != nil {
		in, out := &in.TimeUnit, &out.TimeUnit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionParameters.
func (in *ReportDefinitionParameters) DeepCopy() *ReportDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionSpec) DeepCopyInto(out *ReportDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionSpec.
func (in *ReportDefinitionSpec) DeepCopy() *ReportDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportDefinitionStatus) DeepCopyInto(out *ReportDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportDefinitionStatus.
func (in *ReportDefinitionStatus) DeepCopy() *ReportDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(ReportDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

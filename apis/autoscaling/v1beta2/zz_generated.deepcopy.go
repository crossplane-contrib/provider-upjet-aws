//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountInitParameters) DeepCopyInto(out *AcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountInitParameters.
func (in *AcceleratorCountInitParameters) DeepCopy() *AcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountObservation) DeepCopyInto(out *AcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountObservation.
func (in *AcceleratorCountObservation) DeepCopy() *AcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountParameters) DeepCopyInto(out *AcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountParameters.
func (in *AcceleratorCountParameters) DeepCopy() *AcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibInitParameters.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopy() *AcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopyInto(out *AcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibObservation.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopy() *AcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibParameters.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopy() *AcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Attachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentInitParameters) DeepCopyInto(out *AttachmentInitParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AutoscalingGroupNameRef != nil {
		in, out := &in.AutoscalingGroupNameRef, &out.AutoscalingGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscalingGroupNameSelector != nil {
		in, out := &in.AutoscalingGroupNameSelector, &out.AutoscalingGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ELB != nil {
		in, out := &in.ELB, &out.ELB
		*out = new(string)
		**out = **in
	}
	if in.ELBRef != nil {
		in, out := &in.ELBRef, &out.ELBRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ELBSelector != nil {
		in, out := &in.ELBSelector, &out.ELBSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LBTargetGroupArn != nil {
		in, out := &in.LBTargetGroupArn, &out.LBTargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LBTargetGroupArnRef != nil {
		in, out := &in.LBTargetGroupArnRef, &out.LBTargetGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LBTargetGroupArnSelector != nil {
		in, out := &in.LBTargetGroupArnSelector, &out.LBTargetGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentInitParameters.
func (in *AttachmentInitParameters) DeepCopy() *AttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentList) DeepCopyInto(out *AttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Attachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentList.
func (in *AttachmentList) DeepCopy() *AttachmentList {
	if in == nil {
		return nil
	}
	out := new(AttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentObservation) DeepCopyInto(out *AttachmentObservation) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.ELB != nil {
		in, out := &in.ELB, &out.ELB
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LBTargetGroupArn != nil {
		in, out := &in.LBTargetGroupArn, &out.LBTargetGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentObservation.
func (in *AttachmentObservation) DeepCopy() *AttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(AttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentParameters) DeepCopyInto(out *AttachmentParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AutoscalingGroupNameRef != nil {
		in, out := &in.AutoscalingGroupNameRef, &out.AutoscalingGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoscalingGroupNameSelector != nil {
		in, out := &in.AutoscalingGroupNameSelector, &out.AutoscalingGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ELB != nil {
		in, out := &in.ELB, &out.ELB
		*out = new(string)
		**out = **in
	}
	if in.ELBRef != nil {
		in, out := &in.ELBRef, &out.ELBRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ELBSelector != nil {
		in, out := &in.ELBSelector, &out.ELBSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LBTargetGroupArn != nil {
		in, out := &in.LBTargetGroupArn, &out.LBTargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LBTargetGroupArnRef != nil {
		in, out := &in.LBTargetGroupArnRef, &out.LBTargetGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LBTargetGroupArnSelector != nil {
		in, out := &in.LBTargetGroupArnSelector, &out.LBTargetGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentParameters.
func (in *AttachmentParameters) DeepCopy() *AttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentSpec) DeepCopyInto(out *AttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentSpec.
func (in *AttachmentSpec) DeepCopy() *AttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(AttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentStatus) DeepCopyInto(out *AttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentStatus.
func (in *AttachmentStatus) DeepCopy() *AttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(AttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroup) DeepCopyInto(out *AutoscalingGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroup.
func (in *AutoscalingGroup) DeepCopy() *AutoscalingGroup {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalingGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupInitParameters) DeepCopyInto(out *AutoscalingGroupInitParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DefaultCooldown != nil {
		in, out := &in.DefaultCooldown, &out.DefaultCooldown
		*out = new(float64)
		**out = **in
	}
	if in.DefaultInstanceWarmup != nil {
		in, out := &in.DefaultInstanceWarmup, &out.DefaultInstanceWarmup
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacityType != nil {
		in, out := &in.DesiredCapacityType, &out.DesiredCapacityType
		*out = new(string)
		**out = **in
	}
	if in.EnabledMetrics != nil {
		in, out := &in.EnabledMetrics, &out.EnabledMetrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteWarmPool != nil {
		in, out := &in.ForceDeleteWarmPool, &out.ForceDeleteWarmPool
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriod != nil {
		in, out := &in.HealthCheckGracePeriod, &out.HealthCheckGracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.IgnoreFailedScalingActivities != nil {
		in, out := &in.IgnoreFailedScalingActivities, &out.IgnoreFailedScalingActivities
		*out = new(bool)
		**out = **in
	}
	if in.InitialLifecycleHook != nil {
		in, out := &in.InitialLifecycleHook, &out.InitialLifecycleHook
		*out = make([]InitialLifecycleHookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceMaintenancePolicy != nil {
		in, out := &in.InstanceMaintenancePolicy, &out.InstanceMaintenancePolicy
		*out = make([]InstanceMaintenancePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRefresh != nil {
		in, out := &in.InstanceRefresh, &out.InstanceRefresh
		*out = make([]InstanceRefreshInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = new(string)
		**out = **in
	}
	if in.LaunchConfigurationRef != nil {
		in, out := &in.LaunchConfigurationRef, &out.LaunchConfigurationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchConfigurationSelector != nil {
		in, out := &in.LaunchConfigurationSelector, &out.LaunchConfigurationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxInstanceLifetime != nil {
		in, out := &in.MaxInstanceLifetime, &out.MaxInstanceLifetime
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MetricsGranularity != nil {
		in, out := &in.MetricsGranularity, &out.MetricsGranularity
		*out = new(string)
		**out = **in
	}
	if in.MinELBCapacity != nil {
		in, out := &in.MinELBCapacity, &out.MinELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.MixedInstancesPolicy != nil {
		in, out := &in.MixedInstancesPolicy, &out.MixedInstancesPolicy
		*out = make([]MixedInstancesPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupRef != nil {
		in, out := &in.PlacementGroupRef, &out.PlacementGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PlacementGroupSelector != nil {
		in, out := &in.PlacementGroupSelector, &out.PlacementGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProtectFromScaleIn != nil {
		in, out := &in.ProtectFromScaleIn, &out.ProtectFromScaleIn
		*out = new(bool)
		**out = **in
	}
	if in.ServiceLinkedRoleArn != nil {
		in, out := &in.ServiceLinkedRoleArn, &out.ServiceLinkedRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceLinkedRoleArnRef != nil {
		in, out := &in.ServiceLinkedRoleArnRef, &out.ServiceLinkedRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceLinkedRoleArnSelector != nil {
		in, out := &in.ServiceLinkedRoleArnSelector, &out.ServiceLinkedRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SuspendedProcesses != nil {
		in, out := &in.SuspendedProcesses, &out.SuspendedProcesses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationPolicies != nil {
		in, out := &in.TerminationPolicies, &out.TerminationPolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TrafficSource != nil {
		in, out := &in.TrafficSource, &out.TrafficSource
		*out = make([]TrafficSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCZoneIdentifier != nil {
		in, out := &in.VPCZoneIdentifier, &out.VPCZoneIdentifier
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCZoneIdentifierRefs != nil {
		in, out := &in.VPCZoneIdentifierRefs, &out.VPCZoneIdentifierRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCZoneIdentifierSelector != nil {
		in, out := &in.VPCZoneIdentifierSelector, &out.VPCZoneIdentifierSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WaitForCapacityTimeout != nil {
		in, out := &in.WaitForCapacityTimeout, &out.WaitForCapacityTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForELBCapacity != nil {
		in, out := &in.WaitForELBCapacity, &out.WaitForELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WarmPool != nil {
		in, out := &in.WarmPool, &out.WarmPool
		*out = make([]WarmPoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupInitParameters.
func (in *AutoscalingGroupInitParameters) DeepCopy() *AutoscalingGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupList) DeepCopyInto(out *AutoscalingGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoscalingGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupList.
func (in *AutoscalingGroupList) DeepCopy() *AutoscalingGroupList {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalingGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupObservation) DeepCopyInto(out *AutoscalingGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DefaultCooldown != nil {
		in, out := &in.DefaultCooldown, &out.DefaultCooldown
		*out = new(float64)
		**out = **in
	}
	if in.DefaultInstanceWarmup != nil {
		in, out := &in.DefaultInstanceWarmup, &out.DefaultInstanceWarmup
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacityType != nil {
		in, out := &in.DesiredCapacityType, &out.DesiredCapacityType
		*out = new(string)
		**out = **in
	}
	if in.EnabledMetrics != nil {
		in, out := &in.EnabledMetrics, &out.EnabledMetrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteWarmPool != nil {
		in, out := &in.ForceDeleteWarmPool, &out.ForceDeleteWarmPool
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriod != nil {
		in, out := &in.HealthCheckGracePeriod, &out.HealthCheckGracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreFailedScalingActivities != nil {
		in, out := &in.IgnoreFailedScalingActivities, &out.IgnoreFailedScalingActivities
		*out = new(bool)
		**out = **in
	}
	if in.InitialLifecycleHook != nil {
		in, out := &in.InitialLifecycleHook, &out.InitialLifecycleHook
		*out = make([]InitialLifecycleHookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceMaintenancePolicy != nil {
		in, out := &in.InstanceMaintenancePolicy, &out.InstanceMaintenancePolicy
		*out = make([]InstanceMaintenancePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRefresh != nil {
		in, out := &in.InstanceRefresh, &out.InstanceRefresh
		*out = make([]InstanceRefreshObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxInstanceLifetime != nil {
		in, out := &in.MaxInstanceLifetime, &out.MaxInstanceLifetime
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MetricsGranularity != nil {
		in, out := &in.MetricsGranularity, &out.MetricsGranularity
		*out = new(string)
		**out = **in
	}
	if in.MinELBCapacity != nil {
		in, out := &in.MinELBCapacity, &out.MinELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.MixedInstancesPolicy != nil {
		in, out := &in.MixedInstancesPolicy, &out.MixedInstancesPolicy
		*out = make([]MixedInstancesPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PredictedCapacity != nil {
		in, out := &in.PredictedCapacity, &out.PredictedCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ProtectFromScaleIn != nil {
		in, out := &in.ProtectFromScaleIn, &out.ProtectFromScaleIn
		*out = new(bool)
		**out = **in
	}
	if in.ServiceLinkedRoleArn != nil {
		in, out := &in.ServiceLinkedRoleArn, &out.ServiceLinkedRoleArn
		*out = new(string)
		**out = **in
	}
	if in.SuspendedProcesses != nil {
		in, out := &in.SuspendedProcesses, &out.SuspendedProcesses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminationPolicies != nil {
		in, out := &in.TerminationPolicies, &out.TerminationPolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TrafficSource != nil {
		in, out := &in.TrafficSource, &out.TrafficSource
		*out = make([]TrafficSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCZoneIdentifier != nil {
		in, out := &in.VPCZoneIdentifier, &out.VPCZoneIdentifier
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WaitForCapacityTimeout != nil {
		in, out := &in.WaitForCapacityTimeout, &out.WaitForCapacityTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForELBCapacity != nil {
		in, out := &in.WaitForELBCapacity, &out.WaitForELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WarmPool != nil {
		in, out := &in.WarmPool, &out.WarmPool
		*out = make([]WarmPoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WarmPoolSize != nil {
		in, out := &in.WarmPoolSize, &out.WarmPoolSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupObservation.
func (in *AutoscalingGroupObservation) DeepCopy() *AutoscalingGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupParameters) DeepCopyInto(out *AutoscalingGroupParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DefaultCooldown != nil {
		in, out := &in.DefaultCooldown, &out.DefaultCooldown
		*out = new(float64)
		**out = **in
	}
	if in.DefaultInstanceWarmup != nil {
		in, out := &in.DefaultInstanceWarmup, &out.DefaultInstanceWarmup
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(float64)
		**out = **in
	}
	if in.DesiredCapacityType != nil {
		in, out := &in.DesiredCapacityType, &out.DesiredCapacityType
		*out = new(string)
		**out = **in
	}
	if in.EnabledMetrics != nil {
		in, out := &in.EnabledMetrics, &out.EnabledMetrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteWarmPool != nil {
		in, out := &in.ForceDeleteWarmPool, &out.ForceDeleteWarmPool
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckGracePeriod != nil {
		in, out := &in.HealthCheckGracePeriod, &out.HealthCheckGracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckType != nil {
		in, out := &in.HealthCheckType, &out.HealthCheckType
		*out = new(string)
		**out = **in
	}
	if in.IgnoreFailedScalingActivities != nil {
		in, out := &in.IgnoreFailedScalingActivities, &out.IgnoreFailedScalingActivities
		*out = new(bool)
		**out = **in
	}
	if in.InitialLifecycleHook != nil {
		in, out := &in.InitialLifecycleHook, &out.InitialLifecycleHook
		*out = make([]InitialLifecycleHookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceMaintenancePolicy != nil {
		in, out := &in.InstanceMaintenancePolicy, &out.InstanceMaintenancePolicy
		*out = make([]InstanceMaintenancePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRefresh != nil {
		in, out := &in.InstanceRefresh, &out.InstanceRefresh
		*out = make([]InstanceRefreshParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchConfiguration != nil {
		in, out := &in.LaunchConfiguration, &out.LaunchConfiguration
		*out = new(string)
		**out = **in
	}
	if in.LaunchConfigurationRef != nil {
		in, out := &in.LaunchConfigurationRef, &out.LaunchConfigurationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchConfigurationSelector != nil {
		in, out := &in.LaunchConfigurationSelector, &out.LaunchConfigurationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxInstanceLifetime != nil {
		in, out := &in.MaxInstanceLifetime, &out.MaxInstanceLifetime
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MetricsGranularity != nil {
		in, out := &in.MetricsGranularity, &out.MetricsGranularity
		*out = new(string)
		**out = **in
	}
	if in.MinELBCapacity != nil {
		in, out := &in.MinELBCapacity, &out.MinELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.MixedInstancesPolicy != nil {
		in, out := &in.MixedInstancesPolicy, &out.MixedInstancesPolicy
		*out = make([]MixedInstancesPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupRef != nil {
		in, out := &in.PlacementGroupRef, &out.PlacementGroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PlacementGroupSelector != nil {
		in, out := &in.PlacementGroupSelector, &out.PlacementGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProtectFromScaleIn != nil {
		in, out := &in.ProtectFromScaleIn, &out.ProtectFromScaleIn
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceLinkedRoleArn != nil {
		in, out := &in.ServiceLinkedRoleArn, &out.ServiceLinkedRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceLinkedRoleArnRef != nil {
		in, out := &in.ServiceLinkedRoleArnRef, &out.ServiceLinkedRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceLinkedRoleArnSelector != nil {
		in, out := &in.ServiceLinkedRoleArnSelector, &out.ServiceLinkedRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SuspendedProcesses != nil {
		in, out := &in.SuspendedProcesses, &out.SuspendedProcesses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationPolicies != nil {
		in, out := &in.TerminationPolicies, &out.TerminationPolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TrafficSource != nil {
		in, out := &in.TrafficSource, &out.TrafficSource
		*out = make([]TrafficSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCZoneIdentifier != nil {
		in, out := &in.VPCZoneIdentifier, &out.VPCZoneIdentifier
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCZoneIdentifierRefs != nil {
		in, out := &in.VPCZoneIdentifierRefs, &out.VPCZoneIdentifierRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCZoneIdentifierSelector != nil {
		in, out := &in.VPCZoneIdentifierSelector, &out.VPCZoneIdentifierSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.WaitForCapacityTimeout != nil {
		in, out := &in.WaitForCapacityTimeout, &out.WaitForCapacityTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForELBCapacity != nil {
		in, out := &in.WaitForELBCapacity, &out.WaitForELBCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WarmPool != nil {
		in, out := &in.WarmPool, &out.WarmPool
		*out = make([]WarmPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupParameters.
func (in *AutoscalingGroupParameters) DeepCopy() *AutoscalingGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupSpec) DeepCopyInto(out *AutoscalingGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupSpec.
func (in *AutoscalingGroupSpec) DeepCopy() *AutoscalingGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingGroupStatus) DeepCopyInto(out *AutoscalingGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingGroupStatus.
func (in *AutoscalingGroupStatus) DeepCopy() *AutoscalingGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AutoscalingGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsInitParameters.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopy() *BaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *BaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsObservation.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopy() *BaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsParameters.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopy() *BaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialLifecycleHookInitParameters) DeepCopyInto(out *InitialLifecycleHookInitParameters) {
	*out = *in
	if in.DefaultResult != nil {
		in, out := &in.DefaultResult, &out.DefaultResult
		*out = new(string)
		**out = **in
	}
	if in.HeartbeatTimeout != nil {
		in, out := &in.HeartbeatTimeout, &out.HeartbeatTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleTransition != nil {
		in, out := &in.LifecycleTransition, &out.LifecycleTransition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationMetadata != nil {
		in, out := &in.NotificationMetadata, &out.NotificationMetadata
		*out = new(string)
		**out = **in
	}
	if in.NotificationTargetArn != nil {
		in, out := &in.NotificationTargetArn, &out.NotificationTargetArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialLifecycleHookInitParameters.
func (in *InitialLifecycleHookInitParameters) DeepCopy() *InitialLifecycleHookInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitialLifecycleHookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialLifecycleHookObservation) DeepCopyInto(out *InitialLifecycleHookObservation) {
	*out = *in
	if in.DefaultResult != nil {
		in, out := &in.DefaultResult, &out.DefaultResult
		*out = new(string)
		**out = **in
	}
	if in.HeartbeatTimeout != nil {
		in, out := &in.HeartbeatTimeout, &out.HeartbeatTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleTransition != nil {
		in, out := &in.LifecycleTransition, &out.LifecycleTransition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationMetadata != nil {
		in, out := &in.NotificationMetadata, &out.NotificationMetadata
		*out = new(string)
		**out = **in
	}
	if in.NotificationTargetArn != nil {
		in, out := &in.NotificationTargetArn, &out.NotificationTargetArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialLifecycleHookObservation.
func (in *InitialLifecycleHookObservation) DeepCopy() *InitialLifecycleHookObservation {
	if in == nil {
		return nil
	}
	out := new(InitialLifecycleHookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialLifecycleHookParameters) DeepCopyInto(out *InitialLifecycleHookParameters) {
	*out = *in
	if in.DefaultResult != nil {
		in, out := &in.DefaultResult, &out.DefaultResult
		*out = new(string)
		**out = **in
	}
	if in.HeartbeatTimeout != nil {
		in, out := &in.HeartbeatTimeout, &out.HeartbeatTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LifecycleTransition != nil {
		in, out := &in.LifecycleTransition, &out.LifecycleTransition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NotificationMetadata != nil {
		in, out := &in.NotificationMetadata, &out.NotificationMetadata
		*out = new(string)
		**out = **in
	}
	if in.NotificationTargetArn != nil {
		in, out := &in.NotificationTargetArn, &out.NotificationTargetArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialLifecycleHookParameters.
func (in *InitialLifecycleHookParameters) DeepCopy() *InitialLifecycleHookParameters {
	if in == nil {
		return nil
	}
	out := new(InitialLifecycleHookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMaintenancePolicyInitParameters) DeepCopyInto(out *InstanceMaintenancePolicyInitParameters) {
	*out = *in
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMaintenancePolicyInitParameters.
func (in *InstanceMaintenancePolicyInitParameters) DeepCopy() *InstanceMaintenancePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMaintenancePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMaintenancePolicyObservation) DeepCopyInto(out *InstanceMaintenancePolicyObservation) {
	*out = *in
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMaintenancePolicyObservation.
func (in *InstanceMaintenancePolicyObservation) DeepCopy() *InstanceMaintenancePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMaintenancePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMaintenancePolicyParameters) DeepCopyInto(out *InstanceMaintenancePolicyParameters) {
	*out = *in
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMaintenancePolicyParameters.
func (in *InstanceMaintenancePolicyParameters) DeepCopy() *InstanceMaintenancePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMaintenancePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRefreshInitParameters) DeepCopyInto(out *InstanceRefreshInitParameters) {
	*out = *in
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRefreshInitParameters.
func (in *InstanceRefreshInitParameters) DeepCopy() *InstanceRefreshInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRefreshInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRefreshObservation) DeepCopyInto(out *InstanceRefreshObservation) {
	*out = *in
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRefreshObservation.
func (in *InstanceRefreshObservation) DeepCopy() *InstanceRefreshObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRefreshObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRefreshParameters) DeepCopyInto(out *InstanceRefreshParameters) {
	*out = *in
	if in.Preferences != nil {
		in, out := &in.Preferences, &out.Preferences
		*out = make([]PreferencesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRefreshParameters.
func (in *InstanceRefreshParameters) DeepCopy() *InstanceRefreshParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRefreshParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsInitParameters) DeepCopyInto(out *InstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsInitParameters.
func (in *InstanceRequirementsInitParameters) DeepCopy() *InstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsObservation) DeepCopyInto(out *InstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsObservation.
func (in *InstanceRequirementsObservation) DeepCopy() *InstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsParameters) DeepCopyInto(out *InstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsParameters.
func (in *InstanceRequirementsParameters) DeepCopy() *InstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReusePolicyInitParameters) DeepCopyInto(out *InstanceReusePolicyInitParameters) {
	*out = *in
	if in.ReuseOnScaleIn != nil {
		in, out := &in.ReuseOnScaleIn, &out.ReuseOnScaleIn
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReusePolicyInitParameters.
func (in *InstanceReusePolicyInitParameters) DeepCopy() *InstanceReusePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReusePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReusePolicyObservation) DeepCopyInto(out *InstanceReusePolicyObservation) {
	*out = *in
	if in.ReuseOnScaleIn != nil {
		in, out := &in.ReuseOnScaleIn, &out.ReuseOnScaleIn
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReusePolicyObservation.
func (in *InstanceReusePolicyObservation) DeepCopy() *InstanceReusePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceReusePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReusePolicyParameters) DeepCopyInto(out *InstanceReusePolicyParameters) {
	*out = *in
	if in.ReuseOnScaleIn != nil {
		in, out := &in.ReuseOnScaleIn, &out.ReuseOnScaleIn
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReusePolicyParameters.
func (in *InstanceReusePolicyParameters) DeepCopy() *InstanceReusePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReusePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesDistributionInitParameters) DeepCopyInto(out *InstancesDistributionInitParameters) {
	*out = *in
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandBaseCapacity != nil {
		in, out := &in.OnDemandBaseCapacity, &out.OnDemandBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.OnDemandPercentageAboveBaseCapacity != nil {
		in, out := &in.OnDemandPercentageAboveBaseCapacity, &out.OnDemandPercentageAboveBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.SpotAllocationStrategy != nil {
		in, out := &in.SpotAllocationStrategy, &out.SpotAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePools != nil {
		in, out := &in.SpotInstancePools, &out.SpotInstancePools
		*out = new(float64)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesDistributionInitParameters.
func (in *InstancesDistributionInitParameters) DeepCopy() *InstancesDistributionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancesDistributionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesDistributionObservation) DeepCopyInto(out *InstancesDistributionObservation) {
	*out = *in
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandBaseCapacity != nil {
		in, out := &in.OnDemandBaseCapacity, &out.OnDemandBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.OnDemandPercentageAboveBaseCapacity != nil {
		in, out := &in.OnDemandPercentageAboveBaseCapacity, &out.OnDemandPercentageAboveBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.SpotAllocationStrategy != nil {
		in, out := &in.SpotAllocationStrategy, &out.SpotAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePools != nil {
		in, out := &in.SpotInstancePools, &out.SpotInstancePools
		*out = new(float64)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesDistributionObservation.
func (in *InstancesDistributionObservation) DeepCopy() *InstancesDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(InstancesDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancesDistributionParameters) DeepCopyInto(out *InstancesDistributionParameters) {
	*out = *in
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandBaseCapacity != nil {
		in, out := &in.OnDemandBaseCapacity, &out.OnDemandBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.OnDemandPercentageAboveBaseCapacity != nil {
		in, out := &in.OnDemandPercentageAboveBaseCapacity, &out.OnDemandPercentageAboveBaseCapacity
		*out = new(float64)
		**out = **in
	}
	if in.SpotAllocationStrategy != nil {
		in, out := &in.SpotAllocationStrategy, &out.SpotAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.SpotInstancePools != nil {
		in, out := &in.SpotInstancePools, &out.SpotInstancePools
		*out = new(float64)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancesDistributionParameters.
func (in *InstancesDistributionParameters) DeepCopy() *InstancesDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(InstancesDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInitParameters) DeepCopyInto(out *LaunchTemplateInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInitParameters.
func (in *LaunchTemplateInitParameters) DeepCopy() *LaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation) DeepCopyInto(out *LaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation.
func (in *LaunchTemplateObservation) DeepCopy() *LaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateSpecificationInitParameters) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateIDRef != nil {
		in, out := &in.LaunchTemplateIDRef, &out.LaunchTemplateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateIDSelector != nil {
		in, out := &in.LaunchTemplateIDSelector, &out.LaunchTemplateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationInitParameters.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopy() *LaunchTemplateSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationObservation) DeepCopyInto(out *LaunchTemplateSpecificationObservation) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationObservation.
func (in *LaunchTemplateSpecificationObservation) DeepCopy() *LaunchTemplateSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationParameters) DeepCopyInto(out *LaunchTemplateSpecificationParameters) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateIDRef != nil {
		in, out := &in.LaunchTemplateIDRef, &out.LaunchTemplateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateIDSelector != nil {
		in, out := &in.LaunchTemplateIDSelector, &out.LaunchTemplateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationParameters.
func (in *LaunchTemplateSpecificationParameters) DeepCopy() *LaunchTemplateSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuInitParameters) DeepCopyInto(out *MemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuInitParameters.
func (in *MemoryGibPerVcpuInitParameters) DeepCopy() *MemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuObservation) DeepCopyInto(out *MemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuObservation.
func (in *MemoryGibPerVcpuObservation) DeepCopy() *MemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuParameters) DeepCopyInto(out *MemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuParameters.
func (in *MemoryGibPerVcpuParameters) DeepCopy() *MemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibInitParameters) DeepCopyInto(out *MemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibInitParameters.
func (in *MemoryMibInitParameters) DeepCopy() *MemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibObservation) DeepCopyInto(out *MemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibObservation.
func (in *MemoryMibObservation) DeepCopy() *MemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibParameters) DeepCopyInto(out *MemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibParameters.
func (in *MemoryMibParameters) DeepCopy() *MemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyInitParameters) DeepCopyInto(out *MixedInstancesPolicyInitParameters) {
	*out = *in
	if in.InstancesDistribution != nil {
		in, out := &in.InstancesDistribution, &out.InstancesDistribution
		*out = make([]InstancesDistributionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]MixedInstancesPolicyLaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyInitParameters.
func (in *MixedInstancesPolicyInitParameters) DeepCopy() *MixedInstancesPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyLaunchTemplateInitParameters) DeepCopyInto(out *MixedInstancesPolicyLaunchTemplateInitParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = make([]OverrideInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyLaunchTemplateInitParameters.
func (in *MixedInstancesPolicyLaunchTemplateInitParameters) DeepCopy() *MixedInstancesPolicyLaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyLaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyLaunchTemplateObservation) DeepCopyInto(out *MixedInstancesPolicyLaunchTemplateObservation) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = make([]OverrideObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyLaunchTemplateObservation.
func (in *MixedInstancesPolicyLaunchTemplateObservation) DeepCopy() *MixedInstancesPolicyLaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyLaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyLaunchTemplateParameters) DeepCopyInto(out *MixedInstancesPolicyLaunchTemplateParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = make([]OverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyLaunchTemplateParameters.
func (in *MixedInstancesPolicyLaunchTemplateParameters) DeepCopy() *MixedInstancesPolicyLaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyLaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyObservation) DeepCopyInto(out *MixedInstancesPolicyObservation) {
	*out = *in
	if in.InstancesDistribution != nil {
		in, out := &in.InstancesDistribution, &out.InstancesDistribution
		*out = make([]InstancesDistributionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]MixedInstancesPolicyLaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyObservation.
func (in *MixedInstancesPolicyObservation) DeepCopy() *MixedInstancesPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MixedInstancesPolicyParameters) DeepCopyInto(out *MixedInstancesPolicyParameters) {
	*out = *in
	if in.InstancesDistribution != nil {
		in, out := &in.InstancesDistribution, &out.InstancesDistribution
		*out = make([]InstancesDistributionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]MixedInstancesPolicyLaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MixedInstancesPolicyParameters.
func (in *MixedInstancesPolicyParameters) DeepCopy() *MixedInstancesPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MixedInstancesPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopyInto(out *NetworkBandwidthGbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsInitParameters.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopy() *NetworkBandwidthGbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsObservation) DeepCopyInto(out *NetworkBandwidthGbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsObservation.
func (in *NetworkBandwidthGbpsObservation) DeepCopy() *NetworkBandwidthGbpsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsParameters) DeepCopyInto(out *NetworkBandwidthGbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsParameters.
func (in *NetworkBandwidthGbpsParameters) DeepCopy() *NetworkBandwidthGbpsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountInitParameters) DeepCopyInto(out *NetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountInitParameters.
func (in *NetworkInterfaceCountInitParameters) DeepCopy() *NetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountObservation) DeepCopyInto(out *NetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountObservation.
func (in *NetworkInterfaceCountObservation) DeepCopy() *NetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountParameters) DeepCopyInto(out *NetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountParameters.
func (in *NetworkInterfaceCountParameters) DeepCopy() *NetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideInitParameters) DeepCopyInto(out *OverrideInitParameters) {
	*out = *in
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]OverrideLaunchTemplateSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideInitParameters.
func (in *OverrideInitParameters) DeepCopy() *OverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideLaunchTemplateSpecificationInitParameters) DeepCopyInto(out *OverrideLaunchTemplateSpecificationInitParameters) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateIDRef != nil {
		in, out := &in.LaunchTemplateIDRef, &out.LaunchTemplateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateIDSelector != nil {
		in, out := &in.LaunchTemplateIDSelector, &out.LaunchTemplateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideLaunchTemplateSpecificationInitParameters.
func (in *OverrideLaunchTemplateSpecificationInitParameters) DeepCopy() *OverrideLaunchTemplateSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideLaunchTemplateSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideLaunchTemplateSpecificationObservation) DeepCopyInto(out *OverrideLaunchTemplateSpecificationObservation) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideLaunchTemplateSpecificationObservation.
func (in *OverrideLaunchTemplateSpecificationObservation) DeepCopy() *OverrideLaunchTemplateSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideLaunchTemplateSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideLaunchTemplateSpecificationParameters) DeepCopyInto(out *OverrideLaunchTemplateSpecificationParameters) {
	*out = *in
	if in.LaunchTemplateID != nil {
		in, out := &in.LaunchTemplateID, &out.LaunchTemplateID
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateIDRef != nil {
		in, out := &in.LaunchTemplateIDRef, &out.LaunchTemplateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateIDSelector != nil {
		in, out := &in.LaunchTemplateIDSelector, &out.LaunchTemplateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LaunchTemplateName != nil {
		in, out := &in.LaunchTemplateName, &out.LaunchTemplateName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideLaunchTemplateSpecificationParameters.
func (in *OverrideLaunchTemplateSpecificationParameters) DeepCopy() *OverrideLaunchTemplateSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideLaunchTemplateSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideObservation) DeepCopyInto(out *OverrideObservation) {
	*out = *in
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]OverrideLaunchTemplateSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideObservation.
func (in *OverrideObservation) DeepCopy() *OverrideObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideParameters) DeepCopyInto(out *OverrideParameters) {
	*out = *in
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]OverrideLaunchTemplateSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideParameters.
func (in *OverrideParameters) DeepCopy() *OverrideParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesInitParameters) DeepCopyInto(out *PreferencesInitParameters) {
	*out = *in
	if in.AutoRollback != nil {
		in, out := &in.AutoRollback, &out.AutoRollback
		*out = new(bool)
		**out = **in
	}
	if in.CheckpointDelay != nil {
		in, out := &in.CheckpointDelay, &out.CheckpointDelay
		*out = new(string)
		**out = **in
	}
	if in.CheckpointPercentages != nil {
		in, out := &in.CheckpointPercentages, &out.CheckpointPercentages
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.InstanceWarmup != nil {
		in, out := &in.InstanceWarmup, &out.InstanceWarmup
		*out = new(string)
		**out = **in
	}
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInProtectedInstances != nil {
		in, out := &in.ScaleInProtectedInstances, &out.ScaleInProtectedInstances
		*out = new(string)
		**out = **in
	}
	if in.SkipMatching != nil {
		in, out := &in.SkipMatching, &out.SkipMatching
		*out = new(bool)
		**out = **in
	}
	if in.StandbyInstances != nil {
		in, out := &in.StandbyInstances, &out.StandbyInstances
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesInitParameters.
func (in *PreferencesInitParameters) DeepCopy() *PreferencesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreferencesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesObservation) DeepCopyInto(out *PreferencesObservation) {
	*out = *in
	if in.AutoRollback != nil {
		in, out := &in.AutoRollback, &out.AutoRollback
		*out = new(bool)
		**out = **in
	}
	if in.CheckpointDelay != nil {
		in, out := &in.CheckpointDelay, &out.CheckpointDelay
		*out = new(string)
		**out = **in
	}
	if in.CheckpointPercentages != nil {
		in, out := &in.CheckpointPercentages, &out.CheckpointPercentages
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.InstanceWarmup != nil {
		in, out := &in.InstanceWarmup, &out.InstanceWarmup
		*out = new(string)
		**out = **in
	}
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInProtectedInstances != nil {
		in, out := &in.ScaleInProtectedInstances, &out.ScaleInProtectedInstances
		*out = new(string)
		**out = **in
	}
	if in.SkipMatching != nil {
		in, out := &in.SkipMatching, &out.SkipMatching
		*out = new(bool)
		**out = **in
	}
	if in.StandbyInstances != nil {
		in, out := &in.StandbyInstances, &out.StandbyInstances
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesObservation.
func (in *PreferencesObservation) DeepCopy() *PreferencesObservation {
	if in == nil {
		return nil
	}
	out := new(PreferencesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreferencesParameters) DeepCopyInto(out *PreferencesParameters) {
	*out = *in
	if in.AutoRollback != nil {
		in, out := &in.AutoRollback, &out.AutoRollback
		*out = new(bool)
		**out = **in
	}
	if in.CheckpointDelay != nil {
		in, out := &in.CheckpointDelay, &out.CheckpointDelay
		*out = new(string)
		**out = **in
	}
	if in.CheckpointPercentages != nil {
		in, out := &in.CheckpointPercentages, &out.CheckpointPercentages
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.InstanceWarmup != nil {
		in, out := &in.InstanceWarmup, &out.InstanceWarmup
		*out = new(string)
		**out = **in
	}
	if in.MaxHealthyPercentage != nil {
		in, out := &in.MaxHealthyPercentage, &out.MaxHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.MinHealthyPercentage != nil {
		in, out := &in.MinHealthyPercentage, &out.MinHealthyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.ScaleInProtectedInstances != nil {
		in, out := &in.ScaleInProtectedInstances, &out.ScaleInProtectedInstances
		*out = new(string)
		**out = **in
	}
	if in.SkipMatching != nil {
		in, out := &in.SkipMatching, &out.SkipMatching
		*out = new(bool)
		**out = **in
	}
	if in.StandbyInstances != nil {
		in, out := &in.StandbyInstances, &out.StandbyInstances
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreferencesParameters.
func (in *PreferencesParameters) DeepCopy() *PreferencesParameters {
	if in == nil {
		return nil
	}
	out := new(PreferencesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagInitParameters) DeepCopyInto(out *TagInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.PropagateAtLaunch != nil {
		in, out := &in.PropagateAtLaunch, &out.PropagateAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagInitParameters.
func (in *TagInitParameters) DeepCopy() *TagInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.PropagateAtLaunch != nil {
		in, out := &in.PropagateAtLaunch, &out.PropagateAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.PropagateAtLaunch != nil {
		in, out := &in.PropagateAtLaunch, &out.PropagateAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbInitParameters) DeepCopyInto(out *TotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbInitParameters.
func (in *TotalLocalStorageGbInitParameters) DeepCopy() *TotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbObservation) DeepCopyInto(out *TotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbObservation.
func (in *TotalLocalStorageGbObservation) DeepCopy() *TotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbParameters) DeepCopyInto(out *TotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbParameters.
func (in *TotalLocalStorageGbParameters) DeepCopy() *TotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSourceInitParameters) DeepCopyInto(out *TrafficSourceInitParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSourceInitParameters.
func (in *TrafficSourceInitParameters) DeepCopy() *TrafficSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSourceObservation) DeepCopyInto(out *TrafficSourceObservation) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSourceObservation.
func (in *TrafficSourceObservation) DeepCopy() *TrafficSourceObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficSourceParameters) DeepCopyInto(out *TrafficSourceParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficSourceParameters.
func (in *TrafficSourceParameters) DeepCopy() *TrafficSourceParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountInitParameters) DeepCopyInto(out *VcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountInitParameters.
func (in *VcpuCountInitParameters) DeepCopy() *VcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountObservation) DeepCopyInto(out *VcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountObservation.
func (in *VcpuCountObservation) DeepCopy() *VcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(VcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountParameters) DeepCopyInto(out *VcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountParameters.
func (in *VcpuCountParameters) DeepCopy() *VcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmPoolInitParameters) DeepCopyInto(out *WarmPoolInitParameters) {
	*out = *in
	if in.InstanceReusePolicy != nil {
		in, out := &in.InstanceReusePolicy, &out.InstanceReusePolicy
		*out = make([]InstanceReusePolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxGroupPreparedCapacity != nil {
		in, out := &in.MaxGroupPreparedCapacity, &out.MaxGroupPreparedCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.PoolState != nil {
		in, out := &in.PoolState, &out.PoolState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmPoolInitParameters.
func (in *WarmPoolInitParameters) DeepCopy() *WarmPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmPoolObservation) DeepCopyInto(out *WarmPoolObservation) {
	*out = *in
	if in.InstanceReusePolicy != nil {
		in, out := &in.InstanceReusePolicy, &out.InstanceReusePolicy
		*out = make([]InstanceReusePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxGroupPreparedCapacity != nil {
		in, out := &in.MaxGroupPreparedCapacity, &out.MaxGroupPreparedCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.PoolState != nil {
		in, out := &in.PoolState, &out.PoolState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmPoolObservation.
func (in *WarmPoolObservation) DeepCopy() *WarmPoolObservation {
	if in == nil {
		return nil
	}
	out := new(WarmPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmPoolParameters) DeepCopyInto(out *WarmPoolParameters) {
	*out = *in
	if in.InstanceReusePolicy != nil {
		in, out := &in.InstanceReusePolicy, &out.InstanceReusePolicy
		*out = make([]InstanceReusePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxGroupPreparedCapacity != nil {
		in, out := &in.MaxGroupPreparedCapacity, &out.MaxGroupPreparedCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.PoolState != nil {
		in, out := &in.PoolState, &out.PoolState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmPoolParameters.
func (in *WarmPoolParameters) DeepCopy() *WarmPoolParameters {
	if in == nil {
		return nil
	}
	out := new(WarmPoolParameters)
	in.DeepCopyInto(out)
	return out
}

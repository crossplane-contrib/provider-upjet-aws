// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefinitionInitParameters struct {

	// ARN of the role that performs the self-service actions on your behalf. For example, arn:aws:iam::12345678910:role/ActionRole. To reuse the provisioned product launch role, set to LAUNCH_ROLE.
	AssumeRole *string `json:"assumeRole,omitempty" tf:"assume_role,omitempty"`

	// Name of the SSM document. For example, AWS-RestartEC2Instance. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of parameters in JSON format. For example: [{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}] or [{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}].
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Service action definition type. Valid value is SSM_AUTOMATION. Default is SSM_AUTOMATION.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// SSM document version. For example, 1.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DefinitionObservation struct {

	// ARN of the role that performs the self-service actions on your behalf. For example, arn:aws:iam::12345678910:role/ActionRole. To reuse the provisioned product launch role, set to LAUNCH_ROLE.
	AssumeRole *string `json:"assumeRole,omitempty" tf:"assume_role,omitempty"`

	// Name of the SSM document. For example, AWS-RestartEC2Instance. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// List of parameters in JSON format. For example: [{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}] or [{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}].
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Service action definition type. Valid value is SSM_AUTOMATION. Default is SSM_AUTOMATION.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// SSM document version. For example, 1.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DefinitionParameters struct {

	// ARN of the role that performs the self-service actions on your behalf. For example, arn:aws:iam::12345678910:role/ActionRole. To reuse the provisioned product launch role, set to LAUNCH_ROLE.
	// +kubebuilder:validation:Optional
	AssumeRole *string `json:"assumeRole,omitempty" tf:"assume_role,omitempty"`

	// Name of the SSM document. For example, AWS-RestartEC2Instance. If you are using a shared SSM document, you must provide the ARN instead of the name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// List of parameters in JSON format. For example: [{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}] or [{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}].
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Service action definition type. Valid value is SSM_AUTOMATION. Default is SSM_AUTOMATION.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// SSM document version. For example, 1.
	// +kubebuilder:validation:Optional
	Version *string `json:"version" tf:"version,omitempty"`
}

type ServiceActionInitParameters struct {

	// Language code. Valid values are en (English), jp (Japanese), and zh (Chinese). Default is en.
	AcceptLanguage *string `json:"acceptLanguage,omitempty" tf:"accept_language,omitempty"`

	// Self-service action definition configuration block. Detailed below.
	Definition []DefinitionInitParameters `json:"definition,omitempty" tf:"definition,omitempty"`

	// Self-service action description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Self-service action name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceActionObservation struct {

	// Language code. Valid values are en (English), jp (Japanese), and zh (Chinese). Default is en.
	AcceptLanguage *string `json:"acceptLanguage,omitempty" tf:"accept_language,omitempty"`

	// Self-service action definition configuration block. Detailed below.
	Definition []DefinitionObservation `json:"definition,omitempty" tf:"definition,omitempty"`

	// Self-service action description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Identifier of the service action.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Self-service action name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceActionParameters struct {

	// Language code. Valid values are en (English), jp (Japanese), and zh (Chinese). Default is en.
	// +kubebuilder:validation:Optional
	AcceptLanguage *string `json:"acceptLanguage,omitempty" tf:"accept_language,omitempty"`

	// Self-service action definition configuration block. Detailed below.
	// +kubebuilder:validation:Optional
	Definition []DefinitionParameters `json:"definition,omitempty" tf:"definition,omitempty"`

	// Self-service action description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Self-service action name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`
}

// ServiceActionSpec defines the desired state of ServiceAction
type ServiceActionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceActionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceActionInitParameters `json:"initProvider,omitempty"`
}

// ServiceActionStatus defines the observed state of ServiceAction.
type ServiceActionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceActionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAction is the Schema for the ServiceActions API. Manages a Service Catalog Service Action
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ServiceAction struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.definition) || (has(self.initProvider) && has(self.initProvider.definition))",message="spec.forProvider.definition is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ServiceActionSpec   `json:"spec"`
	Status ServiceActionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceActionList contains a list of ServiceActions
type ServiceActionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAction `json:"items"`
}

// Repository type metadata.
var (
	ServiceAction_Kind             = "ServiceAction"
	ServiceAction_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAction_Kind}.String()
	ServiceAction_KindAPIVersion   = ServiceAction_Kind + "." + CRDGroupVersion.String()
	ServiceAction_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAction_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAction{}, &ServiceActionList{})
}

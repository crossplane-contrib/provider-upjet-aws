//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddOnInitParameters) DeepCopyInto(out *AddOnInitParameters) {
	*out = *in
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddOnInitParameters.
func (in *AddOnInitParameters) DeepCopy() *AddOnInitParameters {
	if in == nil {
		return nil
	}
	out := new(AddOnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddOnObservation) DeepCopyInto(out *AddOnObservation) {
	*out = *in
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddOnObservation.
func (in *AddOnObservation) DeepCopy() *AddOnObservation {
	if in == nil {
		return nil
	}
	out := new(AddOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddOnParameters) DeepCopyInto(out *AddOnParameters) {
	*out = *in
	if in.SnapshotTime != nil {
		in, out := &in.SnapshotTime, &out.SnapshotTime
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddOnParameters.
func (in *AddOnParameters) DeepCopy() *AddOnParameters {
	if in == nil {
		return nil
	}
	out := new(AddOnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateInitParameters) DeepCopyInto(out *CertificateInitParameters) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateInitParameters.
func (in *CertificateInitParameters) DeepCopy() *CertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerService) DeepCopyInto(out *ContainerService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerService.
func (in *ContainerService) DeepCopy() *ContainerService {
	if in == nil {
		return nil
	}
	out := new(ContainerService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceInitParameters) DeepCopyInto(out *ContainerServiceInitParameters) {
	*out = *in
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Power != nil {
		in, out := &in.Power, &out.Power
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistryAccess != nil {
		in, out := &in.PrivateRegistryAccess, &out.PrivateRegistryAccess
		*out = new(PrivateRegistryAccessInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicDomainNames != nil {
		in, out := &in.PublicDomainNames, &out.PublicDomainNames
		*out = new(PublicDomainNamesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceInitParameters.
func (in *ContainerServiceInitParameters) DeepCopy() *ContainerServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceList) DeepCopyInto(out *ContainerServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ContainerService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceList.
func (in *ContainerServiceList) DeepCopy() *ContainerServiceList {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceObservation) DeepCopyInto(out *ContainerServiceObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Power != nil {
		in, out := &in.Power, &out.Power
		*out = new(string)
		**out = **in
	}
	if in.PowerID != nil {
		in, out := &in.PowerID, &out.PowerID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
	if in.PrivateDomainName != nil {
		in, out := &in.PrivateDomainName, &out.PrivateDomainName
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistryAccess != nil {
		in, out := &in.PrivateRegistryAccess, &out.PrivateRegistryAccess
		*out = new(PrivateRegistryAccessObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicDomainNames != nil {
		in, out := &in.PublicDomainNames, &out.PublicDomainNames
		*out = new(PublicDomainNamesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceObservation.
func (in *ContainerServiceObservation) DeepCopy() *ContainerServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceParameters) DeepCopyInto(out *ContainerServiceParameters) {
	*out = *in
	if in.IsDisabled != nil {
		in, out := &in.IsDisabled, &out.IsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Power != nil {
		in, out := &in.Power, &out.Power
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistryAccess != nil {
		in, out := &in.PrivateRegistryAccess, &out.PrivateRegistryAccess
		*out = new(PrivateRegistryAccessParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicDomainNames != nil {
		in, out := &in.PublicDomainNames, &out.PublicDomainNames
		*out = new(PublicDomainNamesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Scale != nil {
		in, out := &in.Scale, &out.Scale
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceParameters.
func (in *ContainerServiceParameters) DeepCopy() *ContainerServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceSpec) DeepCopyInto(out *ContainerServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceSpec.
func (in *ContainerServiceSpec) DeepCopy() *ContainerServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerServiceStatus) DeepCopyInto(out *ContainerServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerServiceStatus.
func (in *ContainerServiceStatus) DeepCopy() *ContainerServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ContainerServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrImagePullerRoleInitParameters) DeepCopyInto(out *EcrImagePullerRoleInitParameters) {
	*out = *in
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrImagePullerRoleInitParameters.
func (in *EcrImagePullerRoleInitParameters) DeepCopy() *EcrImagePullerRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcrImagePullerRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrImagePullerRoleObservation) DeepCopyInto(out *EcrImagePullerRoleObservation) {
	*out = *in
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrImagePullerRoleObservation.
func (in *EcrImagePullerRoleObservation) DeepCopy() *EcrImagePullerRoleObservation {
	if in == nil {
		return nil
	}
	out := new(EcrImagePullerRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrImagePullerRoleParameters) DeepCopyInto(out *EcrImagePullerRoleParameters) {
	*out = *in
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrImagePullerRoleParameters.
func (in *EcrImagePullerRoleParameters) DeepCopy() *EcrImagePullerRoleParameters {
	if in == nil {
		return nil
	}
	out := new(EcrImagePullerRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AddOn != nil {
		in, out := &in.AddOn, &out.AddOn
		*out = new(AddOnInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlueprintID != nil {
		in, out := &in.BlueprintID, &out.BlueprintID
		*out = new(string)
		**out = **in
	}
	if in.BundleID != nil {
		in, out := &in.BundleID, &out.BundleID
		*out = new(string)
		**out = **in
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.KeyPairName != nil {
		in, out := &in.KeyPairName, &out.KeyPairName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AddOn != nil {
		in, out := &in.AddOn, &out.AddOn
		*out = new(AddOnObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlueprintID != nil {
		in, out := &in.BlueprintID, &out.BlueprintID
		*out = new(string)
		**out = **in
	}
	if in.BundleID != nil {
		in, out := &in.BundleID, &out.BundleID
		*out = new(string)
		**out = **in
	}
	if in.CPUCount != nil {
		in, out := &in.CPUCount, &out.CPUCount
		*out = new(float64)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsStaticIP != nil {
		in, out := &in.IsStaticIP, &out.IsStaticIP
		*out = new(bool)
		**out = **in
	}
	if in.KeyPairName != nil {
		in, out := &in.KeyPairName, &out.KeyPairName
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.RAMSize != nil {
		in, out := &in.RAMSize, &out.RAMSize
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AddOn != nil {
		in, out := &in.AddOn, &out.AddOn
		*out = new(AddOnParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlueprintID != nil {
		in, out := &in.BlueprintID, &out.BlueprintID
		*out = new(string)
		**out = **in
	}
	if in.BundleID != nil {
		in, out := &in.BundleID, &out.BundleID
		*out = new(string)
		**out = **in
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.KeyPairName != nil {
		in, out := &in.KeyPairName, &out.KeyPairName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistryAccessInitParameters) DeepCopyInto(out *PrivateRegistryAccessInitParameters) {
	*out = *in
	if in.EcrImagePullerRole != nil {
		in, out := &in.EcrImagePullerRole, &out.EcrImagePullerRole
		*out = new(EcrImagePullerRoleInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistryAccessInitParameters.
func (in *PrivateRegistryAccessInitParameters) DeepCopy() *PrivateRegistryAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistryAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistryAccessObservation) DeepCopyInto(out *PrivateRegistryAccessObservation) {
	*out = *in
	if in.EcrImagePullerRole != nil {
		in, out := &in.EcrImagePullerRole, &out.EcrImagePullerRole
		*out = new(EcrImagePullerRoleObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistryAccessObservation.
func (in *PrivateRegistryAccessObservation) DeepCopy() *PrivateRegistryAccessObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistryAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistryAccessParameters) DeepCopyInto(out *PrivateRegistryAccessParameters) {
	*out = *in
	if in.EcrImagePullerRole != nil {
		in, out := &in.EcrImagePullerRole, &out.EcrImagePullerRole
		*out = new(EcrImagePullerRoleParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistryAccessParameters.
func (in *PrivateRegistryAccessParameters) DeepCopy() *PrivateRegistryAccessParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistryAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDomainNamesInitParameters) DeepCopyInto(out *PublicDomainNamesInitParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDomainNamesInitParameters.
func (in *PublicDomainNamesInitParameters) DeepCopy() *PublicDomainNamesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicDomainNamesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDomainNamesObservation) DeepCopyInto(out *PublicDomainNamesObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDomainNamesObservation.
func (in *PublicDomainNamesObservation) DeepCopy() *PublicDomainNamesObservation {
	if in == nil {
		return nil
	}
	out := new(PublicDomainNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicDomainNamesParameters) DeepCopyInto(out *PublicDomainNamesParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicDomainNamesParameters.
func (in *PublicDomainNamesParameters) DeepCopy() *PublicDomainNamesParameters {
	if in == nil {
		return nil
	}
	out := new(PublicDomainNamesParameters)
	in.DeepCopyInto(out)
	return out
}

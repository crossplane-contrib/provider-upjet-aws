//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferOptionsInitParameters) DeepCopyInto(out *BufferOptionsInitParameters) {
	*out = *in
	if in.PersistentBufferEnabled != nil {
		in, out := &in.PersistentBufferEnabled, &out.PersistentBufferEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferOptionsInitParameters.
func (in *BufferOptionsInitParameters) DeepCopy() *BufferOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BufferOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferOptionsObservation) DeepCopyInto(out *BufferOptionsObservation) {
	*out = *in
	if in.PersistentBufferEnabled != nil {
		in, out := &in.PersistentBufferEnabled, &out.PersistentBufferEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferOptionsObservation.
func (in *BufferOptionsObservation) DeepCopy() *BufferOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(BufferOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferOptionsParameters) DeepCopyInto(out *BufferOptionsParameters) {
	*out = *in
	if in.PersistentBufferEnabled != nil {
		in, out := &in.PersistentBufferEnabled, &out.PersistentBufferEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferOptionsParameters.
func (in *BufferOptionsParameters) DeepCopy() *BufferOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(BufferOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogDestinationInitParameters) DeepCopyInto(out *CloudwatchLogDestinationInitParameters) {
	*out = *in
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogDestinationInitParameters.
func (in *CloudwatchLogDestinationInitParameters) DeepCopy() *CloudwatchLogDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogDestinationObservation) DeepCopyInto(out *CloudwatchLogDestinationObservation) {
	*out = *in
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogDestinationObservation.
func (in *CloudwatchLogDestinationObservation) DeepCopy() *CloudwatchLogDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogDestinationParameters) DeepCopyInto(out *CloudwatchLogDestinationParameters) {
	*out = *in
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogDestinationParameters.
func (in *CloudwatchLogDestinationParameters) DeepCopy() *CloudwatchLogDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRestOptionsInitParameters) DeepCopyInto(out *EncryptionAtRestOptionsInitParameters) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRestOptionsInitParameters.
func (in *EncryptionAtRestOptionsInitParameters) DeepCopy() *EncryptionAtRestOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRestOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRestOptionsObservation) DeepCopyInto(out *EncryptionAtRestOptionsObservation) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRestOptionsObservation.
func (in *EncryptionAtRestOptionsObservation) DeepCopy() *EncryptionAtRestOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRestOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRestOptionsParameters) DeepCopyInto(out *EncryptionAtRestOptionsParameters) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRestOptionsParameters.
func (in *EncryptionAtRestOptionsParameters) DeepCopy() *EncryptionAtRestOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRestOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsInitParameters) DeepCopyInto(out *LogPublishingOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogDestination != nil {
		in, out := &in.CloudwatchLogDestination, &out.CloudwatchLogDestination
		*out = make([]CloudwatchLogDestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsLoggingEnabled != nil {
		in, out := &in.IsLoggingEnabled, &out.IsLoggingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsInitParameters.
func (in *LogPublishingOptionsInitParameters) DeepCopy() *LogPublishingOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsObservation) DeepCopyInto(out *LogPublishingOptionsObservation) {
	*out = *in
	if in.CloudwatchLogDestination != nil {
		in, out := &in.CloudwatchLogDestination, &out.CloudwatchLogDestination
		*out = make([]CloudwatchLogDestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsLoggingEnabled != nil {
		in, out := &in.IsLoggingEnabled, &out.IsLoggingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsObservation.
func (in *LogPublishingOptionsObservation) DeepCopy() *LogPublishingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsParameters) DeepCopyInto(out *LogPublishingOptionsParameters) {
	*out = *in
	if in.CloudwatchLogDestination != nil {
		in, out := &in.CloudwatchLogDestination, &out.CloudwatchLogDestination
		*out = make([]CloudwatchLogDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsLoggingEnabled != nil {
		in, out := &in.IsLoggingEnabled, &out.IsLoggingEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsParameters.
func (in *LogPublishingOptionsParameters) DeepCopy() *LogPublishingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pipeline) DeepCopyInto(out *Pipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pipeline.
func (in *Pipeline) DeepCopy() *Pipeline {
	if in == nil {
		return nil
	}
	out := new(Pipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineInitParameters) DeepCopyInto(out *PipelineInitParameters) {
	*out = *in
	if in.BufferOptions != nil {
		in, out := &in.BufferOptions, &out.BufferOptions
		*out = make([]BufferOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAtRestOptions != nil {
		in, out := &in.EncryptionAtRestOptions, &out.EncryptionAtRestOptions
		*out = make([]EncryptionAtRestOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnits != nil {
		in, out := &in.MaxUnits, &out.MaxUnits
		*out = new(float64)
		**out = **in
	}
	if in.MinUnits != nil {
		in, out := &in.MinUnits, &out.MinUnits
		*out = new(float64)
		**out = **in
	}
	if in.PipelineConfigurationBody != nil {
		in, out := &in.PipelineConfigurationBody, &out.PipelineConfigurationBody
		*out = new(string)
		**out = **in
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineInitParameters.
func (in *PipelineInitParameters) DeepCopy() *PipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineList) DeepCopyInto(out *PipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineList.
func (in *PipelineList) DeepCopy() *PipelineList {
	if in == nil {
		return nil
	}
	out := new(PipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineObservation) DeepCopyInto(out *PipelineObservation) {
	*out = *in
	if in.BufferOptions != nil {
		in, out := &in.BufferOptions, &out.BufferOptions
		*out = make([]BufferOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAtRestOptions != nil {
		in, out := &in.EncryptionAtRestOptions, &out.EncryptionAtRestOptions
		*out = make([]EncryptionAtRestOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngestEndpointUrls != nil {
		in, out := &in.IngestEndpointUrls, &out.IngestEndpointUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnits != nil {
		in, out := &in.MaxUnits, &out.MaxUnits
		*out = new(float64)
		**out = **in
	}
	if in.MinUnits != nil {
		in, out := &in.MinUnits, &out.MinUnits
		*out = new(float64)
		**out = **in
	}
	if in.PipelineArn != nil {
		in, out := &in.PipelineArn, &out.PipelineArn
		*out = new(string)
		**out = **in
	}
	if in.PipelineConfigurationBody != nil {
		in, out := &in.PipelineConfigurationBody, &out.PipelineConfigurationBody
		*out = new(string)
		**out = **in
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineObservation.
func (in *PipelineObservation) DeepCopy() *PipelineObservation {
	if in == nil {
		return nil
	}
	out := new(PipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineParameters) DeepCopyInto(out *PipelineParameters) {
	*out = *in
	if in.BufferOptions != nil {
		in, out := &in.BufferOptions, &out.BufferOptions
		*out = make([]BufferOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAtRestOptions != nil {
		in, out := &in.EncryptionAtRestOptions, &out.EncryptionAtRestOptions
		*out = make([]EncryptionAtRestOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnits != nil {
		in, out := &in.MaxUnits, &out.MaxUnits
		*out = new(float64)
		**out = **in
	}
	if in.MinUnits != nil {
		in, out := &in.MinUnits, &out.MinUnits
		*out = new(float64)
		**out = **in
	}
	if in.PipelineConfigurationBody != nil {
		in, out := &in.PipelineConfigurationBody, &out.PipelineConfigurationBody
		*out = new(string)
		**out = **in
	}
	if in.PipelineName != nil {
		in, out := &in.PipelineName, &out.PipelineName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineParameters.
func (in *PipelineParameters) DeepCopy() *PipelineParameters {
	if in == nil {
		return nil
	}
	out := new(PipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineSpec) DeepCopyInto(out *PipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineSpec.
func (in *PipelineSpec) DeepCopy() *PipelineSpec {
	if in == nil {
		return nil
	}
	out := new(PipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PipelineStatus) DeepCopyInto(out *PipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PipelineStatus.
func (in *PipelineStatus) DeepCopy() *PipelineStatus {
	if in == nil {
		return nil
	}
	out := new(PipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsInitParameters) DeepCopyInto(out *VPCOptionsInitParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsInitParameters.
func (in *VPCOptionsInitParameters) DeepCopy() *VPCOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsObservation) DeepCopyInto(out *VPCOptionsObservation) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsObservation.
func (in *VPCOptionsObservation) DeepCopy() *VPCOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsParameters) DeepCopyInto(out *VPCOptionsParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsParameters.
func (in *VPCOptionsParameters) DeepCopy() *VPCOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

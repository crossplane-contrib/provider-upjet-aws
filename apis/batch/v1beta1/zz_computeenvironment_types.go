// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ComputeEnvironmentInitParameters struct {

	// Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
	ComputeResources *ComputeResourcesInitParameters `json:"computeResources,omitempty" tf:"compute_resources,omitempty"`

	// Details for the Amazon EKS cluster that supports the compute environment. See details below.
	EksConfiguration *EksConfigurationInitParameters `json:"eksConfiguration,omitempty" tf:"eks_configuration,omitempty"`

	// The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	ServiceRole *string `json:"serviceRole,omitempty" tf:"service_role,omitempty"`

	// Reference to a Role in iam to populate serviceRole.
	// +kubebuilder:validation:Optional
	ServiceRoleRef *v1.Reference `json:"serviceRoleRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate serviceRole.
	// +kubebuilder:validation:Optional
	ServiceRoleSelector *v1.Selector `json:"serviceRoleSelector,omitempty" tf:"-"`

	// The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of the compute environment. Valid items are MANAGED or UNMANAGED.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the infrastructure update policy for the compute environment. See details below.
	UpdatePolicy *UpdatePolicyInitParameters `json:"updatePolicy,omitempty" tf:"update_policy,omitempty"`
}

type ComputeEnvironmentObservation struct {

	// The Amazon Resource Name (ARN) of the compute environment.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
	ComputeResources *ComputeResourcesObservation `json:"computeResources,omitempty" tf:"compute_resources,omitempty"`

	// The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
	EcsClusterArn *string `json:"ecsClusterArn,omitempty" tf:"ecs_cluster_arn,omitempty"`

	// Details for the Amazon EKS cluster that supports the compute environment. See details below.
	EksConfiguration *EksConfigurationObservation `json:"eksConfiguration,omitempty" tf:"eks_configuration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
	ServiceRole *string `json:"serviceRole,omitempty" tf:"service_role,omitempty"`

	// The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The current status of the compute environment (for example, CREATING or VALID).
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// A short, human-readable string to provide additional details about the current status of the compute environment.
	StatusReason *string `json:"statusReason,omitempty" tf:"status_reason,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// The type of the compute environment. Valid items are MANAGED or UNMANAGED.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the infrastructure update policy for the compute environment. See details below.
	UpdatePolicy *UpdatePolicyObservation `json:"updatePolicy,omitempty" tf:"update_policy,omitempty"`
}

type ComputeEnvironmentParameters struct {

	// Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.
	// +kubebuilder:validation:Optional
	ComputeResources *ComputeResourcesParameters `json:"computeResources,omitempty" tf:"compute_resources,omitempty"`

	// Details for the Amazon EKS cluster that supports the compute environment. See details below.
	// +kubebuilder:validation:Optional
	EksConfiguration *EksConfigurationParameters `json:"eksConfiguration,omitempty" tf:"eks_configuration,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	ServiceRole *string `json:"serviceRole,omitempty" tf:"service_role,omitempty"`

	// Reference to a Role in iam to populate serviceRole.
	// +kubebuilder:validation:Optional
	ServiceRoleRef *v1.Reference `json:"serviceRoleRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate serviceRole.
	// +kubebuilder:validation:Optional
	ServiceRoleSelector *v1.Selector `json:"serviceRoleSelector,omitempty" tf:"-"`

	// The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of the compute environment. Valid items are MANAGED or UNMANAGED.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the infrastructure update policy for the compute environment. See details below.
	// +kubebuilder:validation:Optional
	UpdatePolicy *UpdatePolicyParameters `json:"updatePolicy,omitempty" tf:"update_policy,omitempty"`
}

type ComputeResourcesInitParameters struct {

	// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	BidPercentage *float64 `json:"bidPercentage,omitempty" tf:"bid_percentage,omitempty"`

	// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	DesiredVcpus *float64 `json:"desiredVcpus,omitempty" tf:"desired_vcpus,omitempty"`

	// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
	EC2Configuration []EC2ConfigurationInitParameters `json:"ec2Configuration,omitempty" tf:"ec2_configuration,omitempty"`

	// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	EC2KeyPair *string `json:"ec2KeyPair,omitempty" tf:"ec2_key_pair,omitempty"`

	// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	InstanceRole *string `json:"instanceRole,omitempty" tf:"instance_role,omitempty"`

	// Reference to a InstanceProfile in iam to populate instanceRole.
	// +kubebuilder:validation:Optional
	InstanceRoleRef *v1.Reference `json:"instanceRoleRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in iam to populate instanceRole.
	// +kubebuilder:validation:Optional
	InstanceRoleSelector *v1.Selector `json:"instanceRoleSelector,omitempty" tf:"-"`

	// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +listType=set
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	LaunchTemplate *LaunchTemplateInitParameters `json:"launchTemplate,omitempty" tf:"launch_template,omitempty"`

	// The maximum number of EC2 vCPUs that an environment can reach.
	MaxVcpus *float64 `json:"maxVcpus,omitempty" tf:"max_vcpus,omitempty"`

	// The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	MinVcpus *float64 `json:"minVcpus,omitempty" tf:"min_vcpus,omitempty"`

	// The Amazon EC2 placement group to associate with your compute resources.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.PlacementGroup
	PlacementGroup *string `json:"placementGroup,omitempty" tf:"placement_group,omitempty"`

	// Reference to a PlacementGroup in ec2 to populate placementGroup.
	// +kubebuilder:validation:Optional
	PlacementGroupRef *v1.Reference `json:"placementGroupRef,omitempty" tf:"-"`

	// Selector for a PlacementGroup in ec2 to populate placementGroup.
	// +kubebuilder:validation:Optional
	PlacementGroupSelector *v1.Selector `json:"placementGroupSelector,omitempty" tf:"-"`

	// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// References to SecurityGroup in ec2 to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsRefs []v1.Reference `json:"securityGroupIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsSelector *v1.Selector `json:"securityGroupIdsSelector,omitempty" tf:"-"`

	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	SpotIAMFleetRole *string `json:"spotIamFleetRole,omitempty" tf:"spot_iam_fleet_role,omitempty"`

	// A list of VPC subnets into which the compute resources are launched.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`

	// References to Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetsRefs []v1.Reference `json:"subnetsRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetsSelector *v1.Selector `json:"subnetsSelector,omitempty" tf:"-"`

	// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ComputeResourcesObservation struct {

	// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	BidPercentage *float64 `json:"bidPercentage,omitempty" tf:"bid_percentage,omitempty"`

	// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	DesiredVcpus *float64 `json:"desiredVcpus,omitempty" tf:"desired_vcpus,omitempty"`

	// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
	EC2Configuration []EC2ConfigurationObservation `json:"ec2Configuration,omitempty" tf:"ec2_configuration,omitempty"`

	// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	EC2KeyPair *string `json:"ec2KeyPair,omitempty" tf:"ec2_key_pair,omitempty"`

	// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	InstanceRole *string `json:"instanceRole,omitempty" tf:"instance_role,omitempty"`

	// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +listType=set
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	LaunchTemplate *LaunchTemplateObservation `json:"launchTemplate,omitempty" tf:"launch_template,omitempty"`

	// The maximum number of EC2 vCPUs that an environment can reach.
	MaxVcpus *float64 `json:"maxVcpus,omitempty" tf:"max_vcpus,omitempty"`

	// The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	MinVcpus *float64 `json:"minVcpus,omitempty" tf:"min_vcpus,omitempty"`

	// The Amazon EC2 placement group to associate with your compute resources.
	PlacementGroup *string `json:"placementGroup,omitempty" tf:"placement_group,omitempty"`

	// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	SpotIAMFleetRole *string `json:"spotIamFleetRole,omitempty" tf:"spot_iam_fleet_role,omitempty"`

	// A list of VPC subnets into which the compute resources are launched.
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`

	// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ComputeResourcesParameters struct {

	// The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	BidPercentage *float64 `json:"bidPercentage,omitempty" tf:"bid_percentage,omitempty"`

	// The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	DesiredVcpus *float64 `json:"desiredVcpus,omitempty" tf:"desired_vcpus,omitempty"`

	// Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	EC2Configuration []EC2ConfigurationParameters `json:"ec2Configuration,omitempty" tf:"ec2_configuration,omitempty"`

	// The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	EC2KeyPair *string `json:"ec2KeyPair,omitempty" tf:"ec2_key_pair,omitempty"`

	// The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
	// +kubebuilder:validation:Optional
	ImageID *string `json:"imageId,omitempty" tf:"image_id,omitempty"`

	// The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.InstanceProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	InstanceRole *string `json:"instanceRole,omitempty" tf:"instance_role,omitempty"`

	// Reference to a InstanceProfile in iam to populate instanceRole.
	// +kubebuilder:validation:Optional
	InstanceRoleRef *v1.Reference `json:"instanceRoleRef,omitempty" tf:"-"`

	// Selector for a InstanceProfile in iam to populate instanceRole.
	// +kubebuilder:validation:Optional
	InstanceRoleSelector *v1.Selector `json:"instanceRoleSelector,omitempty" tf:"-"`

	// A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	// +listType=set
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	LaunchTemplate *LaunchTemplateParameters `json:"launchTemplate,omitempty" tf:"launch_template,omitempty"`

	// The maximum number of EC2 vCPUs that an environment can reach.
	// +kubebuilder:validation:Optional
	MaxVcpus *float64 `json:"maxVcpus" tf:"max_vcpus,omitempty"`

	// The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	MinVcpus *float64 `json:"minVcpus,omitempty" tf:"min_vcpus,omitempty"`

	// The Amazon EC2 placement group to associate with your compute resources.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.PlacementGroup
	// +kubebuilder:validation:Optional
	PlacementGroup *string `json:"placementGroup,omitempty" tf:"placement_group,omitempty"`

	// Reference to a PlacementGroup in ec2 to populate placementGroup.
	// +kubebuilder:validation:Optional
	PlacementGroupRef *v1.Reference `json:"placementGroupRef,omitempty" tf:"-"`

	// Selector for a PlacementGroup in ec2 to populate placementGroup.
	// +kubebuilder:validation:Optional
	PlacementGroupSelector *v1.Selector `json:"placementGroupSelector,omitempty" tf:"-"`

	// A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// References to SecurityGroup in ec2 to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsRefs []v1.Reference `json:"securityGroupIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsSelector *v1.Selector `json:"securityGroupIdsSelector,omitempty" tf:"-"`

	// The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	SpotIAMFleetRole *string `json:"spotIamFleetRole,omitempty" tf:"spot_iam_fleet_role,omitempty"`

	// A list of VPC subnets into which the compute resources are launched.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	// +listType=set
	Subnets []*string `json:"subnets,omitempty" tf:"subnets,omitempty"`

	// References to Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetsRefs []v1.Reference `json:"subnetsRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in ec2 to populate subnets.
	// +kubebuilder:validation:Optional
	SubnetsSelector *v1.Selector `json:"subnetsSelector,omitempty" tf:"-"`

	// Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type EC2ConfigurationInitParameters struct {

	// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
	ImageIDOverride *string `json:"imageIdOverride,omitempty" tf:"image_id_override,omitempty"`

	// The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
	ImageType *string `json:"imageType,omitempty" tf:"image_type,omitempty"`
}

type EC2ConfigurationObservation struct {

	// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
	ImageIDOverride *string `json:"imageIdOverride,omitempty" tf:"image_id_override,omitempty"`

	// The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
	ImageType *string `json:"imageType,omitempty" tf:"image_type,omitempty"`
}

type EC2ConfigurationParameters struct {

	// The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
	// +kubebuilder:validation:Optional
	ImageIDOverride *string `json:"imageIdOverride,omitempty" tf:"image_id_override,omitempty"`

	// The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
	// +kubebuilder:validation:Optional
	ImageType *string `json:"imageType,omitempty" tf:"image_type,omitempty"`
}

type EksConfigurationInitParameters struct {

	// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
	EksClusterArn *string `json:"eksClusterArn,omitempty" tf:"eks_cluster_arn,omitempty"`

	// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
	KubernetesNamespace *string `json:"kubernetesNamespace,omitempty" tf:"kubernetes_namespace,omitempty"`
}

type EksConfigurationObservation struct {

	// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
	EksClusterArn *string `json:"eksClusterArn,omitempty" tf:"eks_cluster_arn,omitempty"`

	// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
	KubernetesNamespace *string `json:"kubernetesNamespace,omitempty" tf:"kubernetes_namespace,omitempty"`
}

type EksConfigurationParameters struct {

	// The Amazon Resource Name (ARN) of the Amazon EKS cluster.
	// +kubebuilder:validation:Optional
	EksClusterArn *string `json:"eksClusterArn" tf:"eks_cluster_arn,omitempty"`

	// The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
	// +kubebuilder:validation:Optional
	KubernetesNamespace *string `json:"kubernetesNamespace" tf:"kubernetes_namespace,omitempty"`
}

type LaunchTemplateInitParameters struct {

	// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Name of the launch template.
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The version number of the launch template. Default: The default version of the launch template.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type LaunchTemplateObservation struct {

	// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Name of the launch template.
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The version number of the launch template. Default: The default version of the launch template.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type LaunchTemplateParameters struct {

	// ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
	// +kubebuilder:validation:Optional
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Name of the launch template.
	// +kubebuilder:validation:Optional
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The version number of the launch template. Default: The default version of the launch template.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type UpdatePolicyInitParameters struct {

	// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
	JobExecutionTimeoutMinutes *float64 `json:"jobExecutionTimeoutMinutes,omitempty" tf:"job_execution_timeout_minutes,omitempty"`

	// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
	TerminateJobsOnUpdate *bool `json:"terminateJobsOnUpdate,omitempty" tf:"terminate_jobs_on_update,omitempty"`
}

type UpdatePolicyObservation struct {

	// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
	JobExecutionTimeoutMinutes *float64 `json:"jobExecutionTimeoutMinutes,omitempty" tf:"job_execution_timeout_minutes,omitempty"`

	// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
	TerminateJobsOnUpdate *bool `json:"terminateJobsOnUpdate,omitempty" tf:"terminate_jobs_on_update,omitempty"`
}

type UpdatePolicyParameters struct {

	// Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
	// +kubebuilder:validation:Optional
	JobExecutionTimeoutMinutes *float64 `json:"jobExecutionTimeoutMinutes" tf:"job_execution_timeout_minutes,omitempty"`

	// Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
	// +kubebuilder:validation:Optional
	TerminateJobsOnUpdate *bool `json:"terminateJobsOnUpdate" tf:"terminate_jobs_on_update,omitempty"`
}

// ComputeEnvironmentSpec defines the desired state of ComputeEnvironment
type ComputeEnvironmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ComputeEnvironmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ComputeEnvironmentInitParameters `json:"initProvider,omitempty"`
}

// ComputeEnvironmentStatus defines the observed state of ComputeEnvironment.
type ComputeEnvironmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ComputeEnvironmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ComputeEnvironment is the Schema for the ComputeEnvironments API. Creates a AWS Batch compute environment.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ComputeEnvironment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   ComputeEnvironmentSpec   `json:"spec"`
	Status ComputeEnvironmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ComputeEnvironmentList contains a list of ComputeEnvironments
type ComputeEnvironmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComputeEnvironment `json:"items"`
}

// Repository type metadata.
var (
	ComputeEnvironment_Kind             = "ComputeEnvironment"
	ComputeEnvironment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ComputeEnvironment_Kind}.String()
	ComputeEnvironment_KindAPIVersion   = ComputeEnvironment_Kind + "." + CRDGroupVersion.String()
	ComputeEnvironment_GroupVersionKind = CRDGroupVersion.WithKind(ComputeEnvironment_Kind)
)

func init() {
	SchemeBuilder.Register(&ComputeEnvironment{}, &ComputeEnvironmentList{})
}

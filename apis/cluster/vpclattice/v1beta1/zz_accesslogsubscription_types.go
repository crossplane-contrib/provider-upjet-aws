// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type AccessLogSubscriptionInitParameters struct {

	// Amazon Resource Name (ARN) of the log destination.
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cluster/vpclattice/v1beta1.ServiceNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ResourceIdentifier *string `json:"resourceIdentifier,omitempty" tf:"resource_identifier,omitempty"`

	// Reference to a ServiceNetwork in vpclattice to populate resourceIdentifier.
	// +kubebuilder:validation:Optional
	ResourceIdentifierRef *v1.Reference `json:"resourceIdentifierRef,omitempty" tf:"-"`

	// Selector for a ServiceNetwork in vpclattice to populate resourceIdentifier.
	// +kubebuilder:validation:Optional
	ResourceIdentifierSelector *v1.Selector `json:"resourceIdentifierSelector,omitempty" tf:"-"`

	// Type of log that monitors your Amazon VPC Lattice service networks. Valid values are: SERVICE, RESOURCE. Defaults to SERVICE.
	ServiceNetworkLogType *string `json:"serviceNetworkLogType,omitempty" tf:"service_network_log_type,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type AccessLogSubscriptionObservation struct {

	// Amazon Resource Name (ARN) of the access log subscription.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Amazon Resource Name (ARN) of the log destination.
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// ID of the access log subscription.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Amazon Resource Name (ARN) of the service network or service.
	ResourceArn *string `json:"resourceArn,omitempty" tf:"resource_arn,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
	ResourceIdentifier *string `json:"resourceIdentifier,omitempty" tf:"resource_identifier,omitempty"`

	// Type of log that monitors your Amazon VPC Lattice service networks. Valid values are: SERVICE, RESOURCE. Defaults to SERVICE.
	ServiceNetworkLogType *string `json:"serviceNetworkLogType,omitempty" tf:"service_network_log_type,omitempty"`

	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type AccessLogSubscriptionParameters struct {

	// Amazon Resource Name (ARN) of the log destination.
	// +kubebuilder:validation:Optional
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cluster/vpclattice/v1beta1.ServiceNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ResourceIdentifier *string `json:"resourceIdentifier,omitempty" tf:"resource_identifier,omitempty"`

	// Reference to a ServiceNetwork in vpclattice to populate resourceIdentifier.
	// +kubebuilder:validation:Optional
	ResourceIdentifierRef *v1.Reference `json:"resourceIdentifierRef,omitempty" tf:"-"`

	// Selector for a ServiceNetwork in vpclattice to populate resourceIdentifier.
	// +kubebuilder:validation:Optional
	ResourceIdentifierSelector *v1.Selector `json:"resourceIdentifierSelector,omitempty" tf:"-"`

	// Type of log that monitors your Amazon VPC Lattice service networks. Valid values are: SERVICE, RESOURCE. Defaults to SERVICE.
	// +kubebuilder:validation:Optional
	ServiceNetworkLogType *string `json:"serviceNetworkLogType,omitempty" tf:"service_network_log_type,omitempty"`

	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// AccessLogSubscriptionSpec defines the desired state of AccessLogSubscription
type AccessLogSubscriptionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccessLogSubscriptionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccessLogSubscriptionInitParameters `json:"initProvider,omitempty"`
}

// AccessLogSubscriptionStatus defines the observed state of AccessLogSubscription.
type AccessLogSubscriptionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccessLogSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccessLogSubscription is the Schema for the AccessLogSubscriptions API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type AccessLogSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destinationArn) || (has(self.initProvider) && has(self.initProvider.destinationArn))",message="spec.forProvider.destinationArn is a required parameter"
	Spec   AccessLogSubscriptionSpec   `json:"spec"`
	Status AccessLogSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccessLogSubscriptionList contains a list of AccessLogSubscriptions
type AccessLogSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccessLogSubscription `json:"items"`
}

// Repository type metadata.
var (
	AccessLogSubscription_Kind             = "AccessLogSubscription"
	AccessLogSubscription_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccessLogSubscription_Kind}.String()
	AccessLogSubscription_KindAPIVersion   = AccessLogSubscription_Kind + "." + CRDGroupVersion.String()
	AccessLogSubscription_GroupVersionKind = CRDGroupVersion.WithKind(AccessLogSubscription_Kind)
)

func init() {
	SchemeBuilder.Register(&AccessLogSubscription{}, &AccessLogSubscriptionList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type MlflowTrackingServerInitParameters struct {

	// The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
	ArtifactStoreURI *string `json:"artifactStoreUri,omitempty" tf:"artifact_store_uri,omitempty"`

	// A list of Member Definitions that contains objects that identify the workers that make up the work team.
	AutomaticModelRegistration *bool `json:"automaticModelRegistration,omitempty" tf:"automatic_model_registration,omitempty"`

	// The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see How it works.
	MlflowVersion *string `json:"mlflowVersion,omitempty" tf:"mlflow_version,omitempty"`

	// The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see Set up IAM permissions for MLflow.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cluster/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/cluster/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The size of the tracking server you want to create. You can choose between "Small", "Medium", and "Large". The default MLflow Tracking Server configuration size is "Small". You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
	TrackingServerSize *string `json:"trackingServerSize,omitempty" tf:"tracking_server_size,omitempty"`

	// The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
	WeeklyMaintenanceWindowStart *string `json:"weeklyMaintenanceWindowStart,omitempty" tf:"weekly_maintenance_window_start,omitempty"`
}

type MlflowTrackingServerObservation struct {

	// The Amazon Resource Name (ARN) assigned by AWS to this MLFlow Tracking Server.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
	ArtifactStoreURI *string `json:"artifactStoreUri,omitempty" tf:"artifact_store_uri,omitempty"`

	// A list of Member Definitions that contains objects that identify the workers that make up the work team.
	AutomaticModelRegistration *bool `json:"automaticModelRegistration,omitempty" tf:"automatic_model_registration,omitempty"`

	// The name of the MLFlow Tracking Server.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see How it works.
	MlflowVersion *string `json:"mlflowVersion,omitempty" tf:"mlflow_version,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see Set up IAM permissions for MLflow.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// The size of the tracking server you want to create. You can choose between "Small", "Medium", and "Large". The default MLflow Tracking Server configuration size is "Small". You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
	TrackingServerSize *string `json:"trackingServerSize,omitempty" tf:"tracking_server_size,omitempty"`

	// The URL to connect to the MLflow user interface for the described tracking server.
	TrackingServerURL *string `json:"trackingServerUrl,omitempty" tf:"tracking_server_url,omitempty"`

	// The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
	WeeklyMaintenanceWindowStart *string `json:"weeklyMaintenanceWindowStart,omitempty" tf:"weekly_maintenance_window_start,omitempty"`
}

type MlflowTrackingServerParameters struct {

	// The S3 URI for a general purpose bucket to use as the MLflow Tracking Server artifact store.
	// +kubebuilder:validation:Optional
	ArtifactStoreURI *string `json:"artifactStoreUri,omitempty" tf:"artifact_store_uri,omitempty"`

	// A list of Member Definitions that contains objects that identify the workers that make up the work team.
	// +kubebuilder:validation:Optional
	AutomaticModelRegistration *bool `json:"automaticModelRegistration,omitempty" tf:"automatic_model_registration,omitempty"`

	// The version of MLflow that the tracking server uses. To see which MLflow versions are available to use, see How it works.
	// +kubebuilder:validation:Optional
	MlflowVersion *string `json:"mlflowVersion,omitempty" tf:"mlflow_version,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The Amazon Resource Name (ARN) for an IAM role in your account that the MLflow Tracking Server uses to access the artifact store in Amazon S3. The role should have AmazonS3FullAccess permissions. For more information on IAM permissions for tracking server creation, see Set up IAM permissions for MLflow.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cluster/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/cluster/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The size of the tracking server you want to create. You can choose between "Small", "Medium", and "Large". The default MLflow Tracking Server configuration size is "Small". You can choose a size depending on the projected use of the tracking server such as the volume of data logged, number of users, and frequency of use.
	// +kubebuilder:validation:Optional
	TrackingServerSize *string `json:"trackingServerSize,omitempty" tf:"tracking_server_size,omitempty"`

	// The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time that weekly maintenance updates are scheduled. For example: TUE:03:30.
	// +kubebuilder:validation:Optional
	WeeklyMaintenanceWindowStart *string `json:"weeklyMaintenanceWindowStart,omitempty" tf:"weekly_maintenance_window_start,omitempty"`
}

// MlflowTrackingServerSpec defines the desired state of MlflowTrackingServer
type MlflowTrackingServerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MlflowTrackingServerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MlflowTrackingServerInitParameters `json:"initProvider,omitempty"`
}

// MlflowTrackingServerStatus defines the observed state of MlflowTrackingServer.
type MlflowTrackingServerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MlflowTrackingServerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MlflowTrackingServer is the Schema for the MlflowTrackingServers API. Provides a SageMaker AI MLFlow Tracking Server resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type MlflowTrackingServer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.artifactStoreUri) || (has(self.initProvider) && has(self.initProvider.artifactStoreUri))",message="spec.forProvider.artifactStoreUri is a required parameter"
	Spec   MlflowTrackingServerSpec   `json:"spec"`
	Status MlflowTrackingServerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MlflowTrackingServerList contains a list of MlflowTrackingServers
type MlflowTrackingServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MlflowTrackingServer `json:"items"`
}

// Repository type metadata.
var (
	MlflowTrackingServer_Kind             = "MlflowTrackingServer"
	MlflowTrackingServer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MlflowTrackingServer_Kind}.String()
	MlflowTrackingServer_KindAPIVersion   = MlflowTrackingServer_Kind + "." + CRDGroupVersion.String()
	MlflowTrackingServer_GroupVersionKind = CRDGroupVersion.WithKind(MlflowTrackingServer_Kind)
)

func init() {
	SchemeBuilder.Register(&MlflowTrackingServer{}, &MlflowTrackingServerList{})
}

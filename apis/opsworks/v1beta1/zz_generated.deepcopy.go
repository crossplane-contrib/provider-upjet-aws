//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSourceInitParameters) DeepCopyInto(out *AppSourceInitParameters) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSourceInitParameters.
func (in *AppSourceInitParameters) DeepCopy() *AppSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSourceObservation) DeepCopyInto(out *AppSourceObservation) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSourceObservation.
func (in *AppSourceObservation) DeepCopy() *AppSourceObservation {
	if in == nil {
		return nil
	}
	out := new(AppSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSourceParameters) DeepCopyInto(out *AppSourceParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSourceParameters.
func (in *AppSourceParameters) DeepCopy() *AppSourceParameters {
	if in == nil {
		return nil
	}
	out := new(AppSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInitParameters) DeepCopyInto(out *ApplicationInitParameters) {
	*out = *in
	if in.AppSource != nil {
		in, out := &in.AppSource, &out.AppSource
		*out = make([]AppSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoBundleOnDeploy != nil {
		in, out := &in.AutoBundleOnDeploy, &out.AutoBundleOnDeploy
		*out = new(string)
		**out = **in
	}
	if in.AwsFlowRubySettings != nil {
		in, out := &in.AwsFlowRubySettings, &out.AwsFlowRubySettings
		*out = new(string)
		**out = **in
	}
	if in.DataSourceArn != nil {
		in, out := &in.DataSourceArn, &out.DataSourceArn
		*out = new(string)
		**out = **in
	}
	if in.DataSourceDatabaseName != nil {
		in, out := &in.DataSourceDatabaseName, &out.DataSourceDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceType != nil {
		in, out := &in.DataSourceType, &out.DataSourceType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentRoot != nil {
		in, out := &in.DocumentRoot, &out.DocumentRoot
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(bool)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RailsEnv != nil {
		in, out := &in.RailsEnv, &out.RailsEnv
		*out = new(string)
		**out = **in
	}
	if in.SSLConfiguration != nil {
		in, out := &in.SSLConfiguration, &out.SSLConfiguration
		*out = make([]SSLConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInitParameters.
func (in *ApplicationInitParameters) DeepCopy() *ApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.AppSource != nil {
		in, out := &in.AppSource, &out.AppSource
		*out = make([]AppSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoBundleOnDeploy != nil {
		in, out := &in.AutoBundleOnDeploy, &out.AutoBundleOnDeploy
		*out = new(string)
		**out = **in
	}
	if in.AwsFlowRubySettings != nil {
		in, out := &in.AwsFlowRubySettings, &out.AwsFlowRubySettings
		*out = new(string)
		**out = **in
	}
	if in.DataSourceArn != nil {
		in, out := &in.DataSourceArn, &out.DataSourceArn
		*out = new(string)
		**out = **in
	}
	if in.DataSourceDatabaseName != nil {
		in, out := &in.DataSourceDatabaseName, &out.DataSourceDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceType != nil {
		in, out := &in.DataSourceType, &out.DataSourceType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentRoot != nil {
		in, out := &in.DocumentRoot, &out.DocumentRoot
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(bool)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RailsEnv != nil {
		in, out := &in.RailsEnv, &out.RailsEnv
		*out = new(string)
		**out = **in
	}
	if in.SSLConfiguration != nil {
		in, out := &in.SSLConfiguration, &out.SSLConfiguration
		*out = make([]SSLConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.AppSource != nil {
		in, out := &in.AppSource, &out.AppSource
		*out = make([]AppSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoBundleOnDeploy != nil {
		in, out := &in.AutoBundleOnDeploy, &out.AutoBundleOnDeploy
		*out = new(string)
		**out = **in
	}
	if in.AwsFlowRubySettings != nil {
		in, out := &in.AwsFlowRubySettings, &out.AwsFlowRubySettings
		*out = new(string)
		**out = **in
	}
	if in.DataSourceArn != nil {
		in, out := &in.DataSourceArn, &out.DataSourceArn
		*out = new(string)
		**out = **in
	}
	if in.DataSourceDatabaseName != nil {
		in, out := &in.DataSourceDatabaseName, &out.DataSourceDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceType != nil {
		in, out := &in.DataSourceType, &out.DataSourceType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentRoot != nil {
		in, out := &in.DocumentRoot, &out.DocumentRoot
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(bool)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RailsEnv != nil {
		in, out := &in.RailsEnv, &out.RailsEnv
		*out = new(string)
		**out = **in
	}
	if in.SSLConfiguration != nil {
		in, out := &in.SSLConfiguration, &out.SSLConfiguration
		*out = make([]SSLConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationInitParameters) DeepCopyInto(out *CloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]LogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationInitParameters.
func (in *CloudwatchConfigurationInitParameters) DeepCopy() *CloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *CloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationLogStreamsInitParameters.
func (in *CloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *CloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *CloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationLogStreamsObservation.
func (in *CloudwatchConfigurationLogStreamsObservation) DeepCopy() *CloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *CloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationLogStreamsParameters.
func (in *CloudwatchConfigurationLogStreamsParameters) DeepCopy() *CloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationObservation) DeepCopyInto(out *CloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]LogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationObservation.
func (in *CloudwatchConfigurationObservation) DeepCopy() *CloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigurationParameters) DeepCopyInto(out *CloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]LogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigurationParameters.
func (in *CloudwatchConfigurationParameters) DeepCopy() *CloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCookbooksSourceInitParameters) DeepCopyInto(out *CustomCookbooksSourceInitParameters) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCookbooksSourceInitParameters.
func (in *CustomCookbooksSourceInitParameters) DeepCopy() *CustomCookbooksSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCookbooksSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCookbooksSourceObservation) DeepCopyInto(out *CustomCookbooksSourceObservation) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCookbooksSourceObservation.
func (in *CustomCookbooksSourceObservation) DeepCopy() *CustomCookbooksSourceObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCookbooksSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCookbooksSourceParameters) DeepCopyInto(out *CustomCookbooksSourceParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCookbooksSourceParameters.
func (in *CustomCookbooksSourceParameters) DeepCopy() *CustomCookbooksSourceParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCookbooksSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayer) DeepCopyInto(out *CustomLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayer.
func (in *CustomLayer) DeepCopy() *CustomLayer {
	if in == nil {
		return nil
	}
	out := new(CustomLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerInitParameters) DeepCopyInto(out *CustomLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]CloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]LoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerInitParameters.
func (in *CustomLayerInitParameters) DeepCopy() *CustomLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerList) DeepCopyInto(out *CustomLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerList.
func (in *CustomLayerList) DeepCopy() *CustomLayerList {
	if in == nil {
		return nil
	}
	out := new(CustomLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerObservation) DeepCopyInto(out *CustomLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]CloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]LoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerObservation.
func (in *CustomLayerObservation) DeepCopy() *CustomLayerObservation {
	if in == nil {
		return nil
	}
	out := new(CustomLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerParameters) DeepCopyInto(out *CustomLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]CloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]LoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerParameters.
func (in *CustomLayerParameters) DeepCopy() *CustomLayerParameters {
	if in == nil {
		return nil
	}
	out := new(CustomLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerSpec) DeepCopyInto(out *CustomLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerSpec.
func (in *CustomLayerSpec) DeepCopy() *CustomLayerSpec {
	if in == nil {
		return nil
	}
	out := new(CustomLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerStatus) DeepCopyInto(out *CustomLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerStatus.
func (in *CustomLayerStatus) DeepCopy() *CustomLayerStatus {
	if in == nil {
		return nil
	}
	out := new(CustomLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingInitParameters) DeepCopyInto(out *DownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingInitParameters.
func (in *DownscalingInitParameters) DeepCopy() *DownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingObservation) DeepCopyInto(out *DownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingObservation.
func (in *DownscalingObservation) DeepCopy() *DownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(DownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownscalingParameters) DeepCopyInto(out *DownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownscalingParameters.
func (in *DownscalingParameters) DeepCopy() *DownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(DownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceInitParameters) DeepCopyInto(out *EBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceInitParameters.
func (in *EBSBlockDeviceInitParameters) DeepCopy() *EBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceObservation) DeepCopyInto(out *EBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceObservation.
func (in *EBSBlockDeviceObservation) DeepCopy() *EBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceParameters) DeepCopyInto(out *EBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceParameters.
func (in *EBSBlockDeviceParameters) DeepCopy() *EBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeInitParameters) DeepCopyInto(out *EBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeInitParameters.
func (in *EBSVolumeInitParameters) DeepCopy() *EBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeObservation) DeepCopyInto(out *EBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeObservation.
func (in *EBSVolumeObservation) DeepCopy() *EBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeParameters) DeepCopyInto(out *EBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeParameters.
func (in *EBSVolumeParameters) DeepCopy() *EBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayer) DeepCopyInto(out *EcsClusterLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayer.
func (in *EcsClusterLayer) DeepCopy() *EcsClusterLayer {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EcsClusterLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *EcsClusterLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]CloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerCloudwatchConfigurationInitParameters.
func (in *EcsClusterLayerCloudwatchConfigurationInitParameters) DeepCopy() *EcsClusterLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerCloudwatchConfigurationObservation) DeepCopyInto(out *EcsClusterLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]CloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerCloudwatchConfigurationObservation.
func (in *EcsClusterLayerCloudwatchConfigurationObservation) DeepCopy() *EcsClusterLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerCloudwatchConfigurationParameters) DeepCopyInto(out *EcsClusterLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]CloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerCloudwatchConfigurationParameters.
func (in *EcsClusterLayerCloudwatchConfigurationParameters) DeepCopy() *EcsClusterLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerEBSVolumeInitParameters) DeepCopyInto(out *EcsClusterLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerEBSVolumeInitParameters.
func (in *EcsClusterLayerEBSVolumeInitParameters) DeepCopy() *EcsClusterLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerEBSVolumeObservation) DeepCopyInto(out *EcsClusterLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerEBSVolumeObservation.
func (in *EcsClusterLayerEBSVolumeObservation) DeepCopy() *EcsClusterLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerEBSVolumeParameters) DeepCopyInto(out *EcsClusterLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerEBSVolumeParameters.
func (in *EcsClusterLayerEBSVolumeParameters) DeepCopy() *EcsClusterLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerInitParameters) DeepCopyInto(out *EcsClusterLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]EcsClusterLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EcsClusterLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.EcsClusterArnRef != nil {
		in, out := &in.EcsClusterArnRef, &out.EcsClusterArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EcsClusterArnSelector != nil {
		in, out := &in.EcsClusterArnSelector, &out.EcsClusterArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]EcsClusterLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerInitParameters.
func (in *EcsClusterLayerInitParameters) DeepCopy() *EcsClusterLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerList) DeepCopyInto(out *EcsClusterLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EcsClusterLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerList.
func (in *EcsClusterLayerList) DeepCopy() *EcsClusterLayerList {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EcsClusterLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *EcsClusterLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]LoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]LoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerLoadBasedAutoScalingInitParameters.
func (in *EcsClusterLayerLoadBasedAutoScalingInitParameters) DeepCopy() *EcsClusterLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *EcsClusterLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]LoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]LoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerLoadBasedAutoScalingObservation.
func (in *EcsClusterLayerLoadBasedAutoScalingObservation) DeepCopy() *EcsClusterLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *EcsClusterLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]LoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]LoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerLoadBasedAutoScalingParameters.
func (in *EcsClusterLayerLoadBasedAutoScalingParameters) DeepCopy() *EcsClusterLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerObservation) DeepCopyInto(out *EcsClusterLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]EcsClusterLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EcsClusterLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]EcsClusterLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerObservation.
func (in *EcsClusterLayerObservation) DeepCopy() *EcsClusterLayerObservation {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerParameters) DeepCopyInto(out *EcsClusterLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]EcsClusterLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EcsClusterLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.EcsClusterArnRef != nil {
		in, out := &in.EcsClusterArnRef, &out.EcsClusterArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EcsClusterArnSelector != nil {
		in, out := &in.EcsClusterArnSelector, &out.EcsClusterArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]EcsClusterLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerParameters.
func (in *EcsClusterLayerParameters) DeepCopy() *EcsClusterLayerParameters {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerSpec) DeepCopyInto(out *EcsClusterLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerSpec.
func (in *EcsClusterLayerSpec) DeepCopy() *EcsClusterLayerSpec {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcsClusterLayerStatus) DeepCopyInto(out *EcsClusterLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcsClusterLayerStatus.
func (in *EcsClusterLayerStatus) DeepCopy() *EcsClusterLayerStatus {
	if in == nil {
		return nil
	}
	out := new(EcsClusterLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceInitParameters) DeepCopyInto(out *EphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceInitParameters.
func (in *EphemeralBlockDeviceInitParameters) DeepCopy() *EphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceObservation) DeepCopyInto(out *EphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceObservation.
func (in *EphemeralBlockDeviceObservation) DeepCopy() *EphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceParameters) DeepCopyInto(out *EphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceParameters.
func (in *EphemeralBlockDeviceParameters) DeepCopy() *EphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayer) DeepCopyInto(out *GangliaLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayer.
func (in *GangliaLayer) DeepCopy() *GangliaLayer {
	if in == nil {
		return nil
	}
	out := new(GangliaLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GangliaLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]GangliaLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationInitParameters.
func (in *GangliaLayerCloudwatchConfigurationInitParameters) DeepCopy() *GangliaLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *GangliaLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationLogStreamsObservation.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *GangliaLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationLogStreamsParameters.
func (in *GangliaLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *GangliaLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationObservation) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]GangliaLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationObservation.
func (in *GangliaLayerCloudwatchConfigurationObservation) DeepCopy() *GangliaLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerCloudwatchConfigurationParameters) DeepCopyInto(out *GangliaLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]GangliaLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerCloudwatchConfigurationParameters.
func (in *GangliaLayerCloudwatchConfigurationParameters) DeepCopy() *GangliaLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerEBSVolumeInitParameters) DeepCopyInto(out *GangliaLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerEBSVolumeInitParameters.
func (in *GangliaLayerEBSVolumeInitParameters) DeepCopy() *GangliaLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerEBSVolumeObservation) DeepCopyInto(out *GangliaLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerEBSVolumeObservation.
func (in *GangliaLayerEBSVolumeObservation) DeepCopy() *GangliaLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerEBSVolumeParameters) DeepCopyInto(out *GangliaLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerEBSVolumeParameters.
func (in *GangliaLayerEBSVolumeParameters) DeepCopy() *GangliaLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerInitParameters) DeepCopyInto(out *GangliaLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]GangliaLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]GangliaLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]GangliaLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerInitParameters.
func (in *GangliaLayerInitParameters) DeepCopy() *GangliaLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerList) DeepCopyInto(out *GangliaLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GangliaLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerList.
func (in *GangliaLayerList) DeepCopy() *GangliaLayerList {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GangliaLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingDownscalingObservation.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *GangliaLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingDownscalingParameters.
func (in *GangliaLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingInitParameters.
func (in *GangliaLayerLoadBasedAutoScalingInitParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingObservation.
func (in *GangliaLayerLoadBasedAutoScalingObservation) DeepCopy() *GangliaLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]GangliaLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingParameters.
func (in *GangliaLayerLoadBasedAutoScalingParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingUpscalingObservation.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *GangliaLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *GangliaLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerLoadBasedAutoScalingUpscalingParameters.
func (in *GangliaLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *GangliaLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerObservation) DeepCopyInto(out *GangliaLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]GangliaLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]GangliaLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]GangliaLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerObservation.
func (in *GangliaLayerObservation) DeepCopy() *GangliaLayerObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerParameters) DeepCopyInto(out *GangliaLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]GangliaLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]GangliaLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]GangliaLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerParameters.
func (in *GangliaLayerParameters) DeepCopy() *GangliaLayerParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerSpec) DeepCopyInto(out *GangliaLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerSpec.
func (in *GangliaLayerSpec) DeepCopy() *GangliaLayerSpec {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerStatus) DeepCopyInto(out *GangliaLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerStatus.
func (in *GangliaLayerStatus) DeepCopy() *GangliaLayerStatus {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayer) DeepCopyInto(out *HAProxyLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayer.
func (in *HAProxyLayer) DeepCopy() *HAProxyLayer {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HAProxyLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationInitParameters.
func (in *HAProxyLayerCloudwatchConfigurationInitParameters) DeepCopy() *HAProxyLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationLogStreamsObservation.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *HAProxyLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationLogStreamsParameters.
func (in *HAProxyLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *HAProxyLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationObservation) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]HAProxyLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationObservation.
func (in *HAProxyLayerCloudwatchConfigurationObservation) DeepCopy() *HAProxyLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerCloudwatchConfigurationParameters) DeepCopyInto(out *HAProxyLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]HAProxyLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerCloudwatchConfigurationParameters.
func (in *HAProxyLayerCloudwatchConfigurationParameters) DeepCopy() *HAProxyLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerEBSVolumeInitParameters) DeepCopyInto(out *HAProxyLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerEBSVolumeInitParameters.
func (in *HAProxyLayerEBSVolumeInitParameters) DeepCopy() *HAProxyLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerEBSVolumeObservation) DeepCopyInto(out *HAProxyLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerEBSVolumeObservation.
func (in *HAProxyLayerEBSVolumeObservation) DeepCopy() *HAProxyLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerEBSVolumeParameters) DeepCopyInto(out *HAProxyLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerEBSVolumeParameters.
func (in *HAProxyLayerEBSVolumeParameters) DeepCopy() *HAProxyLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerInitParameters) DeepCopyInto(out *HAProxyLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]HAProxyLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]HAProxyLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckMethod != nil {
		in, out := &in.HealthcheckMethod, &out.HealthcheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckURL != nil {
		in, out := &in.HealthcheckURL, &out.HealthcheckURL
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StatsEnabled != nil {
		in, out := &in.StatsEnabled, &out.StatsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StatsPassword != nil {
		in, out := &in.StatsPassword, &out.StatsPassword
		*out = new(string)
		**out = **in
	}
	if in.StatsURL != nil {
		in, out := &in.StatsURL, &out.StatsURL
		*out = new(string)
		**out = **in
	}
	if in.StatsUser != nil {
		in, out := &in.StatsUser, &out.StatsUser
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerInitParameters.
func (in *HAProxyLayerInitParameters) DeepCopy() *HAProxyLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerList) DeepCopyInto(out *HAProxyLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HAProxyLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerList.
func (in *HAProxyLayerList) DeepCopy() *HAProxyLayerList {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HAProxyLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingDownscalingObservation.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *HAProxyLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingDownscalingParameters.
func (in *HAProxyLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingInitParameters.
func (in *HAProxyLayerLoadBasedAutoScalingInitParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingObservation.
func (in *HAProxyLayerLoadBasedAutoScalingObservation) DeepCopy() *HAProxyLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingParameters.
func (in *HAProxyLayerLoadBasedAutoScalingParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingUpscalingObservation.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *HAProxyLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *HAProxyLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerLoadBasedAutoScalingUpscalingParameters.
func (in *HAProxyLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *HAProxyLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerObservation) DeepCopyInto(out *HAProxyLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]HAProxyLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]HAProxyLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckMethod != nil {
		in, out := &in.HealthcheckMethod, &out.HealthcheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckURL != nil {
		in, out := &in.HealthcheckURL, &out.HealthcheckURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StatsEnabled != nil {
		in, out := &in.StatsEnabled, &out.StatsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StatsPassword != nil {
		in, out := &in.StatsPassword, &out.StatsPassword
		*out = new(string)
		**out = **in
	}
	if in.StatsURL != nil {
		in, out := &in.StatsURL, &out.StatsURL
		*out = new(string)
		**out = **in
	}
	if in.StatsUser != nil {
		in, out := &in.StatsUser, &out.StatsUser
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerObservation.
func (in *HAProxyLayerObservation) DeepCopy() *HAProxyLayerObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerParameters) DeepCopyInto(out *HAProxyLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]HAProxyLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]HAProxyLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckMethod != nil {
		in, out := &in.HealthcheckMethod, &out.HealthcheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckURL != nil {
		in, out := &in.HealthcheckURL, &out.HealthcheckURL
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]HAProxyLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StatsEnabled != nil {
		in, out := &in.StatsEnabled, &out.StatsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StatsPassword != nil {
		in, out := &in.StatsPassword, &out.StatsPassword
		*out = new(string)
		**out = **in
	}
	if in.StatsURL != nil {
		in, out := &in.StatsURL, &out.StatsURL
		*out = new(string)
		**out = **in
	}
	if in.StatsUser != nil {
		in, out := &in.StatsUser, &out.StatsUser
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerParameters.
func (in *HAProxyLayerParameters) DeepCopy() *HAProxyLayerParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerSpec) DeepCopyInto(out *HAProxyLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerSpec.
func (in *HAProxyLayerSpec) DeepCopy() *HAProxyLayerSpec {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerStatus) DeepCopyInto(out *HAProxyLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerStatus.
func (in *HAProxyLayerStatus) DeepCopy() *HAProxyLayerStatus {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingType != nil {
		in, out := &in.AutoScalingType, &out.AutoScalingType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeleteEBS != nil {
		in, out := &in.DeleteEBS, &out.DeleteEBS
		*out = new(bool)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.ElasticIP != nil {
		in, out := &in.ElasticIP, &out.ElasticIP
		*out = new(string)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureClass != nil {
		in, out := &in.InfrastructureClass, &out.InfrastructureClass
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LayerIds != nil {
		in, out := &in.LayerIds, &out.LayerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LayerIdsRefs != nil {
		in, out := &in.LayerIdsRefs, &out.LayerIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LayerIdsSelector != nil {
		in, out := &in.LayerIdsSelector, &out.LayerIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootDeviceType != nil {
		in, out := &in.RootDeviceType, &out.RootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingType != nil {
		in, out := &in.AutoScalingType, &out.AutoScalingType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeleteEBS != nil {
		in, out := &in.DeleteEBS, &out.DeleteEBS
		*out = new(bool)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EC2InstanceID != nil {
		in, out := &in.EC2InstanceID, &out.EC2InstanceID
		*out = new(string)
		**out = **in
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.ElasticIP != nil {
		in, out := &in.ElasticIP, &out.ElasticIP
		*out = new(string)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureClass != nil {
		in, out := &in.InfrastructureClass, &out.InfrastructureClass
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LastServiceErrorID != nil {
		in, out := &in.LastServiceErrorID, &out.LastServiceErrorID
		*out = new(string)
		**out = **in
	}
	if in.LayerIds != nil {
		in, out := &in.LayerIds, &out.LayerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.RegisteredBy != nil {
		in, out := &in.RegisteredBy, &out.RegisteredBy
		*out = new(string)
		**out = **in
	}
	if in.ReportedAgentVersion != nil {
		in, out := &in.ReportedAgentVersion, &out.ReportedAgentVersion
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsFamily != nil {
		in, out := &in.ReportedOsFamily, &out.ReportedOsFamily
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsName != nil {
		in, out := &in.ReportedOsName, &out.ReportedOsName
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsVersion != nil {
		in, out := &in.ReportedOsVersion, &out.ReportedOsVersion
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootDeviceType != nil {
		in, out := &in.RootDeviceType, &out.RootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceVolumeID != nil {
		in, out := &in.RootDeviceVolumeID, &out.RootDeviceVolumeID
		*out = new(string)
		**out = **in
	}
	if in.SSHHostDsaKeyFingerprint != nil {
		in, out := &in.SSHHostDsaKeyFingerprint, &out.SSHHostDsaKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.SSHHostRsaKeyFingerprint != nil {
		in, out := &in.SSHHostRsaKeyFingerprint, &out.SSHHostRsaKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingType != nil {
		in, out := &in.AutoScalingType, &out.AutoScalingType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeleteEBS != nil {
		in, out := &in.DeleteEBS, &out.DeleteEBS
		*out = new(bool)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.ElasticIP != nil {
		in, out := &in.ElasticIP, &out.ElasticIP
		*out = new(string)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureClass != nil {
		in, out := &in.InfrastructureClass, &out.InfrastructureClass
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LayerIds != nil {
		in, out := &in.LayerIds, &out.LayerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LayerIdsRefs != nil {
		in, out := &in.LayerIdsRefs, &out.LayerIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LayerIdsSelector != nil {
		in, out := &in.LayerIdsSelector, &out.LayerIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootDeviceType != nil {
		in, out := &in.RootDeviceType, &out.RootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayer) DeepCopyInto(out *JavaAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayer.
func (in *JavaAppLayer) DeepCopy() *JavaAppLayer {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JavaAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationInitParameters.
func (in *JavaAppLayerCloudwatchConfigurationInitParameters) DeepCopy() *JavaAppLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationLogStreamsObservation.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *JavaAppLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationLogStreamsParameters.
func (in *JavaAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *JavaAppLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationObservation) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]JavaAppLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationObservation.
func (in *JavaAppLayerCloudwatchConfigurationObservation) DeepCopy() *JavaAppLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerCloudwatchConfigurationParameters) DeepCopyInto(out *JavaAppLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]JavaAppLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerCloudwatchConfigurationParameters.
func (in *JavaAppLayerCloudwatchConfigurationParameters) DeepCopy() *JavaAppLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerEBSVolumeInitParameters) DeepCopyInto(out *JavaAppLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerEBSVolumeInitParameters.
func (in *JavaAppLayerEBSVolumeInitParameters) DeepCopy() *JavaAppLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerEBSVolumeObservation) DeepCopyInto(out *JavaAppLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerEBSVolumeObservation.
func (in *JavaAppLayerEBSVolumeObservation) DeepCopy() *JavaAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerEBSVolumeParameters) DeepCopyInto(out *JavaAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerEBSVolumeParameters.
func (in *JavaAppLayerEBSVolumeParameters) DeepCopy() *JavaAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerInitParameters) DeepCopyInto(out *JavaAppLayerInitParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AppServerVersion != nil {
		in, out := &in.AppServerVersion, &out.AppServerVersion
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]JavaAppLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]JavaAppLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.JvmType != nil {
		in, out := &in.JvmType, &out.JvmType
		*out = new(string)
		**out = **in
	}
	if in.JvmVersion != nil {
		in, out := &in.JvmVersion, &out.JvmVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerInitParameters.
func (in *JavaAppLayerInitParameters) DeepCopy() *JavaAppLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerList) DeepCopyInto(out *JavaAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JavaAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerList.
func (in *JavaAppLayerList) DeepCopy() *JavaAppLayerList {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JavaAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingDownscalingObservation.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *JavaAppLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingDownscalingParameters.
func (in *JavaAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingInitParameters.
func (in *JavaAppLayerLoadBasedAutoScalingInitParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingObservation.
func (in *JavaAppLayerLoadBasedAutoScalingObservation) DeepCopy() *JavaAppLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingParameters.
func (in *JavaAppLayerLoadBasedAutoScalingParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingUpscalingObservation.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *JavaAppLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *JavaAppLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerLoadBasedAutoScalingUpscalingParameters.
func (in *JavaAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *JavaAppLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerObservation) DeepCopyInto(out *JavaAppLayerObservation) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AppServerVersion != nil {
		in, out := &in.AppServerVersion, &out.AppServerVersion
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]JavaAppLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]JavaAppLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.JvmType != nil {
		in, out := &in.JvmType, &out.JvmType
		*out = new(string)
		**out = **in
	}
	if in.JvmVersion != nil {
		in, out := &in.JvmVersion, &out.JvmVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerObservation.
func (in *JavaAppLayerObservation) DeepCopy() *JavaAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerParameters) DeepCopyInto(out *JavaAppLayerParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AppServerVersion != nil {
		in, out := &in.AppServerVersion, &out.AppServerVersion
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]JavaAppLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]JavaAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.JvmType != nil {
		in, out := &in.JvmType, &out.JvmType
		*out = new(string)
		**out = **in
	}
	if in.JvmVersion != nil {
		in, out := &in.JvmVersion, &out.JvmVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]JavaAppLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerParameters.
func (in *JavaAppLayerParameters) DeepCopy() *JavaAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerSpec) DeepCopyInto(out *JavaAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerSpec.
func (in *JavaAppLayerSpec) DeepCopy() *JavaAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerStatus) DeepCopyInto(out *JavaAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerStatus.
func (in *JavaAppLayerStatus) DeepCopy() *JavaAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *LoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingDownscalingInitParameters.
func (in *LoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *LoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *LoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingDownscalingObservation.
func (in *LoadBasedAutoScalingDownscalingObservation) DeepCopy() *LoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *LoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingDownscalingParameters.
func (in *LoadBasedAutoScalingDownscalingParameters) DeepCopy() *LoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingInitParameters) DeepCopyInto(out *LoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]UpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingInitParameters.
func (in *LoadBasedAutoScalingInitParameters) DeepCopy() *LoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingObservation) DeepCopyInto(out *LoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]UpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingObservation.
func (in *LoadBasedAutoScalingObservation) DeepCopy() *LoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingParameters) DeepCopyInto(out *LoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]DownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]UpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingParameters.
func (in *LoadBasedAutoScalingParameters) DeepCopy() *LoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *LoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingUpscalingInitParameters.
func (in *LoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *LoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *LoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingUpscalingObservation.
func (in *LoadBasedAutoScalingUpscalingObservation) DeepCopy() *LoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *LoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBasedAutoScalingUpscalingParameters.
func (in *LoadBasedAutoScalingUpscalingParameters) DeepCopy() *LoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogStreamsInitParameters) DeepCopyInto(out *LogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogStreamsInitParameters.
func (in *LogStreamsInitParameters) DeepCopy() *LogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogStreamsObservation) DeepCopyInto(out *LogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogStreamsObservation.
func (in *LogStreamsObservation) DeepCopy() *LogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(LogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogStreamsParameters) DeepCopyInto(out *LogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogStreamsParameters.
func (in *LogStreamsParameters) DeepCopy() *LogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(LogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayer) DeepCopyInto(out *MemcachedLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayer.
func (in *MemcachedLayer) DeepCopy() *MemcachedLayer {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationInitParameters.
func (in *MemcachedLayerCloudwatchConfigurationInitParameters) DeepCopy() *MemcachedLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationLogStreamsObservation.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *MemcachedLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationLogStreamsParameters.
func (in *MemcachedLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *MemcachedLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationObservation) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MemcachedLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationObservation.
func (in *MemcachedLayerCloudwatchConfigurationObservation) DeepCopy() *MemcachedLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerCloudwatchConfigurationParameters) DeepCopyInto(out *MemcachedLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MemcachedLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerCloudwatchConfigurationParameters.
func (in *MemcachedLayerCloudwatchConfigurationParameters) DeepCopy() *MemcachedLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerEBSVolumeInitParameters) DeepCopyInto(out *MemcachedLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerEBSVolumeInitParameters.
func (in *MemcachedLayerEBSVolumeInitParameters) DeepCopy() *MemcachedLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerEBSVolumeObservation) DeepCopyInto(out *MemcachedLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerEBSVolumeObservation.
func (in *MemcachedLayerEBSVolumeObservation) DeepCopy() *MemcachedLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerEBSVolumeParameters) DeepCopyInto(out *MemcachedLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerEBSVolumeParameters.
func (in *MemcachedLayerEBSVolumeParameters) DeepCopy() *MemcachedLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerInitParameters) DeepCopyInto(out *MemcachedLayerInitParameters) {
	*out = *in
	if in.AllocatedMemory != nil {
		in, out := &in.AllocatedMemory, &out.AllocatedMemory
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MemcachedLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MemcachedLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerInitParameters.
func (in *MemcachedLayerInitParameters) DeepCopy() *MemcachedLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerList) DeepCopyInto(out *MemcachedLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MemcachedLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerList.
func (in *MemcachedLayerList) DeepCopy() *MemcachedLayerList {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingDownscalingObservation.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *MemcachedLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingDownscalingParameters.
func (in *MemcachedLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingInitParameters.
func (in *MemcachedLayerLoadBasedAutoScalingInitParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingObservation.
func (in *MemcachedLayerLoadBasedAutoScalingObservation) DeepCopy() *MemcachedLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingParameters.
func (in *MemcachedLayerLoadBasedAutoScalingParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingUpscalingObservation.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *MemcachedLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *MemcachedLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerLoadBasedAutoScalingUpscalingParameters.
func (in *MemcachedLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *MemcachedLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerObservation) DeepCopyInto(out *MemcachedLayerObservation) {
	*out = *in
	if in.AllocatedMemory != nil {
		in, out := &in.AllocatedMemory, &out.AllocatedMemory
		*out = new(float64)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MemcachedLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MemcachedLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerObservation.
func (in *MemcachedLayerObservation) DeepCopy() *MemcachedLayerObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerParameters) DeepCopyInto(out *MemcachedLayerParameters) {
	*out = *in
	if in.AllocatedMemory != nil {
		in, out := &in.AllocatedMemory, &out.AllocatedMemory
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MemcachedLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MemcachedLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MemcachedLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerParameters.
func (in *MemcachedLayerParameters) DeepCopy() *MemcachedLayerParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerSpec) DeepCopyInto(out *MemcachedLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerSpec.
func (in *MemcachedLayerSpec) DeepCopy() *MemcachedLayerSpec {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerStatus) DeepCopyInto(out *MemcachedLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerStatus.
func (in *MemcachedLayerStatus) DeepCopy() *MemcachedLayerStatus {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayer) DeepCopyInto(out *MySQLLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayer.
func (in *MySQLLayer) DeepCopy() *MySQLLayer {
	if in == nil {
		return nil
	}
	out := new(MySQLLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MySQLLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationInitParameters.
func (in *MySQLLayerCloudwatchConfigurationInitParameters) DeepCopy() *MySQLLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *MySQLLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationLogStreamsObservation.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *MySQLLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationLogStreamsParameters.
func (in *MySQLLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *MySQLLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationObservation) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MySQLLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationObservation.
func (in *MySQLLayerCloudwatchConfigurationObservation) DeepCopy() *MySQLLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerCloudwatchConfigurationParameters) DeepCopyInto(out *MySQLLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]MySQLLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerCloudwatchConfigurationParameters.
func (in *MySQLLayerCloudwatchConfigurationParameters) DeepCopy() *MySQLLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerEBSVolumeInitParameters) DeepCopyInto(out *MySQLLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerEBSVolumeInitParameters.
func (in *MySQLLayerEBSVolumeInitParameters) DeepCopy() *MySQLLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerEBSVolumeObservation) DeepCopyInto(out *MySQLLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerEBSVolumeObservation.
func (in *MySQLLayerEBSVolumeObservation) DeepCopy() *MySQLLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerEBSVolumeParameters) DeepCopyInto(out *MySQLLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerEBSVolumeParameters.
func (in *MySQLLayerEBSVolumeParameters) DeepCopy() *MySQLLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerInitParameters) DeepCopyInto(out *MySQLLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MySQLLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MySQLLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MySQLLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RootPassword != nil {
		in, out := &in.RootPassword, &out.RootPassword
		*out = new(string)
		**out = **in
	}
	if in.RootPasswordOnAllInstances != nil {
		in, out := &in.RootPasswordOnAllInstances, &out.RootPasswordOnAllInstances
		*out = new(bool)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerInitParameters.
func (in *MySQLLayerInitParameters) DeepCopy() *MySQLLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerList) DeepCopyInto(out *MySQLLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerList.
func (in *MySQLLayerList) DeepCopy() *MySQLLayerList {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingDownscalingObservation.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *MySQLLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingDownscalingParameters.
func (in *MySQLLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingInitParameters.
func (in *MySQLLayerLoadBasedAutoScalingInitParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingObservation.
func (in *MySQLLayerLoadBasedAutoScalingObservation) DeepCopy() *MySQLLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]MySQLLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingParameters.
func (in *MySQLLayerLoadBasedAutoScalingParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingUpscalingObservation.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *MySQLLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *MySQLLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerLoadBasedAutoScalingUpscalingParameters.
func (in *MySQLLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *MySQLLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerObservation) DeepCopyInto(out *MySQLLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MySQLLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MySQLLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MySQLLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RootPassword != nil {
		in, out := &in.RootPassword, &out.RootPassword
		*out = new(string)
		**out = **in
	}
	if in.RootPasswordOnAllInstances != nil {
		in, out := &in.RootPasswordOnAllInstances, &out.RootPasswordOnAllInstances
		*out = new(bool)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerObservation.
func (in *MySQLLayerObservation) DeepCopy() *MySQLLayerObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerParameters) DeepCopyInto(out *MySQLLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]MySQLLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MySQLLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]MySQLLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RootPassword != nil {
		in, out := &in.RootPassword, &out.RootPassword
		*out = new(string)
		**out = **in
	}
	if in.RootPasswordOnAllInstances != nil {
		in, out := &in.RootPasswordOnAllInstances, &out.RootPasswordOnAllInstances
		*out = new(bool)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerParameters.
func (in *MySQLLayerParameters) DeepCopy() *MySQLLayerParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerSpec) DeepCopyInto(out *MySQLLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerSpec.
func (in *MySQLLayerSpec) DeepCopy() *MySQLLayerSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerStatus) DeepCopyInto(out *MySQLLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerStatus.
func (in *MySQLLayerStatus) DeepCopy() *MySQLLayerStatus {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayer) DeepCopyInto(out *NodeJSAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayer.
func (in *NodeJSAppLayer) DeepCopy() *NodeJSAppLayer {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeJSAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationInitParameters.
func (in *NodeJSAppLayerCloudwatchConfigurationInitParameters) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters.
func (in *NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationObservation) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]NodeJSAppLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationObservation.
func (in *NodeJSAppLayerCloudwatchConfigurationObservation) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerCloudwatchConfigurationParameters) DeepCopyInto(out *NodeJSAppLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]NodeJSAppLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerCloudwatchConfigurationParameters.
func (in *NodeJSAppLayerCloudwatchConfigurationParameters) DeepCopy() *NodeJSAppLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerEBSVolumeInitParameters) DeepCopyInto(out *NodeJSAppLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerEBSVolumeInitParameters.
func (in *NodeJSAppLayerEBSVolumeInitParameters) DeepCopy() *NodeJSAppLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerEBSVolumeObservation) DeepCopyInto(out *NodeJSAppLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerEBSVolumeObservation.
func (in *NodeJSAppLayerEBSVolumeObservation) DeepCopy() *NodeJSAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerEBSVolumeParameters) DeepCopyInto(out *NodeJSAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerEBSVolumeParameters.
func (in *NodeJSAppLayerEBSVolumeParameters) DeepCopy() *NodeJSAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerInitParameters) DeepCopyInto(out *NodeJSAppLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]NodeJSAppLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]NodeJSAppLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeJSVersion != nil {
		in, out := &in.NodeJSVersion, &out.NodeJSVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerInitParameters.
func (in *NodeJSAppLayerInitParameters) DeepCopy() *NodeJSAppLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerList) DeepCopyInto(out *NodeJSAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeJSAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerList.
func (in *NodeJSAppLayerList) DeepCopy() *NodeJSAppLayerList {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeJSAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingInitParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingInitParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingObservation.
func (in *NodeJSAppLayerLoadBasedAutoScalingObservation) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters.
func (in *NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerObservation) DeepCopyInto(out *NodeJSAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]NodeJSAppLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]NodeJSAppLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeJSVersion != nil {
		in, out := &in.NodeJSVersion, &out.NodeJSVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerObservation.
func (in *NodeJSAppLayerObservation) DeepCopy() *NodeJSAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerParameters) DeepCopyInto(out *NodeJSAppLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]NodeJSAppLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]NodeJSAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]NodeJSAppLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeJSVersion != nil {
		in, out := &in.NodeJSVersion, &out.NodeJSVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerParameters.
func (in *NodeJSAppLayerParameters) DeepCopy() *NodeJSAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerSpec) DeepCopyInto(out *NodeJSAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerSpec.
func (in *NodeJSAppLayerSpec) DeepCopy() *NodeJSAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerStatus) DeepCopyInto(out *NodeJSAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerStatus.
func (in *NodeJSAppLayerStatus) DeepCopy() *NodeJSAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayer) DeepCopyInto(out *PHPAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayer.
func (in *PHPAppLayer) DeepCopy() *PHPAppLayer {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PHPAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationInitParameters.
func (in *PHPAppLayerCloudwatchConfigurationInitParameters) DeepCopy() *PHPAppLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationLogStreamsObservation.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *PHPAppLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationLogStreamsParameters.
func (in *PHPAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *PHPAppLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationObservation) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]PHPAppLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationObservation.
func (in *PHPAppLayerCloudwatchConfigurationObservation) DeepCopy() *PHPAppLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerCloudwatchConfigurationParameters) DeepCopyInto(out *PHPAppLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]PHPAppLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerCloudwatchConfigurationParameters.
func (in *PHPAppLayerCloudwatchConfigurationParameters) DeepCopy() *PHPAppLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerEBSVolumeInitParameters) DeepCopyInto(out *PHPAppLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerEBSVolumeInitParameters.
func (in *PHPAppLayerEBSVolumeInitParameters) DeepCopy() *PHPAppLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerEBSVolumeObservation) DeepCopyInto(out *PHPAppLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerEBSVolumeObservation.
func (in *PHPAppLayerEBSVolumeObservation) DeepCopy() *PHPAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerEBSVolumeParameters) DeepCopyInto(out *PHPAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerEBSVolumeParameters.
func (in *PHPAppLayerEBSVolumeParameters) DeepCopy() *PHPAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerInitParameters) DeepCopyInto(out *PHPAppLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]PHPAppLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]PHPAppLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerInitParameters.
func (in *PHPAppLayerInitParameters) DeepCopy() *PHPAppLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerList) DeepCopyInto(out *PHPAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PHPAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerList.
func (in *PHPAppLayerList) DeepCopy() *PHPAppLayerList {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PHPAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingDownscalingObservation.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *PHPAppLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingDownscalingParameters.
func (in *PHPAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingInitParameters.
func (in *PHPAppLayerLoadBasedAutoScalingInitParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingObservation.
func (in *PHPAppLayerLoadBasedAutoScalingObservation) DeepCopy() *PHPAppLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingParameters.
func (in *PHPAppLayerLoadBasedAutoScalingParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingUpscalingObservation.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *PHPAppLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *PHPAppLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerLoadBasedAutoScalingUpscalingParameters.
func (in *PHPAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *PHPAppLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerObservation) DeepCopyInto(out *PHPAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]PHPAppLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]PHPAppLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerObservation.
func (in *PHPAppLayerObservation) DeepCopy() *PHPAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerParameters) DeepCopyInto(out *PHPAppLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]PHPAppLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]PHPAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]PHPAppLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerParameters.
func (in *PHPAppLayerParameters) DeepCopy() *PHPAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerSpec) DeepCopyInto(out *PHPAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerSpec.
func (in *PHPAppLayerSpec) DeepCopy() *PHPAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerStatus) DeepCopyInto(out *PHPAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerStatus.
func (in *PHPAppLayerStatus) DeepCopy() *PHPAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionInitParameters) DeepCopyInto(out *PermissionInitParameters) {
	*out = *in
	if in.AllowSSH != nil {
		in, out := &in.AllowSSH, &out.AllowSSH
		*out = new(bool)
		**out = **in
	}
	if in.AllowSudo != nil {
		in, out := &in.AllowSudo, &out.AllowSudo
		*out = new(bool)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
	if in.UserArnRef != nil {
		in, out := &in.UserArnRef, &out.UserArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArnSelector != nil {
		in, out := &in.UserArnSelector, &out.UserArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionInitParameters.
func (in *PermissionInitParameters) DeepCopy() *PermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionList) DeepCopyInto(out *PermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionList.
func (in *PermissionList) DeepCopy() *PermissionList {
	if in == nil {
		return nil
	}
	out := new(PermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionObservation) DeepCopyInto(out *PermissionObservation) {
	*out = *in
	if in.AllowSSH != nil {
		in, out := &in.AllowSSH, &out.AllowSSH
		*out = new(bool)
		**out = **in
	}
	if in.AllowSudo != nil {
		in, out := &in.AllowSudo, &out.AllowSudo
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionObservation.
func (in *PermissionObservation) DeepCopy() *PermissionObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionParameters) DeepCopyInto(out *PermissionParameters) {
	*out = *in
	if in.AllowSSH != nil {
		in, out := &in.AllowSSH, &out.AllowSSH
		*out = new(bool)
		**out = **in
	}
	if in.AllowSudo != nil {
		in, out := &in.AllowSudo, &out.AllowSudo
		*out = new(bool)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
	if in.UserArnRef != nil {
		in, out := &in.UserArnRef, &out.UserArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArnSelector != nil {
		in, out := &in.UserArnSelector, &out.UserArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionParameters.
func (in *PermissionParameters) DeepCopy() *PermissionParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionSpec) DeepCopyInto(out *PermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionSpec.
func (in *PermissionSpec) DeepCopy() *PermissionSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionStatus) DeepCopyInto(out *PermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionStatus.
func (in *PermissionStatus) DeepCopy() *PermissionStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstance) DeepCopyInto(out *RDSDBInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstance.
func (in *RDSDBInstance) DeepCopy() *RDSDBInstance {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RDSDBInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceInitParameters) DeepCopyInto(out *RDSDBInstanceInitParameters) {
	*out = *in
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArn != nil {
		in, out := &in.RDSDBInstanceArn, &out.RDSDBInstanceArn
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArnRef != nil {
		in, out := &in.RDSDBInstanceArnRef, &out.RDSDBInstanceArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RDSDBInstanceArnSelector != nil {
		in, out := &in.RDSDBInstanceArnSelector, &out.RDSDBInstanceArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceInitParameters.
func (in *RDSDBInstanceInitParameters) DeepCopy() *RDSDBInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceList) DeepCopyInto(out *RDSDBInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RDSDBInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceList.
func (in *RDSDBInstanceList) DeepCopy() *RDSDBInstanceList {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RDSDBInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceObservation) DeepCopyInto(out *RDSDBInstanceObservation) {
	*out = *in
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArn != nil {
		in, out := &in.RDSDBInstanceArn, &out.RDSDBInstanceArn
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceObservation.
func (in *RDSDBInstanceObservation) DeepCopy() *RDSDBInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceParameters) DeepCopyInto(out *RDSDBInstanceParameters) {
	*out = *in
	out.DBPasswordSecretRef = in.DBPasswordSecretRef
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArn != nil {
		in, out := &in.RDSDBInstanceArn, &out.RDSDBInstanceArn
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArnRef != nil {
		in, out := &in.RDSDBInstanceArnRef, &out.RDSDBInstanceArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RDSDBInstanceArnSelector != nil {
		in, out := &in.RDSDBInstanceArnSelector, &out.RDSDBInstanceArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceParameters.
func (in *RDSDBInstanceParameters) DeepCopy() *RDSDBInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceSpec) DeepCopyInto(out *RDSDBInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceSpec.
func (in *RDSDBInstanceSpec) DeepCopy() *RDSDBInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceStatus) DeepCopyInto(out *RDSDBInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceStatus.
func (in *RDSDBInstanceStatus) DeepCopy() *RDSDBInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayer) DeepCopyInto(out *RailsAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayer.
func (in *RailsAppLayer) DeepCopy() *RailsAppLayer {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RailsAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationInitParameters.
func (in *RailsAppLayerCloudwatchConfigurationInitParameters) DeepCopy() *RailsAppLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationLogStreamsObservation.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *RailsAppLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationLogStreamsParameters.
func (in *RailsAppLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *RailsAppLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationObservation) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]RailsAppLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationObservation.
func (in *RailsAppLayerCloudwatchConfigurationObservation) DeepCopy() *RailsAppLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerCloudwatchConfigurationParameters) DeepCopyInto(out *RailsAppLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]RailsAppLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerCloudwatchConfigurationParameters.
func (in *RailsAppLayerCloudwatchConfigurationParameters) DeepCopy() *RailsAppLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerEBSVolumeInitParameters) DeepCopyInto(out *RailsAppLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerEBSVolumeInitParameters.
func (in *RailsAppLayerEBSVolumeInitParameters) DeepCopy() *RailsAppLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerEBSVolumeObservation) DeepCopyInto(out *RailsAppLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerEBSVolumeObservation.
func (in *RailsAppLayerEBSVolumeObservation) DeepCopy() *RailsAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerEBSVolumeParameters) DeepCopyInto(out *RailsAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerEBSVolumeParameters.
func (in *RailsAppLayerEBSVolumeParameters) DeepCopy() *RailsAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerInitParameters) DeepCopyInto(out *RailsAppLayerInitParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.BundlerVersion != nil {
		in, out := &in.BundlerVersion, &out.BundlerVersion
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]RailsAppLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]RailsAppLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManageBundler != nil {
		in, out := &in.ManageBundler, &out.ManageBundler
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PassengerVersion != nil {
		in, out := &in.PassengerVersion, &out.PassengerVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
	if in.RubygemsVersion != nil {
		in, out := &in.RubygemsVersion, &out.RubygemsVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerInitParameters.
func (in *RailsAppLayerInitParameters) DeepCopy() *RailsAppLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerList) DeepCopyInto(out *RailsAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RailsAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerList.
func (in *RailsAppLayerList) DeepCopy() *RailsAppLayerList {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RailsAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingDownscalingObservation.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *RailsAppLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingDownscalingParameters.
func (in *RailsAppLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingInitParameters.
func (in *RailsAppLayerLoadBasedAutoScalingInitParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingObservation.
func (in *RailsAppLayerLoadBasedAutoScalingObservation) DeepCopy() *RailsAppLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingParameters.
func (in *RailsAppLayerLoadBasedAutoScalingParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingUpscalingObservation.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *RailsAppLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *RailsAppLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerLoadBasedAutoScalingUpscalingParameters.
func (in *RailsAppLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *RailsAppLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerObservation) DeepCopyInto(out *RailsAppLayerObservation) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.BundlerVersion != nil {
		in, out := &in.BundlerVersion, &out.BundlerVersion
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]RailsAppLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]RailsAppLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManageBundler != nil {
		in, out := &in.ManageBundler, &out.ManageBundler
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PassengerVersion != nil {
		in, out := &in.PassengerVersion, &out.PassengerVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
	if in.RubygemsVersion != nil {
		in, out := &in.RubygemsVersion, &out.RubygemsVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerObservation.
func (in *RailsAppLayerObservation) DeepCopy() *RailsAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerParameters) DeepCopyInto(out *RailsAppLayerParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.BundlerVersion != nil {
		in, out := &in.BundlerVersion, &out.BundlerVersion
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]RailsAppLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]RailsAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]RailsAppLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManageBundler != nil {
		in, out := &in.ManageBundler, &out.ManageBundler
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PassengerVersion != nil {
		in, out := &in.PassengerVersion, &out.PassengerVersion
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
	if in.RubygemsVersion != nil {
		in, out := &in.RubygemsVersion, &out.RubygemsVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerParameters.
func (in *RailsAppLayerParameters) DeepCopy() *RailsAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerSpec) DeepCopyInto(out *RailsAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerSpec.
func (in *RailsAppLayerSpec) DeepCopy() *RailsAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerStatus) DeepCopyInto(out *RailsAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerStatus.
func (in *RailsAppLayerStatus) DeepCopy() *RailsAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceInitParameters) DeepCopyInto(out *RootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceInitParameters.
func (in *RootBlockDeviceInitParameters) DeepCopy() *RootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceObservation) DeepCopyInto(out *RootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceObservation.
func (in *RootBlockDeviceObservation) DeepCopy() *RootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceParameters) DeepCopyInto(out *RootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceParameters.
func (in *RootBlockDeviceParameters) DeepCopy() *RootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigurationInitParameters) DeepCopyInto(out *SSLConfigurationInitParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigurationInitParameters.
func (in *SSLConfigurationInitParameters) DeepCopy() *SSLConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigurationObservation) DeepCopyInto(out *SSLConfigurationObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigurationObservation.
func (in *SSLConfigurationObservation) DeepCopy() *SSLConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SSLConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigurationParameters) DeepCopyInto(out *SSLConfigurationParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigurationParameters.
func (in *SSLConfigurationParameters) DeepCopy() *SSLConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stack) DeepCopyInto(out *Stack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stack.
func (in *Stack) DeepCopy() *Stack {
	if in == nil {
		return nil
	}
	out := new(Stack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackInitParameters) DeepCopyInto(out *StackInitParameters) {
	*out = *in
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.BerkshelfVersion != nil {
		in, out := &in.BerkshelfVersion, &out.BerkshelfVersion
		*out = new(string)
		**out = **in
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerName != nil {
		in, out := &in.ConfigurationManagerName, &out.ConfigurationManagerName
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerVersion != nil {
		in, out := &in.ConfigurationManagerVersion, &out.ConfigurationManagerVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomCookbooksSource != nil {
		in, out := &in.CustomCookbooksSource, &out.CustomCookbooksSource
		*out = make([]CustomCookbooksSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.DefaultAvailabilityZone != nil {
		in, out := &in.DefaultAvailabilityZone, &out.DefaultAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArn != nil {
		in, out := &in.DefaultInstanceProfileArn, &out.DefaultInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArnRef != nil {
		in, out := &in.DefaultInstanceProfileArnRef, &out.DefaultInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultInstanceProfileArnSelector != nil {
		in, out := &in.DefaultInstanceProfileArnSelector, &out.DefaultInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultOs != nil {
		in, out := &in.DefaultOs, &out.DefaultOs
		*out = new(string)
		**out = **in
	}
	if in.DefaultRootDeviceType != nil {
		in, out := &in.DefaultRootDeviceType, &out.DefaultRootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSHKeyName != nil {
		in, out := &in.DefaultSSHKeyName, &out.DefaultSSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetID != nil {
		in, out := &in.DefaultSubnetID, &out.DefaultSubnetID
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetIDRef != nil {
		in, out := &in.DefaultSubnetIDRef, &out.DefaultSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultSubnetIDSelector != nil {
		in, out := &in.DefaultSubnetIDSelector, &out.DefaultSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameTheme != nil {
		in, out := &in.HostnameTheme, &out.HostnameTheme
		*out = new(string)
		**out = **in
	}
	if in.ManageBerkshelf != nil {
		in, out := &in.ManageBerkshelf, &out.ManageBerkshelf
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseCustomCookbooks != nil {
		in, out := &in.UseCustomCookbooks, &out.UseCustomCookbooks
		*out = new(bool)
		**out = **in
	}
	if in.UseOpsworksSecurityGroups != nil {
		in, out := &in.UseOpsworksSecurityGroups, &out.UseOpsworksSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackInitParameters.
func (in *StackInitParameters) DeepCopy() *StackInitParameters {
	if in == nil {
		return nil
	}
	out := new(StackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackList) DeepCopyInto(out *StackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackList.
func (in *StackList) DeepCopy() *StackList {
	if in == nil {
		return nil
	}
	out := new(StackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackObservation) DeepCopyInto(out *StackObservation) {
	*out = *in
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BerkshelfVersion != nil {
		in, out := &in.BerkshelfVersion, &out.BerkshelfVersion
		*out = new(string)
		**out = **in
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerName != nil {
		in, out := &in.ConfigurationManagerName, &out.ConfigurationManagerName
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerVersion != nil {
		in, out := &in.ConfigurationManagerVersion, &out.ConfigurationManagerVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomCookbooksSource != nil {
		in, out := &in.CustomCookbooksSource, &out.CustomCookbooksSource
		*out = make([]CustomCookbooksSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.DefaultAvailabilityZone != nil {
		in, out := &in.DefaultAvailabilityZone, &out.DefaultAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArn != nil {
		in, out := &in.DefaultInstanceProfileArn, &out.DefaultInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.DefaultOs != nil {
		in, out := &in.DefaultOs, &out.DefaultOs
		*out = new(string)
		**out = **in
	}
	if in.DefaultRootDeviceType != nil {
		in, out := &in.DefaultRootDeviceType, &out.DefaultRootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSHKeyName != nil {
		in, out := &in.DefaultSSHKeyName, &out.DefaultSSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetID != nil {
		in, out := &in.DefaultSubnetID, &out.DefaultSubnetID
		*out = new(string)
		**out = **in
	}
	if in.HostnameTheme != nil {
		in, out := &in.HostnameTheme, &out.HostnameTheme
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManageBerkshelf != nil {
		in, out := &in.ManageBerkshelf, &out.ManageBerkshelf
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.StackEndpoint != nil {
		in, out := &in.StackEndpoint, &out.StackEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseCustomCookbooks != nil {
		in, out := &in.UseCustomCookbooks, &out.UseCustomCookbooks
		*out = new(bool)
		**out = **in
	}
	if in.UseOpsworksSecurityGroups != nil {
		in, out := &in.UseOpsworksSecurityGroups, &out.UseOpsworksSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackObservation.
func (in *StackObservation) DeepCopy() *StackObservation {
	if in == nil {
		return nil
	}
	out := new(StackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackParameters) DeepCopyInto(out *StackParameters) {
	*out = *in
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.BerkshelfVersion != nil {
		in, out := &in.BerkshelfVersion, &out.BerkshelfVersion
		*out = new(string)
		**out = **in
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerName != nil {
		in, out := &in.ConfigurationManagerName, &out.ConfigurationManagerName
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerVersion != nil {
		in, out := &in.ConfigurationManagerVersion, &out.ConfigurationManagerVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomCookbooksSource != nil {
		in, out := &in.CustomCookbooksSource, &out.CustomCookbooksSource
		*out = make([]CustomCookbooksSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.DefaultAvailabilityZone != nil {
		in, out := &in.DefaultAvailabilityZone, &out.DefaultAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArn != nil {
		in, out := &in.DefaultInstanceProfileArn, &out.DefaultInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArnRef != nil {
		in, out := &in.DefaultInstanceProfileArnRef, &out.DefaultInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultInstanceProfileArnSelector != nil {
		in, out := &in.DefaultInstanceProfileArnSelector, &out.DefaultInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultOs != nil {
		in, out := &in.DefaultOs, &out.DefaultOs
		*out = new(string)
		**out = **in
	}
	if in.DefaultRootDeviceType != nil {
		in, out := &in.DefaultRootDeviceType, &out.DefaultRootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSHKeyName != nil {
		in, out := &in.DefaultSSHKeyName, &out.DefaultSSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetID != nil {
		in, out := &in.DefaultSubnetID, &out.DefaultSubnetID
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetIDRef != nil {
		in, out := &in.DefaultSubnetIDRef, &out.DefaultSubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultSubnetIDSelector != nil {
		in, out := &in.DefaultSubnetIDSelector, &out.DefaultSubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HostnameTheme != nil {
		in, out := &in.HostnameTheme, &out.HostnameTheme
		*out = new(string)
		**out = **in
	}
	if in.ManageBerkshelf != nil {
		in, out := &in.ManageBerkshelf, &out.ManageBerkshelf
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseCustomCookbooks != nil {
		in, out := &in.UseCustomCookbooks, &out.UseCustomCookbooks
		*out = new(bool)
		**out = **in
	}
	if in.UseOpsworksSecurityGroups != nil {
		in, out := &in.UseOpsworksSecurityGroups, &out.UseOpsworksSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackParameters.
func (in *StackParameters) DeepCopy() *StackParameters {
	if in == nil {
		return nil
	}
	out := new(StackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackSpec) DeepCopyInto(out *StackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackSpec.
func (in *StackSpec) DeepCopy() *StackSpec {
	if in == nil {
		return nil
	}
	out := new(StackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackStatus) DeepCopyInto(out *StackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackStatus.
func (in *StackStatus) DeepCopy() *StackStatus {
	if in == nil {
		return nil
	}
	out := new(StackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayer) DeepCopyInto(out *StaticWebLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayer.
func (in *StaticWebLayer) DeepCopy() *StaticWebLayer {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticWebLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationInitParameters) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationInitParameters.
func (in *StaticWebLayerCloudwatchConfigurationInitParameters) DeepCopy() *StaticWebLayerCloudwatchConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters) DeepCopy() *StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationLogStreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsObservation) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationLogStreamsObservation) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationLogStreamsObservation.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsObservation) DeepCopy() *StaticWebLayerCloudwatchConfigurationLogStreamsObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationLogStreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsParameters) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationLogStreamsParameters) {
	*out = *in
	if in.BatchCount != nil {
		in, out := &in.BatchCount, &out.BatchCount
		*out = new(float64)
		**out = **in
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BufferDuration != nil {
		in, out := &in.BufferDuration, &out.BufferDuration
		*out = new(float64)
		**out = **in
	}
	if in.DatetimeFormat != nil {
		in, out := &in.DatetimeFormat, &out.DatetimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.FileFingerprintLines != nil {
		in, out := &in.FileFingerprintLines, &out.FileFingerprintLines
		*out = new(string)
		**out = **in
	}
	if in.InitialPosition != nil {
		in, out := &in.InitialPosition, &out.InitialPosition
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MultilineStartPattern != nil {
		in, out := &in.MultilineStartPattern, &out.MultilineStartPattern
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationLogStreamsParameters.
func (in *StaticWebLayerCloudwatchConfigurationLogStreamsParameters) DeepCopy() *StaticWebLayerCloudwatchConfigurationLogStreamsParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationLogStreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationObservation) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]StaticWebLayerCloudwatchConfigurationLogStreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationObservation.
func (in *StaticWebLayerCloudwatchConfigurationObservation) DeepCopy() *StaticWebLayerCloudwatchConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerCloudwatchConfigurationParameters) DeepCopyInto(out *StaticWebLayerCloudwatchConfigurationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogStreams != nil {
		in, out := &in.LogStreams, &out.LogStreams
		*out = make([]StaticWebLayerCloudwatchConfigurationLogStreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerCloudwatchConfigurationParameters.
func (in *StaticWebLayerCloudwatchConfigurationParameters) DeepCopy() *StaticWebLayerCloudwatchConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerCloudwatchConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerEBSVolumeInitParameters) DeepCopyInto(out *StaticWebLayerEBSVolumeInitParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerEBSVolumeInitParameters.
func (in *StaticWebLayerEBSVolumeInitParameters) DeepCopy() *StaticWebLayerEBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerEBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerEBSVolumeObservation) DeepCopyInto(out *StaticWebLayerEBSVolumeObservation) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerEBSVolumeObservation.
func (in *StaticWebLayerEBSVolumeObservation) DeepCopy() *StaticWebLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerEBSVolumeParameters) DeepCopyInto(out *StaticWebLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerEBSVolumeParameters.
func (in *StaticWebLayerEBSVolumeParameters) DeepCopy() *StaticWebLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerInitParameters) DeepCopyInto(out *StaticWebLayerInitParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]StaticWebLayerCloudwatchConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]StaticWebLayerEBSVolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerInitParameters.
func (in *StaticWebLayerInitParameters) DeepCopy() *StaticWebLayerInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerList) DeepCopyInto(out *StaticWebLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StaticWebLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerList.
func (in *StaticWebLayerList) DeepCopy() *StaticWebLayerList {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticWebLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingObservation) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingDownscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingDownscalingObservation.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingObservation) DeepCopy() *StaticWebLayerLoadBasedAutoScalingDownscalingObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingDownscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingDownscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingDownscalingParameters.
func (in *StaticWebLayerLoadBasedAutoScalingDownscalingParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingDownscalingParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingDownscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingInitParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingInitParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingDownscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingInitParameters.
func (in *StaticWebLayerLoadBasedAutoScalingInitParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingObservation) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingObservation) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingDownscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingUpscalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingObservation.
func (in *StaticWebLayerLoadBasedAutoScalingObservation) DeepCopy() *StaticWebLayerLoadBasedAutoScalingObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingParameters) {
	*out = *in
	if in.Downscaling != nil {
		in, out := &in.Downscaling, &out.Downscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingDownscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Upscaling != nil {
		in, out := &in.Upscaling, &out.Upscaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingUpscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingParameters.
func (in *StaticWebLayerLoadBasedAutoScalingParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingUpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingObservation) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingUpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingUpscalingObservation.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingObservation) DeepCopy() *StaticWebLayerLoadBasedAutoScalingUpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingUpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingParameters) DeepCopyInto(out *StaticWebLayerLoadBasedAutoScalingUpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerLoadBasedAutoScalingUpscalingParameters.
func (in *StaticWebLayerLoadBasedAutoScalingUpscalingParameters) DeepCopy() *StaticWebLayerLoadBasedAutoScalingUpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerLoadBasedAutoScalingUpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerObservation) DeepCopyInto(out *StaticWebLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]StaticWebLayerCloudwatchConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]StaticWebLayerEBSVolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerObservation.
func (in *StaticWebLayerObservation) DeepCopy() *StaticWebLayerObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerParameters) DeepCopyInto(out *StaticWebLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CloudwatchConfiguration != nil {
		in, out := &in.CloudwatchConfiguration, &out.CloudwatchConfiguration
		*out = make([]StaticWebLayerCloudwatchConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIDRefs != nil {
		in, out := &in.CustomSecurityGroupIDRefs, &out.CustomSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomSecurityGroupIDSelector != nil {
		in, out := &in.CustomSecurityGroupIDSelector, &out.CustomSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]StaticWebLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.LoadBasedAutoScaling != nil {
		in, out := &in.LoadBasedAutoScaling, &out.LoadBasedAutoScaling
		*out = make([]StaticWebLayerLoadBasedAutoScalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StackIDRef != nil {
		in, out := &in.StackIDRef, &out.StackIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackIDSelector != nil {
		in, out := &in.StackIDSelector, &out.StackIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerParameters.
func (in *StaticWebLayerParameters) DeepCopy() *StaticWebLayerParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerSpec) DeepCopyInto(out *StaticWebLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerSpec.
func (in *StaticWebLayerSpec) DeepCopy() *StaticWebLayerSpec {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerStatus) DeepCopyInto(out *StaticWebLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerStatus.
func (in *StaticWebLayerStatus) DeepCopy() *StaticWebLayerStatus {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpscalingInitParameters) DeepCopyInto(out *UpscalingInitParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpscalingInitParameters.
func (in *UpscalingInitParameters) DeepCopy() *UpscalingInitParameters {
	if in == nil {
		return nil
	}
	out := new(UpscalingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpscalingObservation) DeepCopyInto(out *UpscalingObservation) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpscalingObservation.
func (in *UpscalingObservation) DeepCopy() *UpscalingObservation {
	if in == nil {
		return nil
	}
	out := new(UpscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpscalingParameters) DeepCopyInto(out *UpscalingParameters) {
	*out = *in
	if in.Alarms != nil {
		in, out := &in.Alarms, &out.Alarms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreMetricsTime != nil {
		in, out := &in.IgnoreMetricsTime, &out.IgnoreMetricsTime
		*out = new(float64)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadThreshold != nil {
		in, out := &in.LoadThreshold, &out.LoadThreshold
		*out = new(float64)
		**out = **in
	}
	if in.MemoryThreshold != nil {
		in, out := &in.MemoryThreshold, &out.MemoryThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ThresholdsWaitTime != nil {
		in, out := &in.ThresholdsWaitTime, &out.ThresholdsWaitTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpscalingParameters.
func (in *UpscalingParameters) DeepCopy() *UpscalingParameters {
	if in == nil {
		return nil
	}
	out := new(UpscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfile) DeepCopyInto(out *UserProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfile.
func (in *UserProfile) DeepCopy() *UserProfile {
	if in == nil {
		return nil
	}
	out := new(UserProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileInitParameters) DeepCopyInto(out *UserProfileInitParameters) {
	*out = *in
	if in.AllowSelfManagement != nil {
		in, out := &in.AllowSelfManagement, &out.AllowSelfManagement
		*out = new(bool)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.SSHUsername != nil {
		in, out := &in.SSHUsername, &out.SSHUsername
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
	if in.UserArnRef != nil {
		in, out := &in.UserArnRef, &out.UserArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArnSelector != nil {
		in, out := &in.UserArnSelector, &out.UserArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileInitParameters.
func (in *UserProfileInitParameters) DeepCopy() *UserProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileList) DeepCopyInto(out *UserProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileList.
func (in *UserProfileList) DeepCopy() *UserProfileList {
	if in == nil {
		return nil
	}
	out := new(UserProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileObservation) DeepCopyInto(out *UserProfileObservation) {
	*out = *in
	if in.AllowSelfManagement != nil {
		in, out := &in.AllowSelfManagement, &out.AllowSelfManagement
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.SSHUsername != nil {
		in, out := &in.SSHUsername, &out.SSHUsername
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileObservation.
func (in *UserProfileObservation) DeepCopy() *UserProfileObservation {
	if in == nil {
		return nil
	}
	out := new(UserProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileParameters) DeepCopyInto(out *UserProfileParameters) {
	*out = *in
	if in.AllowSelfManagement != nil {
		in, out := &in.AllowSelfManagement, &out.AllowSelfManagement
		*out = new(bool)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.SSHUsername != nil {
		in, out := &in.SSHUsername, &out.SSHUsername
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
	if in.UserArnRef != nil {
		in, out := &in.UserArnRef, &out.UserArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserArnSelector != nil {
		in, out := &in.UserArnSelector, &out.UserArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileParameters.
func (in *UserProfileParameters) DeepCopy() *UserProfileParameters {
	if in == nil {
		return nil
	}
	out := new(UserProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileSpec) DeepCopyInto(out *UserProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileSpec.
func (in *UserProfileSpec) DeepCopy() *UserProfileSpec {
	if in == nil {
		return nil
	}
	out := new(UserProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileStatus) DeepCopyInto(out *UserProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileStatus.
func (in *UserProfileStatus) DeepCopy() *UserProfileStatus {
	if in == nil {
		return nil
	}
	out := new(UserProfileStatus)
	in.DeepCopyInto(out)
	return out
}

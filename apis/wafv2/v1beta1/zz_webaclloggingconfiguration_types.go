// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionConditionInitParameters struct {

	// The action setting that a log record must contain in order to meet the condition. Valid values: ALLOW, BLOCK, COUNT.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`
}

type ActionConditionObservation struct {

	// The action setting that a log record must contain in order to meet the condition. Valid values: ALLOW, BLOCK, COUNT.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`
}

type ActionConditionParameters struct {

	// The action setting that a log record must contain in order to meet the condition. Valid values: ALLOW, BLOCK, COUNT.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`
}

type ConditionInitParameters struct {

	// A single action condition. See Action Condition below for more details.
	ActionCondition []ActionConditionInitParameters `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// A single label name condition. See Label Name Condition below for more details.
	LabelNameCondition []LabelNameConditionInitParameters `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type ConditionObservation struct {

	// A single action condition. See Action Condition below for more details.
	ActionCondition []ActionConditionObservation `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// A single label name condition. See Label Name Condition below for more details.
	LabelNameCondition []LabelNameConditionObservation `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type ConditionParameters struct {

	// A single action condition. See Action Condition below for more details.
	// +kubebuilder:validation:Optional
	ActionCondition []ActionConditionParameters `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// A single label name condition. See Label Name Condition below for more details.
	// +kubebuilder:validation:Optional
	LabelNameCondition []LabelNameConditionParameters `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type FilterInitParameters struct {

	// How to handle logs that satisfy the filter's conditions and requirement. Valid values: KEEP or DROP.
	Behavior *string `json:"behavior,omitempty" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition. Valid values: MEETS_ALL or MEETS_ANY.
	Requirement *string `json:"requirement,omitempty" tf:"requirement,omitempty"`
}

type FilterObservation struct {

	// How to handle logs that satisfy the filter's conditions and requirement. Valid values: KEEP or DROP.
	Behavior *string `json:"behavior,omitempty" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition. Valid values: MEETS_ALL or MEETS_ANY.
	Requirement *string `json:"requirement,omitempty" tf:"requirement,omitempty"`
}

type FilterParameters struct {

	// How to handle logs that satisfy the filter's conditions and requirement. Valid values: KEEP or DROP.
	// +kubebuilder:validation:Optional
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition. Valid values: MEETS_ALL or MEETS_ANY.
	// +kubebuilder:validation:Optional
	Requirement *string `json:"requirement" tf:"requirement,omitempty"`
}

type LabelNameConditionInitParameters struct {

	// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName *string `json:"labelName,omitempty" tf:"label_name,omitempty"`
}

type LabelNameConditionObservation struct {

	// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName *string `json:"labelName,omitempty" tf:"label_name,omitempty"`
}

type LabelNameConditionParameters struct {

	// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label.
	// +kubebuilder:validation:Optional
	LabelName *string `json:"labelName" tf:"label_name,omitempty"`
}

type LoggingFilterInitParameters struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values: KEEP or DROP.
	DefaultBehavior *string `json:"defaultBehavior,omitempty" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`
}

type LoggingFilterObservation struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values: KEEP or DROP.
	DefaultBehavior *string `json:"defaultBehavior,omitempty" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`
}

type LoggingFilterParameters struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values: KEEP or DROP.
	// +kubebuilder:validation:Optional
	DefaultBehavior *string `json:"defaultBehavior" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter" tf:"filter,omitempty"`
}

type RedactedFieldsAllQueryArgumentsInitParameters struct {
}

type RedactedFieldsAllQueryArgumentsObservation struct {
}

type RedactedFieldsAllQueryArgumentsParameters struct {
}

type RedactedFieldsBodyInitParameters struct {
}

type RedactedFieldsBodyObservation struct {
}

type RedactedFieldsBodyParameters struct {
}

type RedactedFieldsInitParameters struct {

	// Redact all query arguments.
	AllQueryArguments []RedactedFieldsAllQueryArgumentsInitParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// Redact the request body, which immediately follows the request headers.
	Body []RedactedFieldsBodyInitParameters `json:"body,omitempty" tf:"body,omitempty"`

	// Redact the HTTP method. Must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	Method []RedactedFieldsMethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Redact the query string. Must be specified as an empty configuration block {}. This is the part of a URL that appears after a ? character, if any.
	QueryString []RedactedFieldsQueryStringInitParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// Redact a single header. See Single Header below for details.
	SingleHeader []RedactedFieldsSingleHeaderInitParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Redact a single query argument. See Single Query Argument below for details.
	SingleQueryArgument []RedactedFieldsSingleQueryArgumentInitParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// Redact the request URI path. Must be specified as an empty configuration block {}. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	URIPath []RedactedFieldsURIPathInitParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RedactedFieldsMethodInitParameters struct {
}

type RedactedFieldsMethodObservation struct {
}

type RedactedFieldsMethodParameters struct {
}

type RedactedFieldsObservation struct {

	// Redact all query arguments.
	AllQueryArguments []RedactedFieldsAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// Redact the request body, which immediately follows the request headers.
	Body []RedactedFieldsBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// Redact the HTTP method. Must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	Method []RedactedFieldsMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Redact the query string. Must be specified as an empty configuration block {}. This is the part of a URL that appears after a ? character, if any.
	QueryString []RedactedFieldsQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// Redact a single header. See Single Header below for details.
	SingleHeader []RedactedFieldsSingleHeaderObservation `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Redact a single query argument. See Single Query Argument below for details.
	SingleQueryArgument []RedactedFieldsSingleQueryArgumentObservation `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// Redact the request URI path. Must be specified as an empty configuration block {}. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	URIPath []RedactedFieldsURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RedactedFieldsParameters struct {

	// Redact all query arguments.
	// +kubebuilder:validation:Optional
	AllQueryArguments []RedactedFieldsAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// Redact the request body, which immediately follows the request headers.
	// +kubebuilder:validation:Optional
	Body []RedactedFieldsBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// Redact the HTTP method. Must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	// +kubebuilder:validation:Optional
	Method []RedactedFieldsMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Redact the query string. Must be specified as an empty configuration block {}. This is the part of a URL that appears after a ? character, if any.
	// +kubebuilder:validation:Optional
	QueryString []RedactedFieldsQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// Redact a single header. See Single Header below for details.
	// +kubebuilder:validation:Optional
	SingleHeader []RedactedFieldsSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Redact a single query argument. See Single Query Argument below for details.
	// +kubebuilder:validation:Optional
	SingleQueryArgument []RedactedFieldsSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// Redact the request URI path. Must be specified as an empty configuration block {}. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	// +kubebuilder:validation:Optional
	URIPath []RedactedFieldsURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RedactedFieldsQueryStringInitParameters struct {
}

type RedactedFieldsQueryStringObservation struct {
}

type RedactedFieldsQueryStringParameters struct {
}

type RedactedFieldsSingleHeaderInitParameters struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RedactedFieldsSingleHeaderObservation struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RedactedFieldsSingleHeaderParameters struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type RedactedFieldsSingleQueryArgumentInitParameters struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RedactedFieldsSingleQueryArgumentObservation struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RedactedFieldsSingleQueryArgumentParameters struct {

	// The name of the query header to redact. This setting must be provided as lower case characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type RedactedFieldsURIPathInitParameters struct {
}

type RedactedFieldsURIPathObservation struct {
}

type RedactedFieldsURIPathParameters struct {
}

type WebACLLoggingConfigurationInitParameters struct {

	// The Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) that you want to associate with the web ACL.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// A configuration block that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation. See Logging Filter below for more details.
	LoggingFilter []LoggingFilterInitParameters `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// The parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	RedactedFields []RedactedFieldsInitParameters `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`
}

type WebACLLoggingConfigurationObservation struct {

	// The Amazon Resource Name (ARN) of the WAFv2 Web ACL.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) that you want to associate with the web ACL.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// A configuration block that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation. See Logging Filter below for more details.
	LoggingFilter []LoggingFilterObservation `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// The parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	RedactedFields []RedactedFieldsObservation `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`

	// The Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
	// AWS WebACL ARN
	ResourceArn *string `json:"resourceArn,omitempty" tf:"resource_arn,omitempty"`
}

type WebACLLoggingConfigurationParameters struct {

	// The Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) that you want to associate with the web ACL.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +kubebuilder:validation:Optional
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// A configuration block that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation. See Logging Filter below for more details.
	// +kubebuilder:validation:Optional
	LoggingFilter []LoggingFilterParameters `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// The parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	// +kubebuilder:validation:Optional
	RedactedFields []RedactedFieldsParameters `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// The Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
	// AWS WebACL ARN
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/wafv2/v1beta1.WebACL
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	ResourceArn *string `json:"resourceArn,omitempty" tf:"resource_arn,omitempty"`

	// Reference to a WebACL in wafv2 to populate resourceArn.
	// +kubebuilder:validation:Optional
	ResourceArnRef *v1.Reference `json:"resourceArnRef,omitempty" tf:"-"`

	// Selector for a WebACL in wafv2 to populate resourceArn.
	// +kubebuilder:validation:Optional
	ResourceArnSelector *v1.Selector `json:"resourceArnSelector,omitempty" tf:"-"`
}

// WebACLLoggingConfigurationSpec defines the desired state of WebACLLoggingConfiguration
type WebACLLoggingConfigurationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebACLLoggingConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebACLLoggingConfigurationInitParameters `json:"initProvider,omitempty"`
}

// WebACLLoggingConfigurationStatus defines the observed state of WebACLLoggingConfiguration.
type WebACLLoggingConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebACLLoggingConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WebACLLoggingConfiguration is the Schema for the WebACLLoggingConfigurations API. Creates a WAFv2 Web ACL Logging Configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type WebACLLoggingConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logDestinationConfigs) || (has(self.initProvider) && has(self.initProvider.logDestinationConfigs))",message="spec.forProvider.logDestinationConfigs is a required parameter"
	Spec   WebACLLoggingConfigurationSpec   `json:"spec"`
	Status WebACLLoggingConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebACLLoggingConfigurationList contains a list of WebACLLoggingConfigurations
type WebACLLoggingConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebACLLoggingConfiguration `json:"items"`
}

// Repository type metadata.
var (
	WebACLLoggingConfiguration_Kind             = "WebACLLoggingConfiguration"
	WebACLLoggingConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebACLLoggingConfiguration_Kind}.String()
	WebACLLoggingConfiguration_KindAPIVersion   = WebACLLoggingConfiguration_Kind + "." + CRDGroupVersion.String()
	WebACLLoggingConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(WebACLLoggingConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&WebACLLoggingConfiguration{}, &WebACLLoggingConfigurationList{})
}

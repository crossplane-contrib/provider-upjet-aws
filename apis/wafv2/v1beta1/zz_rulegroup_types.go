// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomResponseBodyInitParameters struct {

	// The payload of the custom response.
	Content *string `json:"content,omitempty" tf:"content,omitempty"`

	// The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type CustomResponseBodyObservation struct {

	// The payload of the custom response.
	Content *string `json:"content,omitempty" tf:"content,omitempty"`

	// The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type CustomResponseBodyParameters struct {

	// The payload of the custom response.
	// +kubebuilder:validation:Optional
	Content *string `json:"content" tf:"content,omitempty"`

	// The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`
}

type RuleGroupInitParameters struct {

	// The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
	CustomResponseBody []CustomResponseBodyInitParameters `json:"customResponseBody,omitempty" tf:"custom_response_body,omitempty"`

	// A friendly description of the rule group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A friendly name of the rule group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
	RuleJSON *string `json:"ruleJson,omitempty" tf:"rule_json,omitempty"`

	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig *VisibilityConfigInitParameters `json:"visibilityConfig,omitempty" tf:"visibility_config,omitempty"`
}

type RuleGroupObservation struct {

	// The ARN of the WAF rule group.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
	CustomResponseBody []CustomResponseBodyObservation `json:"customResponseBody,omitempty" tf:"custom_response_body,omitempty"`

	// A friendly description of the rule group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the WAF rule group.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LockToken *string `json:"lockToken,omitempty" tf:"lock_token,omitempty"`

	// A friendly name of the rule group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
	RuleJSON *string `json:"ruleJson,omitempty" tf:"rule_json,omitempty"`

	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig *VisibilityConfigObservation `json:"visibilityConfig,omitempty" tf:"visibility_config,omitempty"`
}

type RuleGroupParameters struct {

	// The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
	// +kubebuilder:validation:Optional
	CustomResponseBody []CustomResponseBodyParameters `json:"customResponseBody,omitempty" tf:"custom_response_body,omitempty"`

	// A friendly description of the rule group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A friendly name of the rule group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
	// +kubebuilder:validation:Optional
	RuleJSON *string `json:"ruleJson,omitempty" tf:"rule_json,omitempty"`

	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	// +kubebuilder:validation:Optional
	VisibilityConfig *VisibilityConfigParameters `json:"visibilityConfig,omitempty" tf:"visibility_config,omitempty"`
}

type VisibilityConfigInitParameters struct {

	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled,omitempty" tf:"cloudwatch_metrics_enabled,omitempty"`

	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled,omitempty" tf:"sampled_requests_enabled,omitempty"`
}

type VisibilityConfigObservation struct {

	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled,omitempty" tf:"cloudwatch_metrics_enabled,omitempty"`

	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled,omitempty" tf:"sampled_requests_enabled,omitempty"`
}

type VisibilityConfigParameters struct {

	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
	// +kubebuilder:validation:Optional
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled,omitempty"`

	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
	// +kubebuilder:validation:Optional
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	// +kubebuilder:validation:Optional
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled,omitempty"`
}

// RuleGroupSpec defines the desired state of RuleGroup
type RuleGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RuleGroupInitParameters `json:"initProvider,omitempty"`
}

// RuleGroupStatus defines the observed state of RuleGroup.
type RuleGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RuleGroup is the Schema for the RuleGroups API. Creates a WAFv2 rule group resource. The 'rule' field is not supported due to Kubernetes CRD size limitations with deeply nested fields. Please use the 'ruleJson' field to define rules.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type RuleGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.capacity) || (has(self.initProvider) && has(self.initProvider.capacity))",message="spec.forProvider.capacity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.visibilityConfig) || (has(self.initProvider) && has(self.initProvider.visibilityConfig))",message="spec.forProvider.visibilityConfig is a required parameter"
	Spec   RuleGroupSpec   `json:"spec"`
	Status RuleGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupList contains a list of RuleGroups
type RuleGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RuleGroup `json:"items"`
}

// Repository type metadata.
var (
	RuleGroup_Kind             = "RuleGroup"
	RuleGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RuleGroup_Kind}.String()
	RuleGroup_KindAPIVersion   = RuleGroup_Kind + "." + CRDGroupVersion.String()
	RuleGroup_GroupVersionKind = CRDGroupVersion.WithKind(RuleGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&RuleGroup{}, &RuleGroupList{})
}

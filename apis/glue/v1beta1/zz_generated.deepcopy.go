//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsNotificationPropertyObservation) DeepCopyInto(out *ActionsNotificationPropertyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsNotificationPropertyObservation.
func (in *ActionsNotificationPropertyObservation) DeepCopy() *ActionsNotificationPropertyObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsNotificationPropertyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsNotificationPropertyParameters) DeepCopyInto(out *ActionsNotificationPropertyParameters) {
	*out = *in
	if in.NotifyDelayAfter != nil {
		in, out := &in.NotifyDelayAfter, &out.NotifyDelayAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsNotificationPropertyParameters.
func (in *ActionsNotificationPropertyParameters) DeepCopy() *ActionsNotificationPropertyParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsNotificationPropertyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsObservation) DeepCopyInto(out *ActionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsObservation.
func (in *ActionsObservation) DeepCopy() *ActionsObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsParameters) DeepCopyInto(out *ActionsParameters) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.JobNameRef != nil {
		in, out := &in.JobNameRef, &out.JobNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobNameSelector != nil {
		in, out := &in.JobNameSelector, &out.JobNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = make([]ActionsNotificationPropertyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsParameters.
func (in *ActionsParameters) DeepCopy() *ActionsParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabase) DeepCopyInto(out *CatalogDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabase.
func (in *CatalogDatabase) DeepCopy() *CatalogDatabase {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseList) DeepCopyInto(out *CatalogDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseList.
func (in *CatalogDatabaseList) DeepCopy() *CatalogDatabaseList {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseObservation) DeepCopyInto(out *CatalogDatabaseObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseObservation.
func (in *CatalogDatabaseObservation) DeepCopy() *CatalogDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseParameters) DeepCopyInto(out *CatalogDatabaseParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreateTableDefaultPermission != nil {
		in, out := &in.CreateTableDefaultPermission, &out.CreateTableDefaultPermission
		*out = make([]CreateTableDefaultPermissionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LocationURI != nil {
		in, out := &in.LocationURI, &out.LocationURI
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TargetDatabase != nil {
		in, out := &in.TargetDatabase, &out.TargetDatabase
		*out = make([]TargetDatabaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseParameters.
func (in *CatalogDatabaseParameters) DeepCopy() *CatalogDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseSpec) DeepCopyInto(out *CatalogDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseSpec.
func (in *CatalogDatabaseSpec) DeepCopy() *CatalogDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseStatus) DeepCopyInto(out *CatalogDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseStatus.
func (in *CatalogDatabaseStatus) DeepCopy() *CatalogDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTable) DeepCopyInto(out *CatalogTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTable.
func (in *CatalogTable) DeepCopy() *CatalogTable {
	if in == nil {
		return nil
	}
	out := new(CatalogTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableList) DeepCopyInto(out *CatalogTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableList.
func (in *CatalogTableList) DeepCopy() *CatalogTableList {
	if in == nil {
		return nil
	}
	out := new(CatalogTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableObservation) DeepCopyInto(out *CatalogTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = make([]PartitionIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableObservation.
func (in *CatalogTableObservation) DeepCopy() *CatalogTableObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableParameters) DeepCopyInto(out *CatalogTableParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = make([]PartitionIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeys != nil {
		in, out := &in.PartitionKeys, &out.PartitionKeys
		*out = make([]PartitionKeysParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.StorageDescriptor != nil {
		in, out := &in.StorageDescriptor, &out.StorageDescriptor
		*out = make([]StorageDescriptorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.TargetTable != nil {
		in, out := &in.TargetTable, &out.TargetTable
		*out = make([]TargetTableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViewExpandedText != nil {
		in, out := &in.ViewExpandedText, &out.ViewExpandedText
		*out = new(string)
		**out = **in
	}
	if in.ViewOriginalText != nil {
		in, out := &in.ViewOriginalText, &out.ViewOriginalText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableParameters.
func (in *CatalogTableParameters) DeepCopy() *CatalogTableParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpec) DeepCopyInto(out *CatalogTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpec.
func (in *CatalogTableSpec) DeepCopy() *CatalogTableSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableStatus) DeepCopyInto(out *CatalogTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableStatus.
func (in *CatalogTableStatus) DeepCopy() *CatalogTableStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Classifier) DeepCopyInto(out *Classifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Classifier.
func (in *Classifier) DeepCopy() *Classifier {
	if in == nil {
		return nil
	}
	out := new(Classifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Classifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierList) DeepCopyInto(out *ClassifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Classifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierList.
func (in *ClassifierList) DeepCopy() *ClassifierList {
	if in == nil {
		return nil
	}
	out := new(ClassifierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClassifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierObservation) DeepCopyInto(out *ClassifierObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierObservation.
func (in *ClassifierObservation) DeepCopy() *ClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(ClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierParameters) DeepCopyInto(out *ClassifierParameters) {
	*out = *in
	if in.CsvClassifier != nil {
		in, out := &in.CsvClassifier, &out.CsvClassifier
		*out = make([]CsvClassifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GrokClassifier != nil {
		in, out := &in.GrokClassifier, &out.GrokClassifier
		*out = make([]GrokClassifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONClassifier != nil {
		in, out := &in.JSONClassifier, &out.JSONClassifier
		*out = make([]JSONClassifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.XMLClassifier != nil {
		in, out := &in.XMLClassifier, &out.XMLClassifier
		*out = make([]XMLClassifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierParameters.
func (in *ClassifierParameters) DeepCopy() *ClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(ClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpec) DeepCopyInto(out *ClassifierSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpec.
func (in *ClassifierSpec) DeepCopy() *ClassifierSpec {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierStatus) DeepCopyInto(out *ClassifierStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierStatus.
func (in *ClassifierStatus) DeepCopy() *ClassifierStatus {
	if in == nil {
		return nil
	}
	out := new(ClassifierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchEncryptionObservation) DeepCopyInto(out *CloudwatchEncryptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchEncryptionObservation.
func (in *CloudwatchEncryptionObservation) DeepCopy() *CloudwatchEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchEncryptionParameters) DeepCopyInto(out *CloudwatchEncryptionParameters) {
	*out = *in
	if in.CloudwatchEncryptionMode != nil {
		in, out := &in.CloudwatchEncryptionMode, &out.CloudwatchEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArnRef != nil {
		in, out := &in.KMSKeyArnRef, &out.KMSKeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArnSelector != nil {
		in, out := &in.KMSKeyArnSelector, &out.KMSKeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchEncryptionParameters.
func (in *CloudwatchEncryptionParameters) DeepCopy() *CloudwatchEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsObservation) DeepCopyInto(out *ColumnsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsObservation.
func (in *ColumnsObservation) DeepCopy() *ColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsParameters) DeepCopyInto(out *ColumnsParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsParameters.
func (in *ColumnsParameters) DeepCopy() *ColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandObservation) DeepCopyInto(out *CommandObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandObservation.
func (in *CommandObservation) DeepCopy() *CommandObservation {
	if in == nil {
		return nil
	}
	out := new(CommandObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommandParameters) DeepCopyInto(out *CommandParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.ScriptLocation != nil {
		in, out := &in.ScriptLocation, &out.ScriptLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommandParameters.
func (in *CommandParameters) DeepCopy() *CommandParameters {
	if in == nil {
		return nil
	}
	out := new(CommandParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.CrawlState != nil {
		in, out := &in.CrawlState, &out.CrawlState
		*out = new(string)
		**out = **in
	}
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.JobNameRef != nil {
		in, out := &in.JobNameRef, &out.JobNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.JobNameSelector != nil {
		in, out := &in.JobNameSelector, &out.JobNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogicalOperator != nil {
		in, out := &in.LogicalOperator, &out.LogicalOperator
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionPropertiesSecretRef != nil {
		in, out := &in.ConnectionPropertiesSecretRef, &out.ConnectionPropertiesSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PhysicalConnectionRequirements != nil {
		in, out := &in.PhysicalConnectionRequirements, &out.PhysicalConnectionRequirements
		*out = make([]PhysicalConnectionRequirementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPasswordEncryptionObservation) DeepCopyInto(out *ConnectionPasswordEncryptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPasswordEncryptionObservation.
func (in *ConnectionPasswordEncryptionObservation) DeepCopy() *ConnectionPasswordEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionPasswordEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionPasswordEncryptionParameters) DeepCopyInto(out *ConnectionPasswordEncryptionParameters) {
	*out = *in
	if in.AwsKMSKeyID != nil {
		in, out := &in.AwsKMSKeyID, &out.AwsKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsKMSKeyIDRef != nil {
		in, out := &in.AwsKMSKeyIDRef, &out.AwsKMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AwsKMSKeyIDSelector != nil {
		in, out := &in.AwsKMSKeyIDSelector, &out.AwsKMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReturnConnectionPasswordEncrypted != nil {
		in, out := &in.ReturnConnectionPasswordEncrypted, &out.ReturnConnectionPasswordEncrypted
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionPasswordEncryptionParameters.
func (in *ConnectionPasswordEncryptionParameters) DeepCopy() *ConnectionPasswordEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionPasswordEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateTableDefaultPermissionObservation) DeepCopyInto(out *CreateTableDefaultPermissionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateTableDefaultPermissionObservation.
func (in *CreateTableDefaultPermissionObservation) DeepCopy() *CreateTableDefaultPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(CreateTableDefaultPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateTableDefaultPermissionParameters) DeepCopyInto(out *CreateTableDefaultPermissionParameters) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = make([]PrincipalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateTableDefaultPermissionParameters.
func (in *CreateTableDefaultPermissionParameters) DeepCopy() *CreateTableDefaultPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(CreateTableDefaultPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvClassifierObservation) DeepCopyInto(out *CsvClassifierObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvClassifierObservation.
func (in *CsvClassifierObservation) DeepCopy() *CsvClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(CsvClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvClassifierParameters) DeepCopyInto(out *CsvClassifierParameters) {
	*out = *in
	if in.AllowSingleColumn != nil {
		in, out := &in.AllowSingleColumn, &out.AllowSingleColumn
		*out = new(bool)
		**out = **in
	}
	if in.ContainsHeader != nil {
		in, out := &in.ContainsHeader, &out.ContainsHeader
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableValueTrimming != nil {
		in, out := &in.DisableValueTrimming, &out.DisableValueTrimming
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QuoteSymbol != nil {
		in, out := &in.QuoteSymbol, &out.QuoteSymbol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvClassifierParameters.
func (in *CsvClassifierParameters) DeepCopy() *CsvClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(CsvClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettings) DeepCopyInto(out *DataCatalogEncryptionSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettings.
func (in *DataCatalogEncryptionSettings) DeepCopy() *DataCatalogEncryptionSettings {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataCatalogEncryptionSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation) DeepCopyInto(out *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation.
func (in *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation) DeepCopy() *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters) DeepCopyInto(out *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters) {
	*out = *in
	if in.ConnectionPasswordEncryption != nil {
		in, out := &in.ConnectionPasswordEncryption, &out.ConnectionPasswordEncryption
		*out = make([]ConnectionPasswordEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionAtRest != nil {
		in, out := &in.EncryptionAtRest, &out.EncryptionAtRest
		*out = make([]EncryptionAtRestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters.
func (in *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters) DeepCopy() *DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsList) DeepCopyInto(out *DataCatalogEncryptionSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataCatalogEncryptionSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsList.
func (in *DataCatalogEncryptionSettingsList) DeepCopy() *DataCatalogEncryptionSettingsList {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataCatalogEncryptionSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsObservation) DeepCopyInto(out *DataCatalogEncryptionSettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsObservation.
func (in *DataCatalogEncryptionSettingsObservation) DeepCopy() *DataCatalogEncryptionSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsParameters) DeepCopyInto(out *DataCatalogEncryptionSettingsParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DataCatalogEncryptionSettings != nil {
		in, out := &in.DataCatalogEncryptionSettings, &out.DataCatalogEncryptionSettings
		*out = make([]DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsParameters.
func (in *DataCatalogEncryptionSettingsParameters) DeepCopy() *DataCatalogEncryptionSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpec) DeepCopyInto(out *DataCatalogEncryptionSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpec.
func (in *DataCatalogEncryptionSettingsSpec) DeepCopy() *DataCatalogEncryptionSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsStatus) DeepCopyInto(out *DataCatalogEncryptionSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsStatus.
func (in *DataCatalogEncryptionSettingsStatus) DeepCopy() *DataCatalogEncryptionSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRestObservation) DeepCopyInto(out *EncryptionAtRestObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRestObservation.
func (in *EncryptionAtRestObservation) DeepCopy() *EncryptionAtRestObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionAtRestParameters) DeepCopyInto(out *EncryptionAtRestParameters) {
	*out = *in
	if in.CatalogEncryptionMode != nil {
		in, out := &in.CatalogEncryptionMode, &out.CatalogEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.SseAwsKMSKeyID != nil {
		in, out := &in.SseAwsKMSKeyID, &out.SseAwsKMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SseAwsKMSKeyIDRef != nil {
		in, out := &in.SseAwsKMSKeyIDRef, &out.SseAwsKMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SseAwsKMSKeyIDSelector != nil {
		in, out := &in.SseAwsKMSKeyIDSelector, &out.SseAwsKMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionAtRestParameters.
func (in *EncryptionAtRestParameters) DeepCopy() *EncryptionAtRestParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionAtRestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationObservation) DeepCopyInto(out *EncryptionConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationObservation.
func (in *EncryptionConfigurationObservation) DeepCopy() *EncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationParameters) DeepCopyInto(out *EncryptionConfigurationParameters) {
	*out = *in
	if in.CloudwatchEncryption != nil {
		in, out := &in.CloudwatchEncryption, &out.CloudwatchEncryption
		*out = make([]CloudwatchEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobBookmarksEncryption != nil {
		in, out := &in.JobBookmarksEncryption, &out.JobBookmarksEncryption
		*out = make([]JobBookmarksEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3Encryption != nil {
		in, out := &in.S3Encryption, &out.S3Encryption
		*out = make([]S3EncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationParameters.
func (in *EncryptionConfigurationParameters) DeepCopy() *EncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBatchingConditionObservation) DeepCopyInto(out *EventBatchingConditionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBatchingConditionObservation.
func (in *EventBatchingConditionObservation) DeepCopy() *EventBatchingConditionObservation {
	if in == nil {
		return nil
	}
	out := new(EventBatchingConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventBatchingConditionParameters) DeepCopyInto(out *EventBatchingConditionParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BatchWindow != nil {
		in, out := &in.BatchWindow, &out.BatchWindow
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventBatchingConditionParameters.
func (in *EventBatchingConditionParameters) DeepCopy() *EventBatchingConditionParameters {
	if in == nil {
		return nil
	}
	out := new(EventBatchingConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionPropertyObservation) DeepCopyInto(out *ExecutionPropertyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionPropertyObservation.
func (in *ExecutionPropertyObservation) DeepCopy() *ExecutionPropertyObservation {
	if in == nil {
		return nil
	}
	out := new(ExecutionPropertyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionPropertyParameters) DeepCopyInto(out *ExecutionPropertyParameters) {
	*out = *in
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionPropertyParameters.
func (in *ExecutionPropertyParameters) DeepCopy() *ExecutionPropertyParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionPropertyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokClassifierObservation) DeepCopyInto(out *GrokClassifierObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokClassifierObservation.
func (in *GrokClassifierObservation) DeepCopy() *GrokClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(GrokClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrokClassifierParameters) DeepCopyInto(out *GrokClassifierParameters) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CustomPatterns != nil {
		in, out := &in.CustomPatterns, &out.CustomPatterns
		*out = new(string)
		**out = **in
	}
	if in.GrokPattern != nil {
		in, out := &in.GrokPattern, &out.GrokPattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrokClassifierParameters.
func (in *GrokClassifierParameters) DeepCopy() *GrokClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(GrokClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONClassifierObservation) DeepCopyInto(out *JSONClassifierObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONClassifierObservation.
func (in *JSONClassifierObservation) DeepCopy() *JSONClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(JSONClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONClassifierParameters) DeepCopyInto(out *JSONClassifierParameters) {
	*out = *in
	if in.JSONPath != nil {
		in, out := &in.JSONPath, &out.JSONPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONClassifierParameters.
func (in *JSONClassifierParameters) DeepCopy() *JSONClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(JSONClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobBookmarksEncryptionObservation) DeepCopyInto(out *JobBookmarksEncryptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobBookmarksEncryptionObservation.
func (in *JobBookmarksEncryptionObservation) DeepCopy() *JobBookmarksEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(JobBookmarksEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobBookmarksEncryptionParameters) DeepCopyInto(out *JobBookmarksEncryptionParameters) {
	*out = *in
	if in.JobBookmarksEncryptionMode != nil {
		in, out := &in.JobBookmarksEncryptionMode, &out.JobBookmarksEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArnRef != nil {
		in, out := &in.KMSKeyArnRef, &out.KMSKeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArnSelector != nil {
		in, out := &in.KMSKeyArnSelector, &out.KMSKeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobBookmarksEncryptionParameters.
func (in *JobBookmarksEncryptionParameters) DeepCopy() *JobBookmarksEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(JobBookmarksEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]CommandParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultArguments != nil {
		in, out := &in.DefaultArguments, &out.DefaultArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionProperty != nil {
		in, out := &in.ExecutionProperty, &out.ExecutionProperty
		*out = make([]ExecutionPropertyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.NonOverridableArguments != nil {
		in, out := &in.NonOverridableArguments, &out.NonOverridableArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = make([]NotificationPropertyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPropertyObservation) DeepCopyInto(out *NotificationPropertyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPropertyObservation.
func (in *NotificationPropertyObservation) DeepCopy() *NotificationPropertyObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationPropertyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPropertyParameters) DeepCopyInto(out *NotificationPropertyParameters) {
	*out = *in
	if in.NotifyDelayAfter != nil {
		in, out := &in.NotifyDelayAfter, &out.NotifyDelayAfter
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPropertyParameters.
func (in *NotificationPropertyParameters) DeepCopy() *NotificationPropertyParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationPropertyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndexObservation) DeepCopyInto(out *PartitionIndexObservation) {
	*out = *in
	if in.IndexStatus != nil {
		in, out := &in.IndexStatus, &out.IndexStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndexObservation.
func (in *PartitionIndexObservation) DeepCopy() *PartitionIndexObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionIndexParameters) DeepCopyInto(out *PartitionIndexParameters) {
	*out = *in
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionIndexParameters.
func (in *PartitionIndexParameters) DeepCopy() *PartitionIndexParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeysObservation) DeepCopyInto(out *PartitionKeysObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeysObservation.
func (in *PartitionKeysObservation) DeepCopy() *PartitionKeysObservation {
	if in == nil {
		return nil
	}
	out := new(PartitionKeysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionKeysParameters) DeepCopyInto(out *PartitionKeysParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionKeysParameters.
func (in *PartitionKeysParameters) DeepCopy() *PartitionKeysParameters {
	if in == nil {
		return nil
	}
	out := new(PartitionKeysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalConnectionRequirementsObservation) DeepCopyInto(out *PhysicalConnectionRequirementsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalConnectionRequirementsObservation.
func (in *PhysicalConnectionRequirementsObservation) DeepCopy() *PhysicalConnectionRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(PhysicalConnectionRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalConnectionRequirementsParameters) DeepCopyInto(out *PhysicalConnectionRequirementsParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneRef != nil {
		in, out := &in.AvailabilityZoneRef, &out.AvailabilityZoneRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AvailabilityZoneSelector != nil {
		in, out := &in.AvailabilityZoneSelector, &out.AvailabilityZoneSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDList != nil {
		in, out := &in.SecurityGroupIDList, &out.SecurityGroupIDList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalConnectionRequirementsParameters.
func (in *PhysicalConnectionRequirementsParameters) DeepCopy() *PhysicalConnectionRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(PhysicalConnectionRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredicateObservation) DeepCopyInto(out *PredicateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredicateObservation.
func (in *PredicateObservation) DeepCopy() *PredicateObservation {
	if in == nil {
		return nil
	}
	out := new(PredicateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredicateParameters) DeepCopyInto(out *PredicateParameters) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logical != nil {
		in, out := &in.Logical, &out.Logical
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredicateParameters.
func (in *PredicateParameters) DeepCopy() *PredicateParameters {
	if in == nil {
		return nil
	}
	out := new(PredicateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrincipalObservation) DeepCopyInto(out *PrincipalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrincipalObservation.
func (in *PrincipalObservation) DeepCopy() *PrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(PrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrincipalParameters) DeepCopyInto(out *PrincipalParameters) {
	*out = *in
	if in.DataLakePrincipalIdentifier != nil {
		in, out := &in.DataLakePrincipalIdentifier, &out.DataLakePrincipalIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrincipalParameters.
func (in *PrincipalParameters) DeepCopy() *PrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(PrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Registry) DeepCopyInto(out *Registry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Registry.
func (in *Registry) DeepCopy() *Registry {
	if in == nil {
		return nil
	}
	out := new(Registry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Registry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryList) DeepCopyInto(out *RegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Registry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryList.
func (in *RegistryList) DeepCopy() *RegistryList {
	if in == nil {
		return nil
	}
	out := new(RegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryObservation) DeepCopyInto(out *RegistryObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryObservation.
func (in *RegistryObservation) DeepCopy() *RegistryObservation {
	if in == nil {
		return nil
	}
	out := new(RegistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryParameters) DeepCopyInto(out *RegistryParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryParameters.
func (in *RegistryParameters) DeepCopy() *RegistryParameters {
	if in == nil {
		return nil
	}
	out := new(RegistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpec) DeepCopyInto(out *RegistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpec.
func (in *RegistrySpec) DeepCopy() *RegistrySpec {
	if in == nil {
		return nil
	}
	out := new(RegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryStatus) DeepCopyInto(out *RegistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryStatus.
func (in *RegistryStatus) DeepCopy() *RegistryStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicy) DeepCopyInto(out *ResourcePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicy.
func (in *ResourcePolicy) DeepCopy() *ResourcePolicy {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyList) DeepCopyInto(out *ResourcePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourcePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyList.
func (in *ResourcePolicyList) DeepCopy() *ResourcePolicyList {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyObservation) DeepCopyInto(out *ResourcePolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyObservation.
func (in *ResourcePolicyObservation) DeepCopy() *ResourcePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyParameters) DeepCopyInto(out *ResourcePolicyParameters) {
	*out = *in
	if in.EnableHybrid != nil {
		in, out := &in.EnableHybrid, &out.EnableHybrid
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyParameters.
func (in *ResourcePolicyParameters) DeepCopy() *ResourcePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicySpec) DeepCopyInto(out *ResourcePolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicySpec.
func (in *ResourcePolicySpec) DeepCopy() *ResourcePolicySpec {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyStatus) DeepCopyInto(out *ResourcePolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyStatus.
func (in *ResourcePolicyStatus) DeepCopy() *ResourcePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceUrisObservation) DeepCopyInto(out *ResourceUrisObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceUrisObservation.
func (in *ResourceUrisObservation) DeepCopy() *ResourceUrisObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceUrisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceUrisParameters) DeepCopyInto(out *ResourceUrisParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceUrisParameters.
func (in *ResourceUrisParameters) DeepCopy() *ResourceUrisParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceUrisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3EncryptionObservation) DeepCopyInto(out *S3EncryptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3EncryptionObservation.
func (in *S3EncryptionObservation) DeepCopy() *S3EncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(S3EncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3EncryptionParameters) DeepCopyInto(out *S3EncryptionParameters) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArnRef != nil {
		in, out := &in.KMSKeyArnRef, &out.KMSKeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArnSelector != nil {
		in, out := &in.KMSKeyArnSelector, &out.KMSKeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3EncryptionMode != nil {
		in, out := &in.S3EncryptionMode, &out.S3EncryptionMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3EncryptionParameters.
func (in *S3EncryptionParameters) DeepCopy() *S3EncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(S3EncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaIDObservation) DeepCopyInto(out *SchemaIDObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaIDObservation.
func (in *SchemaIDObservation) DeepCopy() *SchemaIDObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaIDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaIDParameters) DeepCopyInto(out *SchemaIDParameters) {
	*out = *in
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.SchemaArn != nil {
		in, out := &in.SchemaArn, &out.SchemaArn
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaIDParameters.
func (in *SchemaIDParameters) DeepCopy() *SchemaIDParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaIDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaReferenceObservation) DeepCopyInto(out *SchemaReferenceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaReferenceObservation.
func (in *SchemaReferenceObservation) DeepCopy() *SchemaReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(SchemaReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaReferenceParameters) DeepCopyInto(out *SchemaReferenceParameters) {
	*out = *in
	if in.SchemaID != nil {
		in, out := &in.SchemaID, &out.SchemaID
		*out = make([]SchemaIDParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchemaVersionID != nil {
		in, out := &in.SchemaVersionID, &out.SchemaVersionID
		*out = new(string)
		**out = **in
	}
	if in.SchemaVersionNumber != nil {
		in, out := &in.SchemaVersionNumber, &out.SchemaVersionNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaReferenceParameters.
func (in *SchemaReferenceParameters) DeepCopy() *SchemaReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(SchemaReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfiguration) DeepCopyInto(out *SecurityConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfiguration.
func (in *SecurityConfiguration) DeepCopy() *SecurityConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecurityConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationList) DeepCopyInto(out *SecurityConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationList.
func (in *SecurityConfigurationList) DeepCopy() *SecurityConfigurationList {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationObservation) DeepCopyInto(out *SecurityConfigurationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationObservation.
func (in *SecurityConfigurationObservation) DeepCopy() *SecurityConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationParameters) DeepCopyInto(out *SecurityConfigurationParameters) {
	*out = *in
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationParameters.
func (in *SecurityConfigurationParameters) DeepCopy() *SecurityConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpec) DeepCopyInto(out *SecurityConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpec.
func (in *SecurityConfigurationSpec) DeepCopy() *SecurityConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationStatus) DeepCopyInto(out *SecurityConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationStatus.
func (in *SecurityConfigurationStatus) DeepCopy() *SecurityConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerDeInfoObservation) DeepCopyInto(out *SerDeInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerDeInfoObservation.
func (in *SerDeInfoObservation) DeepCopy() *SerDeInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SerDeInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerDeInfoParameters) DeepCopyInto(out *SerDeInfoParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SerializationLibrary != nil {
		in, out := &in.SerializationLibrary, &out.SerializationLibrary
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerDeInfoParameters.
func (in *SerDeInfoParameters) DeepCopy() *SerDeInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SerDeInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkewedInfoObservation) DeepCopyInto(out *SkewedInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkewedInfoObservation.
func (in *SkewedInfoObservation) DeepCopy() *SkewedInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SkewedInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkewedInfoParameters) DeepCopyInto(out *SkewedInfoParameters) {
	*out = *in
	if in.SkewedColumnNames != nil {
		in, out := &in.SkewedColumnNames, &out.SkewedColumnNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkewedColumnValueLocationMaps != nil {
		in, out := &in.SkewedColumnValueLocationMaps, &out.SkewedColumnValueLocationMaps
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SkewedColumnValues != nil {
		in, out := &in.SkewedColumnValues, &out.SkewedColumnValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkewedInfoParameters.
func (in *SkewedInfoParameters) DeepCopy() *SkewedInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SkewedInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortColumnsObservation) DeepCopyInto(out *SortColumnsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortColumnsObservation.
func (in *SortColumnsObservation) DeepCopy() *SortColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(SortColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SortColumnsParameters) DeepCopyInto(out *SortColumnsParameters) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SortColumnsParameters.
func (in *SortColumnsParameters) DeepCopy() *SortColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(SortColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageDescriptorObservation) DeepCopyInto(out *StorageDescriptorObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageDescriptorObservation.
func (in *StorageDescriptorObservation) DeepCopy() *StorageDescriptorObservation {
	if in == nil {
		return nil
	}
	out := new(StorageDescriptorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageDescriptorParameters) DeepCopyInto(out *StorageDescriptorParameters) {
	*out = *in
	if in.BucketColumns != nil {
		in, out := &in.BucketColumns, &out.BucketColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compressed != nil {
		in, out := &in.Compressed, &out.Compressed
		*out = new(bool)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NumberOfBuckets != nil {
		in, out := &in.NumberOfBuckets, &out.NumberOfBuckets
		*out = new(float64)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SchemaReference != nil {
		in, out := &in.SchemaReference, &out.SchemaReference
		*out = make([]SchemaReferenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerDeInfo != nil {
		in, out := &in.SerDeInfo, &out.SerDeInfo
		*out = make([]SerDeInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkewedInfo != nil {
		in, out := &in.SkewedInfo, &out.SkewedInfo
		*out = make([]SkewedInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SortColumns != nil {
		in, out := &in.SortColumns, &out.SortColumns
		*out = make([]SortColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoredAsSubDirectories != nil {
		in, out := &in.StoredAsSubDirectories, &out.StoredAsSubDirectories
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageDescriptorParameters.
func (in *StorageDescriptorParameters) DeepCopy() *StorageDescriptorParameters {
	if in == nil {
		return nil
	}
	out := new(StorageDescriptorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetDatabaseObservation) DeepCopyInto(out *TargetDatabaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetDatabaseObservation.
func (in *TargetDatabaseObservation) DeepCopy() *TargetDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(TargetDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetDatabaseParameters) DeepCopyInto(out *TargetDatabaseParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetDatabaseParameters.
func (in *TargetDatabaseParameters) DeepCopy() *TargetDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(TargetDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTableObservation) DeepCopyInto(out *TargetTableObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTableObservation.
func (in *TargetTableObservation) DeepCopy() *TargetTableObservation {
	if in == nil {
		return nil
	}
	out := new(TargetTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetTableParameters) DeepCopyInto(out *TargetTableParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetTableParameters.
func (in *TargetTableParameters) DeepCopy() *TargetTableParameters {
	if in == nil {
		return nil
	}
	out := new(TargetTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Trigger) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerList) DeepCopyInto(out *TriggerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerList.
func (in *TriggerList) DeepCopy() *TriggerList {
	if in == nil {
		return nil
	}
	out := new(TriggerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventBatchingCondition != nil {
		in, out := &in.EventBatchingCondition, &out.EventBatchingCondition
		*out = make([]EventBatchingConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Predicate != nil {
		in, out := &in.Predicate, &out.Predicate
		*out = make([]PredicateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.StartOnCreation != nil {
		in, out := &in.StartOnCreation, &out.StartOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WorkflowName != nil {
		in, out := &in.WorkflowName, &out.WorkflowName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpec) DeepCopyInto(out *TriggerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpec.
func (in *TriggerSpec) DeepCopy() *TriggerSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatus) DeepCopyInto(out *TriggerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatus.
func (in *TriggerStatus) DeepCopy() *TriggerStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunction) DeepCopyInto(out *UserDefinedFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunction.
func (in *UserDefinedFunction) DeepCopy() *UserDefinedFunction {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserDefinedFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionList) DeepCopyInto(out *UserDefinedFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserDefinedFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionList.
func (in *UserDefinedFunctionList) DeepCopy() *UserDefinedFunctionList {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserDefinedFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionObservation) DeepCopyInto(out *UserDefinedFunctionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionObservation.
func (in *UserDefinedFunctionObservation) DeepCopy() *UserDefinedFunctionObservation {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionParameters) DeepCopyInto(out *UserDefinedFunctionParameters) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
	if in.OwnerType != nil {
		in, out := &in.OwnerType, &out.OwnerType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceUris != nil {
		in, out := &in.ResourceUris, &out.ResourceUris
		*out = make([]ResourceUrisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionParameters.
func (in *UserDefinedFunctionParameters) DeepCopy() *UserDefinedFunctionParameters {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionSpec) DeepCopyInto(out *UserDefinedFunctionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionSpec.
func (in *UserDefinedFunctionSpec) DeepCopy() *UserDefinedFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionStatus) DeepCopyInto(out *UserDefinedFunctionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionStatus.
func (in *UserDefinedFunctionStatus) DeepCopy() *UserDefinedFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowObservation) DeepCopyInto(out *WorkflowObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowObservation.
func (in *WorkflowObservation) DeepCopy() *WorkflowObservation {
	if in == nil {
		return nil
	}
	out := new(WorkflowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowParameters) DeepCopyInto(out *WorkflowParameters) {
	*out = *in
	if in.DefaultRunProperties != nil {
		in, out := &in.DefaultRunProperties, &out.DefaultRunProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowParameters.
func (in *WorkflowParameters) DeepCopy() *WorkflowParameters {
	if in == nil {
		return nil
	}
	out := new(WorkflowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XMLClassifierObservation) DeepCopyInto(out *XMLClassifierObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XMLClassifierObservation.
func (in *XMLClassifierObservation) DeepCopy() *XMLClassifierObservation {
	if in == nil {
		return nil
	}
	out := new(XMLClassifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XMLClassifierParameters) DeepCopyInto(out *XMLClassifierParameters) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.RowTag != nil {
		in, out := &in.RowTag, &out.RowTag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XMLClassifierParameters.
func (in *XMLClassifierParameters) DeepCopy() *XMLClassifierParameters {
	if in == nil {
		return nil
	}
	out := new(XMLClassifierParameters)
	in.DeepCopyInto(out)
	return out
}

//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountInitParameters) DeepCopyInto(out *AcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountInitParameters.
func (in *AcceleratorCountInitParameters) DeepCopy() *AcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountObservation) DeepCopyInto(out *AcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountObservation.
func (in *AcceleratorCountObservation) DeepCopy() *AcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountParameters) DeepCopyInto(out *AcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountParameters.
func (in *AcceleratorCountParameters) DeepCopy() *AcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibInitParameters.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopy() *AcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopyInto(out *AcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibObservation.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopy() *AcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibParameters.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopy() *AcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterInitParameters) DeepCopyInto(out *AccepterInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterInitParameters.
func (in *AccepterInitParameters) DeepCopy() *AccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterObservation) DeepCopyInto(out *AccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterObservation.
func (in *AccepterObservation) DeepCopy() *AccepterObservation {
	if in == nil {
		return nil
	}
	out := new(AccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterParameters) DeepCopyInto(out *AccepterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterParameters.
func (in *AccepterParameters) DeepCopy() *AccepterParameters {
	if in == nil {
		return nil
	}
	out := new(AccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsInitParameters.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopy() *BaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *BaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsObservation.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopy() *BaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsParameters.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopy() *BaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsInitParameters) DeepCopyInto(out *BlockDeviceMappingsInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = new(EBSInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsInitParameters.
func (in *BlockDeviceMappingsInitParameters) DeepCopy() *BlockDeviceMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsObservation) DeepCopyInto(out *BlockDeviceMappingsObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = new(EBSObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsObservation.
func (in *BlockDeviceMappingsObservation) DeepCopy() *BlockDeviceMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsParameters) DeepCopyInto(out *BlockDeviceMappingsParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = new(EBSParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsParameters.
func (in *BlockDeviceMappingsParameters) DeepCopy() *BlockDeviceMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsInitParameters) DeepCopyInto(out *CPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsInitParameters.
func (in *CPUOptionsInitParameters) DeepCopy() *CPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsObservation) DeepCopyInto(out *CPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsObservation.
func (in *CPUOptionsObservation) DeepCopy() *CPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsParameters) DeepCopyInto(out *CPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsParameters.
func (in *CPUOptionsParameters) DeepCopy() *CPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceInitParameters) DeepCopyInto(out *CapacityRebalanceInitParameters) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceInitParameters.
func (in *CapacityRebalanceInitParameters) DeepCopy() *CapacityRebalanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceObservation) DeepCopyInto(out *CapacityRebalanceObservation) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceObservation.
func (in *CapacityRebalanceObservation) DeepCopy() *CapacityRebalanceObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceParameters) DeepCopyInto(out *CapacityRebalanceParameters) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceParameters.
func (in *CapacityRebalanceParameters) DeepCopy() *CapacityRebalanceParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetInitParameters.
func (in *CapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetObservation.
func (in *CapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetParameters.
func (in *CapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationInitParameters) DeepCopyInto(out *CapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationTargetInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationInitParameters.
func (in *CapacityReservationSpecificationInitParameters) DeepCopy() *CapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationObservation) DeepCopyInto(out *CapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationTargetObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationObservation.
func (in *CapacityReservationSpecificationObservation) DeepCopy() *CapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationParameters) DeepCopyInto(out *CapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationTargetParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationParameters.
func (in *CapacityReservationSpecificationParameters) DeepCopy() *CapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetInitParameters) DeepCopyInto(out *CapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetInitParameters.
func (in *CapacityReservationTargetInitParameters) DeepCopy() *CapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetObservation) DeepCopyInto(out *CapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetObservation.
func (in *CapacityReservationTargetObservation) DeepCopy() *CapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetParameters) DeepCopyInto(out *CapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetParameters.
func (in *CapacityReservationTargetParameters) DeepCopy() *CapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextInitParameters) DeepCopyInto(out *CidrAuthorizationContextInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextInitParameters.
func (in *CidrAuthorizationContextInitParameters) DeepCopy() *CidrAuthorizationContextInitParameters {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextObservation) DeepCopyInto(out *CidrAuthorizationContextObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextObservation.
func (in *CidrAuthorizationContextObservation) DeepCopy() *CidrAuthorizationContextObservation {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextParameters) DeepCopyInto(out *CidrAuthorizationContextParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextParameters.
func (in *CidrAuthorizationContextParameters) DeepCopy() *CidrAuthorizationContextParameters {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataInitParameters) DeepCopyInto(out *ClientDataInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataInitParameters.
func (in *ClientDataInitParameters) DeepCopy() *ClientDataInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataObservation) DeepCopyInto(out *ClientDataObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataObservation.
func (in *ClientDataObservation) DeepCopy() *ClientDataObservation {
	if in == nil {
		return nil
	}
	out := new(ClientDataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataParameters) DeepCopyInto(out *ClientDataParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataParameters.
func (in *ClientDataParameters) DeepCopy() *ClientDataParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsInitParameters) DeepCopyInto(out *CloudwatchLogOptionsInitParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsInitParameters.
func (in *CloudwatchLogOptionsInitParameters) DeepCopy() *CloudwatchLogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsObservation) DeepCopyInto(out *CloudwatchLogOptionsObservation) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsObservation.
func (in *CloudwatchLogOptionsObservation) DeepCopy() *CloudwatchLogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsParameters) DeepCopyInto(out *CloudwatchLogOptionsParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsParameters.
func (in *CloudwatchLogOptionsParameters) DeepCopy() *CloudwatchLogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationInitParameters) DeepCopyInto(out *CreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationInitParameters.
func (in *CreditSpecificationInitParameters) DeepCopy() *CreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationObservation) DeepCopyInto(out *CreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationObservation.
func (in *CreditSpecificationObservation) DeepCopy() *CreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationParameters) DeepCopyInto(out *CreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationParameters.
func (in *CreditSpecificationParameters) DeepCopy() *CreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryInitParameters) DeepCopyInto(out *DNSEntryInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryInitParameters.
func (in *DNSEntryInitParameters) DeepCopy() *DNSEntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSEntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryObservation) DeepCopyInto(out *DNSEntryObservation) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryObservation.
func (in *DNSEntryObservation) DeepCopy() *DNSEntryObservation {
	if in == nil {
		return nil
	}
	out := new(DNSEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryParameters) DeepCopyInto(out *DNSEntryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryParameters.
func (in *DNSEntryParameters) DeepCopy() *DNSEntryParameters {
	if in == nil {
		return nil
	}
	out := new(DNSEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsInitParameters) DeepCopyInto(out *DNSOptionsInitParameters) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsInitParameters.
func (in *DNSOptionsInitParameters) DeepCopy() *DNSOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsObservation) DeepCopyInto(out *DNSOptionsObservation) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsObservation.
func (in *DNSOptionsObservation) DeepCopy() *DNSOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsParameters) DeepCopyInto(out *DNSOptionsParameters) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsParameters.
func (in *DNSOptionsParameters) DeepCopy() *DNSOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsInitParameters) DeepCopyInto(out *DestinationOptionsInitParameters) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsInitParameters.
func (in *DestinationOptionsInitParameters) DeepCopy() *DestinationOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsObservation) DeepCopyInto(out *DestinationOptionsObservation) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsObservation.
func (in *DestinationOptionsObservation) DeepCopy() *DestinationOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsParameters) DeepCopyInto(out *DestinationOptionsParameters) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsParameters.
func (in *DestinationOptionsParameters) DeepCopy() *DestinationOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeInitParameters) DeepCopyInto(out *DestinationPortRangeInitParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeInitParameters.
func (in *DestinationPortRangeInitParameters) DeepCopy() *DestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeObservation) DeepCopyInto(out *DestinationPortRangeObservation) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeObservation.
func (in *DestinationPortRangeObservation) DeepCopy() *DestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeParameters) DeepCopyInto(out *DestinationPortRangeParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeParameters.
func (in *DestinationPortRangeParameters) DeepCopy() *DestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerInitParameters) DeepCopyInto(out *DiskContainerInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = new(UserBucketInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerInitParameters.
func (in *DiskContainerInitParameters) DeepCopy() *DiskContainerInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskContainerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerObservation) DeepCopyInto(out *DiskContainerObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = new(UserBucketObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerObservation.
func (in *DiskContainerObservation) DeepCopy() *DiskContainerObservation {
	if in == nil {
		return nil
	}
	out := new(DiskContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerParameters) DeepCopyInto(out *DiskContainerParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = new(UserBucketParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerParameters.
func (in *DiskContainerParameters) DeepCopy() *DiskContainerParameters {
	if in == nil {
		return nil
	}
	out := new(DiskContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceInitParameters) DeepCopyInto(out *EBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceInitParameters.
func (in *EBSBlockDeviceInitParameters) DeepCopy() *EBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceObservation) DeepCopyInto(out *EBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceObservation.
func (in *EBSBlockDeviceObservation) DeepCopy() *EBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceParameters) DeepCopyInto(out *EBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceParameters.
func (in *EBSBlockDeviceParameters) DeepCopy() *EBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSInitParameters) DeepCopyInto(out *EBSInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSInitParameters.
func (in *EBSInitParameters) DeepCopy() *EBSInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSObservation) DeepCopyInto(out *EBSObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSObservation.
func (in *EBSObservation) DeepCopy() *EBSObservation {
	if in == nil {
		return nil
	}
	out := new(EBSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSParameters) DeepCopyInto(out *EBSParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSParameters.
func (in *EBSParameters) DeepCopy() *EBSParameters {
	if in == nil {
		return nil
	}
	out := new(EBSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImport) DeepCopyInto(out *EBSSnapshotImport) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImport.
func (in *EBSSnapshotImport) DeepCopy() *EBSSnapshotImport {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotImport) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportInitParameters) DeepCopyInto(out *EBSSnapshotImportInitParameters) {
	*out = *in
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = new(ClientDataInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = new(DiskContainerInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportInitParameters.
func (in *EBSSnapshotImportInitParameters) DeepCopy() *EBSSnapshotImportInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportList) DeepCopyInto(out *EBSSnapshotImportList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSSnapshotImport, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportList.
func (in *EBSSnapshotImportList) DeepCopy() *EBSSnapshotImportList {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotImportList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportObservation) DeepCopyInto(out *EBSSnapshotImportObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = new(ClientDataObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DataEncryptionKeyID != nil {
		in, out := &in.DataEncryptionKeyID, &out.DataEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = new(DiskContainerObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerAlias != nil {
		in, out := &in.OwnerAlias, &out.OwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportObservation.
func (in *EBSSnapshotImportObservation) DeepCopy() *EBSSnapshotImportObservation {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportParameters) DeepCopyInto(out *EBSSnapshotImportParameters) {
	*out = *in
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = new(ClientDataParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = new(DiskContainerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportParameters.
func (in *EBSSnapshotImportParameters) DeepCopy() *EBSSnapshotImportParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportSpec) DeepCopyInto(out *EBSSnapshotImportSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportSpec.
func (in *EBSSnapshotImportSpec) DeepCopy() *EBSSnapshotImportSpec {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportStatus) DeepCopyInto(out *EBSSnapshotImportStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportStatus.
func (in *EBSSnapshotImportStatus) DeepCopy() *EBSSnapshotImportStatus {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopyInto(out *ElasticGpuSpecificationsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsInitParameters.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopy() *ElasticGpuSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsObservation) DeepCopyInto(out *ElasticGpuSpecificationsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsObservation.
func (in *ElasticGpuSpecificationsObservation) DeepCopy() *ElasticGpuSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsParameters) DeepCopyInto(out *ElasticGpuSpecificationsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsParameters.
func (in *ElasticGpuSpecificationsParameters) DeepCopy() *ElasticGpuSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopyInto(out *ElasticInferenceAcceleratorInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorInitParameters.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopy() *ElasticInferenceAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorObservation) DeepCopyInto(out *ElasticInferenceAcceleratorObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorObservation.
func (in *ElasticInferenceAcceleratorObservation) DeepCopy() *ElasticInferenceAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorParameters) DeepCopyInto(out *ElasticInferenceAcceleratorParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorParameters.
func (in *ElasticInferenceAcceleratorParameters) DeepCopy() *ElasticInferenceAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsInitParameters) DeepCopyInto(out *EnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsInitParameters.
func (in *EnclaveOptionsInitParameters) DeepCopy() *EnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsObservation) DeepCopyInto(out *EnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsObservation.
func (in *EnclaveOptionsObservation) DeepCopy() *EnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsParameters) DeepCopyInto(out *EnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsParameters.
func (in *EnclaveOptionsParameters) DeepCopy() *EnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceInitParameters) DeepCopyInto(out *EphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceInitParameters.
func (in *EphemeralBlockDeviceInitParameters) DeepCopy() *EphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceObservation) DeepCopyInto(out *EphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceObservation.
func (in *EphemeralBlockDeviceObservation) DeepCopy() *EphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceParameters) DeepCopyInto(out *EphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceParameters.
func (in *EphemeralBlockDeviceParameters) DeepCopy() *EphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLog) DeepCopyInto(out *FlowLog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLog.
func (in *FlowLog) DeepCopy() *FlowLog {
	if in == nil {
		return nil
	}
	out := new(FlowLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlowLog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogInitParameters) DeepCopyInto(out *FlowLogInitParameters) {
	*out = *in
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = new(DestinationOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationRef != nil {
		in, out := &in.LogDestinationRef, &out.LogDestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationSelector != nil {
		in, out := &in.LogDestinationSelector, &out.LogDestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogInitParameters.
func (in *FlowLogInitParameters) DeepCopy() *FlowLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogList) DeepCopyInto(out *FlowLogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FlowLog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogList.
func (in *FlowLogList) DeepCopy() *FlowLogList {
	if in == nil {
		return nil
	}
	out := new(FlowLogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlowLogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogObservation) DeepCopyInto(out *FlowLogObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = new(DestinationOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogObservation.
func (in *FlowLogObservation) DeepCopy() *FlowLogObservation {
	if in == nil {
		return nil
	}
	out := new(FlowLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogParameters) DeepCopyInto(out *FlowLogParameters) {
	*out = *in
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = new(DestinationOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationRef != nil {
		in, out := &in.LogDestinationRef, &out.LogDestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationSelector != nil {
		in, out := &in.LogDestinationSelector, &out.LogDestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogParameters.
func (in *FlowLogParameters) DeepCopy() *FlowLogParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogSpec) DeepCopyInto(out *FlowLogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogSpec.
func (in *FlowLogSpec) DeepCopy() *FlowLogSpec {
	if in == nil {
		return nil
	}
	out := new(FlowLogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogStatus) DeepCopyInto(out *FlowLogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogStatus.
func (in *FlowLogStatus) DeepCopy() *FlowLogStatus {
	if in == nil {
		return nil
	}
	out := new(FlowLogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsInitParameters) DeepCopyInto(out *HibernationOptionsInitParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsInitParameters.
func (in *HibernationOptionsInitParameters) DeepCopy() *HibernationOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsObservation) DeepCopyInto(out *HibernationOptionsObservation) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsObservation.
func (in *HibernationOptionsObservation) DeepCopy() *HibernationOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsParameters) DeepCopyInto(out *HibernationOptionsParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsParameters.
func (in *HibernationOptionsParameters) DeepCopy() *HibernationOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileInitParameters) DeepCopyInto(out *IAMInstanceProfileInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileInitParameters.
func (in *IAMInstanceProfileInitParameters) DeepCopy() *IAMInstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileObservation) DeepCopyInto(out *IAMInstanceProfileObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileObservation.
func (in *IAMInstanceProfileObservation) DeepCopy() *IAMInstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileParameters) DeepCopyInto(out *IAMInstanceProfileParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileParameters.
func (in *IAMInstanceProfileParameters) DeepCopy() *IAMInstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(CPUOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(CapacityReservationSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(CreditSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(EnclaveOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(InstanceMarketOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(LaunchTemplateInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(MaintenanceOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(MetadataOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(PrivateDNSNameOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(RootBlockDeviceInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsInitParameters) DeepCopyInto(out *InstanceMarketOptionsInitParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(SpotOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsInitParameters.
func (in *InstanceMarketOptionsInitParameters) DeepCopy() *InstanceMarketOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsObservation) DeepCopyInto(out *InstanceMarketOptionsObservation) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(SpotOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsObservation.
func (in *InstanceMarketOptionsObservation) DeepCopy() *InstanceMarketOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsParameters) DeepCopyInto(out *InstanceMarketOptionsParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(SpotOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsParameters.
func (in *InstanceMarketOptionsParameters) DeepCopy() *InstanceMarketOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsInitParameters) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsInitParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsInitParameters.
func (in *InstanceMarketOptionsSpotOptionsInitParameters) DeepCopy() *InstanceMarketOptionsSpotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsObservation) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsObservation) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsObservation.
func (in *InstanceMarketOptionsSpotOptionsObservation) DeepCopy() *InstanceMarketOptionsSpotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsParameters) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsParameters.
func (in *InstanceMarketOptionsSpotOptionsParameters) DeepCopy() *InstanceMarketOptionsSpotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(CPUOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(CapacityReservationSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(CreditSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(EnclaveOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecycle != nil {
		in, out := &in.InstanceLifecycle, &out.InstanceLifecycle
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(InstanceMarketOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceState != nil {
		in, out := &in.InstanceState, &out.InstanceState
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(LaunchTemplateObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(MaintenanceOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(MetadataOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PasswordData != nil {
		in, out := &in.PasswordData, &out.PasswordData
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryNetworkInterfaceID != nil {
		in, out := &in.PrimaryNetworkInterfaceID, &out.PrimaryNetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(PrivateDNSNameOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(RootBlockDeviceObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstanceRequestID != nil {
		in, out := &in.SpotInstanceRequestID, &out.SpotInstanceRequestID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(CPUOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(CapacityReservationSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(CreditSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(EnclaveOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(InstanceMarketOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(LaunchTemplateParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(MaintenanceOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(MetadataOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(PrivateDNSNameOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(RootBlockDeviceParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountInitParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountInitParameters.
func (in *InstanceRequirementsAcceleratorCountInitParameters) DeepCopy() *InstanceRequirementsAcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountObservation) DeepCopyInto(out *InstanceRequirementsAcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountObservation.
func (in *InstanceRequirementsAcceleratorCountObservation) DeepCopy() *InstanceRequirementsAcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountParameters.
func (in *InstanceRequirementsAcceleratorCountParameters) DeepCopy() *InstanceRequirementsAcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibInitParameters.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibObservation) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibObservation.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibObservation) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibParameters.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibParameters) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsObservation.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsParameters.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsInitParameters) DeepCopyInto(out *InstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(AcceleratorCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(AcceleratorTotalMemoryMibInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(BaselineEBSBandwidthMbpsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice != nil {
		in, out := &in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice, &out.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(MemoryGibPerVcpuInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(MemoryMibInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(NetworkBandwidthGbpsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(NetworkInterfaceCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(TotalLocalStorageGbInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(VcpuCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsInitParameters.
func (in *InstanceRequirementsInitParameters) DeepCopy() *InstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuInitParameters) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuInitParameters.
func (in *InstanceRequirementsMemoryGibPerVcpuInitParameters) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuObservation) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuObservation.
func (in *InstanceRequirementsMemoryGibPerVcpuObservation) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuParameters) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuParameters.
func (in *InstanceRequirementsMemoryGibPerVcpuParameters) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibInitParameters) DeepCopyInto(out *InstanceRequirementsMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibInitParameters.
func (in *InstanceRequirementsMemoryMibInitParameters) DeepCopy() *InstanceRequirementsMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibObservation) DeepCopyInto(out *InstanceRequirementsMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibObservation.
func (in *InstanceRequirementsMemoryMibObservation) DeepCopy() *InstanceRequirementsMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibParameters) DeepCopyInto(out *InstanceRequirementsMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibParameters.
func (in *InstanceRequirementsMemoryMibParameters) DeepCopy() *InstanceRequirementsMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsInitParameters) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsInitParameters.
func (in *InstanceRequirementsNetworkBandwidthGbpsInitParameters) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsObservation) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsObservation.
func (in *InstanceRequirementsNetworkBandwidthGbpsObservation) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsParameters) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsParameters.
func (in *InstanceRequirementsNetworkBandwidthGbpsParameters) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountInitParameters) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountInitParameters.
func (in *InstanceRequirementsNetworkInterfaceCountInitParameters) DeepCopy() *InstanceRequirementsNetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountObservation) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountObservation.
func (in *InstanceRequirementsNetworkInterfaceCountObservation) DeepCopy() *InstanceRequirementsNetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountParameters) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountParameters.
func (in *InstanceRequirementsNetworkInterfaceCountParameters) DeepCopy() *InstanceRequirementsNetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsObservation) DeepCopyInto(out *InstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(AcceleratorCountObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(AcceleratorTotalMemoryMibObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(BaselineEBSBandwidthMbpsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice != nil {
		in, out := &in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice, &out.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(MemoryGibPerVcpuObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(MemoryMibObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(NetworkBandwidthGbpsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(NetworkInterfaceCountObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(TotalLocalStorageGbObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(VcpuCountObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsObservation.
func (in *InstanceRequirementsObservation) DeepCopy() *InstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsParameters) DeepCopyInto(out *InstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(AcceleratorCountParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(AcceleratorTotalMemoryMibParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(BaselineEBSBandwidthMbpsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice != nil {
		in, out := &in.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice, &out.MaxSpotPriceAsPercentageOfOptimalOnDemandPrice
		*out = new(float64)
		**out = **in
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(MemoryGibPerVcpuParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(MemoryMibParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(NetworkBandwidthGbpsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(NetworkInterfaceCountParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(TotalLocalStorageGbParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(VcpuCountParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsParameters.
func (in *InstanceRequirementsParameters) DeepCopy() *InstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbInitParameters) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbInitParameters.
func (in *InstanceRequirementsTotalLocalStorageGbInitParameters) DeepCopy() *InstanceRequirementsTotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbObservation) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbObservation.
func (in *InstanceRequirementsTotalLocalStorageGbObservation) DeepCopy() *InstanceRequirementsTotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbParameters) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbParameters.
func (in *InstanceRequirementsTotalLocalStorageGbParameters) DeepCopy() *InstanceRequirementsTotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountInitParameters) DeepCopyInto(out *InstanceRequirementsVcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountInitParameters.
func (in *InstanceRequirementsVcpuCountInitParameters) DeepCopy() *InstanceRequirementsVcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountObservation) DeepCopyInto(out *InstanceRequirementsVcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountObservation.
func (in *InstanceRequirementsVcpuCountObservation) DeepCopy() *InstanceRequirementsVcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountParameters) DeepCopyInto(out *InstanceRequirementsVcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountParameters.
func (in *InstanceRequirementsVcpuCountParameters) DeepCopy() *InstanceRequirementsVcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceInitParameters.
func (in *LaunchSpecificationEBSBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceObservation.
func (in *LaunchSpecificationEBSBlockDeviceObservation) DeepCopy() *LaunchSpecificationEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceParameters.
func (in *LaunchSpecificationEBSBlockDeviceParameters) DeepCopy() *LaunchSpecificationEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceInitParameters.
func (in *LaunchSpecificationEphemeralBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceObservation.
func (in *LaunchSpecificationEphemeralBlockDeviceObservation) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceParameters.
func (in *LaunchSpecificationEphemeralBlockDeviceParameters) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationInitParameters) DeepCopyInto(out *LaunchSpecificationInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArnRef != nil {
		in, out := &in.IAMInstanceProfileArnRef, &out.IAMInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfileArnSelector != nil {
		in, out := &in.IAMInstanceProfileArnSelector, &out.IAMInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationInitParameters.
func (in *LaunchSpecificationInitParameters) DeepCopy() *LaunchSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationObservation) DeepCopyInto(out *LaunchSpecificationObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationObservation.
func (in *LaunchSpecificationObservation) DeepCopy() *LaunchSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationParameters) DeepCopyInto(out *LaunchSpecificationParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArnRef != nil {
		in, out := &in.IAMInstanceProfileArnRef, &out.IAMInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfileArnSelector != nil {
		in, out := &in.IAMInstanceProfileArnSelector, &out.IAMInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationParameters.
func (in *LaunchSpecificationParameters) DeepCopy() *LaunchSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceInitParameters.
func (in *LaunchSpecificationRootBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationRootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceObservation.
func (in *LaunchSpecificationRootBlockDeviceObservation) DeepCopy() *LaunchSpecificationRootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceParameters.
func (in *LaunchSpecificationRootBlockDeviceParameters) DeepCopy() *LaunchSpecificationRootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplate) DeepCopyInto(out *LaunchTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplate.
func (in *LaunchTemplate) DeepCopy() *LaunchTemplate {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LaunchTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsInitParameters) DeepCopyInto(out *LaunchTemplateCPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsInitParameters.
func (in *LaunchTemplateCPUOptionsInitParameters) DeepCopy() *LaunchTemplateCPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsObservation) DeepCopyInto(out *LaunchTemplateCPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsObservation.
func (in *LaunchTemplateCPUOptionsObservation) DeepCopy() *LaunchTemplateCPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsParameters) DeepCopyInto(out *LaunchTemplateCPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsParameters.
func (in *LaunchTemplateCPUOptionsParameters) DeepCopy() *LaunchTemplateCPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationSpecificationCapacityReservationTargetInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationInitParameters.
func (in *LaunchTemplateCapacityReservationSpecificationInitParameters) DeepCopy() *LaunchTemplateCapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationObservation) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationSpecificationCapacityReservationTargetObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationObservation.
func (in *LaunchTemplateCapacityReservationSpecificationObservation) DeepCopy() *LaunchTemplateCapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationParameters) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(CapacityReservationSpecificationCapacityReservationTargetParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationParameters.
func (in *LaunchTemplateCapacityReservationSpecificationParameters) DeepCopy() *LaunchTemplateCapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigInitParameters) DeepCopyInto(out *LaunchTemplateConfigInitParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = new(LaunchTemplateSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigInitParameters.
func (in *LaunchTemplateConfigInitParameters) DeepCopy() *LaunchTemplateConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigObservation) DeepCopyInto(out *LaunchTemplateConfigObservation) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = new(LaunchTemplateSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigObservation.
func (in *LaunchTemplateConfigObservation) DeepCopy() *LaunchTemplateConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigParameters) DeepCopyInto(out *LaunchTemplateConfigParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = new(LaunchTemplateSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigParameters.
func (in *LaunchTemplateConfigParameters) DeepCopy() *LaunchTemplateConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateCreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationInitParameters.
func (in *LaunchTemplateCreditSpecificationInitParameters) DeepCopy() *LaunchTemplateCreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationObservation) DeepCopyInto(out *LaunchTemplateCreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationObservation.
func (in *LaunchTemplateCreditSpecificationObservation) DeepCopy() *LaunchTemplateCreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationParameters) DeepCopyInto(out *LaunchTemplateCreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationParameters.
func (in *LaunchTemplateCreditSpecificationParameters) DeepCopy() *LaunchTemplateCreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsInitParameters) DeepCopyInto(out *LaunchTemplateEnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsInitParameters.
func (in *LaunchTemplateEnclaveOptionsInitParameters) DeepCopy() *LaunchTemplateEnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsObservation) DeepCopyInto(out *LaunchTemplateEnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsObservation.
func (in *LaunchTemplateEnclaveOptionsObservation) DeepCopy() *LaunchTemplateEnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsParameters) DeepCopyInto(out *LaunchTemplateEnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsParameters.
func (in *LaunchTemplateEnclaveOptionsParameters) DeepCopy() *LaunchTemplateEnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInitParameters) DeepCopyInto(out *LaunchTemplateInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInitParameters.
func (in *LaunchTemplateInitParameters) DeepCopy() *LaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInitParameters_2) DeepCopyInto(out *LaunchTemplateInitParameters_2) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(LaunchTemplateCPUOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(LaunchTemplateCapacityReservationSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(LaunchTemplateCreditSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = new(ElasticInferenceAcceleratorInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(LaunchTemplateEnclaveOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = new(HibernationOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(IAMInstanceProfileInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(LaunchTemplateInstanceMarketOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(InstanceRequirementsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(LaunchTemplateMaintenanceOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(LaunchTemplateMetadataOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(MonitoringInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(PlacementInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(LaunchTemplatePrivateDNSNameOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNameRefs != nil {
		in, out := &in.SecurityGroupNameRefs, &out.SecurityGroupNameRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupNameSelector != nil {
		in, out := &in.SecurityGroupNameSelector, &out.SecurityGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInitParameters_2.
func (in *LaunchTemplateInitParameters_2) DeepCopy() *LaunchTemplateInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsInitParameters) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsInitParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(InstanceMarketOptionsSpotOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsInitParameters.
func (in *LaunchTemplateInstanceMarketOptionsInitParameters) DeepCopy() *LaunchTemplateInstanceMarketOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsObservation) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsObservation) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(InstanceMarketOptionsSpotOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsObservation.
func (in *LaunchTemplateInstanceMarketOptionsObservation) DeepCopy() *LaunchTemplateInstanceMarketOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsParameters) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = new(InstanceMarketOptionsSpotOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsParameters.
func (in *LaunchTemplateInstanceMarketOptionsParameters) DeepCopy() *LaunchTemplateInstanceMarketOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateList) DeepCopyInto(out *LaunchTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LaunchTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateList.
func (in *LaunchTemplateList) DeepCopy() *LaunchTemplateList {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LaunchTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsInitParameters) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsInitParameters.
func (in *LaunchTemplateMaintenanceOptionsInitParameters) DeepCopy() *LaunchTemplateMaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsObservation) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsObservation.
func (in *LaunchTemplateMaintenanceOptionsObservation) DeepCopy() *LaunchTemplateMaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsParameters) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsParameters.
func (in *LaunchTemplateMaintenanceOptionsParameters) DeepCopy() *LaunchTemplateMaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsInitParameters) DeepCopyInto(out *LaunchTemplateMetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsInitParameters.
func (in *LaunchTemplateMetadataOptionsInitParameters) DeepCopy() *LaunchTemplateMetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsObservation) DeepCopyInto(out *LaunchTemplateMetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsObservation.
func (in *LaunchTemplateMetadataOptionsObservation) DeepCopy() *LaunchTemplateMetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsParameters) DeepCopyInto(out *LaunchTemplateMetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsParameters.
func (in *LaunchTemplateMetadataOptionsParameters) DeepCopy() *LaunchTemplateMetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation) DeepCopyInto(out *LaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation.
func (in *LaunchTemplateObservation) DeepCopy() *LaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation_2) DeepCopyInto(out *LaunchTemplateObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(LaunchTemplateCPUOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(LaunchTemplateCapacityReservationSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(LaunchTemplateCreditSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = new(ElasticInferenceAcceleratorObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(LaunchTemplateEnclaveOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = new(HibernationOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(IAMInstanceProfileObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(LaunchTemplateInstanceMarketOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(InstanceRequirementsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(float64)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(LaunchTemplateMaintenanceOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(LaunchTemplateMetadataOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(MonitoringObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(PlacementObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(LaunchTemplatePrivateDNSNameOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation_2.
func (in *LaunchTemplateObservation_2) DeepCopy() *LaunchTemplateObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters_2) DeepCopyInto(out *LaunchTemplateParameters_2) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(LaunchTemplateCPUOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(LaunchTemplateCapacityReservationSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(LaunchTemplateCreditSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = new(ElasticInferenceAcceleratorParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(LaunchTemplateEnclaveOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = new(HibernationOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(IAMInstanceProfileParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = new(LaunchTemplateInstanceMarketOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(InstanceRequirementsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(LaunchTemplateMaintenanceOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(LaunchTemplateMetadataOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(MonitoringParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(PlacementParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(LaunchTemplatePrivateDNSNameOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNameRefs != nil {
		in, out := &in.SecurityGroupNameRefs, &out.SecurityGroupNameRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupNameSelector != nil {
		in, out := &in.SecurityGroupNameSelector, &out.SecurityGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters_2.
func (in *LaunchTemplateParameters_2) DeepCopy() *LaunchTemplateParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsInitParameters) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsInitParameters.
func (in *LaunchTemplatePrivateDNSNameOptionsInitParameters) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsObservation) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsObservation.
func (in *LaunchTemplatePrivateDNSNameOptionsObservation) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsParameters) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsParameters.
func (in *LaunchTemplatePrivateDNSNameOptionsParameters) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpec) DeepCopyInto(out *LaunchTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpec.
func (in *LaunchTemplateSpec) DeepCopy() *LaunchTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateSpecificationInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionRef != nil {
		in, out := &in.VersionRef, &out.VersionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionSelector != nil {
		in, out := &in.VersionSelector, &out.VersionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationInitParameters.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopy() *LaunchTemplateSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationObservation) DeepCopyInto(out *LaunchTemplateSpecificationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationObservation.
func (in *LaunchTemplateSpecificationObservation) DeepCopy() *LaunchTemplateSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationParameters) DeepCopyInto(out *LaunchTemplateSpecificationParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionRef != nil {
		in, out := &in.VersionRef, &out.VersionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionSelector != nil {
		in, out := &in.VersionSelector, &out.VersionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationParameters.
func (in *LaunchTemplateSpecificationParameters) DeepCopy() *LaunchTemplateSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateStatus) DeepCopyInto(out *LaunchTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateStatus.
func (in *LaunchTemplateStatus) DeepCopy() *LaunchTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationInitParameters) DeepCopyInto(out *LicenseSpecificationInitParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationInitParameters.
func (in *LicenseSpecificationInitParameters) DeepCopy() *LicenseSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationObservation) DeepCopyInto(out *LicenseSpecificationObservation) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationObservation.
func (in *LicenseSpecificationObservation) DeepCopy() *LicenseSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationParameters) DeepCopyInto(out *LicenseSpecificationParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationParameters.
func (in *LicenseSpecificationParameters) DeepCopy() *LicenseSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsInitParameters) DeepCopyInto(out *MaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsInitParameters.
func (in *MaintenanceOptionsInitParameters) DeepCopy() *MaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsObservation) DeepCopyInto(out *MaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsObservation.
func (in *MaintenanceOptionsObservation) DeepCopy() *MaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsParameters) DeepCopyInto(out *MaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsParameters.
func (in *MaintenanceOptionsParameters) DeepCopy() *MaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuInitParameters) DeepCopyInto(out *MemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuInitParameters.
func (in *MemoryGibPerVcpuInitParameters) DeepCopy() *MemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuObservation) DeepCopyInto(out *MemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuObservation.
func (in *MemoryGibPerVcpuObservation) DeepCopy() *MemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuParameters) DeepCopyInto(out *MemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuParameters.
func (in *MemoryGibPerVcpuParameters) DeepCopy() *MemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibInitParameters) DeepCopyInto(out *MemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibInitParameters.
func (in *MemoryMibInitParameters) DeepCopy() *MemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibObservation) DeepCopyInto(out *MemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibObservation.
func (in *MemoryMibObservation) DeepCopy() *MemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibParameters) DeepCopyInto(out *MemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibParameters.
func (in *MemoryMibParameters) DeepCopy() *MemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsInitParameters) DeepCopyInto(out *MetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsInitParameters.
func (in *MetadataOptionsInitParameters) DeepCopy() *MetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsObservation) DeepCopyInto(out *MetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsObservation.
func (in *MetadataOptionsObservation) DeepCopy() *MetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsParameters) DeepCopyInto(out *MetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsParameters.
func (in *MetadataOptionsParameters) DeepCopy() *MetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringInitParameters) DeepCopyInto(out *MonitoringInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringInitParameters.
func (in *MonitoringInitParameters) DeepCopy() *MonitoringInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopyInto(out *NetworkBandwidthGbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsInitParameters.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopy() *NetworkBandwidthGbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsObservation) DeepCopyInto(out *NetworkBandwidthGbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsObservation.
func (in *NetworkBandwidthGbpsObservation) DeepCopy() *NetworkBandwidthGbpsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsParameters) DeepCopyInto(out *NetworkBandwidthGbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsParameters.
func (in *NetworkBandwidthGbpsParameters) DeepCopy() *NetworkBandwidthGbpsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountInitParameters) DeepCopyInto(out *NetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountInitParameters.
func (in *NetworkInterfaceCountInitParameters) DeepCopy() *NetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountObservation) DeepCopyInto(out *NetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountObservation.
func (in *NetworkInterfaceCountObservation) DeepCopy() *NetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountParameters) DeepCopyInto(out *NetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountParameters.
func (in *NetworkInterfaceCountParameters) DeepCopy() *NetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceInitParameters) DeepCopyInto(out *NetworkInterfaceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceInitParameters.
func (in *NetworkInterfaceInitParameters) DeepCopy() *NetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation) DeepCopyInto(out *NetworkInterfaceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation.
func (in *NetworkInterfaceObservation) DeepCopy() *NetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters) DeepCopyInto(out *NetworkInterfaceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters.
func (in *NetworkInterfaceParameters) DeepCopy() *NetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesInitParameters) DeepCopyInto(out *NetworkInterfacesInitParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryIPv6 != nil {
		in, out := &in.PrimaryIPv6, &out.PrimaryIPv6
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesInitParameters.
func (in *NetworkInterfacesInitParameters) DeepCopy() *NetworkInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesObservation) DeepCopyInto(out *NetworkInterfacesObservation) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryIPv6 != nil {
		in, out := &in.PrimaryIPv6, &out.PrimaryIPv6
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesObservation.
func (in *NetworkInterfacesObservation) DeepCopy() *NetworkInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesParameters) DeepCopyInto(out *NetworkInterfacesParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryIPv6 != nil {
		in, out := &in.PrimaryIPv6, &out.PrimaryIPv6
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesParameters.
func (in *NetworkInterfacesParameters) DeepCopy() *NetworkInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInitParameters) DeepCopyInto(out *OverridesInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(OverridesInstanceRequirementsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInitParameters.
func (in *OverridesInitParameters) DeepCopy() *OverridesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsInitParameters) DeepCopyInto(out *OverridesInstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(InstanceRequirementsAcceleratorCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(InstanceRequirementsAcceleratorTotalMemoryMibInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(InstanceRequirementsMemoryGibPerVcpuInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(InstanceRequirementsMemoryMibInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(InstanceRequirementsNetworkBandwidthGbpsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(InstanceRequirementsNetworkInterfaceCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(InstanceRequirementsTotalLocalStorageGbInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(InstanceRequirementsVcpuCountInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsInitParameters.
func (in *OverridesInstanceRequirementsInitParameters) DeepCopy() *OverridesInstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsObservation) DeepCopyInto(out *OverridesInstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(InstanceRequirementsAcceleratorCountObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(InstanceRequirementsAcceleratorTotalMemoryMibObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(InstanceRequirementsBaselineEBSBandwidthMbpsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(InstanceRequirementsMemoryGibPerVcpuObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(InstanceRequirementsMemoryMibObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(InstanceRequirementsNetworkBandwidthGbpsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(InstanceRequirementsNetworkInterfaceCountObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(InstanceRequirementsTotalLocalStorageGbObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(InstanceRequirementsVcpuCountObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsObservation.
func (in *OverridesInstanceRequirementsObservation) DeepCopy() *OverridesInstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsParameters) DeepCopyInto(out *OverridesInstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = new(InstanceRequirementsAcceleratorCountParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = new(InstanceRequirementsAcceleratorTotalMemoryMibParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = new(InstanceRequirementsBaselineEBSBandwidthMbpsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = new(InstanceRequirementsMemoryGibPerVcpuParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = new(InstanceRequirementsMemoryMibParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = new(InstanceRequirementsNetworkBandwidthGbpsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = new(InstanceRequirementsNetworkInterfaceCountParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = new(InstanceRequirementsTotalLocalStorageGbParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = new(InstanceRequirementsVcpuCountParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsParameters.
func (in *OverridesInstanceRequirementsParameters) DeepCopy() *OverridesInstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesObservation) DeepCopyInto(out *OverridesObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(OverridesInstanceRequirementsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesObservation.
func (in *OverridesObservation) DeepCopy() *OverridesObservation {
	if in == nil {
		return nil
	}
	out := new(OverridesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesParameters) DeepCopyInto(out *OverridesParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = new(OverridesInstanceRequirementsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesParameters.
func (in *OverridesParameters) DeepCopy() *OverridesParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopyInto(out *PrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsInitParameters.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopy() *PrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsObservation) DeepCopyInto(out *PrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsObservation.
func (in *PrivateDNSNameOptionsObservation) DeepCopy() *PrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsParameters) DeepCopyInto(out *PrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsParameters.
func (in *PrivateDNSNameOptionsParameters) DeepCopy() *PrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterInitParameters) DeepCopyInto(out *RequesterInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterInitParameters.
func (in *RequesterInitParameters) DeepCopy() *RequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterObservation) DeepCopyInto(out *RequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterObservation.
func (in *RequesterObservation) DeepCopy() *RequesterObservation {
	if in == nil {
		return nil
	}
	out := new(RequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterParameters) DeepCopyInto(out *RequesterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterParameters.
func (in *RequesterParameters) DeepCopy() *RequesterParameters {
	if in == nil {
		return nil
	}
	out := new(RequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceInitParameters) DeepCopyInto(out *RootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceInitParameters.
func (in *RootBlockDeviceInitParameters) DeepCopy() *RootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceObservation) DeepCopyInto(out *RootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceObservation.
func (in *RootBlockDeviceObservation) DeepCopy() *RootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceParameters) DeepCopyInto(out *RootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceParameters.
func (in *RootBlockDeviceParameters) DeepCopy() *RootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteInitParameters) DeepCopyInto(out *RouteInitParameters) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListIDRef != nil {
		in, out := &in.DestinationPrefixListIDRef, &out.DestinationPrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationPrefixListIDSelector != nil {
		in, out := &in.DestinationPrefixListIDSelector, &out.DestinationPrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteInitParameters.
func (in *RouteInitParameters) DeepCopy() *RouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOwnerID != nil {
		in, out := &in.InstanceOwnerID, &out.InstanceOwnerID
		*out = new(string)
		**out = **in
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListIDRef != nil {
		in, out := &in.DestinationPrefixListIDRef, &out.DestinationPrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationPrefixListIDSelector != nil {
		in, out := &in.DestinationPrefixListIDSelector, &out.DestinationPrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteStatus) DeepCopyInto(out *RouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteStatus.
func (in *RouteStatus) DeepCopy() *RouteStatus {
	if in == nil {
		return nil
	}
	out := new(RouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesInitParameters) DeepCopyInto(out *RoutesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesInitParameters.
func (in *RoutesInitParameters) DeepCopy() *RoutesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesObservation) DeepCopyInto(out *RoutesObservation) {
	*out = *in
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesObservation.
func (in *RoutesObservation) DeepCopy() *RoutesObservation {
	if in == nil {
		return nil
	}
	out := new(RoutesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesParameters) DeepCopyInto(out *RoutesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesParameters.
func (in *RoutesParameters) DeepCopy() *RoutesParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeInitParameters) DeepCopyInto(out *SourcePortRangeInitParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeInitParameters.
func (in *SourcePortRangeInitParameters) DeepCopy() *SourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeObservation) DeepCopyInto(out *SourcePortRangeObservation) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeObservation.
func (in *SourcePortRangeObservation) DeepCopy() *SourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeParameters) DeepCopyInto(out *SourcePortRangeParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeParameters.
func (in *SourcePortRangeParameters) DeepCopy() *SourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequest) DeepCopyInto(out *SpotFleetRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequest.
func (in *SpotFleetRequest) DeepCopy() *SpotFleetRequest {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotFleetRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestInitParameters) DeepCopyInto(out *SpotFleetRequestInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = new(SpotMaintenanceStrategiesInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestInitParameters.
func (in *SpotFleetRequestInitParameters) DeepCopy() *SpotFleetRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestList) DeepCopyInto(out *SpotFleetRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpotFleetRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestList.
func (in *SpotFleetRequestList) DeepCopy() *SpotFleetRequestList {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotFleetRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestObservation) DeepCopyInto(out *SpotFleetRequestObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.ClientToken != nil {
		in, out := &in.ClientToken, &out.ClientToken
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = new(SpotMaintenanceStrategiesObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotRequestState != nil {
		in, out := &in.SpotRequestState, &out.SpotRequestState
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestObservation.
func (in *SpotFleetRequestObservation) DeepCopy() *SpotFleetRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestParameters) DeepCopyInto(out *SpotFleetRequestParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = new(SpotMaintenanceStrategiesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestParameters.
func (in *SpotFleetRequestParameters) DeepCopy() *SpotFleetRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestSpec) DeepCopyInto(out *SpotFleetRequestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestSpec.
func (in *SpotFleetRequestSpec) DeepCopy() *SpotFleetRequestSpec {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestStatus) DeepCopyInto(out *SpotFleetRequestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestStatus.
func (in *SpotFleetRequestStatus) DeepCopy() *SpotFleetRequestStatus {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequest) DeepCopyInto(out *SpotInstanceRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequest.
func (in *SpotInstanceRequest) DeepCopy() *SpotInstanceRequest {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotInstanceRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestCPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsInitParameters.
func (in *SpotInstanceRequestCPUOptionsInitParameters) DeepCopy() *SpotInstanceRequestCPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsObservation) DeepCopyInto(out *SpotInstanceRequestCPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsObservation.
func (in *SpotInstanceRequestCPUOptionsObservation) DeepCopy() *SpotInstanceRequestCPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsParameters) DeepCopyInto(out *SpotInstanceRequestCPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsParameters.
func (in *SpotInstanceRequestCPUOptionsParameters) DeepCopy() *SpotInstanceRequestCPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationInitParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationInitParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationInitParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationObservation) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationObservation.
func (in *SpotInstanceRequestCapacityReservationSpecificationObservation) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationInitParameters) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationInitParameters.
func (in *SpotInstanceRequestCreditSpecificationInitParameters) DeepCopy() *SpotInstanceRequestCreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationObservation) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationObservation.
func (in *SpotInstanceRequestCreditSpecificationObservation) DeepCopy() *SpotInstanceRequestCreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationParameters) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationParameters.
func (in *SpotInstanceRequestCreditSpecificationParameters) DeepCopy() *SpotInstanceRequestCreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceInitParameters.
func (in *SpotInstanceRequestEBSBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceObservation.
func (in *SpotInstanceRequestEBSBlockDeviceObservation) DeepCopy() *SpotInstanceRequestEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceParameters.
func (in *SpotInstanceRequestEBSBlockDeviceParameters) DeepCopy() *SpotInstanceRequestEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsInitParameters.
func (in *SpotInstanceRequestEnclaveOptionsInitParameters) DeepCopy() *SpotInstanceRequestEnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsObservation) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsObservation.
func (in *SpotInstanceRequestEnclaveOptionsObservation) DeepCopy() *SpotInstanceRequestEnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsParameters) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsParameters.
func (in *SpotInstanceRequestEnclaveOptionsParameters) DeepCopy() *SpotInstanceRequestEnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceInitParameters.
func (in *SpotInstanceRequestEphemeralBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceObservation.
func (in *SpotInstanceRequestEphemeralBlockDeviceObservation) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceParameters.
func (in *SpotInstanceRequestEphemeralBlockDeviceParameters) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestInitParameters) DeepCopyInto(out *SpotInstanceRequestInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(SpotInstanceRequestCPUOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(SpotInstanceRequestCapacityReservationSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(SpotInstanceRequestCreditSpecificationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(SpotInstanceRequestEnclaveOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(SpotInstanceRequestLaunchTemplateInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(SpotInstanceRequestMaintenanceOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(SpotInstanceRequestMetadataOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(SpotInstanceRequestPrivateDNSNameOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(SpotInstanceRequestRootBlockDeviceInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestInitParameters.
func (in *SpotInstanceRequestInitParameters) DeepCopy() *SpotInstanceRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateInitParameters) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateInitParameters.
func (in *SpotInstanceRequestLaunchTemplateInitParameters) DeepCopy() *SpotInstanceRequestLaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateObservation) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateObservation.
func (in *SpotInstanceRequestLaunchTemplateObservation) DeepCopy() *SpotInstanceRequestLaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateParameters) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateParameters.
func (in *SpotInstanceRequestLaunchTemplateParameters) DeepCopy() *SpotInstanceRequestLaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestList) DeepCopyInto(out *SpotInstanceRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpotInstanceRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestList.
func (in *SpotInstanceRequestList) DeepCopy() *SpotInstanceRequestList {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotInstanceRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsInitParameters.
func (in *SpotInstanceRequestMaintenanceOptionsInitParameters) DeepCopy() *SpotInstanceRequestMaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsObservation) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsObservation.
func (in *SpotInstanceRequestMaintenanceOptionsObservation) DeepCopy() *SpotInstanceRequestMaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsParameters) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsParameters.
func (in *SpotInstanceRequestMaintenanceOptionsParameters) DeepCopy() *SpotInstanceRequestMaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsInitParameters.
func (in *SpotInstanceRequestMetadataOptionsInitParameters) DeepCopy() *SpotInstanceRequestMetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsObservation) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsObservation.
func (in *SpotInstanceRequestMetadataOptionsObservation) DeepCopy() *SpotInstanceRequestMetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsParameters) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsParameters.
func (in *SpotInstanceRequestMetadataOptionsParameters) DeepCopy() *SpotInstanceRequestMetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceInitParameters) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceInitParameters.
func (in *SpotInstanceRequestNetworkInterfaceInitParameters) DeepCopy() *SpotInstanceRequestNetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceObservation) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceObservation.
func (in *SpotInstanceRequestNetworkInterfaceObservation) DeepCopy() *SpotInstanceRequestNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceParameters) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceParameters.
func (in *SpotInstanceRequestNetworkInterfaceParameters) DeepCopy() *SpotInstanceRequestNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestObservation) DeepCopyInto(out *SpotInstanceRequestObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(SpotInstanceRequestCPUOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(SpotInstanceRequestCapacityReservationSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(SpotInstanceRequestCreditSpecificationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(SpotInstanceRequestEnclaveOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceState != nil {
		in, out := &in.InstanceState, &out.InstanceState
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(SpotInstanceRequestLaunchTemplateObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(SpotInstanceRequestMaintenanceOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(SpotInstanceRequestMetadataOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PasswordData != nil {
		in, out := &in.PasswordData, &out.PasswordData
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryNetworkInterfaceID != nil {
		in, out := &in.PrimaryNetworkInterfaceID, &out.PrimaryNetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(SpotInstanceRequestPrivateDNSNameOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(SpotInstanceRequestRootBlockDeviceObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotBidStatus != nil {
		in, out := &in.SpotBidStatus, &out.SpotBidStatus
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceID != nil {
		in, out := &in.SpotInstanceID, &out.SpotInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotRequestState != nil {
		in, out := &in.SpotRequestState, &out.SpotRequestState
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestObservation.
func (in *SpotInstanceRequestObservation) DeepCopy() *SpotInstanceRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestParameters) DeepCopyInto(out *SpotInstanceRequestParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = new(SpotInstanceRequestCPUOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = new(SpotInstanceRequestCapacityReservationSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = new(SpotInstanceRequestCreditSpecificationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = new(SpotInstanceRequestEnclaveOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = new(SpotInstanceRequestLaunchTemplateParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = new(SpotInstanceRequestMaintenanceOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = new(SpotInstanceRequestMetadataOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = new(SpotInstanceRequestPrivateDNSNameOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = new(SpotInstanceRequestRootBlockDeviceParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestParameters.
func (in *SpotInstanceRequestParameters) DeepCopy() *SpotInstanceRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsInitParameters.
func (in *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsObservation) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsObservation.
func (in *SpotInstanceRequestPrivateDNSNameOptionsObservation) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsParameters) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsParameters.
func (in *SpotInstanceRequestPrivateDNSNameOptionsParameters) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceInitParameters.
func (in *SpotInstanceRequestRootBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestRootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceObservation.
func (in *SpotInstanceRequestRootBlockDeviceObservation) DeepCopy() *SpotInstanceRequestRootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceParameters.
func (in *SpotInstanceRequestRootBlockDeviceParameters) DeepCopy() *SpotInstanceRequestRootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestSpec) DeepCopyInto(out *SpotInstanceRequestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestSpec.
func (in *SpotInstanceRequestSpec) DeepCopy() *SpotInstanceRequestSpec {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestStatus) DeepCopyInto(out *SpotInstanceRequestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestStatus.
func (in *SpotInstanceRequestStatus) DeepCopy() *SpotInstanceRequestStatus {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesInitParameters) DeepCopyInto(out *SpotMaintenanceStrategiesInitParameters) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(CapacityRebalanceInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesInitParameters.
func (in *SpotMaintenanceStrategiesInitParameters) DeepCopy() *SpotMaintenanceStrategiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesObservation) DeepCopyInto(out *SpotMaintenanceStrategiesObservation) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(CapacityRebalanceObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesObservation.
func (in *SpotMaintenanceStrategiesObservation) DeepCopy() *SpotMaintenanceStrategiesObservation {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesParameters) DeepCopyInto(out *SpotMaintenanceStrategiesParameters) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = new(CapacityRebalanceParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesParameters.
func (in *SpotMaintenanceStrategiesParameters) DeepCopy() *SpotMaintenanceStrategiesParameters {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsInitParameters) DeepCopyInto(out *SpotOptionsInitParameters) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsInitParameters.
func (in *SpotOptionsInitParameters) DeepCopy() *SpotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsObservation) DeepCopyInto(out *SpotOptionsObservation) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsObservation.
func (in *SpotOptionsObservation) DeepCopy() *SpotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsParameters) DeepCopyInto(out *SpotOptionsParameters) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsParameters.
func (in *SpotOptionsParameters) DeepCopy() *SpotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetConfigurationInitParameters) DeepCopyInto(out *SubnetConfigurationInitParameters) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetConfigurationInitParameters.
func (in *SubnetConfigurationInitParameters) DeepCopy() *SubnetConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetConfigurationObservation) DeepCopyInto(out *SubnetConfigurationObservation) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetConfigurationObservation.
func (in *SubnetConfigurationObservation) DeepCopy() *SubnetConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetConfigurationParameters) DeepCopyInto(out *SubnetConfigurationParameters) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetConfigurationParameters.
func (in *SubnetConfigurationParameters) DeepCopy() *SubnetConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsInitParameters) DeepCopyInto(out *TagSpecificationsInitParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsInitParameters.
func (in *TagSpecificationsInitParameters) DeepCopy() *TagSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsObservation) DeepCopyInto(out *TagSpecificationsObservation) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsObservation.
func (in *TagSpecificationsObservation) DeepCopy() *TagSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsParameters) DeepCopyInto(out *TagSpecificationsParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsParameters.
func (in *TagSpecificationsParameters) DeepCopy() *TagSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbInitParameters) DeepCopyInto(out *TotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbInitParameters.
func (in *TotalLocalStorageGbInitParameters) DeepCopy() *TotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbObservation) DeepCopyInto(out *TotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbObservation.
func (in *TotalLocalStorageGbObservation) DeepCopy() *TotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbParameters) DeepCopyInto(out *TotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbParameters.
func (in *TotalLocalStorageGbParameters) DeepCopy() *TotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRule) DeepCopyInto(out *TrafficMirrorFilterRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRule.
func (in *TrafficMirrorFilterRule) DeepCopy() *TrafficMirrorFilterRule {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilterRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleInitParameters) DeepCopyInto(out *TrafficMirrorFilterRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(DestinationPortRangeInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(SourcePortRangeInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterIDRef != nil {
		in, out := &in.TrafficMirrorFilterIDRef, &out.TrafficMirrorFilterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficMirrorFilterIDSelector != nil {
		in, out := &in.TrafficMirrorFilterIDSelector, &out.TrafficMirrorFilterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleInitParameters.
func (in *TrafficMirrorFilterRuleInitParameters) DeepCopy() *TrafficMirrorFilterRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleList) DeepCopyInto(out *TrafficMirrorFilterRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficMirrorFilterRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleList.
func (in *TrafficMirrorFilterRuleList) DeepCopy() *TrafficMirrorFilterRuleList {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilterRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleObservation) DeepCopyInto(out *TrafficMirrorFilterRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(DestinationPortRangeObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(SourcePortRangeObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleObservation.
func (in *TrafficMirrorFilterRuleObservation) DeepCopy() *TrafficMirrorFilterRuleObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleParameters) DeepCopyInto(out *TrafficMirrorFilterRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = new(DestinationPortRangeParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = new(SourcePortRangeParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterIDRef != nil {
		in, out := &in.TrafficMirrorFilterIDRef, &out.TrafficMirrorFilterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficMirrorFilterIDSelector != nil {
		in, out := &in.TrafficMirrorFilterIDSelector, &out.TrafficMirrorFilterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleParameters.
func (in *TrafficMirrorFilterRuleParameters) DeepCopy() *TrafficMirrorFilterRuleParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleSpec) DeepCopyInto(out *TrafficMirrorFilterRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleSpec.
func (in *TrafficMirrorFilterRuleSpec) DeepCopy() *TrafficMirrorFilterRuleSpec {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleStatus) DeepCopyInto(out *TrafficMirrorFilterRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleStatus.
func (in *TrafficMirrorFilterRuleStatus) DeepCopy() *TrafficMirrorFilterRuleStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsInitParameters) DeepCopyInto(out *Tunnel1LogOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(CloudwatchLogOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsInitParameters.
func (in *Tunnel1LogOptionsInitParameters) DeepCopy() *Tunnel1LogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsObservation) DeepCopyInto(out *Tunnel1LogOptionsObservation) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(CloudwatchLogOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsObservation.
func (in *Tunnel1LogOptionsObservation) DeepCopy() *Tunnel1LogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsParameters) DeepCopyInto(out *Tunnel1LogOptionsParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(CloudwatchLogOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsParameters.
func (in *Tunnel1LogOptionsParameters) DeepCopy() *Tunnel1LogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsInitParameters.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsObservation) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsObservation) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsObservation.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsObservation) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsParameters) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsParameters.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsParameters) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsInitParameters) DeepCopyInto(out *Tunnel2LogOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(Tunnel2LogOptionsCloudwatchLogOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsInitParameters.
func (in *Tunnel2LogOptionsInitParameters) DeepCopy() *Tunnel2LogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsObservation) DeepCopyInto(out *Tunnel2LogOptionsObservation) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(Tunnel2LogOptionsCloudwatchLogOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsObservation.
func (in *Tunnel2LogOptionsObservation) DeepCopy() *Tunnel2LogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsParameters) DeepCopyInto(out *Tunnel2LogOptionsParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = new(Tunnel2LogOptionsCloudwatchLogOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsParameters.
func (in *Tunnel2LogOptionsParameters) DeepCopy() *Tunnel2LogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketInitParameters) DeepCopyInto(out *UserBucketInitParameters) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketInitParameters.
func (in *UserBucketInitParameters) DeepCopy() *UserBucketInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserBucketInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketObservation) DeepCopyInto(out *UserBucketObservation) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketObservation.
func (in *UserBucketObservation) DeepCopy() *UserBucketObservation {
	if in == nil {
		return nil
	}
	out := new(UserBucketObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketParameters) DeepCopyInto(out *UserBucketParameters) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketParameters.
func (in *UserBucketParameters) DeepCopy() *UserBucketParameters {
	if in == nil {
		return nil
	}
	out := new(UserBucketParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpoint) DeepCopyInto(out *VPCEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpoint.
func (in *VPCEndpoint) DeepCopy() *VPCEndpoint {
	if in == nil {
		return nil
	}
	out := new(VPCEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointInitParameters) DeepCopyInto(out *VPCEndpointInitParameters) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = new(DNSOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetConfiguration != nil {
		in, out := &in.SubnetConfiguration, &out.SubnetConfiguration
		*out = make([]SubnetConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointInitParameters.
func (in *VPCEndpointInitParameters) DeepCopy() *VPCEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointList) DeepCopyInto(out *VPCEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointList.
func (in *VPCEndpointList) DeepCopy() *VPCEndpointList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointObservation) DeepCopyInto(out *VPCEndpointObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSEntry != nil {
		in, out := &in.DNSEntry, &out.DNSEntry
		*out = make([]DNSEntryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = new(DNSOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIds != nil {
		in, out := &in.NetworkInterfaceIds, &out.NetworkInterfaceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequesterManaged != nil {
		in, out := &in.RequesterManaged, &out.RequesterManaged
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableIds != nil {
		in, out := &in.RouteTableIds, &out.RouteTableIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetConfiguration != nil {
		in, out := &in.SubnetConfiguration, &out.SubnetConfiguration
		*out = make([]SubnetConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointObservation.
func (in *VPCEndpointObservation) DeepCopy() *VPCEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointParameters) DeepCopyInto(out *VPCEndpointParameters) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = new(DNSOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetConfiguration != nil {
		in, out := &in.SubnetConfiguration, &out.SubnetConfiguration
		*out = make([]SubnetConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointParameters.
func (in *VPCEndpointParameters) DeepCopy() *VPCEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSpec) DeepCopyInto(out *VPCEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSpec.
func (in *VPCEndpointSpec) DeepCopy() *VPCEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointStatus) DeepCopyInto(out *VPCEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointStatus.
func (in *VPCEndpointStatus) DeepCopy() *VPCEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidr) DeepCopyInto(out *VPCIpamPoolCidr) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidr.
func (in *VPCIpamPoolCidr) DeepCopy() *VPCIpamPoolCidr {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidr)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidr) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrInitParameters) DeepCopyInto(out *VPCIpamPoolCidrInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = new(CidrAuthorizationContextInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrInitParameters.
func (in *VPCIpamPoolCidrInitParameters) DeepCopy() *VPCIpamPoolCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrList) DeepCopyInto(out *VPCIpamPoolCidrList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpamPoolCidr, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrList.
func (in *VPCIpamPoolCidrList) DeepCopy() *VPCIpamPoolCidrList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidrList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrObservation) DeepCopyInto(out *VPCIpamPoolCidrObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = new(CidrAuthorizationContextObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolCidrID != nil {
		in, out := &in.IpamPoolCidrID, &out.IpamPoolCidrID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrObservation.
func (in *VPCIpamPoolCidrObservation) DeepCopy() *VPCIpamPoolCidrObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrParameters) DeepCopyInto(out *VPCIpamPoolCidrParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = new(CidrAuthorizationContextParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrParameters.
func (in *VPCIpamPoolCidrParameters) DeepCopy() *VPCIpamPoolCidrParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrSpec) DeepCopyInto(out *VPCIpamPoolCidrSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrSpec.
func (in *VPCIpamPoolCidrSpec) DeepCopy() *VPCIpamPoolCidrSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrStatus) DeepCopyInto(out *VPCIpamPoolCidrStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrStatus.
func (in *VPCIpamPoolCidrStatus) DeepCopy() *VPCIpamPoolCidrStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnection) DeepCopyInto(out *VPCPeeringConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnection.
func (in *VPCPeeringConnection) DeepCopy() *VPCPeeringConnection {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepter) DeepCopyInto(out *VPCPeeringConnectionAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepter.
func (in *VPCPeeringConnectionAccepter) DeepCopy() *VPCPeeringConnectionAccepter {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterInitParameters.
func (in *VPCPeeringConnectionAccepterAccepterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterObservation.
func (in *VPCPeeringConnectionAccepterAccepterObservation) DeepCopy() *VPCPeeringConnectionAccepterAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterParameters.
func (in *VPCPeeringConnectionAccepterAccepterParameters) DeepCopy() *VPCPeeringConnectionAccepterAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterInitParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionAccepterAccepterInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionAccepterRequesterInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterInitParameters.
func (in *VPCPeeringConnectionAccepterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterList) DeepCopyInto(out *VPCPeeringConnectionAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnectionAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterList.
func (in *VPCPeeringConnectionAccepterList) DeepCopy() *VPCPeeringConnectionAccepterList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterObservation) {
	*out = *in
	if in.AcceptStatus != nil {
		in, out := &in.AcceptStatus, &out.AcceptStatus
		*out = new(string)
		**out = **in
	}
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionAccepterAccepterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionAccepterRequesterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterObservation.
func (in *VPCPeeringConnectionAccepterObservation) DeepCopy() *VPCPeeringConnectionAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionAccepterAccepterParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionAccepterRequesterParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterParameters.
func (in *VPCPeeringConnectionAccepterParameters) DeepCopy() *VPCPeeringConnectionAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterInitParameters.
func (in *VPCPeeringConnectionAccepterRequesterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterRequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterObservation.
func (in *VPCPeeringConnectionAccepterRequesterObservation) DeepCopy() *VPCPeeringConnectionAccepterRequesterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterParameters.
func (in *VPCPeeringConnectionAccepterRequesterParameters) DeepCopy() *VPCPeeringConnectionAccepterRequesterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterSpec) DeepCopyInto(out *VPCPeeringConnectionAccepterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterSpec.
func (in *VPCPeeringConnectionAccepterSpec) DeepCopy() *VPCPeeringConnectionAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterStatus) DeepCopyInto(out *VPCPeeringConnectionAccepterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterStatus.
func (in *VPCPeeringConnectionAccepterStatus) DeepCopy() *VPCPeeringConnectionAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionInitParameters) DeepCopyInto(out *VPCPeeringConnectionInitParameters) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCIDRef != nil {
		in, out := &in.PeerVPCIDRef, &out.PeerVPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerVPCIDSelector != nil {
		in, out := &in.PeerVPCIDSelector, &out.PeerVPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionInitParameters.
func (in *VPCPeeringConnectionInitParameters) DeepCopy() *VPCPeeringConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionList) DeepCopyInto(out *VPCPeeringConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionList.
func (in *VPCPeeringConnectionList) DeepCopy() *VPCPeeringConnectionList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionObservation) DeepCopyInto(out *VPCPeeringConnectionObservation) {
	*out = *in
	if in.AcceptStatus != nil {
		in, out := &in.AcceptStatus, &out.AcceptStatus
		*out = new(string)
		**out = **in
	}
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(AccepterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(RequesterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionObservation.
func (in *VPCPeeringConnectionObservation) DeepCopy() *VPCPeeringConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptions) DeepCopyInto(out *VPCPeeringConnectionOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptions.
func (in *VPCPeeringConnectionOptions) DeepCopy() *VPCPeeringConnectionOptions {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterInitParameters.
func (in *VPCPeeringConnectionOptionsAccepterInitParameters) DeepCopy() *VPCPeeringConnectionOptionsAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterObservation.
func (in *VPCPeeringConnectionOptionsAccepterObservation) DeepCopy() *VPCPeeringConnectionOptionsAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterParameters.
func (in *VPCPeeringConnectionOptionsAccepterParameters) DeepCopy() *VPCPeeringConnectionOptionsAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsInitParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionOptionsAccepterInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionOptionsRequesterInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsInitParameters.
func (in *VPCPeeringConnectionOptionsInitParameters) DeepCopy() *VPCPeeringConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsList) DeepCopyInto(out *VPCPeeringConnectionOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnectionOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsList.
func (in *VPCPeeringConnectionOptionsList) DeepCopy() *VPCPeeringConnectionOptionsList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsObservation) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionOptionsAccepterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionOptionsRequesterObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsObservation.
func (in *VPCPeeringConnectionOptionsObservation) DeepCopy() *VPCPeeringConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = new(VPCPeeringConnectionOptionsAccepterParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = new(VPCPeeringConnectionOptionsRequesterParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsParameters.
func (in *VPCPeeringConnectionOptionsParameters) DeepCopy() *VPCPeeringConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterInitParameters.
func (in *VPCPeeringConnectionOptionsRequesterInitParameters) DeepCopy() *VPCPeeringConnectionOptionsRequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterObservation.
func (in *VPCPeeringConnectionOptionsRequesterObservation) DeepCopy() *VPCPeeringConnectionOptionsRequesterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterParameters.
func (in *VPCPeeringConnectionOptionsRequesterParameters) DeepCopy() *VPCPeeringConnectionOptionsRequesterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsSpec) DeepCopyInto(out *VPCPeeringConnectionOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsSpec.
func (in *VPCPeeringConnectionOptionsSpec) DeepCopy() *VPCPeeringConnectionOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsStatus) DeepCopyInto(out *VPCPeeringConnectionOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsStatus.
func (in *VPCPeeringConnectionOptionsStatus) DeepCopy() *VPCPeeringConnectionOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionParameters) DeepCopyInto(out *VPCPeeringConnectionParameters) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCIDRef != nil {
		in, out := &in.PeerVPCIDRef, &out.PeerVPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerVPCIDSelector != nil {
		in, out := &in.PeerVPCIDSelector, &out.PeerVPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionParameters.
func (in *VPCPeeringConnectionParameters) DeepCopy() *VPCPeeringConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionSpec) DeepCopyInto(out *VPCPeeringConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionSpec.
func (in *VPCPeeringConnectionSpec) DeepCopy() *VPCPeeringConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionStatus) DeepCopyInto(out *VPCPeeringConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionStatus.
func (in *VPCPeeringConnectionStatus) DeepCopy() *VPCPeeringConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnection) DeepCopyInto(out *VPNConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnection.
func (in *VPNConnection) DeepCopy() *VPNConnection {
	if in == nil {
		return nil
	}
	out := new(VPNConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionInitParameters) DeepCopyInto(out *VPNConnectionInitParameters) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayIDRef != nil {
		in, out := &in.CustomerGatewayIDRef, &out.CustomerGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomerGatewayIDSelector != nil {
		in, out := &in.CustomerGatewayIDSelector, &out.CustomerGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = new(Tunnel1LogOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1PresharedKeySecretRef != nil {
		in, out := &in.Tunnel1PresharedKeySecretRef, &out.Tunnel1PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = new(Tunnel2LogOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2PresharedKeySecretRef != nil {
		in, out := &in.Tunnel2PresharedKeySecretRef, &out.Tunnel2PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeRef != nil {
		in, out := &in.TypeRef, &out.TypeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeSelector != nil {
		in, out := &in.TypeSelector, &out.TypeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionInitParameters.
func (in *VPNConnectionInitParameters) DeepCopy() *VPNConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionList) DeepCopyInto(out *VPNConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionList.
func (in *VPNConnectionList) DeepCopy() *VPNConnectionList {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionObservation) DeepCopyInto(out *VPNConnectionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkAttachmentArn != nil {
		in, out := &in.CoreNetworkAttachmentArn, &out.CoreNetworkAttachmentArn
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RoutesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1Address != nil {
		in, out := &in.Tunnel1Address, &out.Tunnel1Address
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1BGPAsn != nil {
		in, out := &in.Tunnel1BGPAsn, &out.Tunnel1BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1BGPHoldtime != nil {
		in, out := &in.Tunnel1BGPHoldtime, &out.Tunnel1BGPHoldtime
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1CgwInsideAddress != nil {
		in, out := &in.Tunnel1CgwInsideAddress, &out.Tunnel1CgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = new(Tunnel1LogOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1VgwInsideAddress != nil {
		in, out := &in.Tunnel1VgwInsideAddress, &out.Tunnel1VgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2Address != nil {
		in, out := &in.Tunnel2Address, &out.Tunnel2Address
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2BGPAsn != nil {
		in, out := &in.Tunnel2BGPAsn, &out.Tunnel2BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2BGPHoldtime != nil {
		in, out := &in.Tunnel2BGPHoldtime, &out.Tunnel2BGPHoldtime
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2CgwInsideAddress != nil {
		in, out := &in.Tunnel2CgwInsideAddress, &out.Tunnel2CgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = new(Tunnel2LogOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2VgwInsideAddress != nil {
		in, out := &in.Tunnel2VgwInsideAddress, &out.Tunnel2VgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VgwTelemetry != nil {
		in, out := &in.VgwTelemetry, &out.VgwTelemetry
		*out = make([]VgwTelemetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionObservation.
func (in *VPNConnectionObservation) DeepCopy() *VPNConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionParameters) DeepCopyInto(out *VPNConnectionParameters) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayIDRef != nil {
		in, out := &in.CustomerGatewayIDRef, &out.CustomerGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomerGatewayIDSelector != nil {
		in, out := &in.CustomerGatewayIDSelector, &out.CustomerGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = new(Tunnel1LogOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1PresharedKeySecretRef != nil {
		in, out := &in.Tunnel1PresharedKeySecretRef, &out.Tunnel1PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = new(Tunnel2LogOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2PresharedKeySecretRef != nil {
		in, out := &in.Tunnel2PresharedKeySecretRef, &out.Tunnel2PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeRef != nil {
		in, out := &in.TypeRef, &out.TypeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeSelector != nil {
		in, out := &in.TypeSelector, &out.TypeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionParameters.
func (in *VPNConnectionParameters) DeepCopy() *VPNConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionSpec) DeepCopyInto(out *VPNConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionSpec.
func (in *VPNConnectionSpec) DeepCopy() *VPNConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionStatus) DeepCopyInto(out *VPNConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionStatus.
func (in *VPNConnectionStatus) DeepCopy() *VPNConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountInitParameters) DeepCopyInto(out *VcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountInitParameters.
func (in *VcpuCountInitParameters) DeepCopy() *VcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountObservation) DeepCopyInto(out *VcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountObservation.
func (in *VcpuCountObservation) DeepCopy() *VcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(VcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountParameters) DeepCopyInto(out *VcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountParameters.
func (in *VcpuCountParameters) DeepCopy() *VcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryInitParameters) DeepCopyInto(out *VgwTelemetryInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryInitParameters.
func (in *VgwTelemetryInitParameters) DeepCopy() *VgwTelemetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryObservation) DeepCopyInto(out *VgwTelemetryObservation) {
	*out = *in
	if in.AcceptedRouteCount != nil {
		in, out := &in.AcceptedRouteCount, &out.AcceptedRouteCount
		*out = new(float64)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.LastStatusChange != nil {
		in, out := &in.LastStatusChange, &out.LastStatusChange
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddress != nil {
		in, out := &in.OutsideIPAddress, &out.OutsideIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryObservation.
func (in *VgwTelemetryObservation) DeepCopy() *VgwTelemetryObservation {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryParameters) DeepCopyInto(out *VgwTelemetryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryParameters.
func (in *VgwTelemetryParameters) DeepCopy() *VgwTelemetryParameters {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryParameters)
	in.DeepCopyInto(out)
	return out
}

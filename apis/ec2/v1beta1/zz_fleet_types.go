// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AcceleratorCountInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type AcceleratorCountObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type AcceleratorCountParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type AcceleratorTotalMemoryMibInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type AcceleratorTotalMemoryMibObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type AcceleratorTotalMemoryMibParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type BaselineEBSBandwidthMbpsInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type BaselineEBSBandwidthMbpsObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type BaselineEBSBandwidthMbpsParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type CapacityRebalanceInitParameters struct {

	// The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
	ReplacementStrategy *string `json:"replacementStrategy,omitempty" tf:"replacement_strategy,omitempty"`

	TerminationDelay *float64 `json:"terminationDelay,omitempty" tf:"termination_delay,omitempty"`
}

type CapacityRebalanceObservation struct {

	// The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
	ReplacementStrategy *string `json:"replacementStrategy,omitempty" tf:"replacement_strategy,omitempty"`

	TerminationDelay *float64 `json:"terminationDelay,omitempty" tf:"termination_delay,omitempty"`
}

type CapacityRebalanceParameters struct {

	// The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
	// +kubebuilder:validation:Optional
	ReplacementStrategy *string `json:"replacementStrategy,omitempty" tf:"replacement_strategy,omitempty"`

	// +kubebuilder:validation:Optional
	TerminationDelay *float64 `json:"terminationDelay,omitempty" tf:"termination_delay,omitempty"`
}

type CapacityReservationOptionsInitParameters struct {

	// Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
	UsageStrategy *string `json:"usageStrategy,omitempty" tf:"usage_strategy,omitempty"`
}

type CapacityReservationOptionsObservation struct {

	// Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
	UsageStrategy *string `json:"usageStrategy,omitempty" tf:"usage_strategy,omitempty"`
}

type CapacityReservationOptionsParameters struct {

	// Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
	// +kubebuilder:validation:Optional
	UsageStrategy *string `json:"usageStrategy,omitempty" tf:"usage_strategy,omitempty"`
}

type FleetInitParameters struct {

	// Reserved.
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// Information about the instances that were launched by the fleet. Available only when type is set to instant.
	FleetInstanceSet []FleetInstanceSetInitParameters `json:"fleetInstanceSet,omitempty" tf:"fleet_instance_set,omitempty"`

	// The state of the EC2 Fleet.
	FleetState *string `json:"fleetState,omitempty" tf:"fleet_state,omitempty"`

	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity *float64 `json:"fulfilledCapacity,omitempty" tf:"fulfilled_capacity,omitempty"`

	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity *float64 `json:"fulfilledOnDemandCapacity,omitempty" tf:"fulfilled_on_demand_capacity,omitempty"`

	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfig []LaunchTemplateConfigInitParameters `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions *OnDemandOptionsInitParameters `json:"onDemandOptions,omitempty" tf:"on_demand_options,omitempty"`

	// Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
	ReplaceUnhealthyInstances *bool `json:"replaceUnhealthyInstances,omitempty" tf:"replace_unhealthy_instances,omitempty"`

	// Nested argument containing Spot configurations. Defined below.
	SpotOptions *SpotOptionsInitParameters `json:"spotOptions,omitempty" tf:"spot_options,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification *TargetCapacitySpecificationInitParameters `json:"targetCapacitySpecification,omitempty" tf:"target_capacity_specification,omitempty"`

	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type FleetInstanceSetInitParameters struct {

	// The IDs of the instances.
	InstanceIds []*string `json:"instanceIds,omitempty" tf:"instance_ids,omitempty"`

	// Instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
	Lifecycle *string `json:"lifecycle,omitempty" tf:"lifecycle,omitempty"`

	// The value is Windows for Windows instances. Otherwise, the value is blank.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type FleetInstanceSetObservation struct {

	// The IDs of the instances.
	InstanceIds []*string `json:"instanceIds,omitempty" tf:"instance_ids,omitempty"`

	// Instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
	Lifecycle *string `json:"lifecycle,omitempty" tf:"lifecycle,omitempty"`

	// The value is Windows for Windows instances. Otherwise, the value is blank.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type FleetInstanceSetParameters struct {

	// The IDs of the instances.
	// +kubebuilder:validation:Optional
	InstanceIds []*string `json:"instanceIds,omitempty" tf:"instance_ids,omitempty"`

	// Instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
	// +kubebuilder:validation:Optional
	Lifecycle *string `json:"lifecycle,omitempty" tf:"lifecycle,omitempty"`

	// The value is Windows for Windows instances. Otherwise, the value is blank.
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type FleetObservation struct {

	// The ARN of the fleet
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reserved.
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// Information about the instances that were launched by the fleet. Available only when type is set to instant.
	FleetInstanceSet []FleetInstanceSetObservation `json:"fleetInstanceSet,omitempty" tf:"fleet_instance_set,omitempty"`

	// The state of the EC2 Fleet.
	FleetState *string `json:"fleetState,omitempty" tf:"fleet_state,omitempty"`

	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity *float64 `json:"fulfilledCapacity,omitempty" tf:"fulfilled_capacity,omitempty"`

	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity *float64 `json:"fulfilledOnDemandCapacity,omitempty" tf:"fulfilled_on_demand_capacity,omitempty"`

	// Fleet identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfig []LaunchTemplateConfigObservation `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions *OnDemandOptionsObservation `json:"onDemandOptions,omitempty" tf:"on_demand_options,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
	ReplaceUnhealthyInstances *bool `json:"replaceUnhealthyInstances,omitempty" tf:"replace_unhealthy_instances,omitempty"`

	// Nested argument containing Spot configurations. Defined below.
	SpotOptions *SpotOptionsObservation `json:"spotOptions,omitempty" tf:"spot_options,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification *TargetCapacitySpecificationObservation `json:"targetCapacitySpecification,omitempty" tf:"target_capacity_specification,omitempty"`

	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type FleetParameters struct {

	// Reserved.
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
	// +kubebuilder:validation:Optional
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// Information about the instances that were launched by the fleet. Available only when type is set to instant.
	// +kubebuilder:validation:Optional
	FleetInstanceSet []FleetInstanceSetParameters `json:"fleetInstanceSet,omitempty" tf:"fleet_instance_set,omitempty"`

	// The state of the EC2 Fleet.
	// +kubebuilder:validation:Optional
	FleetState *string `json:"fleetState,omitempty" tf:"fleet_state,omitempty"`

	// The number of units fulfilled by this request compared to the set target capacity.
	// +kubebuilder:validation:Optional
	FulfilledCapacity *float64 `json:"fulfilledCapacity,omitempty" tf:"fulfilled_capacity,omitempty"`

	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	// +kubebuilder:validation:Optional
	FulfilledOnDemandCapacity *float64 `json:"fulfilledOnDemandCapacity,omitempty" tf:"fulfilled_on_demand_capacity,omitempty"`

	// Nested argument containing EC2 Launch Template configurations. Defined below.
	// +kubebuilder:validation:Optional
	LaunchTemplateConfig []LaunchTemplateConfigParameters `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// Nested argument containing On-Demand configurations. Defined below.
	// +kubebuilder:validation:Optional
	OnDemandOptions *OnDemandOptionsParameters `json:"onDemandOptions,omitempty" tf:"on_demand_options,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
	// +kubebuilder:validation:Optional
	ReplaceUnhealthyInstances *bool `json:"replaceUnhealthyInstances,omitempty" tf:"replace_unhealthy_instances,omitempty"`

	// Nested argument containing Spot configurations. Defined below.
	// +kubebuilder:validation:Optional
	SpotOptions *SpotOptionsParameters `json:"spotOptions,omitempty" tf:"spot_options,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Nested argument containing target capacity configurations. Defined below.
	// +kubebuilder:validation:Optional
	TargetCapacitySpecification *TargetCapacitySpecificationParameters `json:"targetCapacitySpecification,omitempty" tf:"target_capacity_specification,omitempty"`

	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
	// +kubebuilder:validation:Optional
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
	// +kubebuilder:validation:Optional
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	// +kubebuilder:validation:Optional
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	// +kubebuilder:validation:Optional
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type InstanceRequirementsInitParameters struct {

	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
	AcceleratorCount *AcceleratorCountInitParameters `json:"acceleratorCount,omitempty" tf:"accelerator_count,omitempty"`

	// List of accelerator manufacturer names. Default is any manufacturer.
	// +listType=set
	AcceleratorManufacturers []*string `json:"acceleratorManufacturers,omitempty" tf:"accelerator_manufacturers,omitempty"`

	// List of accelerator names. Default is any acclerator.
	// +listType=set
	AcceleratorNames []*string `json:"acceleratorNames,omitempty" tf:"accelerator_names,omitempty"`

	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib *AcceleratorTotalMemoryMibInitParameters `json:"acceleratorTotalMemoryMib,omitempty" tf:"accelerator_total_memory_mib,omitempty"`

	// The accelerator types that must be on the instance type. Default is any accelerator type.
	// +listType=set
	AcceleratorTypes []*string `json:"acceleratorTypes,omitempty" tf:"accelerator_types,omitempty"`

	// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
	// +listType=set
	AllowedInstanceTypes []*string `json:"allowedInstanceTypes,omitempty" tf:"allowed_instance_types,omitempty"`

	// Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
	BareMetal *string `json:"bareMetal,omitempty" tf:"bare_metal,omitempty"`

	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEBSBandwidthMbps *BaselineEBSBandwidthMbpsInitParameters `json:"baselineEbsBandwidthMbps,omitempty" tf:"baseline_ebs_bandwidth_mbps,omitempty"`

	// Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
	BurstablePerformance *string `json:"burstablePerformance,omitempty" tf:"burstable_performance,omitempty"`

	// The CPU manufacturers to include. Default is any manufacturer.
	// ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	// +listType=set
	CPUManufacturers []*string `json:"cpuManufacturers,omitempty" tf:"cpu_manufacturers,omitempty"`

	// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	// +listType=set
	ExcludedInstanceTypes []*string `json:"excludedInstanceTypes,omitempty" tf:"excluded_instance_types,omitempty"`

	// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
	// +listType=set
	InstanceGenerations []*string `json:"instanceGenerations,omitempty" tf:"instance_generations,omitempty"`

	// Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
	LocalStorage *string `json:"localStorage,omitempty" tf:"local_storage,omitempty"`

	// List of local storage type names. Valid values are hdd and ssd. Default any storage type.
	// +listType=set
	LocalStorageTypes []*string `json:"localStorageTypes,omitempty" tf:"local_storage_types,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
	MaxSpotPriceAsPercentageOfOptimalOnDemandPrice *float64 `json:"maxSpotPriceAsPercentageOfOptimalOnDemandPrice,omitempty" tf:"max_spot_price_as_percentage_of_optimal_on_demand_price,omitempty"`

	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu *MemoryGibPerVcpuInitParameters `json:"memoryGibPerVcpu,omitempty" tf:"memory_gib_per_vcpu,omitempty"`

	// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
	MemoryMib *MemoryMibInitParameters `json:"memoryMib,omitempty" tf:"memory_mib,omitempty"`

	// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
	NetworkBandwidthGbps *NetworkBandwidthGbpsInitParameters `json:"networkBandwidthGbps,omitempty" tf:"network_bandwidth_gbps,omitempty"`

	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount *NetworkInterfaceCountInitParameters `json:"networkInterfaceCount,omitempty" tf:"network_interface_count,omitempty"`

	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	OnDemandMaxPricePercentageOverLowestPrice *float64 `json:"onDemandMaxPricePercentageOverLowestPrice,omitempty" tf:"on_demand_max_price_percentage_over_lowest_price,omitempty"`

	// Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
	RequireHibernateSupport *bool `json:"requireHibernateSupport,omitempty" tf:"require_hibernate_support,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
	SpotMaxPricePercentageOverLowestPrice *float64 `json:"spotMaxPricePercentageOverLowestPrice,omitempty" tf:"spot_max_price_percentage_over_lowest_price,omitempty"`

	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb *TotalLocalStorageGbInitParameters `json:"totalLocalStorageGb,omitempty" tf:"total_local_storage_gb,omitempty"`

	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount *VcpuCountInitParameters `json:"vcpuCount,omitempty" tf:"vcpu_count,omitempty"`
}

type InstanceRequirementsObservation struct {

	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
	AcceleratorCount *AcceleratorCountObservation `json:"acceleratorCount,omitempty" tf:"accelerator_count,omitempty"`

	// List of accelerator manufacturer names. Default is any manufacturer.
	// +listType=set
	AcceleratorManufacturers []*string `json:"acceleratorManufacturers,omitempty" tf:"accelerator_manufacturers,omitempty"`

	// List of accelerator names. Default is any acclerator.
	// +listType=set
	AcceleratorNames []*string `json:"acceleratorNames,omitempty" tf:"accelerator_names,omitempty"`

	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib *AcceleratorTotalMemoryMibObservation `json:"acceleratorTotalMemoryMib,omitempty" tf:"accelerator_total_memory_mib,omitempty"`

	// The accelerator types that must be on the instance type. Default is any accelerator type.
	// +listType=set
	AcceleratorTypes []*string `json:"acceleratorTypes,omitempty" tf:"accelerator_types,omitempty"`

	// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
	// +listType=set
	AllowedInstanceTypes []*string `json:"allowedInstanceTypes,omitempty" tf:"allowed_instance_types,omitempty"`

	// Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
	BareMetal *string `json:"bareMetal,omitempty" tf:"bare_metal,omitempty"`

	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEBSBandwidthMbps *BaselineEBSBandwidthMbpsObservation `json:"baselineEbsBandwidthMbps,omitempty" tf:"baseline_ebs_bandwidth_mbps,omitempty"`

	// Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
	BurstablePerformance *string `json:"burstablePerformance,omitempty" tf:"burstable_performance,omitempty"`

	// The CPU manufacturers to include. Default is any manufacturer.
	// ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	// +listType=set
	CPUManufacturers []*string `json:"cpuManufacturers,omitempty" tf:"cpu_manufacturers,omitempty"`

	// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	// +listType=set
	ExcludedInstanceTypes []*string `json:"excludedInstanceTypes,omitempty" tf:"excluded_instance_types,omitempty"`

	// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
	// +listType=set
	InstanceGenerations []*string `json:"instanceGenerations,omitempty" tf:"instance_generations,omitempty"`

	// Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
	LocalStorage *string `json:"localStorage,omitempty" tf:"local_storage,omitempty"`

	// List of local storage type names. Valid values are hdd and ssd. Default any storage type.
	// +listType=set
	LocalStorageTypes []*string `json:"localStorageTypes,omitempty" tf:"local_storage_types,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
	MaxSpotPriceAsPercentageOfOptimalOnDemandPrice *float64 `json:"maxSpotPriceAsPercentageOfOptimalOnDemandPrice,omitempty" tf:"max_spot_price_as_percentage_of_optimal_on_demand_price,omitempty"`

	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu *MemoryGibPerVcpuObservation `json:"memoryGibPerVcpu,omitempty" tf:"memory_gib_per_vcpu,omitempty"`

	// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
	MemoryMib *MemoryMibObservation `json:"memoryMib,omitempty" tf:"memory_mib,omitempty"`

	// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
	NetworkBandwidthGbps *NetworkBandwidthGbpsObservation `json:"networkBandwidthGbps,omitempty" tf:"network_bandwidth_gbps,omitempty"`

	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount *NetworkInterfaceCountObservation `json:"networkInterfaceCount,omitempty" tf:"network_interface_count,omitempty"`

	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	OnDemandMaxPricePercentageOverLowestPrice *float64 `json:"onDemandMaxPricePercentageOverLowestPrice,omitempty" tf:"on_demand_max_price_percentage_over_lowest_price,omitempty"`

	// Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
	RequireHibernateSupport *bool `json:"requireHibernateSupport,omitempty" tf:"require_hibernate_support,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
	SpotMaxPricePercentageOverLowestPrice *float64 `json:"spotMaxPricePercentageOverLowestPrice,omitempty" tf:"spot_max_price_percentage_over_lowest_price,omitempty"`

	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb *TotalLocalStorageGbObservation `json:"totalLocalStorageGb,omitempty" tf:"total_local_storage_gb,omitempty"`

	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount *VcpuCountObservation `json:"vcpuCount,omitempty" tf:"vcpu_count,omitempty"`
}

type InstanceRequirementsParameters struct {

	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
	// +kubebuilder:validation:Optional
	AcceleratorCount *AcceleratorCountParameters `json:"acceleratorCount,omitempty" tf:"accelerator_count,omitempty"`

	// List of accelerator manufacturer names. Default is any manufacturer.
	// +kubebuilder:validation:Optional
	// +listType=set
	AcceleratorManufacturers []*string `json:"acceleratorManufacturers,omitempty" tf:"accelerator_manufacturers,omitempty"`

	// List of accelerator names. Default is any acclerator.
	// +kubebuilder:validation:Optional
	// +listType=set
	AcceleratorNames []*string `json:"acceleratorNames,omitempty" tf:"accelerator_names,omitempty"`

	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	AcceleratorTotalMemoryMib *AcceleratorTotalMemoryMibParameters `json:"acceleratorTotalMemoryMib,omitempty" tf:"accelerator_total_memory_mib,omitempty"`

	// The accelerator types that must be on the instance type. Default is any accelerator type.
	// +kubebuilder:validation:Optional
	// +listType=set
	AcceleratorTypes []*string `json:"acceleratorTypes,omitempty" tf:"accelerator_types,omitempty"`

	// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
	// +kubebuilder:validation:Optional
	// +listType=set
	AllowedInstanceTypes []*string `json:"allowedInstanceTypes,omitempty" tf:"allowed_instance_types,omitempty"`

	// Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
	// +kubebuilder:validation:Optional
	BareMetal *string `json:"bareMetal,omitempty" tf:"bare_metal,omitempty"`

	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	BaselineEBSBandwidthMbps *BaselineEBSBandwidthMbpsParameters `json:"baselineEbsBandwidthMbps,omitempty" tf:"baseline_ebs_bandwidth_mbps,omitempty"`

	// Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
	// +kubebuilder:validation:Optional
	BurstablePerformance *string `json:"burstablePerformance,omitempty" tf:"burstable_performance,omitempty"`

	// The CPU manufacturers to include. Default is any manufacturer.
	// ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	// +kubebuilder:validation:Optional
	// +listType=set
	CPUManufacturers []*string `json:"cpuManufacturers,omitempty" tf:"cpu_manufacturers,omitempty"`

	// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	// +kubebuilder:validation:Optional
	// +listType=set
	ExcludedInstanceTypes []*string `json:"excludedInstanceTypes,omitempty" tf:"excluded_instance_types,omitempty"`

	// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
	// +kubebuilder:validation:Optional
	// +listType=set
	InstanceGenerations []*string `json:"instanceGenerations,omitempty" tf:"instance_generations,omitempty"`

	// Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
	// +kubebuilder:validation:Optional
	LocalStorage *string `json:"localStorage,omitempty" tf:"local_storage,omitempty"`

	// List of local storage type names. Valid values are hdd and ssd. Default any storage type.
	// +kubebuilder:validation:Optional
	// +listType=set
	LocalStorageTypes []*string `json:"localStorageTypes,omitempty" tf:"local_storage_types,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
	// +kubebuilder:validation:Optional
	MaxSpotPriceAsPercentageOfOptimalOnDemandPrice *float64 `json:"maxSpotPriceAsPercentageOfOptimalOnDemandPrice,omitempty" tf:"max_spot_price_as_percentage_of_optimal_on_demand_price,omitempty"`

	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	MemoryGibPerVcpu *MemoryGibPerVcpuParameters `json:"memoryGibPerVcpu,omitempty" tf:"memory_gib_per_vcpu,omitempty"`

	// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
	// +kubebuilder:validation:Optional
	MemoryMib *MemoryMibParameters `json:"memoryMib" tf:"memory_mib,omitempty"`

	// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
	// +kubebuilder:validation:Optional
	NetworkBandwidthGbps *NetworkBandwidthGbpsParameters `json:"networkBandwidthGbps,omitempty" tf:"network_bandwidth_gbps,omitempty"`

	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	NetworkInterfaceCount *NetworkInterfaceCountParameters `json:"networkInterfaceCount,omitempty" tf:"network_interface_count,omitempty"`

	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	// +kubebuilder:validation:Optional
	OnDemandMaxPricePercentageOverLowestPrice *float64 `json:"onDemandMaxPricePercentageOverLowestPrice,omitempty" tf:"on_demand_max_price_percentage_over_lowest_price,omitempty"`

	// Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
	// +kubebuilder:validation:Optional
	RequireHibernateSupport *bool `json:"requireHibernateSupport,omitempty" tf:"require_hibernate_support,omitempty"`

	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
	// +kubebuilder:validation:Optional
	SpotMaxPricePercentageOverLowestPrice *float64 `json:"spotMaxPricePercentageOverLowestPrice,omitempty" tf:"spot_max_price_percentage_over_lowest_price,omitempty"`

	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	TotalLocalStorageGb *TotalLocalStorageGbParameters `json:"totalLocalStorageGb,omitempty" tf:"total_local_storage_gb,omitempty"`

	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	// +kubebuilder:validation:Optional
	VcpuCount *VcpuCountParameters `json:"vcpuCount" tf:"vcpu_count,omitempty"`
}

type LaunchTemplateConfigInitParameters struct {

	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification *LaunchTemplateSpecificationInitParameters `json:"launchTemplateSpecification,omitempty" tf:"launch_template_specification,omitempty"`

	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Override []OverrideInitParameters `json:"override,omitempty" tf:"override,omitempty"`
}

type LaunchTemplateConfigObservation struct {

	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification *LaunchTemplateSpecificationObservation `json:"launchTemplateSpecification,omitempty" tf:"launch_template_specification,omitempty"`

	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Override []OverrideObservation `json:"override,omitempty" tf:"override,omitempty"`
}

type LaunchTemplateConfigParameters struct {

	// Nested argument containing EC2 Launch Template to use. Defined below.
	// +kubebuilder:validation:Optional
	LaunchTemplateSpecification *LaunchTemplateSpecificationParameters `json:"launchTemplateSpecification,omitempty" tf:"launch_template_specification,omitempty"`

	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	// +kubebuilder:validation:Optional
	Override []OverrideParameters `json:"override,omitempty" tf:"override,omitempty"`
}

type LaunchTemplateSpecificationInitParameters struct {

	// The ID of the launch template.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Reference to a LaunchTemplate in ec2 to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDRef *v1.Reference `json:"launchTemplateIdRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ec2 to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDSelector *v1.Selector `json:"launchTemplateIdSelector,omitempty" tf:"-"`

	// The name of the launch template.
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The launch template version number, $Latest, or $Default.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("latest_version",true)
	Version *string `json:"version,omitempty" tf:"version,omitempty"`

	// Reference to a LaunchTemplate in ec2 to populate version.
	// +kubebuilder:validation:Optional
	VersionRef *v1.Reference `json:"versionRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ec2 to populate version.
	// +kubebuilder:validation:Optional
	VersionSelector *v1.Selector `json:"versionSelector,omitempty" tf:"-"`
}

type LaunchTemplateSpecificationObservation struct {

	// The ID of the launch template.
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// The name of the launch template.
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The launch template version number, $Latest, or $Default.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type LaunchTemplateSpecificationParameters struct {

	// The ID of the launch template.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Reference to a LaunchTemplate in ec2 to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDRef *v1.Reference `json:"launchTemplateIdRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ec2 to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDSelector *v1.Selector `json:"launchTemplateIdSelector,omitempty" tf:"-"`

	// The name of the launch template.
	// +kubebuilder:validation:Optional
	LaunchTemplateName *string `json:"launchTemplateName,omitempty" tf:"launch_template_name,omitempty"`

	// The launch template version number, $Latest, or $Default.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("latest_version",true)
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`

	// Reference to a LaunchTemplate in ec2 to populate version.
	// +kubebuilder:validation:Optional
	VersionRef *v1.Reference `json:"versionRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ec2 to populate version.
	// +kubebuilder:validation:Optional
	VersionSelector *v1.Selector `json:"versionSelector,omitempty" tf:"-"`
}

type MaintenanceStrategiesInitParameters struct {

	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance *CapacityRebalanceInitParameters `json:"capacityRebalance,omitempty" tf:"capacity_rebalance,omitempty"`
}

type MaintenanceStrategiesObservation struct {

	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance *CapacityRebalanceObservation `json:"capacityRebalance,omitempty" tf:"capacity_rebalance,omitempty"`
}

type MaintenanceStrategiesParameters struct {

	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	// +kubebuilder:validation:Optional
	CapacityRebalance *CapacityRebalanceParameters `json:"capacityRebalance,omitempty" tf:"capacity_rebalance,omitempty"`
}

type MemoryGibPerVcpuInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type MemoryGibPerVcpuObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type MemoryGibPerVcpuParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type MemoryMibInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type MemoryMibObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type MemoryMibParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min" tf:"min,omitempty"`
}

type NetworkBandwidthGbpsInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type NetworkBandwidthGbpsObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type NetworkBandwidthGbpsParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type NetworkInterfaceCountInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type NetworkInterfaceCountObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type NetworkInterfaceCountParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type OnDemandOptionsInitParameters struct {

	// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Demand capacity. Supported only for fleets of type instant.
	CapacityReservationOptions *CapacityReservationOptionsInitParameters `json:"capacityReservationOptions,omitempty" tf:"capacity_reservation_options,omitempty"`

	// The maximum amount per hour for On-Demand Instances that you're willing to pay.
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	// If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type OnDemandOptionsObservation struct {

	// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Demand capacity. Supported only for fleets of type instant.
	CapacityReservationOptions *CapacityReservationOptionsObservation `json:"capacityReservationOptions,omitempty" tf:"capacity_reservation_options,omitempty"`

	// The maximum amount per hour for On-Demand Instances that you're willing to pay.
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	// If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type OnDemandOptionsParameters struct {

	// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
	// +kubebuilder:validation:Optional
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Demand capacity. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	CapacityReservationOptions *CapacityReservationOptionsParameters `json:"capacityReservationOptions,omitempty" tf:"capacity_reservation_options,omitempty"`

	// The maximum amount per hour for On-Demand Instances that you're willing to pay.
	// +kubebuilder:validation:Optional
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	// If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
	// +kubebuilder:validation:Optional
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type OverrideInitParameters struct {

	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	InstanceRequirements *InstanceRequirementsInitParameters `json:"instanceRequirements,omitempty" tf:"instance_requirements,omitempty"`

	// Instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `json:"maxPrice,omitempty" tf:"max_price,omitempty"`

	// Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// ID of the subnet in which to launch the instances.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `json:"weightedCapacity,omitempty" tf:"weighted_capacity,omitempty"`
}

type OverrideObservation struct {

	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	InstanceRequirements *InstanceRequirementsObservation `json:"instanceRequirements,omitempty" tf:"instance_requirements,omitempty"`

	// Instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `json:"maxPrice,omitempty" tf:"max_price,omitempty"`

	// Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// ID of the subnet in which to launch the instances.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `json:"weightedCapacity,omitempty" tf:"weighted_capacity,omitempty"`
}

type OverrideParameters struct {

	// Availability Zone in which to launch the instances.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	// +kubebuilder:validation:Optional
	InstanceRequirements *InstanceRequirementsParameters `json:"instanceRequirements,omitempty" tf:"instance_requirements,omitempty"`

	// Instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	// +kubebuilder:validation:Optional
	MaxPrice *string `json:"maxPrice,omitempty" tf:"max_price,omitempty"`

	// Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// ID of the subnet in which to launch the instances.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Number of units provided by the specified instance type.
	// +kubebuilder:validation:Optional
	WeightedCapacity *float64 `json:"weightedCapacity,omitempty" tf:"weighted_capacity,omitempty"`
}

type SpotOptionsInitParameters struct {

	// How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
	InstanceInterruptionBehavior *string `json:"instanceInterruptionBehavior,omitempty" tf:"instance_interruption_behavior,omitempty"`

	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
	InstancePoolsToUseCount *float64 `json:"instancePoolsToUseCount,omitempty" tf:"instance_pools_to_use_count,omitempty"`

	// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
	MaintenanceStrategies *MaintenanceStrategiesInitParameters `json:"maintenanceStrategies,omitempty" tf:"maintenance_strategies,omitempty"`

	// The maximum amount per hour for Spot Instances that you're willing to pay.
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant.
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant.
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type SpotOptionsObservation struct {

	// How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
	InstanceInterruptionBehavior *string `json:"instanceInterruptionBehavior,omitempty" tf:"instance_interruption_behavior,omitempty"`

	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
	InstancePoolsToUseCount *float64 `json:"instancePoolsToUseCount,omitempty" tf:"instance_pools_to_use_count,omitempty"`

	// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
	MaintenanceStrategies *MaintenanceStrategiesObservation `json:"maintenanceStrategies,omitempty" tf:"maintenance_strategies,omitempty"`

	// The maximum amount per hour for Spot Instances that you're willing to pay.
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant.
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant.
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type SpotOptionsParameters struct {

	// How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
	// +kubebuilder:validation:Optional
	AllocationStrategy *string `json:"allocationStrategy,omitempty" tf:"allocation_strategy,omitempty"`

	// Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
	// +kubebuilder:validation:Optional
	InstanceInterruptionBehavior *string `json:"instanceInterruptionBehavior,omitempty" tf:"instance_interruption_behavior,omitempty"`

	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
	// +kubebuilder:validation:Optional
	InstancePoolsToUseCount *float64 `json:"instancePoolsToUseCount,omitempty" tf:"instance_pools_to_use_count,omitempty"`

	// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
	// +kubebuilder:validation:Optional
	MaintenanceStrategies *MaintenanceStrategiesParameters `json:"maintenanceStrategies,omitempty" tf:"maintenance_strategies,omitempty"`

	// The maximum amount per hour for Spot Instances that you're willing to pay.
	// +kubebuilder:validation:Optional
	MaxTotalPrice *string `json:"maxTotalPrice,omitempty" tf:"max_total_price,omitempty"`

	// The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	MinTargetCapacity *float64 `json:"minTargetCapacity,omitempty" tf:"min_target_capacity,omitempty"`

	// Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	SingleAvailabilityZone *bool `json:"singleAvailabilityZone,omitempty" tf:"single_availability_zone,omitempty"`

	// Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant.
	// +kubebuilder:validation:Optional
	SingleInstanceType *bool `json:"singleInstanceType,omitempty" tf:"single_instance_type,omitempty"`
}

type TargetCapacitySpecificationInitParameters struct {

	// Default target capacity type. Valid values: on-demand, spot.
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty" tf:"default_target_capacity_type,omitempty"`

	// The number of On-Demand units to request.
	OnDemandTargetCapacity *float64 `json:"onDemandTargetCapacity,omitempty" tf:"on_demand_target_capacity,omitempty"`

	// The number of Spot units to request.
	SpotTargetCapacity *float64 `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// The unit for the target capacity.
	// If you specify target_capacity_unit_type, instance_requirements must be specified.
	TargetCapacityUnitType *string `json:"targetCapacityUnitType,omitempty" tf:"target_capacity_unit_type,omitempty"`

	// The number of units to request, filled using default_target_capacity_type.
	TotalTargetCapacity *float64 `json:"totalTargetCapacity,omitempty" tf:"total_target_capacity,omitempty"`
}

type TargetCapacitySpecificationObservation struct {

	// Default target capacity type. Valid values: on-demand, spot.
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty" tf:"default_target_capacity_type,omitempty"`

	// The number of On-Demand units to request.
	OnDemandTargetCapacity *float64 `json:"onDemandTargetCapacity,omitempty" tf:"on_demand_target_capacity,omitempty"`

	// The number of Spot units to request.
	SpotTargetCapacity *float64 `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// The unit for the target capacity.
	// If you specify target_capacity_unit_type, instance_requirements must be specified.
	TargetCapacityUnitType *string `json:"targetCapacityUnitType,omitempty" tf:"target_capacity_unit_type,omitempty"`

	// The number of units to request, filled using default_target_capacity_type.
	TotalTargetCapacity *float64 `json:"totalTargetCapacity,omitempty" tf:"total_target_capacity,omitempty"`
}

type TargetCapacitySpecificationParameters struct {

	// Default target capacity type. Valid values: on-demand, spot.
	// +kubebuilder:validation:Optional
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType" tf:"default_target_capacity_type,omitempty"`

	// The number of On-Demand units to request.
	// +kubebuilder:validation:Optional
	OnDemandTargetCapacity *float64 `json:"onDemandTargetCapacity,omitempty" tf:"on_demand_target_capacity,omitempty"`

	// The number of Spot units to request.
	// +kubebuilder:validation:Optional
	SpotTargetCapacity *float64 `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// The unit for the target capacity.
	// If you specify target_capacity_unit_type, instance_requirements must be specified.
	// +kubebuilder:validation:Optional
	TargetCapacityUnitType *string `json:"targetCapacityUnitType,omitempty" tf:"target_capacity_unit_type,omitempty"`

	// The number of units to request, filled using default_target_capacity_type.
	// +kubebuilder:validation:Optional
	TotalTargetCapacity *float64 `json:"totalTargetCapacity" tf:"total_target_capacity,omitempty"`
}

type TotalLocalStorageGbInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type TotalLocalStorageGbObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type TotalLocalStorageGbParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type VcpuCountInitParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type VcpuCountObservation struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	Min *float64 `json:"min,omitempty" tf:"min,omitempty"`
}

type VcpuCountParameters struct {

	// The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
	// +kubebuilder:validation:Optional
	Max *float64 `json:"max,omitempty" tf:"max,omitempty"`

	// The minimum number of vCPUs. To specify no minimum limit, specify 0.
	// +kubebuilder:validation:Optional
	Min *float64 `json:"min" tf:"min,omitempty"`
}

// FleetSpec defines the desired state of Fleet
type FleetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FleetParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FleetInitParameters `json:"initProvider,omitempty"`
}

// FleetStatus defines the observed state of Fleet.
type FleetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FleetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Fleet is the Schema for the Fleets API. Provides a resource to manage EC2 Fleets
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type Fleet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.launchTemplateConfig) || (has(self.initProvider) && has(self.initProvider.launchTemplateConfig))",message="spec.forProvider.launchTemplateConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetCapacitySpecification) || (has(self.initProvider) && has(self.initProvider.targetCapacitySpecification))",message="spec.forProvider.targetCapacitySpecification is a required parameter"
	Spec   FleetSpec   `json:"spec"`
	Status FleetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FleetList contains a list of Fleets
type FleetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Fleet `json:"items"`
}

// Repository type metadata.
var (
	Fleet_Kind             = "Fleet"
	Fleet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Fleet_Kind}.String()
	Fleet_KindAPIVersion   = Fleet_Kind + "." + CRDGroupVersion.String()
	Fleet_GroupVersionKind = CRDGroupVersion.WithKind(Fleet_Kind)
)

func init() {
	SchemeBuilder.Register(&Fleet{}, &FleetList{})
}

//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLInitParameters) DeepCopyInto(out *ACLInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLInitParameters.
func (in *ACLInitParameters) DeepCopy() *ACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(ACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLObservation) DeepCopyInto(out *ACLObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLObservation.
func (in *ACLObservation) DeepCopy() *ACLObservation {
	if in == nil {
		return nil
	}
	out := new(ACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLParameters) DeepCopyInto(out *ACLParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLParameters.
func (in *ACLParameters) DeepCopy() *ACLParameters {
	if in == nil {
		return nil
	}
	out := new(ACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRuleInitParameters) DeepCopyInto(out *ACLRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRuleInitParameters.
func (in *ACLRuleInitParameters) DeepCopy() *ACLRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ACLRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRuleObservation) DeepCopyInto(out *ACLRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]PortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRuleObservation.
func (in *ACLRuleObservation) DeepCopy() *ACLRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ACLRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRuleParameters) DeepCopyInto(out *ACLRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRuleParameters.
func (in *ACLRuleParameters) DeepCopy() *ACLRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ACLRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRulePortRangeInitParameters) DeepCopyInto(out *ACLRulePortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRulePortRangeInitParameters.
func (in *ACLRulePortRangeInitParameters) DeepCopy() *ACLRulePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ACLRulePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRulePortRangeObservation) DeepCopyInto(out *ACLRulePortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRulePortRangeObservation.
func (in *ACLRulePortRangeObservation) DeepCopy() *ACLRulePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(ACLRulePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACLRulePortRangeParameters) DeepCopyInto(out *ACLRulePortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACLRulePortRangeParameters.
func (in *ACLRulePortRangeParameters) DeepCopy() *ACLRulePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(ACLRulePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMI) DeepCopyInto(out *AMI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMI.
func (in *AMI) DeepCopy() *AMI {
	if in == nil {
		return nil
	}
	out := new(AMI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopy) DeepCopyInto(out *AMICopy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopy.
func (in *AMICopy) DeepCopy() *AMICopy {
	if in == nil {
		return nil
	}
	out := new(AMICopy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMICopy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEBSBlockDeviceInitParameters) DeepCopyInto(out *AMICopyEBSBlockDeviceInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEBSBlockDeviceInitParameters.
func (in *AMICopyEBSBlockDeviceInitParameters) DeepCopy() *AMICopyEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEBSBlockDeviceObservation) DeepCopyInto(out *AMICopyEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEBSBlockDeviceObservation.
func (in *AMICopyEBSBlockDeviceObservation) DeepCopy() *AMICopyEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(AMICopyEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEBSBlockDeviceParameters) DeepCopyInto(out *AMICopyEBSBlockDeviceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEBSBlockDeviceParameters.
func (in *AMICopyEBSBlockDeviceParameters) DeepCopy() *AMICopyEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEphemeralBlockDeviceInitParameters) DeepCopyInto(out *AMICopyEphemeralBlockDeviceInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEphemeralBlockDeviceInitParameters.
func (in *AMICopyEphemeralBlockDeviceInitParameters) DeepCopy() *AMICopyEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEphemeralBlockDeviceObservation) DeepCopyInto(out *AMICopyEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEphemeralBlockDeviceObservation.
func (in *AMICopyEphemeralBlockDeviceObservation) DeepCopy() *AMICopyEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(AMICopyEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyEphemeralBlockDeviceParameters) DeepCopyInto(out *AMICopyEphemeralBlockDeviceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyEphemeralBlockDeviceParameters.
func (in *AMICopyEphemeralBlockDeviceParameters) DeepCopy() *AMICopyEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyInitParameters) DeepCopyInto(out *AMICopyInitParameters) {
	*out = *in
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationOutpostArn != nil {
		in, out := &in.DestinationOutpostArn, &out.DestinationOutpostArn
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]AMICopyEBSBlockDeviceInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]AMICopyEphemeralBlockDeviceInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIID != nil {
		in, out := &in.SourceAMIID, &out.SourceAMIID
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIIDRef != nil {
		in, out := &in.SourceAMIIDRef, &out.SourceAMIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAMIIDSelector != nil {
		in, out := &in.SourceAMIIDSelector, &out.SourceAMIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAMIRegion != nil {
		in, out := &in.SourceAMIRegion, &out.SourceAMIRegion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyInitParameters.
func (in *AMICopyInitParameters) DeepCopy() *AMICopyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyList) DeepCopyInto(out *AMICopyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AMICopy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyList.
func (in *AMICopyList) DeepCopy() *AMICopyList {
	if in == nil {
		return nil
	}
	out := new(AMICopyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMICopyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyObservation) DeepCopyInto(out *AMICopyObservation) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BootMode != nil {
		in, out := &in.BootMode, &out.BootMode
		*out = new(string)
		**out = **in
	}
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationOutpostArn != nil {
		in, out := &in.DestinationOutpostArn, &out.DestinationOutpostArn
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]AMICopyEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnaSupport != nil {
		in, out := &in.EnaSupport, &out.EnaSupport
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]AMICopyEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageLocation != nil {
		in, out := &in.ImageLocation, &out.ImageLocation
		*out = new(string)
		**out = **in
	}
	if in.ImageOwnerAlias != nil {
		in, out := &in.ImageOwnerAlias, &out.ImageOwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.ImdsSupport != nil {
		in, out := &in.ImdsSupport, &out.ImdsSupport
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.ManageEBSSnapshots != nil {
		in, out := &in.ManageEBSSnapshots, &out.ManageEBSSnapshots
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.PlatformDetails != nil {
		in, out := &in.PlatformDetails, &out.PlatformDetails
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.RamdiskID != nil {
		in, out := &in.RamdiskID, &out.RamdiskID
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceName != nil {
		in, out := &in.RootDeviceName, &out.RootDeviceName
		*out = new(string)
		**out = **in
	}
	if in.RootSnapshotID != nil {
		in, out := &in.RootSnapshotID, &out.RootSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIID != nil {
		in, out := &in.SourceAMIID, &out.SourceAMIID
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIRegion != nil {
		in, out := &in.SourceAMIRegion, &out.SourceAMIRegion
		*out = new(string)
		**out = **in
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TpmSupport != nil {
		in, out := &in.TpmSupport, &out.TpmSupport
		*out = new(string)
		**out = **in
	}
	if in.UsageOperation != nil {
		in, out := &in.UsageOperation, &out.UsageOperation
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyObservation.
func (in *AMICopyObservation) DeepCopy() *AMICopyObservation {
	if in == nil {
		return nil
	}
	out := new(AMICopyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyParameters) DeepCopyInto(out *AMICopyParameters) {
	*out = *in
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationOutpostArn != nil {
		in, out := &in.DestinationOutpostArn, &out.DestinationOutpostArn
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]AMICopyEBSBlockDeviceParameters, len(*in))
		copy(*out, *in)
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]AMICopyEphemeralBlockDeviceParameters, len(*in))
		copy(*out, *in)
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIID != nil {
		in, out := &in.SourceAMIID, &out.SourceAMIID
		*out = new(string)
		**out = **in
	}
	if in.SourceAMIIDRef != nil {
		in, out := &in.SourceAMIIDRef, &out.SourceAMIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAMIIDSelector != nil {
		in, out := &in.SourceAMIIDSelector, &out.SourceAMIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAMIRegion != nil {
		in, out := &in.SourceAMIRegion, &out.SourceAMIRegion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyParameters.
func (in *AMICopyParameters) DeepCopy() *AMICopyParameters {
	if in == nil {
		return nil
	}
	out := new(AMICopyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopySpec) DeepCopyInto(out *AMICopySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopySpec.
func (in *AMICopySpec) DeepCopy() *AMICopySpec {
	if in == nil {
		return nil
	}
	out := new(AMICopySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMICopyStatus) DeepCopyInto(out *AMICopyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMICopyStatus.
func (in *AMICopyStatus) DeepCopy() *AMICopyStatus {
	if in == nil {
		return nil
	}
	out := new(AMICopyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIInitParameters) DeepCopyInto(out *AMIInitParameters) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.BootMode != nil {
		in, out := &in.BootMode, &out.BootMode
		*out = new(string)
		**out = **in
	}
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnaSupport != nil {
		in, out := &in.EnaSupport, &out.EnaSupport
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageLocation != nil {
		in, out := &in.ImageLocation, &out.ImageLocation
		*out = new(string)
		**out = **in
	}
	if in.ImdsSupport != nil {
		in, out := &in.ImdsSupport, &out.ImdsSupport
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RamdiskID != nil {
		in, out := &in.RamdiskID, &out.RamdiskID
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceName != nil {
		in, out := &in.RootDeviceName, &out.RootDeviceName
		*out = new(string)
		**out = **in
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TpmSupport != nil {
		in, out := &in.TpmSupport, &out.TpmSupport
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIInitParameters.
func (in *AMIInitParameters) DeepCopy() *AMIInitParameters {
	if in == nil {
		return nil
	}
	out := new(AMIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermission) DeepCopyInto(out *AMILaunchPermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermission.
func (in *AMILaunchPermission) DeepCopy() *AMILaunchPermission {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMILaunchPermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionInitParameters) DeepCopyInto(out *AMILaunchPermissionInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ImageIDRef != nil {
		in, out := &in.ImageIDRef, &out.ImageIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageIDSelector != nil {
		in, out := &in.ImageIDSelector, &out.ImageIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationArn != nil {
		in, out := &in.OrganizationArn, &out.OrganizationArn
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitArn != nil {
		in, out := &in.OrganizationalUnitArn, &out.OrganizationalUnitArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionInitParameters.
func (in *AMILaunchPermissionInitParameters) DeepCopy() *AMILaunchPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionList) DeepCopyInto(out *AMILaunchPermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AMILaunchPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionList.
func (in *AMILaunchPermissionList) DeepCopy() *AMILaunchPermissionList {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMILaunchPermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionObservation) DeepCopyInto(out *AMILaunchPermissionObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.OrganizationArn != nil {
		in, out := &in.OrganizationArn, &out.OrganizationArn
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitArn != nil {
		in, out := &in.OrganizationalUnitArn, &out.OrganizationalUnitArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionObservation.
func (in *AMILaunchPermissionObservation) DeepCopy() *AMILaunchPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionParameters) DeepCopyInto(out *AMILaunchPermissionParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ImageIDRef != nil {
		in, out := &in.ImageIDRef, &out.ImageIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageIDSelector != nil {
		in, out := &in.ImageIDSelector, &out.ImageIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OrganizationArn != nil {
		in, out := &in.OrganizationArn, &out.OrganizationArn
		*out = new(string)
		**out = **in
	}
	if in.OrganizationalUnitArn != nil {
		in, out := &in.OrganizationalUnitArn, &out.OrganizationalUnitArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionParameters.
func (in *AMILaunchPermissionParameters) DeepCopy() *AMILaunchPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionSpec) DeepCopyInto(out *AMILaunchPermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionSpec.
func (in *AMILaunchPermissionSpec) DeepCopy() *AMILaunchPermissionSpec {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMILaunchPermissionStatus) DeepCopyInto(out *AMILaunchPermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMILaunchPermissionStatus.
func (in *AMILaunchPermissionStatus) DeepCopy() *AMILaunchPermissionStatus {
	if in == nil {
		return nil
	}
	out := new(AMILaunchPermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIList) DeepCopyInto(out *AMIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AMI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIList.
func (in *AMIList) DeepCopy() *AMIList {
	if in == nil {
		return nil
	}
	out := new(AMIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AMIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIObservation) DeepCopyInto(out *AMIObservation) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BootMode != nil {
		in, out := &in.BootMode, &out.BootMode
		*out = new(string)
		**out = **in
	}
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnaSupport != nil {
		in, out := &in.EnaSupport, &out.EnaSupport
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageLocation != nil {
		in, out := &in.ImageLocation, &out.ImageLocation
		*out = new(string)
		**out = **in
	}
	if in.ImageOwnerAlias != nil {
		in, out := &in.ImageOwnerAlias, &out.ImageOwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.ImdsSupport != nil {
		in, out := &in.ImdsSupport, &out.ImdsSupport
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.ManageEBSSnapshots != nil {
		in, out := &in.ManageEBSSnapshots, &out.ManageEBSSnapshots
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.PlatformDetails != nil {
		in, out := &in.PlatformDetails, &out.PlatformDetails
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.RamdiskID != nil {
		in, out := &in.RamdiskID, &out.RamdiskID
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceName != nil {
		in, out := &in.RootDeviceName, &out.RootDeviceName
		*out = new(string)
		**out = **in
	}
	if in.RootSnapshotID != nil {
		in, out := &in.RootSnapshotID, &out.RootSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TpmSupport != nil {
		in, out := &in.TpmSupport, &out.TpmSupport
		*out = new(string)
		**out = **in
	}
	if in.UsageOperation != nil {
		in, out := &in.UsageOperation, &out.UsageOperation
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIObservation.
func (in *AMIObservation) DeepCopy() *AMIObservation {
	if in == nil {
		return nil
	}
	out := new(AMIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIParameters) DeepCopyInto(out *AMIParameters) {
	*out = *in
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.BootMode != nil {
		in, out := &in.BootMode, &out.BootMode
		*out = new(string)
		**out = **in
	}
	if in.DeprecationTime != nil {
		in, out := &in.DeprecationTime, &out.DeprecationTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnaSupport != nil {
		in, out := &in.EnaSupport, &out.EnaSupport
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageLocation != nil {
		in, out := &in.ImageLocation, &out.ImageLocation
		*out = new(string)
		**out = **in
	}
	if in.ImdsSupport != nil {
		in, out := &in.ImdsSupport, &out.ImdsSupport
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RamdiskID != nil {
		in, out := &in.RamdiskID, &out.RamdiskID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceName != nil {
		in, out := &in.RootDeviceName, &out.RootDeviceName
		*out = new(string)
		**out = **in
	}
	if in.SriovNetSupport != nil {
		in, out := &in.SriovNetSupport, &out.SriovNetSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TpmSupport != nil {
		in, out := &in.TpmSupport, &out.TpmSupport
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIParameters.
func (in *AMIParameters) DeepCopy() *AMIParameters {
	if in == nil {
		return nil
	}
	out := new(AMIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMISpec) DeepCopyInto(out *AMISpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMISpec.
func (in *AMISpec) DeepCopy() *AMISpec {
	if in == nil {
		return nil
	}
	out := new(AMISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AMIStatus) DeepCopyInto(out *AMIStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AMIStatus.
func (in *AMIStatus) DeepCopy() *AMIStatus {
	if in == nil {
		return nil
	}
	out := new(AMIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountInitParameters) DeepCopyInto(out *AcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountInitParameters.
func (in *AcceleratorCountInitParameters) DeepCopy() *AcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountObservation) DeepCopyInto(out *AcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountObservation.
func (in *AcceleratorCountObservation) DeepCopy() *AcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCountParameters) DeepCopyInto(out *AcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCountParameters.
func (in *AcceleratorCountParameters) DeepCopy() *AcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibInitParameters.
func (in *AcceleratorTotalMemoryMibInitParameters) DeepCopy() *AcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopyInto(out *AcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibObservation.
func (in *AcceleratorTotalMemoryMibObservation) DeepCopy() *AcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopyInto(out *AcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTotalMemoryMibParameters.
func (in *AcceleratorTotalMemoryMibParameters) DeepCopy() *AcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterInitParameters) DeepCopyInto(out *AccepterInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterInitParameters.
func (in *AccepterInitParameters) DeepCopy() *AccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterObservation) DeepCopyInto(out *AccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterObservation.
func (in *AccepterObservation) DeepCopy() *AccepterObservation {
	if in == nil {
		return nil
	}
	out := new(AccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccepterParameters) DeepCopyInto(out *AccepterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccepterParameters.
func (in *AccepterParameters) DeepCopy() *AccepterParameters {
	if in == nil {
		return nil
	}
	out := new(AccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsComponentInitParameters) DeepCopyInto(out *AdditionalDetailsComponentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsComponentInitParameters.
func (in *AdditionalDetailsComponentInitParameters) DeepCopy() *AdditionalDetailsComponentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsComponentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsComponentObservation) DeepCopyInto(out *AdditionalDetailsComponentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsComponentObservation.
func (in *AdditionalDetailsComponentObservation) DeepCopy() *AdditionalDetailsComponentObservation {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsComponentParameters) DeepCopyInto(out *AdditionalDetailsComponentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsComponentParameters.
func (in *AdditionalDetailsComponentParameters) DeepCopy() *AdditionalDetailsComponentParameters {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsInitParameters) DeepCopyInto(out *AdditionalDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsInitParameters.
func (in *AdditionalDetailsInitParameters) DeepCopy() *AdditionalDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsObservation) DeepCopyInto(out *AdditionalDetailsObservation) {
	*out = *in
	if in.AdditionalDetailType != nil {
		in, out := &in.AdditionalDetailType, &out.AdditionalDetailType
		*out = new(string)
		**out = **in
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]AdditionalDetailsComponentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsObservation.
func (in *AdditionalDetailsObservation) DeepCopy() *AdditionalDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalDetailsParameters) DeepCopyInto(out *AdditionalDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalDetailsParameters.
func (in *AdditionalDetailsParameters) DeepCopy() *AdditionalDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(AdditionalDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternatePathHintsInitParameters) DeepCopyInto(out *AlternatePathHintsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternatePathHintsInitParameters.
func (in *AlternatePathHintsInitParameters) DeepCopy() *AlternatePathHintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlternatePathHintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternatePathHintsObservation) DeepCopyInto(out *AlternatePathHintsObservation) {
	*out = *in
	if in.ComponentArn != nil {
		in, out := &in.ComponentArn, &out.ComponentArn
		*out = new(string)
		**out = **in
	}
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternatePathHintsObservation.
func (in *AlternatePathHintsObservation) DeepCopy() *AlternatePathHintsObservation {
	if in == nil {
		return nil
	}
	out := new(AlternatePathHintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternatePathHintsParameters) DeepCopyInto(out *AlternatePathHintsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternatePathHintsParameters.
func (in *AlternatePathHintsParameters) DeepCopy() *AlternatePathHintsParameters {
	if in == nil {
		return nil
	}
	out := new(AlternatePathHintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedToInitParameters) DeepCopyInto(out *AttachedToInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedToInitParameters.
func (in *AttachedToInitParameters) DeepCopy() *AttachedToInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedToInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedToObservation) DeepCopyInto(out *AttachedToObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedToObservation.
func (in *AttachedToObservation) DeepCopy() *AttachedToObservation {
	if in == nil {
		return nil
	}
	out := new(AttachedToObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedToParameters) DeepCopyInto(out *AttachedToParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedToParameters.
func (in *AttachedToParameters) DeepCopy() *AttachedToParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedToParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentInitParameters) DeepCopyInto(out *AttachmentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentInitParameters.
func (in *AttachmentInitParameters) DeepCopy() *AttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentObservation) DeepCopyInto(out *AttachmentObservation) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentObservation.
func (in *AttachmentObservation) DeepCopy() *AttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(AttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentParameters) DeepCopyInto(out *AttachmentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentParameters.
func (in *AttachmentParameters) DeepCopy() *AttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroup) DeepCopyInto(out *AvailabilityZoneGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroup.
func (in *AvailabilityZoneGroup) DeepCopy() *AvailabilityZoneGroup {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AvailabilityZoneGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupInitParameters) DeepCopyInto(out *AvailabilityZoneGroupInitParameters) {
	*out = *in
	if in.OptInStatus != nil {
		in, out := &in.OptInStatus, &out.OptInStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupInitParameters.
func (in *AvailabilityZoneGroupInitParameters) DeepCopy() *AvailabilityZoneGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupList) DeepCopyInto(out *AvailabilityZoneGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AvailabilityZoneGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupList.
func (in *AvailabilityZoneGroupList) DeepCopy() *AvailabilityZoneGroupList {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AvailabilityZoneGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupObservation) DeepCopyInto(out *AvailabilityZoneGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OptInStatus != nil {
		in, out := &in.OptInStatus, &out.OptInStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupObservation.
func (in *AvailabilityZoneGroupObservation) DeepCopy() *AvailabilityZoneGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupParameters) DeepCopyInto(out *AvailabilityZoneGroupParameters) {
	*out = *in
	if in.OptInStatus != nil {
		in, out := &in.OptInStatus, &out.OptInStatus
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupParameters.
func (in *AvailabilityZoneGroupParameters) DeepCopy() *AvailabilityZoneGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupSpec) DeepCopyInto(out *AvailabilityZoneGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupSpec.
func (in *AvailabilityZoneGroupSpec) DeepCopy() *AvailabilityZoneGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityZoneGroupStatus) DeepCopyInto(out *AvailabilityZoneGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityZoneGroupStatus.
func (in *AvailabilityZoneGroupStatus) DeepCopy() *AvailabilityZoneGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AvailabilityZoneGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsInitParameters.
func (in *BaselineEBSBandwidthMbpsInitParameters) DeepCopy() *BaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *BaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsObservation.
func (in *BaselineEBSBandwidthMbpsObservation) DeepCopy() *BaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *BaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaselineEBSBandwidthMbpsParameters.
func (in *BaselineEBSBandwidthMbpsParameters) DeepCopy() *BaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(BaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsInitParameters) DeepCopyInto(out *BlockDeviceMappingsInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsInitParameters.
func (in *BlockDeviceMappingsInitParameters) DeepCopy() *BlockDeviceMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsObservation) DeepCopyInto(out *BlockDeviceMappingsObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsObservation.
func (in *BlockDeviceMappingsObservation) DeepCopy() *BlockDeviceMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockDeviceMappingsParameters) DeepCopyInto(out *BlockDeviceMappingsParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.EBS != nil {
		in, out := &in.EBS, &out.EBS
		*out = make([]EBSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockDeviceMappingsParameters.
func (in *BlockDeviceMappingsParameters) DeepCopy() *BlockDeviceMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockDeviceMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsInitParameters) DeepCopyInto(out *CPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsInitParameters.
func (in *CPUOptionsInitParameters) DeepCopy() *CPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsObservation) DeepCopyInto(out *CPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsObservation.
func (in *CPUOptionsObservation) DeepCopy() *CPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUOptionsParameters) DeepCopyInto(out *CPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUOptionsParameters.
func (in *CPUOptionsParameters) DeepCopy() *CPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceInitParameters) DeepCopyInto(out *CapacityRebalanceInitParameters) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceInitParameters.
func (in *CapacityRebalanceInitParameters) DeepCopy() *CapacityRebalanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceObservation) DeepCopyInto(out *CapacityRebalanceObservation) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceObservation.
func (in *CapacityRebalanceObservation) DeepCopy() *CapacityRebalanceObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityRebalanceParameters) DeepCopyInto(out *CapacityRebalanceParameters) {
	*out = *in
	if in.ReplacementStrategy != nil {
		in, out := &in.ReplacementStrategy, &out.ReplacementStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityRebalanceParameters.
func (in *CapacityRebalanceParameters) DeepCopy() *CapacityRebalanceParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityRebalanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservation) DeepCopyInto(out *CapacityReservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservation.
func (in *CapacityReservation) DeepCopy() *CapacityReservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityReservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationInitParameters) DeepCopyInto(out *CapacityReservationInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.EndDateType != nil {
		in, out := &in.EndDateType, &out.EndDateType
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceMatchCriteria != nil {
		in, out := &in.InstanceMatchCriteria, &out.InstanceMatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.InstancePlatform != nil {
		in, out := &in.InstancePlatform, &out.InstancePlatform
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupArn != nil {
		in, out := &in.PlacementGroupArn, &out.PlacementGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationInitParameters.
func (in *CapacityReservationInitParameters) DeepCopy() *CapacityReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationList) DeepCopyInto(out *CapacityReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CapacityReservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationList.
func (in *CapacityReservationList) DeepCopy() *CapacityReservationList {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CapacityReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationObservation) DeepCopyInto(out *CapacityReservationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.EndDateType != nil {
		in, out := &in.EndDateType, &out.EndDateType
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceMatchCriteria != nil {
		in, out := &in.InstanceMatchCriteria, &out.InstanceMatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.InstancePlatform != nil {
		in, out := &in.InstancePlatform, &out.InstancePlatform
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupArn != nil {
		in, out := &in.PlacementGroupArn, &out.PlacementGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationObservation.
func (in *CapacityReservationObservation) DeepCopy() *CapacityReservationObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationParameters) DeepCopyInto(out *CapacityReservationParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.EndDateType != nil {
		in, out := &in.EndDateType, &out.EndDateType
		*out = new(string)
		**out = **in
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = new(bool)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceMatchCriteria != nil {
		in, out := &in.InstanceMatchCriteria, &out.InstanceMatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.InstancePlatform != nil {
		in, out := &in.InstancePlatform, &out.InstancePlatform
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupArn != nil {
		in, out := &in.PlacementGroupArn, &out.PlacementGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationParameters.
func (in *CapacityReservationParameters) DeepCopy() *CapacityReservationParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpec) DeepCopyInto(out *CapacityReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpec.
func (in *CapacityReservationSpec) DeepCopy() *CapacityReservationSpec {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetInitParameters.
func (in *CapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetObservation.
func (in *CapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopyInto(out *CapacityReservationSpecificationCapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationCapacityReservationTargetParameters.
func (in *CapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopy() *CapacityReservationSpecificationCapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationCapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationInitParameters) DeepCopyInto(out *CapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationInitParameters.
func (in *CapacityReservationSpecificationInitParameters) DeepCopy() *CapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationObservation) DeepCopyInto(out *CapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationObservation.
func (in *CapacityReservationSpecificationObservation) DeepCopy() *CapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationSpecificationParameters) DeepCopyInto(out *CapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationSpecificationParameters.
func (in *CapacityReservationSpecificationParameters) DeepCopy() *CapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationStatus) DeepCopyInto(out *CapacityReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationStatus.
func (in *CapacityReservationStatus) DeepCopy() *CapacityReservationStatus {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetInitParameters) DeepCopyInto(out *CapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetInitParameters.
func (in *CapacityReservationTargetInitParameters) DeepCopy() *CapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetObservation) DeepCopyInto(out *CapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetObservation.
func (in *CapacityReservationTargetObservation) DeepCopy() *CapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityReservationTargetParameters) DeepCopyInto(out *CapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityReservationTargetParameters.
func (in *CapacityReservationTargetParameters) DeepCopy() *CapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(CapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGateway) DeepCopyInto(out *CarrierGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGateway.
func (in *CarrierGateway) DeepCopy() *CarrierGateway {
	if in == nil {
		return nil
	}
	out := new(CarrierGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CarrierGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewayInitParameters) DeepCopyInto(out *CarrierGatewayInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewayInitParameters.
func (in *CarrierGatewayInitParameters) DeepCopy() *CarrierGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewayList) DeepCopyInto(out *CarrierGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CarrierGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewayList.
func (in *CarrierGatewayList) DeepCopy() *CarrierGatewayList {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CarrierGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewayObservation) DeepCopyInto(out *CarrierGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewayObservation.
func (in *CarrierGatewayObservation) DeepCopy() *CarrierGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewayParameters) DeepCopyInto(out *CarrierGatewayParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewayParameters.
func (in *CarrierGatewayParameters) DeepCopy() *CarrierGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewaySpec) DeepCopyInto(out *CarrierGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewaySpec.
func (in *CarrierGatewaySpec) DeepCopy() *CarrierGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CarrierGatewayStatus) DeepCopyInto(out *CarrierGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CarrierGatewayStatus.
func (in *CarrierGatewayStatus) DeepCopy() *CarrierGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(CarrierGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextInitParameters) DeepCopyInto(out *CidrAuthorizationContextInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextInitParameters.
func (in *CidrAuthorizationContextInitParameters) DeepCopy() *CidrAuthorizationContextInitParameters {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextObservation) DeepCopyInto(out *CidrAuthorizationContextObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextObservation.
func (in *CidrAuthorizationContextObservation) DeepCopy() *CidrAuthorizationContextObservation {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrAuthorizationContextParameters) DeepCopyInto(out *CidrAuthorizationContextParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrAuthorizationContextParameters.
func (in *CidrAuthorizationContextParameters) DeepCopy() *CidrAuthorizationContextParameters {
	if in == nil {
		return nil
	}
	out := new(CidrAuthorizationContextParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassicLoadBalancerListenerInitParameters) DeepCopyInto(out *ClassicLoadBalancerListenerInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassicLoadBalancerListenerInitParameters.
func (in *ClassicLoadBalancerListenerInitParameters) DeepCopy() *ClassicLoadBalancerListenerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClassicLoadBalancerListenerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassicLoadBalancerListenerObservation) DeepCopyInto(out *ClassicLoadBalancerListenerObservation) {
	*out = *in
	if in.InstancePort != nil {
		in, out := &in.InstancePort, &out.InstancePort
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerPort != nil {
		in, out := &in.LoadBalancerPort, &out.LoadBalancerPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassicLoadBalancerListenerObservation.
func (in *ClassicLoadBalancerListenerObservation) DeepCopy() *ClassicLoadBalancerListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ClassicLoadBalancerListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassicLoadBalancerListenerParameters) DeepCopyInto(out *ClassicLoadBalancerListenerParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassicLoadBalancerListenerParameters.
func (in *ClassicLoadBalancerListenerParameters) DeepCopy() *ClassicLoadBalancerListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ClassicLoadBalancerListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataInitParameters) DeepCopyInto(out *ClientDataInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataInitParameters.
func (in *ClientDataInitParameters) DeepCopy() *ClientDataInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataObservation) DeepCopyInto(out *ClientDataObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataObservation.
func (in *ClientDataObservation) DeepCopy() *ClientDataObservation {
	if in == nil {
		return nil
	}
	out := new(ClientDataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDataParameters) DeepCopyInto(out *ClientDataParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.UploadEnd != nil {
		in, out := &in.UploadEnd, &out.UploadEnd
		*out = new(string)
		**out = **in
	}
	if in.UploadSize != nil {
		in, out := &in.UploadSize, &out.UploadSize
		*out = new(float64)
		**out = **in
	}
	if in.UploadStart != nil {
		in, out := &in.UploadStart, &out.UploadStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDataParameters.
func (in *ClientDataParameters) DeepCopy() *ClientDataParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsInitParameters) DeepCopyInto(out *CloudwatchLogOptionsInitParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsInitParameters.
func (in *CloudwatchLogOptionsInitParameters) DeepCopy() *CloudwatchLogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsObservation) DeepCopyInto(out *CloudwatchLogOptionsObservation) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsObservation.
func (in *CloudwatchLogOptionsObservation) DeepCopy() *CloudwatchLogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogOptionsParameters) DeepCopyInto(out *CloudwatchLogOptionsParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogOptionsParameters.
func (in *CloudwatchLogOptionsParameters) DeepCopy() *CloudwatchLogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentInitParameters) DeepCopyInto(out *ComponentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentInitParameters.
func (in *ComponentInitParameters) DeepCopy() *ComponentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentObservation) DeepCopyInto(out *ComponentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentObservation.
func (in *ComponentObservation) DeepCopy() *ComponentObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentParameters) DeepCopyInto(out *ComponentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentParameters.
func (in *ComponentParameters) DeepCopy() *ComponentParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationInitParameters) DeepCopyInto(out *CreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationInitParameters.
func (in *CreditSpecificationInitParameters) DeepCopy() *CreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationObservation) DeepCopyInto(out *CreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationObservation.
func (in *CreditSpecificationObservation) DeepCopy() *CreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreditSpecificationParameters) DeepCopyInto(out *CreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreditSpecificationParameters.
func (in *CreditSpecificationParameters) DeepCopy() *CreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(CreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGateway) DeepCopyInto(out *CustomerGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGateway.
func (in *CustomerGateway) DeepCopy() *CustomerGateway {
	if in == nil {
		return nil
	}
	out := new(CustomerGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomerGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewayInitParameters) DeepCopyInto(out *CustomerGatewayInitParameters) {
	*out = *in
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewayInitParameters.
func (in *CustomerGatewayInitParameters) DeepCopy() *CustomerGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewayList) DeepCopyInto(out *CustomerGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomerGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewayList.
func (in *CustomerGatewayList) DeepCopy() *CustomerGatewayList {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomerGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewayObservation) DeepCopyInto(out *CustomerGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewayObservation.
func (in *CustomerGatewayObservation) DeepCopy() *CustomerGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewayParameters) DeepCopyInto(out *CustomerGatewayParameters) {
	*out = *in
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewayParameters.
func (in *CustomerGatewayParameters) DeepCopy() *CustomerGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewaySpec) DeepCopyInto(out *CustomerGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewaySpec.
func (in *CustomerGatewaySpec) DeepCopy() *CustomerGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerGatewayStatus) DeepCopyInto(out *CustomerGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerGatewayStatus.
func (in *CustomerGatewayStatus) DeepCopy() *CustomerGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(CustomerGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryInitParameters) DeepCopyInto(out *DNSEntryInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryInitParameters.
func (in *DNSEntryInitParameters) DeepCopy() *DNSEntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSEntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryObservation) DeepCopyInto(out *DNSEntryObservation) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryObservation.
func (in *DNSEntryObservation) DeepCopy() *DNSEntryObservation {
	if in == nil {
		return nil
	}
	out := new(DNSEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSEntryParameters) DeepCopyInto(out *DNSEntryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSEntryParameters.
func (in *DNSEntryParameters) DeepCopy() *DNSEntryParameters {
	if in == nil {
		return nil
	}
	out := new(DNSEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsInitParameters) DeepCopyInto(out *DNSOptionsInitParameters) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsInitParameters.
func (in *DNSOptionsInitParameters) DeepCopy() *DNSOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsObservation) DeepCopyInto(out *DNSOptionsObservation) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsObservation.
func (in *DNSOptionsObservation) DeepCopy() *DNSOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSOptionsParameters) DeepCopyInto(out *DNSOptionsParameters) {
	*out = *in
	if in.DNSRecordIPType != nil {
		in, out := &in.DNSRecordIPType, &out.DNSRecordIPType
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSOnlyForInboundResolverEndpoint != nil {
		in, out := &in.PrivateDNSOnlyForInboundResolverEndpoint, &out.PrivateDNSOnlyForInboundResolverEndpoint
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSOptionsParameters.
func (in *DNSOptionsParameters) DeepCopy() *DNSOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DNSOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACL) DeepCopyInto(out *DefaultNetworkACL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACL.
func (in *DefaultNetworkACL) DeepCopy() *DefaultNetworkACL {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultNetworkACL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLInitParameters) DeepCopyInto(out *DefaultNetworkACLInitParameters) {
	*out = *in
	if in.DefaultNetworkACLID != nil {
		in, out := &in.DefaultNetworkACLID, &out.DefaultNetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.DefaultNetworkACLIDRef != nil {
		in, out := &in.DefaultNetworkACLIDRef, &out.DefaultNetworkACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultNetworkACLIDSelector != nil {
		in, out := &in.DefaultNetworkACLIDSelector, &out.DefaultNetworkACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]EgressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLInitParameters.
func (in *DefaultNetworkACLInitParameters) DeepCopy() *DefaultNetworkACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLList) DeepCopyInto(out *DefaultNetworkACLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultNetworkACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLList.
func (in *DefaultNetworkACLList) DeepCopy() *DefaultNetworkACLList {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultNetworkACLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLObservation) DeepCopyInto(out *DefaultNetworkACLObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultNetworkACLID != nil {
		in, out := &in.DefaultNetworkACLID, &out.DefaultNetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]EgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLObservation.
func (in *DefaultNetworkACLObservation) DeepCopy() *DefaultNetworkACLObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLParameters) DeepCopyInto(out *DefaultNetworkACLParameters) {
	*out = *in
	if in.DefaultNetworkACLID != nil {
		in, out := &in.DefaultNetworkACLID, &out.DefaultNetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.DefaultNetworkACLIDRef != nil {
		in, out := &in.DefaultNetworkACLIDRef, &out.DefaultNetworkACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultNetworkACLIDSelector != nil {
		in, out := &in.DefaultNetworkACLIDSelector, &out.DefaultNetworkACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]EgressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLParameters.
func (in *DefaultNetworkACLParameters) DeepCopy() *DefaultNetworkACLParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLSpec) DeepCopyInto(out *DefaultNetworkACLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLSpec.
func (in *DefaultNetworkACLSpec) DeepCopy() *DefaultNetworkACLSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultNetworkACLStatus) DeepCopyInto(out *DefaultNetworkACLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultNetworkACLStatus.
func (in *DefaultNetworkACLStatus) DeepCopy() *DefaultNetworkACLStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultNetworkACLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTable) DeepCopyInto(out *DefaultRouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTable.
func (in *DefaultRouteTable) DeepCopy() *DefaultRouteTable {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultRouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableInitParameters) DeepCopyInto(out *DefaultRouteTableInitParameters) {
	*out = *in
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableIDRef != nil {
		in, out := &in.DefaultRouteTableIDRef, &out.DefaultRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultRouteTableIDSelector != nil {
		in, out := &in.DefaultRouteTableIDSelector, &out.DefaultRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PropagatingVgws != nil {
		in, out := &in.PropagatingVgws, &out.PropagatingVgws
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableInitParameters.
func (in *DefaultRouteTableInitParameters) DeepCopy() *DefaultRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableList) DeepCopyInto(out *DefaultRouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultRouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableList.
func (in *DefaultRouteTableList) DeepCopy() *DefaultRouteTableList {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultRouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableObservation) DeepCopyInto(out *DefaultRouteTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PropagatingVgws != nil {
		in, out := &in.PropagatingVgws, &out.PropagatingVgws
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableObservation.
func (in *DefaultRouteTableObservation) DeepCopy() *DefaultRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableParameters) DeepCopyInto(out *DefaultRouteTableParameters) {
	*out = *in
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableIDRef != nil {
		in, out := &in.DefaultRouteTableIDRef, &out.DefaultRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultRouteTableIDSelector != nil {
		in, out := &in.DefaultRouteTableIDSelector, &out.DefaultRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PropagatingVgws != nil {
		in, out := &in.PropagatingVgws, &out.PropagatingVgws
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableParameters.
func (in *DefaultRouteTableParameters) DeepCopy() *DefaultRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableSpec) DeepCopyInto(out *DefaultRouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableSpec.
func (in *DefaultRouteTableSpec) DeepCopy() *DefaultRouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteTableStatus) DeepCopyInto(out *DefaultRouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteTableStatus.
func (in *DefaultRouteTableStatus) DeepCopy() *DefaultRouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroup) DeepCopyInto(out *DefaultSecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroup.
func (in *DefaultSecurityGroup) DeepCopy() *DefaultSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultSecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupEgressInitParameters) DeepCopyInto(out *DefaultSecurityGroupEgressInitParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupEgressInitParameters.
func (in *DefaultSecurityGroupEgressInitParameters) DeepCopy() *DefaultSecurityGroupEgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupEgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupEgressObservation) DeepCopyInto(out *DefaultSecurityGroupEgressObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupEgressObservation.
func (in *DefaultSecurityGroupEgressObservation) DeepCopy() *DefaultSecurityGroupEgressObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupEgressParameters) DeepCopyInto(out *DefaultSecurityGroupEgressParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupEgressParameters.
func (in *DefaultSecurityGroupEgressParameters) DeepCopy() *DefaultSecurityGroupEgressParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupIngressInitParameters) DeepCopyInto(out *DefaultSecurityGroupIngressInitParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupIngressInitParameters.
func (in *DefaultSecurityGroupIngressInitParameters) DeepCopy() *DefaultSecurityGroupIngressInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupIngressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupIngressObservation) DeepCopyInto(out *DefaultSecurityGroupIngressObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupIngressObservation.
func (in *DefaultSecurityGroupIngressObservation) DeepCopy() *DefaultSecurityGroupIngressObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupIngressParameters) DeepCopyInto(out *DefaultSecurityGroupIngressParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupIngressParameters.
func (in *DefaultSecurityGroupIngressParameters) DeepCopy() *DefaultSecurityGroupIngressParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupInitParameters) DeepCopyInto(out *DefaultSecurityGroupInitParameters) {
	*out = *in
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]DefaultSecurityGroupEgressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]DefaultSecurityGroupIngressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupInitParameters.
func (in *DefaultSecurityGroupInitParameters) DeepCopy() *DefaultSecurityGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupList) DeepCopyInto(out *DefaultSecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultSecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupList.
func (in *DefaultSecurityGroupList) DeepCopy() *DefaultSecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultSecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupObservation) DeepCopyInto(out *DefaultSecurityGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]DefaultSecurityGroupEgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]DefaultSecurityGroupIngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupObservation.
func (in *DefaultSecurityGroupObservation) DeepCopy() *DefaultSecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupParameters) DeepCopyInto(out *DefaultSecurityGroupParameters) {
	*out = *in
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]DefaultSecurityGroupEgressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]DefaultSecurityGroupIngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupParameters.
func (in *DefaultSecurityGroupParameters) DeepCopy() *DefaultSecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupSpec) DeepCopyInto(out *DefaultSecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupSpec.
func (in *DefaultSecurityGroupSpec) DeepCopy() *DefaultSecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSecurityGroupStatus) DeepCopyInto(out *DefaultSecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSecurityGroupStatus.
func (in *DefaultSecurityGroupStatus) DeepCopy() *DefaultSecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultSecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnet) DeepCopyInto(out *DefaultSubnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnet.
func (in *DefaultSubnet) DeepCopy() *DefaultSubnet {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultSubnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetInitParameters) DeepCopyInto(out *DefaultSubnetInitParameters) {
	*out = *in
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetInitParameters.
func (in *DefaultSubnetInitParameters) DeepCopy() *DefaultSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetList) DeepCopyInto(out *DefaultSubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultSubnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetList.
func (in *DefaultSubnetList) DeepCopy() *DefaultSubnetList {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultSubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetObservation) DeepCopyInto(out *DefaultSubnetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneID != nil {
		in, out := &in.AvailabilityZoneID, &out.AvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableLniAtDeviceIndex != nil {
		in, out := &in.EnableLniAtDeviceIndex, &out.EnableLniAtDeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.ExistingDefaultSubnet != nil {
		in, out := &in.ExistingDefaultSubnet, &out.ExistingDefaultSubnet
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockAssociationID != nil {
		in, out := &in.IPv6CidrBlockAssociationID, &out.IPv6CidrBlockAssociationID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetObservation.
func (in *DefaultSubnetObservation) DeepCopy() *DefaultSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetParameters) DeepCopyInto(out *DefaultSubnetParameters) {
	*out = *in
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetParameters.
func (in *DefaultSubnetParameters) DeepCopy() *DefaultSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetSpec) DeepCopyInto(out *DefaultSubnetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetSpec.
func (in *DefaultSubnetSpec) DeepCopy() *DefaultSubnetSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultSubnetStatus) DeepCopyInto(out *DefaultSubnetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultSubnetStatus.
func (in *DefaultSubnetStatus) DeepCopy() *DefaultSubnetStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultSubnetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPC) DeepCopyInto(out *DefaultVPC) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPC.
func (in *DefaultVPC) DeepCopy() *DefaultVPC {
	if in == nil {
		return nil
	}
	out := new(DefaultVPC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultVPC) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptions) DeepCopyInto(out *DefaultVPCDHCPOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptions.
func (in *DefaultVPCDHCPOptions) DeepCopy() *DefaultVPCDHCPOptions {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultVPCDHCPOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsInitParameters) DeepCopyInto(out *DefaultVPCDHCPOptionsInitParameters) {
	*out = *in
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsInitParameters.
func (in *DefaultVPCDHCPOptionsInitParameters) DeepCopy() *DefaultVPCDHCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsList) DeepCopyInto(out *DefaultVPCDHCPOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultVPCDHCPOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsList.
func (in *DefaultVPCDHCPOptionsList) DeepCopy() *DefaultVPCDHCPOptionsList {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultVPCDHCPOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsObservation) DeepCopyInto(out *DefaultVPCDHCPOptionsObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameServers != nil {
		in, out := &in.DomainNameServers, &out.DomainNameServers
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetbiosNameServers != nil {
		in, out := &in.NetbiosNameServers, &out.NetbiosNameServers
		*out = new(string)
		**out = **in
	}
	if in.NetbiosNodeType != nil {
		in, out := &in.NetbiosNodeType, &out.NetbiosNodeType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsObservation.
func (in *DefaultVPCDHCPOptionsObservation) DeepCopy() *DefaultVPCDHCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsParameters) DeepCopyInto(out *DefaultVPCDHCPOptionsParameters) {
	*out = *in
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsParameters.
func (in *DefaultVPCDHCPOptionsParameters) DeepCopy() *DefaultVPCDHCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsSpec) DeepCopyInto(out *DefaultVPCDHCPOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsSpec.
func (in *DefaultVPCDHCPOptionsSpec) DeepCopy() *DefaultVPCDHCPOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCDHCPOptionsStatus) DeepCopyInto(out *DefaultVPCDHCPOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCDHCPOptionsStatus.
func (in *DefaultVPCDHCPOptionsStatus) DeepCopy() *DefaultVPCDHCPOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCDHCPOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCInitParameters) DeepCopyInto(out *DefaultVPCInitParameters) {
	*out = *in
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCInitParameters.
func (in *DefaultVPCInitParameters) DeepCopy() *DefaultVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCList) DeepCopyInto(out *DefaultVPCList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultVPC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCList.
func (in *DefaultVPCList) DeepCopy() *DefaultVPCList {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultVPCList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCObservation) DeepCopyInto(out *DefaultVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DefaultNetworkACLID != nil {
		in, out := &in.DefaultNetworkACLID, &out.DefaultNetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DefaultSecurityGroupID != nil {
		in, out := &in.DefaultSecurityGroupID, &out.DefaultSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.ExistingDefaultVPC != nil {
		in, out := &in.ExistingDefaultVPC, &out.ExistingDefaultVPC
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AssociationID != nil {
		in, out := &in.IPv6AssociationID, &out.IPv6AssociationID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.InstanceTenancy != nil {
		in, out := &in.InstanceTenancy, &out.InstanceTenancy
		*out = new(string)
		**out = **in
	}
	if in.MainRouteTableID != nil {
		in, out := &in.MainRouteTableID, &out.MainRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCObservation.
func (in *DefaultVPCObservation) DeepCopy() *DefaultVPCObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCParameters) DeepCopyInto(out *DefaultVPCParameters) {
	*out = *in
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.ForceDestroy != nil {
		in, out := &in.ForceDestroy, &out.ForceDestroy
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCParameters.
func (in *DefaultVPCParameters) DeepCopy() *DefaultVPCParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCSpec) DeepCopyInto(out *DefaultVPCSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCSpec.
func (in *DefaultVPCSpec) DeepCopy() *DefaultVPCSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultVPCStatus) DeepCopyInto(out *DefaultVPCStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultVPCStatus.
func (in *DefaultVPCStatus) DeepCopy() *DefaultVPCStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultVPCStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationInitParameters) DeepCopyInto(out *DestinationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationInitParameters.
func (in *DestinationInitParameters) DeepCopy() *DestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationObservation) DeepCopyInto(out *DestinationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationObservation.
func (in *DestinationObservation) DeepCopy() *DestinationObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsInitParameters) DeepCopyInto(out *DestinationOptionsInitParameters) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsInitParameters.
func (in *DestinationOptionsInitParameters) DeepCopy() *DestinationOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsObservation) DeepCopyInto(out *DestinationOptionsObservation) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsObservation.
func (in *DestinationOptionsObservation) DeepCopy() *DestinationOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationOptionsParameters) DeepCopyInto(out *DestinationOptionsParameters) {
	*out = *in
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.HiveCompatiblePartitions != nil {
		in, out := &in.HiveCompatiblePartitions, &out.HiveCompatiblePartitions
		*out = new(bool)
		**out = **in
	}
	if in.PerHourPartition != nil {
		in, out := &in.PerHourPartition, &out.PerHourPartition
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationOptionsParameters.
func (in *DestinationOptionsParameters) DeepCopy() *DestinationOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationParameters) DeepCopyInto(out *DestinationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationParameters.
func (in *DestinationParameters) DeepCopy() *DestinationParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeInitParameters) DeepCopyInto(out *DestinationPortRangeInitParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeInitParameters.
func (in *DestinationPortRangeInitParameters) DeepCopy() *DestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeObservation) DeepCopyInto(out *DestinationPortRangeObservation) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeObservation.
func (in *DestinationPortRangeObservation) DeepCopy() *DestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeParameters) DeepCopyInto(out *DestinationPortRangeParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeParameters.
func (in *DestinationPortRangeParameters) DeepCopy() *DestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangesInitParameters) DeepCopyInto(out *DestinationPortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangesInitParameters.
func (in *DestinationPortRangesInitParameters) DeepCopy() *DestinationPortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangesObservation) DeepCopyInto(out *DestinationPortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangesObservation.
func (in *DestinationPortRangesObservation) DeepCopy() *DestinationPortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangesParameters) DeepCopyInto(out *DestinationPortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangesParameters.
func (in *DestinationPortRangesParameters) DeepCopy() *DestinationPortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationVPCInitParameters) DeepCopyInto(out *DestinationVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationVPCInitParameters.
func (in *DestinationVPCInitParameters) DeepCopy() *DestinationVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationVPCObservation) DeepCopyInto(out *DestinationVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationVPCObservation.
func (in *DestinationVPCObservation) DeepCopy() *DestinationVPCObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationVPCParameters) DeepCopyInto(out *DestinationVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationVPCParameters.
func (in *DestinationVPCParameters) DeepCopy() *DestinationVPCParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerInitParameters) DeepCopyInto(out *DiskContainerInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = make([]UserBucketInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerInitParameters.
func (in *DiskContainerInitParameters) DeepCopy() *DiskContainerInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskContainerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerObservation) DeepCopyInto(out *DiskContainerObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = make([]UserBucketObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerObservation.
func (in *DiskContainerObservation) DeepCopy() *DiskContainerObservation {
	if in == nil {
		return nil
	}
	out := new(DiskContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskContainerParameters) DeepCopyInto(out *DiskContainerParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserBucket != nil {
		in, out := &in.UserBucket, &out.UserBucket
		*out = make([]UserBucketParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskContainerParameters.
func (in *DiskContainerParameters) DeepCopy() *DiskContainerParameters {
	if in == nil {
		return nil
	}
	out := new(DiskContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceInitParameters) DeepCopyInto(out *EBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotIDRef != nil {
		in, out := &in.SnapshotIDRef, &out.SnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotIDSelector != nil {
		in, out := &in.SnapshotIDSelector, &out.SnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceInitParameters.
func (in *EBSBlockDeviceInitParameters) DeepCopy() *EBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceObservation) DeepCopyInto(out *EBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceObservation.
func (in *EBSBlockDeviceObservation) DeepCopy() *EBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceParameters) DeepCopyInto(out *EBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotIDRef != nil {
		in, out := &in.SnapshotIDRef, &out.SnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotIDSelector != nil {
		in, out := &in.SnapshotIDSelector, &out.SnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceParameters.
func (in *EBSBlockDeviceParameters) DeepCopy() *EBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKey) DeepCopyInto(out *EBSDefaultKMSKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKey.
func (in *EBSDefaultKMSKey) DeepCopy() *EBSDefaultKMSKey {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSDefaultKMSKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeyInitParameters) DeepCopyInto(out *EBSDefaultKMSKeyInitParameters) {
	*out = *in
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyArnRef != nil {
		in, out := &in.KeyArnRef, &out.KeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyArnSelector != nil {
		in, out := &in.KeyArnSelector, &out.KeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeyInitParameters.
func (in *EBSDefaultKMSKeyInitParameters) DeepCopy() *EBSDefaultKMSKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeyList) DeepCopyInto(out *EBSDefaultKMSKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSDefaultKMSKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeyList.
func (in *EBSDefaultKMSKeyList) DeepCopy() *EBSDefaultKMSKeyList {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSDefaultKMSKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeyObservation) DeepCopyInto(out *EBSDefaultKMSKeyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeyObservation.
func (in *EBSDefaultKMSKeyObservation) DeepCopy() *EBSDefaultKMSKeyObservation {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeyParameters) DeepCopyInto(out *EBSDefaultKMSKeyParameters) {
	*out = *in
	if in.KeyArn != nil {
		in, out := &in.KeyArn, &out.KeyArn
		*out = new(string)
		**out = **in
	}
	if in.KeyArnRef != nil {
		in, out := &in.KeyArnRef, &out.KeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyArnSelector != nil {
		in, out := &in.KeyArnSelector, &out.KeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeyParameters.
func (in *EBSDefaultKMSKeyParameters) DeepCopy() *EBSDefaultKMSKeyParameters {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeySpec) DeepCopyInto(out *EBSDefaultKMSKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeySpec.
func (in *EBSDefaultKMSKeySpec) DeepCopy() *EBSDefaultKMSKeySpec {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSDefaultKMSKeyStatus) DeepCopyInto(out *EBSDefaultKMSKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSDefaultKMSKeyStatus.
func (in *EBSDefaultKMSKeyStatus) DeepCopy() *EBSDefaultKMSKeyStatus {
	if in == nil {
		return nil
	}
	out := new(EBSDefaultKMSKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefault) DeepCopyInto(out *EBSEncryptionByDefault) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefault.
func (in *EBSEncryptionByDefault) DeepCopy() *EBSEncryptionByDefault {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefault)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSEncryptionByDefault) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultInitParameters) DeepCopyInto(out *EBSEncryptionByDefaultInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultInitParameters.
func (in *EBSEncryptionByDefaultInitParameters) DeepCopy() *EBSEncryptionByDefaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultList) DeepCopyInto(out *EBSEncryptionByDefaultList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSEncryptionByDefault, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultList.
func (in *EBSEncryptionByDefaultList) DeepCopy() *EBSEncryptionByDefaultList {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSEncryptionByDefaultList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultObservation) DeepCopyInto(out *EBSEncryptionByDefaultObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultObservation.
func (in *EBSEncryptionByDefaultObservation) DeepCopy() *EBSEncryptionByDefaultObservation {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultParameters) DeepCopyInto(out *EBSEncryptionByDefaultParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultParameters.
func (in *EBSEncryptionByDefaultParameters) DeepCopy() *EBSEncryptionByDefaultParameters {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultSpec) DeepCopyInto(out *EBSEncryptionByDefaultSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultSpec.
func (in *EBSEncryptionByDefaultSpec) DeepCopy() *EBSEncryptionByDefaultSpec {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSEncryptionByDefaultStatus) DeepCopyInto(out *EBSEncryptionByDefaultStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSEncryptionByDefaultStatus.
func (in *EBSEncryptionByDefaultStatus) DeepCopy() *EBSEncryptionByDefaultStatus {
	if in == nil {
		return nil
	}
	out := new(EBSEncryptionByDefaultStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSInitParameters) DeepCopyInto(out *EBSInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSInitParameters.
func (in *EBSInitParameters) DeepCopy() *EBSInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSObservation) DeepCopyInto(out *EBSObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSObservation.
func (in *EBSObservation) DeepCopy() *EBSObservation {
	if in == nil {
		return nil
	}
	out := new(EBSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSParameters) DeepCopyInto(out *EBSParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSParameters.
func (in *EBSParameters) DeepCopy() *EBSParameters {
	if in == nil {
		return nil
	}
	out := new(EBSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshot) DeepCopyInto(out *EBSSnapshot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshot.
func (in *EBSSnapshot) DeepCopy() *EBSSnapshot {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopy) DeepCopyInto(out *EBSSnapshotCopy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopy.
func (in *EBSSnapshotCopy) DeepCopy() *EBSSnapshotCopy {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotCopy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopyInitParameters) DeepCopyInto(out *EBSSnapshotCopyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotIDRef != nil {
		in, out := &in.SourceSnapshotIDRef, &out.SourceSnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSnapshotIDSelector != nil {
		in, out := &in.SourceSnapshotIDSelector, &out.SourceSnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopyInitParameters.
func (in *EBSSnapshotCopyInitParameters) DeepCopy() *EBSSnapshotCopyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopyList) DeepCopyInto(out *EBSSnapshotCopyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSSnapshotCopy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopyList.
func (in *EBSSnapshotCopyList) DeepCopy() *EBSSnapshotCopyList {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotCopyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopyObservation) DeepCopyInto(out *EBSSnapshotCopyObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataEncryptionKeyID != nil {
		in, out := &in.DataEncryptionKeyID, &out.DataEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerAlias != nil {
		in, out := &in.OwnerAlias, &out.OwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopyObservation.
func (in *EBSSnapshotCopyObservation) DeepCopy() *EBSSnapshotCopyObservation {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopyParameters) DeepCopyInto(out *EBSSnapshotCopyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotID != nil {
		in, out := &in.SourceSnapshotID, &out.SourceSnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotIDRef != nil {
		in, out := &in.SourceSnapshotIDRef, &out.SourceSnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSnapshotIDSelector != nil {
		in, out := &in.SourceSnapshotIDSelector, &out.SourceSnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopyParameters.
func (in *EBSSnapshotCopyParameters) DeepCopy() *EBSSnapshotCopyParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopySpec) DeepCopyInto(out *EBSSnapshotCopySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopySpec.
func (in *EBSSnapshotCopySpec) DeepCopy() *EBSSnapshotCopySpec {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotCopyStatus) DeepCopyInto(out *EBSSnapshotCopyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotCopyStatus.
func (in *EBSSnapshotCopyStatus) DeepCopy() *EBSSnapshotCopyStatus {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotCopyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImport) DeepCopyInto(out *EBSSnapshotImport) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImport.
func (in *EBSSnapshotImport) DeepCopy() *EBSSnapshotImport {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotImport) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportInitParameters) DeepCopyInto(out *EBSSnapshotImportInitParameters) {
	*out = *in
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = make([]ClientDataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = make([]DiskContainerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportInitParameters.
func (in *EBSSnapshotImportInitParameters) DeepCopy() *EBSSnapshotImportInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportList) DeepCopyInto(out *EBSSnapshotImportList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSSnapshotImport, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportList.
func (in *EBSSnapshotImportList) DeepCopy() *EBSSnapshotImportList {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotImportList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportObservation) DeepCopyInto(out *EBSSnapshotImportObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = make([]ClientDataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataEncryptionKeyID != nil {
		in, out := &in.DataEncryptionKeyID, &out.DataEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = make([]DiskContainerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerAlias != nil {
		in, out := &in.OwnerAlias, &out.OwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportObservation.
func (in *EBSSnapshotImportObservation) DeepCopy() *EBSSnapshotImportObservation {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportParameters) DeepCopyInto(out *EBSSnapshotImportParameters) {
	*out = *in
	if in.ClientData != nil {
		in, out := &in.ClientData, &out.ClientData
		*out = make([]ClientDataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskContainer != nil {
		in, out := &in.DiskContainer, &out.DiskContainer
		*out = make([]DiskContainerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleName != nil {
		in, out := &in.RoleName, &out.RoleName
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportParameters.
func (in *EBSSnapshotImportParameters) DeepCopy() *EBSSnapshotImportParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportSpec) DeepCopyInto(out *EBSSnapshotImportSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportSpec.
func (in *EBSSnapshotImportSpec) DeepCopy() *EBSSnapshotImportSpec {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotImportStatus) DeepCopyInto(out *EBSSnapshotImportStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotImportStatus.
func (in *EBSSnapshotImportStatus) DeepCopy() *EBSSnapshotImportStatus {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotImportStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotInitParameters) DeepCopyInto(out *EBSSnapshotInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotInitParameters.
func (in *EBSSnapshotInitParameters) DeepCopy() *EBSSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotList) DeepCopyInto(out *EBSSnapshotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSSnapshot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotList.
func (in *EBSSnapshotList) DeepCopy() *EBSSnapshotList {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSSnapshotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotObservation) DeepCopyInto(out *EBSSnapshotObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataEncryptionKeyID != nil {
		in, out := &in.DataEncryptionKeyID, &out.DataEncryptionKeyID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerAlias != nil {
		in, out := &in.OwnerAlias, &out.OwnerAlias
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotObservation.
func (in *EBSSnapshotObservation) DeepCopy() *EBSSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotParameters) DeepCopyInto(out *EBSSnapshotParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PermanentRestore != nil {
		in, out := &in.PermanentRestore, &out.PermanentRestore
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageTier != nil {
		in, out := &in.StorageTier, &out.StorageTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemporaryRestoreDays != nil {
		in, out := &in.TemporaryRestoreDays, &out.TemporaryRestoreDays
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotParameters.
func (in *EBSSnapshotParameters) DeepCopy() *EBSSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotSpec) DeepCopyInto(out *EBSSnapshotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotSpec.
func (in *EBSSnapshotSpec) DeepCopy() *EBSSnapshotSpec {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSSnapshotStatus) DeepCopyInto(out *EBSSnapshotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSSnapshotStatus.
func (in *EBSSnapshotStatus) DeepCopy() *EBSSnapshotStatus {
	if in == nil {
		return nil
	}
	out := new(EBSSnapshotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolume) DeepCopyInto(out *EBSVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolume.
func (in *EBSVolume) DeepCopy() *EBSVolume {
	if in == nil {
		return nil
	}
	out := new(EBSVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeInitParameters) DeepCopyInto(out *EBSVolumeInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.FinalSnapshot != nil {
		in, out := &in.FinalSnapshot, &out.FinalSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiAttachEnabled != nil {
		in, out := &in.MultiAttachEnabled, &out.MultiAttachEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeInitParameters.
func (in *EBSVolumeInitParameters) DeepCopy() *EBSVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeList) DeepCopyInto(out *EBSVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EBSVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeList.
func (in *EBSVolumeList) DeepCopy() *EBSVolumeList {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EBSVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeObservation) DeepCopyInto(out *EBSVolumeObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.FinalSnapshot != nil {
		in, out := &in.FinalSnapshot, &out.FinalSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MultiAttachEnabled != nil {
		in, out := &in.MultiAttachEnabled, &out.MultiAttachEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeObservation.
func (in *EBSVolumeObservation) DeepCopy() *EBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeParameters) DeepCopyInto(out *EBSVolumeParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.FinalSnapshot != nil {
		in, out := &in.FinalSnapshot, &out.FinalSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiAttachEnabled != nil {
		in, out := &in.MultiAttachEnabled, &out.MultiAttachEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeParameters.
func (in *EBSVolumeParameters) DeepCopy() *EBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeSpec) DeepCopyInto(out *EBSVolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeSpec.
func (in *EBSVolumeSpec) DeepCopy() *EBSVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeStatus) DeepCopyInto(out *EBSVolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeStatus.
func (in *EBSVolumeStatus) DeepCopy() *EBSVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIP) DeepCopyInto(out *EIP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIP.
func (in *EIP) DeepCopy() *EIP {
	if in == nil {
		return nil
	}
	out := new(EIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EIP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociation) DeepCopyInto(out *EIPAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociation.
func (in *EIPAssociation) DeepCopy() *EIPAssociation {
	if in == nil {
		return nil
	}
	out := new(EIPAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EIPAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationInitParameters) DeepCopyInto(out *EIPAssociationInitParameters) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AllocationIDRef != nil {
		in, out := &in.AllocationIDRef, &out.AllocationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AllocationIDSelector != nil {
		in, out := &in.AllocationIDSelector, &out.AllocationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AllowReassociation != nil {
		in, out := &in.AllowReassociation, &out.AllowReassociation
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationInitParameters.
func (in *EIPAssociationInitParameters) DeepCopy() *EIPAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationList) DeepCopyInto(out *EIPAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EIPAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationList.
func (in *EIPAssociationList) DeepCopy() *EIPAssociationList {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EIPAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationObservation) DeepCopyInto(out *EIPAssociationObservation) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AllowReassociation != nil {
		in, out := &in.AllowReassociation, &out.AllowReassociation
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationObservation.
func (in *EIPAssociationObservation) DeepCopy() *EIPAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationParameters) DeepCopyInto(out *EIPAssociationParameters) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AllocationIDRef != nil {
		in, out := &in.AllocationIDRef, &out.AllocationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AllocationIDSelector != nil {
		in, out := &in.AllocationIDSelector, &out.AllocationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AllowReassociation != nil {
		in, out := &in.AllowReassociation, &out.AllowReassociation
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationParameters.
func (in *EIPAssociationParameters) DeepCopy() *EIPAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationSpec) DeepCopyInto(out *EIPAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationSpec.
func (in *EIPAssociationSpec) DeepCopy() *EIPAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPAssociationStatus) DeepCopyInto(out *EIPAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPAssociationStatus.
func (in *EIPAssociationStatus) DeepCopy() *EIPAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(EIPAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPInitParameters) DeepCopyInto(out *EIPInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AssociateWithPrivateIP != nil {
		in, out := &in.AssociateWithPrivateIP, &out.AssociateWithPrivateIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBorderGroup != nil {
		in, out := &in.NetworkBorderGroup, &out.NetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceRef != nil {
		in, out := &in.NetworkInterfaceRef, &out.NetworkInterfaceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceSelector != nil {
		in, out := &in.NetworkInterfaceSelector, &out.NetworkInterfaceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPv4Pool != nil {
		in, out := &in.PublicIPv4Pool, &out.PublicIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPInitParameters.
func (in *EIPInitParameters) DeepCopy() *EIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(EIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPList) DeepCopyInto(out *EIPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EIP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPList.
func (in *EIPList) DeepCopy() *EIPList {
	if in == nil {
		return nil
	}
	out := new(EIPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EIPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPObservation) DeepCopyInto(out *EIPObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AssociateWithPrivateIP != nil {
		in, out := &in.AssociateWithPrivateIP, &out.AssociateWithPrivateIP
		*out = new(string)
		**out = **in
	}
	if in.AssociationID != nil {
		in, out := &in.AssociationID, &out.AssociationID
		*out = new(string)
		**out = **in
	}
	if in.CarrierIP != nil {
		in, out := &in.CarrierIP, &out.CarrierIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIP != nil {
		in, out := &in.CustomerOwnedIP, &out.CustomerOwnedIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.NetworkBorderGroup != nil {
		in, out := &in.NetworkBorderGroup, &out.NetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIPv4Pool != nil {
		in, out := &in.PublicIPv4Pool, &out.PublicIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPObservation.
func (in *EIPObservation) DeepCopy() *EIPObservation {
	if in == nil {
		return nil
	}
	out := new(EIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPParameters) DeepCopyInto(out *EIPParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AssociateWithPrivateIP != nil {
		in, out := &in.AssociateWithPrivateIP, &out.AssociateWithPrivateIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.InstanceRef != nil {
		in, out := &in.InstanceRef, &out.InstanceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceSelector != nil {
		in, out := &in.InstanceSelector, &out.InstanceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkBorderGroup != nil {
		in, out := &in.NetworkBorderGroup, &out.NetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceRef != nil {
		in, out := &in.NetworkInterfaceRef, &out.NetworkInterfaceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceSelector != nil {
		in, out := &in.NetworkInterfaceSelector, &out.NetworkInterfaceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPv4Pool != nil {
		in, out := &in.PublicIPv4Pool, &out.PublicIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPParameters.
func (in *EIPParameters) DeepCopy() *EIPParameters {
	if in == nil {
		return nil
	}
	out := new(EIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPSpec) DeepCopyInto(out *EIPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPSpec.
func (in *EIPSpec) DeepCopy() *EIPSpec {
	if in == nil {
		return nil
	}
	out := new(EIPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EIPStatus) DeepCopyInto(out *EIPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EIPStatus.
func (in *EIPStatus) DeepCopy() *EIPStatus {
	if in == nil {
		return nil
	}
	out := new(EIPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressInitParameters) DeepCopyInto(out *EgressInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressInitParameters.
func (in *EgressInitParameters) DeepCopy() *EgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressObservation) DeepCopyInto(out *EgressObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressObservation.
func (in *EgressObservation) DeepCopy() *EgressObservation {
	if in == nil {
		return nil
	}
	out := new(EgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGateway) DeepCopyInto(out *EgressOnlyInternetGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGateway.
func (in *EgressOnlyInternetGateway) DeepCopy() *EgressOnlyInternetGateway {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EgressOnlyInternetGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewayInitParameters) DeepCopyInto(out *EgressOnlyInternetGatewayInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewayInitParameters.
func (in *EgressOnlyInternetGatewayInitParameters) DeepCopy() *EgressOnlyInternetGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewayList) DeepCopyInto(out *EgressOnlyInternetGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EgressOnlyInternetGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewayList.
func (in *EgressOnlyInternetGatewayList) DeepCopy() *EgressOnlyInternetGatewayList {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EgressOnlyInternetGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewayObservation) DeepCopyInto(out *EgressOnlyInternetGatewayObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewayObservation.
func (in *EgressOnlyInternetGatewayObservation) DeepCopy() *EgressOnlyInternetGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewayParameters) DeepCopyInto(out *EgressOnlyInternetGatewayParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewayParameters.
func (in *EgressOnlyInternetGatewayParameters) DeepCopy() *EgressOnlyInternetGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewaySpec) DeepCopyInto(out *EgressOnlyInternetGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewaySpec.
func (in *EgressOnlyInternetGatewaySpec) DeepCopy() *EgressOnlyInternetGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressOnlyInternetGatewayStatus) DeepCopyInto(out *EgressOnlyInternetGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressOnlyInternetGatewayStatus.
func (in *EgressOnlyInternetGatewayStatus) DeepCopy() *EgressOnlyInternetGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(EgressOnlyInternetGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressParameters) DeepCopyInto(out *EgressParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressParameters.
func (in *EgressParameters) DeepCopy() *EgressParameters {
	if in == nil {
		return nil
	}
	out := new(EgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopyInto(out *ElasticGpuSpecificationsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsInitParameters.
func (in *ElasticGpuSpecificationsInitParameters) DeepCopy() *ElasticGpuSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsObservation) DeepCopyInto(out *ElasticGpuSpecificationsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsObservation.
func (in *ElasticGpuSpecificationsObservation) DeepCopy() *ElasticGpuSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticGpuSpecificationsParameters) DeepCopyInto(out *ElasticGpuSpecificationsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticGpuSpecificationsParameters.
func (in *ElasticGpuSpecificationsParameters) DeepCopy() *ElasticGpuSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticGpuSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopyInto(out *ElasticInferenceAcceleratorInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorInitParameters.
func (in *ElasticInferenceAcceleratorInitParameters) DeepCopy() *ElasticInferenceAcceleratorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorObservation) DeepCopyInto(out *ElasticInferenceAcceleratorObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorObservation.
func (in *ElasticInferenceAcceleratorObservation) DeepCopy() *ElasticInferenceAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticInferenceAcceleratorParameters) DeepCopyInto(out *ElasticInferenceAcceleratorParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticInferenceAcceleratorParameters.
func (in *ElasticInferenceAcceleratorParameters) DeepCopy() *ElasticInferenceAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticInferenceAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticLoadBalancerListenerInitParameters) DeepCopyInto(out *ElasticLoadBalancerListenerInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticLoadBalancerListenerInitParameters.
func (in *ElasticLoadBalancerListenerInitParameters) DeepCopy() *ElasticLoadBalancerListenerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticLoadBalancerListenerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticLoadBalancerListenerObservation) DeepCopyInto(out *ElasticLoadBalancerListenerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticLoadBalancerListenerObservation.
func (in *ElasticLoadBalancerListenerObservation) DeepCopy() *ElasticLoadBalancerListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticLoadBalancerListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticLoadBalancerListenerParameters) DeepCopyInto(out *ElasticLoadBalancerListenerParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticLoadBalancerListenerParameters.
func (in *ElasticLoadBalancerListenerParameters) DeepCopy() *ElasticLoadBalancerListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticLoadBalancerListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsInitParameters) DeepCopyInto(out *EnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsInitParameters.
func (in *EnclaveOptionsInitParameters) DeepCopy() *EnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsObservation) DeepCopyInto(out *EnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsObservation.
func (in *EnclaveOptionsObservation) DeepCopy() *EnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnclaveOptionsParameters) DeepCopyInto(out *EnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnclaveOptionsParameters.
func (in *EnclaveOptionsParameters) DeepCopy() *EnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryInitParameters) DeepCopyInto(out *EntryInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrRef != nil {
		in, out := &in.CidrRef, &out.CidrRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrSelector != nil {
		in, out := &in.CidrSelector, &out.CidrSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryInitParameters.
func (in *EntryInitParameters) DeepCopy() *EntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(EntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryObservation) DeepCopyInto(out *EntryObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryObservation.
func (in *EntryObservation) DeepCopy() *EntryObservation {
	if in == nil {
		return nil
	}
	out := new(EntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryParameters) DeepCopyInto(out *EntryParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrRef != nil {
		in, out := &in.CidrRef, &out.CidrRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrSelector != nil {
		in, out := &in.CidrSelector, &out.CidrSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryParameters.
func (in *EntryParameters) DeepCopy() *EntryParameters {
	if in == nil {
		return nil
	}
	out := new(EntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceInitParameters) DeepCopyInto(out *EphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceInitParameters.
func (in *EphemeralBlockDeviceInitParameters) DeepCopy() *EphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceObservation) DeepCopyInto(out *EphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceObservation.
func (in *EphemeralBlockDeviceObservation) DeepCopy() *EphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceParameters) DeepCopyInto(out *EphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceParameters.
func (in *EphemeralBlockDeviceParameters) DeepCopy() *EphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsCustomerGatewayInitParameters) DeepCopyInto(out *ExplanationsCustomerGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsCustomerGatewayInitParameters.
func (in *ExplanationsCustomerGatewayInitParameters) DeepCopy() *ExplanationsCustomerGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExplanationsCustomerGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsCustomerGatewayObservation) DeepCopyInto(out *ExplanationsCustomerGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsCustomerGatewayObservation.
func (in *ExplanationsCustomerGatewayObservation) DeepCopy() *ExplanationsCustomerGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ExplanationsCustomerGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsCustomerGatewayParameters) DeepCopyInto(out *ExplanationsCustomerGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsCustomerGatewayParameters.
func (in *ExplanationsCustomerGatewayParameters) DeepCopy() *ExplanationsCustomerGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ExplanationsCustomerGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsInitParameters) DeepCopyInto(out *ExplanationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsInitParameters.
func (in *ExplanationsInitParameters) DeepCopy() *ExplanationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExplanationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsObservation) DeepCopyInto(out *ExplanationsObservation) {
	*out = *in
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = make([]ACLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ACLRule != nil {
		in, out := &in.ACLRule, &out.ACLRule
		*out = make([]ACLRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AttachedTo != nil {
		in, out := &in.AttachedTo, &out.AttachedTo
		*out = make([]AttachedToObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClassicLoadBalancerListener != nil {
		in, out := &in.ClassicLoadBalancerListener, &out.ClassicLoadBalancerListener
		*out = make([]ClassicLoadBalancerListenerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]ComponentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerGateway != nil {
		in, out := &in.CustomerGateway, &out.CustomerGateway
		*out = make([]ExplanationsCustomerGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationVPC != nil {
		in, out := &in.DestinationVPC, &out.DestinationVPC
		*out = make([]DestinationVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.ElasticLoadBalancerListener != nil {
		in, out := &in.ElasticLoadBalancerListener, &out.ElasticLoadBalancerListener
		*out = make([]ElasticLoadBalancerListenerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplanationCode != nil {
		in, out := &in.ExplanationCode, &out.ExplanationCode
		*out = new(string)
		**out = **in
	}
	if in.IngressRouteTable != nil {
		in, out := &in.IngressRouteTable, &out.IngressRouteTable
		*out = make([]IngressRouteTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InternetGateway != nil {
		in, out := &in.InternetGateway, &out.InternetGateway
		*out = make([]InternetGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerArn != nil {
		in, out := &in.LoadBalancerArn, &out.LoadBalancerArn
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerListenerPort != nil {
		in, out := &in.LoadBalancerListenerPort, &out.LoadBalancerListenerPort
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerTargetGroup != nil {
		in, out := &in.LoadBalancerTargetGroup, &out.LoadBalancerTargetGroup
		*out = make([]LoadBalancerTargetGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerTargetGroups != nil {
		in, out := &in.LoadBalancerTargetGroups, &out.LoadBalancerTargetGroups
		*out = make([]LoadBalancerTargetGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerTargetPort != nil {
		in, out := &in.LoadBalancerTargetPort, &out.LoadBalancerTargetPort
		*out = new(float64)
		**out = **in
	}
	if in.MissingComponent != nil {
		in, out := &in.MissingComponent, &out.MissingComponent
		*out = new(string)
		**out = **in
	}
	if in.NATGateway != nil {
		in, out := &in.NATGateway, &out.NATGateway
		*out = make([]NATGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PacketField != nil {
		in, out := &in.PacketField, &out.PacketField
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortRanges != nil {
		in, out := &in.PortRanges, &out.PortRanges
		*out = make([]PortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixList != nil {
		in, out := &in.PrefixList, &out.PrefixList
		*out = make([]PrefixListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteTable != nil {
		in, out := &in.RouteTable, &out.RouteTable
		*out = make([]RouteTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteTableRoute != nil {
		in, out := &in.RouteTableRoute, &out.RouteTableRoute
		*out = make([]RouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroup != nil {
		in, out := &in.SecurityGroup, &out.SecurityGroup
		*out = make([]SecurityGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupRule != nil {
		in, out := &in.SecurityGroupRule, &out.SecurityGroupRule
		*out = make([]SecurityGroupRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]SecurityGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceVPC != nil {
		in, out := &in.SourceVPC, &out.SourceVPC
		*out = make([]SourceVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetRouteTable != nil {
		in, out := &in.SubnetRouteTable, &out.SubnetRouteTable
		*out = make([]SubnetRouteTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGateway != nil {
		in, out := &in.TransitGateway, &out.TransitGateway
		*out = make([]TransitGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGatewayAttachment != nil {
		in, out := &in.TransitGatewayAttachment, &out.TransitGatewayAttachment
		*out = make([]TransitGatewayAttachmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGatewayRouteTable != nil {
		in, out := &in.TransitGatewayRouteTable, &out.TransitGatewayRouteTable
		*out = make([]TransitGatewayRouteTableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGatewayRouteTableRoute != nil {
		in, out := &in.TransitGatewayRouteTableRoute, &out.TransitGatewayRouteTableRoute
		*out = make([]TransitGatewayRouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]VPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCEndpoint != nil {
		in, out := &in.VPCEndpoint, &out.VPCEndpoint
		*out = make([]VPCEndpointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCPeeringConnection != nil {
		in, out := &in.VPCPeeringConnection, &out.VPCPeeringConnection
		*out = make([]VPCPeeringConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPNConnection != nil {
		in, out := &in.VPNConnection, &out.VPNConnection
		*out = make([]VPNConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPNGateway != nil {
		in, out := &in.VPNGateway, &out.VPNGateway
		*out = make([]VPNGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsObservation.
func (in *ExplanationsObservation) DeepCopy() *ExplanationsObservation {
	if in == nil {
		return nil
	}
	out := new(ExplanationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExplanationsParameters) DeepCopyInto(out *ExplanationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExplanationsParameters.
func (in *ExplanationsParameters) DeepCopy() *ExplanationsParameters {
	if in == nil {
		return nil
	}
	out := new(ExplanationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLog) DeepCopyInto(out *FlowLog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLog.
func (in *FlowLog) DeepCopy() *FlowLog {
	if in == nil {
		return nil
	}
	out := new(FlowLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlowLog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogInitParameters) DeepCopyInto(out *FlowLogInitParameters) {
	*out = *in
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = make([]DestinationOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationRef != nil {
		in, out := &in.LogDestinationRef, &out.LogDestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationSelector != nil {
		in, out := &in.LogDestinationSelector, &out.LogDestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogInitParameters.
func (in *FlowLogInitParameters) DeepCopy() *FlowLogInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogList) DeepCopyInto(out *FlowLogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FlowLog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogList.
func (in *FlowLogList) DeepCopy() *FlowLogList {
	if in == nil {
		return nil
	}
	out := new(FlowLogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlowLogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogObservation) DeepCopyInto(out *FlowLogObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = make([]DestinationOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogObservation.
func (in *FlowLogObservation) DeepCopy() *FlowLogObservation {
	if in == nil {
		return nil
	}
	out := new(FlowLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogParameters) DeepCopyInto(out *FlowLogParameters) {
	*out = *in
	if in.DeliverCrossAccountRole != nil {
		in, out := &in.DeliverCrossAccountRole, &out.DeliverCrossAccountRole
		*out = new(string)
		**out = **in
	}
	if in.DestinationOptions != nil {
		in, out := &in.DestinationOptions, &out.DestinationOptions
		*out = make([]DestinationOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EniID != nil {
		in, out := &in.EniID, &out.EniID
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArn != nil {
		in, out := &in.IAMRoleArn, &out.IAMRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleArnRef != nil {
		in, out := &in.IAMRoleArnRef, &out.IAMRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleArnSelector != nil {
		in, out := &in.IAMRoleArnSelector, &out.IAMRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestination != nil {
		in, out := &in.LogDestination, &out.LogDestination
		*out = new(string)
		**out = **in
	}
	if in.LogDestinationRef != nil {
		in, out := &in.LogDestinationRef, &out.LogDestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationSelector != nil {
		in, out := &in.LogDestinationSelector, &out.LogDestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LogDestinationType != nil {
		in, out := &in.LogDestinationType, &out.LogDestinationType
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.MaxAggregationInterval != nil {
		in, out := &in.MaxAggregationInterval, &out.MaxAggregationInterval
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TrafficType != nil {
		in, out := &in.TrafficType, &out.TrafficType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogParameters.
func (in *FlowLogParameters) DeepCopy() *FlowLogParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogSpec) DeepCopyInto(out *FlowLogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogSpec.
func (in *FlowLogSpec) DeepCopy() *FlowLogSpec {
	if in == nil {
		return nil
	}
	out := new(FlowLogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogStatus) DeepCopyInto(out *FlowLogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogStatus.
func (in *FlowLogStatus) DeepCopy() *FlowLogStatus {
	if in == nil {
		return nil
	}
	out := new(FlowLogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsACLRuleInitParameters) DeepCopyInto(out *ForwardPathComponentsACLRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsACLRuleInitParameters.
func (in *ForwardPathComponentsACLRuleInitParameters) DeepCopy() *ForwardPathComponentsACLRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsACLRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsACLRuleObservation) DeepCopyInto(out *ForwardPathComponentsACLRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]ACLRulePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsACLRuleObservation.
func (in *ForwardPathComponentsACLRuleObservation) DeepCopy() *ForwardPathComponentsACLRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsACLRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsACLRuleParameters) DeepCopyInto(out *ForwardPathComponentsACLRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsACLRuleParameters.
func (in *ForwardPathComponentsACLRuleParameters) DeepCopy() *ForwardPathComponentsACLRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsACLRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsAttachedToInitParameters) DeepCopyInto(out *ForwardPathComponentsAttachedToInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsAttachedToInitParameters.
func (in *ForwardPathComponentsAttachedToInitParameters) DeepCopy() *ForwardPathComponentsAttachedToInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsAttachedToInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsAttachedToObservation) DeepCopyInto(out *ForwardPathComponentsAttachedToObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsAttachedToObservation.
func (in *ForwardPathComponentsAttachedToObservation) DeepCopy() *ForwardPathComponentsAttachedToObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsAttachedToObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsAttachedToParameters) DeepCopyInto(out *ForwardPathComponentsAttachedToParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsAttachedToParameters.
func (in *ForwardPathComponentsAttachedToParameters) DeepCopy() *ForwardPathComponentsAttachedToParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsAttachedToParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsComponentInitParameters) DeepCopyInto(out *ForwardPathComponentsComponentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsComponentInitParameters.
func (in *ForwardPathComponentsComponentInitParameters) DeepCopy() *ForwardPathComponentsComponentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsComponentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsComponentObservation) DeepCopyInto(out *ForwardPathComponentsComponentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsComponentObservation.
func (in *ForwardPathComponentsComponentObservation) DeepCopy() *ForwardPathComponentsComponentObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsComponentParameters) DeepCopyInto(out *ForwardPathComponentsComponentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsComponentParameters.
func (in *ForwardPathComponentsComponentParameters) DeepCopy() *ForwardPathComponentsComponentParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsDestinationVPCInitParameters) DeepCopyInto(out *ForwardPathComponentsDestinationVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsDestinationVPCInitParameters.
func (in *ForwardPathComponentsDestinationVPCInitParameters) DeepCopy() *ForwardPathComponentsDestinationVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsDestinationVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsDestinationVPCObservation) DeepCopyInto(out *ForwardPathComponentsDestinationVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsDestinationVPCObservation.
func (in *ForwardPathComponentsDestinationVPCObservation) DeepCopy() *ForwardPathComponentsDestinationVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsDestinationVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsDestinationVPCParameters) DeepCopyInto(out *ForwardPathComponentsDestinationVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsDestinationVPCParameters.
func (in *ForwardPathComponentsDestinationVPCParameters) DeepCopy() *ForwardPathComponentsDestinationVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsDestinationVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsInitParameters) DeepCopyInto(out *ForwardPathComponentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsInitParameters.
func (in *ForwardPathComponentsInitParameters) DeepCopy() *ForwardPathComponentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsObservation) DeepCopyInto(out *ForwardPathComponentsObservation) {
	*out = *in
	if in.ACLRule != nil {
		in, out := &in.ACLRule, &out.ACLRule
		*out = make([]ForwardPathComponentsACLRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalDetails != nil {
		in, out := &in.AdditionalDetails, &out.AdditionalDetails
		*out = make([]AdditionalDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttachedTo != nil {
		in, out := &in.AttachedTo, &out.AttachedTo
		*out = make([]ForwardPathComponentsAttachedToObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]ForwardPathComponentsComponentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationVPC != nil {
		in, out := &in.DestinationVPC, &out.DestinationVPC
		*out = make([]ForwardPathComponentsDestinationVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundHeader != nil {
		in, out := &in.InboundHeader, &out.InboundHeader
		*out = make([]InboundHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundHeader != nil {
		in, out := &in.OutboundHeader, &out.OutboundHeader
		*out = make([]OutboundHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteTableRoute != nil {
		in, out := &in.RouteTableRoute, &out.RouteTableRoute
		*out = make([]ForwardPathComponentsRouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupRule != nil {
		in, out := &in.SecurityGroupRule, &out.SecurityGroupRule
		*out = make([]ForwardPathComponentsSecurityGroupRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceVPC != nil {
		in, out := &in.SourceVPC, &out.SourceVPC
		*out = make([]ForwardPathComponentsSourceVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]ForwardPathComponentsSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGateway != nil {
		in, out := &in.TransitGateway, &out.TransitGateway
		*out = make([]ForwardPathComponentsTransitGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGatewayRouteTableRoute != nil {
		in, out := &in.TransitGatewayRouteTableRoute, &out.TransitGatewayRouteTableRoute
		*out = make([]ForwardPathComponentsTransitGatewayRouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]ForwardPathComponentsVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsObservation.
func (in *ForwardPathComponentsObservation) DeepCopy() *ForwardPathComponentsObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsParameters) DeepCopyInto(out *ForwardPathComponentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsParameters.
func (in *ForwardPathComponentsParameters) DeepCopy() *ForwardPathComponentsParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsRouteTableRouteInitParameters) DeepCopyInto(out *ForwardPathComponentsRouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsRouteTableRouteInitParameters.
func (in *ForwardPathComponentsRouteTableRouteInitParameters) DeepCopy() *ForwardPathComponentsRouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsRouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsRouteTableRouteObservation) DeepCopyInto(out *ForwardPathComponentsRouteTableRouteObservation) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyInternetGatewayID != nil {
		in, out := &in.EgressOnlyInternetGatewayID, &out.EgressOnlyInternetGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsRouteTableRouteObservation.
func (in *ForwardPathComponentsRouteTableRouteObservation) DeepCopy() *ForwardPathComponentsRouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsRouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsRouteTableRouteParameters) DeepCopyInto(out *ForwardPathComponentsRouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsRouteTableRouteParameters.
func (in *ForwardPathComponentsRouteTableRouteParameters) DeepCopy() *ForwardPathComponentsRouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsRouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRuleInitParameters) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRuleInitParameters.
func (in *ForwardPathComponentsSecurityGroupRuleInitParameters) DeepCopy() *ForwardPathComponentsSecurityGroupRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRuleObservation) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]ForwardPathComponentsSecurityGroupRulePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRuleObservation.
func (in *ForwardPathComponentsSecurityGroupRuleObservation) DeepCopy() *ForwardPathComponentsSecurityGroupRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRuleParameters) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRuleParameters.
func (in *ForwardPathComponentsSecurityGroupRuleParameters) DeepCopy() *ForwardPathComponentsSecurityGroupRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeInitParameters) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRulePortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRulePortRangeInitParameters.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeInitParameters) DeepCopy() *ForwardPathComponentsSecurityGroupRulePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRulePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeObservation) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRulePortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRulePortRangeObservation.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeObservation) DeepCopy() *ForwardPathComponentsSecurityGroupRulePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRulePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeParameters) DeepCopyInto(out *ForwardPathComponentsSecurityGroupRulePortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSecurityGroupRulePortRangeParameters.
func (in *ForwardPathComponentsSecurityGroupRulePortRangeParameters) DeepCopy() *ForwardPathComponentsSecurityGroupRulePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSecurityGroupRulePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSourceVPCInitParameters) DeepCopyInto(out *ForwardPathComponentsSourceVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSourceVPCInitParameters.
func (in *ForwardPathComponentsSourceVPCInitParameters) DeepCopy() *ForwardPathComponentsSourceVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSourceVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSourceVPCObservation) DeepCopyInto(out *ForwardPathComponentsSourceVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSourceVPCObservation.
func (in *ForwardPathComponentsSourceVPCObservation) DeepCopy() *ForwardPathComponentsSourceVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSourceVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSourceVPCParameters) DeepCopyInto(out *ForwardPathComponentsSourceVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSourceVPCParameters.
func (in *ForwardPathComponentsSourceVPCParameters) DeepCopy() *ForwardPathComponentsSourceVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSourceVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSubnetInitParameters) DeepCopyInto(out *ForwardPathComponentsSubnetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSubnetInitParameters.
func (in *ForwardPathComponentsSubnetInitParameters) DeepCopy() *ForwardPathComponentsSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSubnetObservation) DeepCopyInto(out *ForwardPathComponentsSubnetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSubnetObservation.
func (in *ForwardPathComponentsSubnetObservation) DeepCopy() *ForwardPathComponentsSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsSubnetParameters) DeepCopyInto(out *ForwardPathComponentsSubnetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsSubnetParameters.
func (in *ForwardPathComponentsSubnetParameters) DeepCopy() *ForwardPathComponentsSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayInitParameters) DeepCopyInto(out *ForwardPathComponentsTransitGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayInitParameters.
func (in *ForwardPathComponentsTransitGatewayInitParameters) DeepCopy() *ForwardPathComponentsTransitGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayObservation) DeepCopyInto(out *ForwardPathComponentsTransitGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayObservation.
func (in *ForwardPathComponentsTransitGatewayObservation) DeepCopy() *ForwardPathComponentsTransitGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayParameters) DeepCopyInto(out *ForwardPathComponentsTransitGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayParameters.
func (in *ForwardPathComponentsTransitGatewayParameters) DeepCopy() *ForwardPathComponentsTransitGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters) DeepCopyInto(out *ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters) DeepCopy() *ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayRouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteObservation) DeepCopyInto(out *ForwardPathComponentsTransitGatewayRouteTableRouteObservation) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.RouteOrigin != nil {
		in, out := &in.RouteOrigin, &out.RouteOrigin
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayRouteTableRouteObservation.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteObservation) DeepCopy() *ForwardPathComponentsTransitGatewayRouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayRouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteParameters) DeepCopyInto(out *ForwardPathComponentsTransitGatewayRouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsTransitGatewayRouteTableRouteParameters.
func (in *ForwardPathComponentsTransitGatewayRouteTableRouteParameters) DeepCopy() *ForwardPathComponentsTransitGatewayRouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsTransitGatewayRouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsVPCInitParameters) DeepCopyInto(out *ForwardPathComponentsVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsVPCInitParameters.
func (in *ForwardPathComponentsVPCInitParameters) DeepCopy() *ForwardPathComponentsVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsVPCObservation) DeepCopyInto(out *ForwardPathComponentsVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsVPCObservation.
func (in *ForwardPathComponentsVPCObservation) DeepCopy() *ForwardPathComponentsVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardPathComponentsVPCParameters) DeepCopyInto(out *ForwardPathComponentsVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardPathComponentsVPCParameters.
func (in *ForwardPathComponentsVPCParameters) DeepCopy() *ForwardPathComponentsVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardPathComponentsVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsInitParameters) DeepCopyInto(out *HibernationOptionsInitParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsInitParameters.
func (in *HibernationOptionsInitParameters) DeepCopy() *HibernationOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsObservation) DeepCopyInto(out *HibernationOptionsObservation) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsObservation.
func (in *HibernationOptionsObservation) DeepCopy() *HibernationOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HibernationOptionsParameters) DeepCopyInto(out *HibernationOptionsParameters) {
	*out = *in
	if in.Configured != nil {
		in, out := &in.Configured, &out.Configured
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HibernationOptionsParameters.
func (in *HibernationOptionsParameters) DeepCopy() *HibernationOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HibernationOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Host) DeepCopyInto(out *Host) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Host.
func (in *Host) DeepCopy() *Host {
	if in == nil {
		return nil
	}
	out := new(Host)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Host) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostInitParameters) DeepCopyInto(out *HostInitParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.AutoPlacement != nil {
		in, out := &in.AutoPlacement, &out.AutoPlacement
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.HostRecovery != nil {
		in, out := &in.HostRecovery, &out.HostRecovery
		*out = new(string)
		**out = **in
	}
	if in.InstanceFamily != nil {
		in, out := &in.InstanceFamily, &out.InstanceFamily
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostInitParameters.
func (in *HostInitParameters) DeepCopy() *HostInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostList) DeepCopyInto(out *HostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Host, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostList.
func (in *HostList) DeepCopy() *HostList {
	if in == nil {
		return nil
	}
	out := new(HostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostObservation) DeepCopyInto(out *HostObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.AutoPlacement != nil {
		in, out := &in.AutoPlacement, &out.AutoPlacement
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.HostRecovery != nil {
		in, out := &in.HostRecovery, &out.HostRecovery
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceFamily != nil {
		in, out := &in.InstanceFamily, &out.InstanceFamily
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostObservation.
func (in *HostObservation) DeepCopy() *HostObservation {
	if in == nil {
		return nil
	}
	out := new(HostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostParameters) DeepCopyInto(out *HostParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.AutoPlacement != nil {
		in, out := &in.AutoPlacement, &out.AutoPlacement
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.HostRecovery != nil {
		in, out := &in.HostRecovery, &out.HostRecovery
		*out = new(string)
		**out = **in
	}
	if in.InstanceFamily != nil {
		in, out := &in.InstanceFamily, &out.InstanceFamily
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostParameters.
func (in *HostParameters) DeepCopy() *HostParameters {
	if in == nil {
		return nil
	}
	out := new(HostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostSpec) DeepCopyInto(out *HostSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostSpec.
func (in *HostSpec) DeepCopy() *HostSpec {
	if in == nil {
		return nil
	}
	out := new(HostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostStatus) DeepCopyInto(out *HostStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostStatus.
func (in *HostStatus) DeepCopy() *HostStatus {
	if in == nil {
		return nil
	}
	out := new(HostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileInitParameters) DeepCopyInto(out *IAMInstanceProfileInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileInitParameters.
func (in *IAMInstanceProfileInitParameters) DeepCopy() *IAMInstanceProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileObservation) DeepCopyInto(out *IAMInstanceProfileObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileObservation.
func (in *IAMInstanceProfileObservation) DeepCopy() *IAMInstanceProfileObservation {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IAMInstanceProfileParameters) DeepCopyInto(out *IAMInstanceProfileParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IAMInstanceProfileParameters.
func (in *IAMInstanceProfileParameters) DeepCopy() *IAMInstanceProfileParameters {
	if in == nil {
		return nil
	}
	out := new(IAMInstanceProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderDestinationPortRangesInitParameters) DeepCopyInto(out *InboundHeaderDestinationPortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderDestinationPortRangesInitParameters.
func (in *InboundHeaderDestinationPortRangesInitParameters) DeepCopy() *InboundHeaderDestinationPortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderDestinationPortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderDestinationPortRangesObservation) DeepCopyInto(out *InboundHeaderDestinationPortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderDestinationPortRangesObservation.
func (in *InboundHeaderDestinationPortRangesObservation) DeepCopy() *InboundHeaderDestinationPortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderDestinationPortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderDestinationPortRangesParameters) DeepCopyInto(out *InboundHeaderDestinationPortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderDestinationPortRangesParameters.
func (in *InboundHeaderDestinationPortRangesParameters) DeepCopy() *InboundHeaderDestinationPortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderDestinationPortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderInitParameters) DeepCopyInto(out *InboundHeaderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderInitParameters.
func (in *InboundHeaderInitParameters) DeepCopy() *InboundHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderObservation) DeepCopyInto(out *InboundHeaderObservation) {
	*out = *in
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]DestinationPortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]SourcePortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderObservation.
func (in *InboundHeaderObservation) DeepCopy() *InboundHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderParameters) DeepCopyInto(out *InboundHeaderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderParameters.
func (in *InboundHeaderParameters) DeepCopy() *InboundHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderSourcePortRangesInitParameters) DeepCopyInto(out *InboundHeaderSourcePortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderSourcePortRangesInitParameters.
func (in *InboundHeaderSourcePortRangesInitParameters) DeepCopy() *InboundHeaderSourcePortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderSourcePortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderSourcePortRangesObservation) DeepCopyInto(out *InboundHeaderSourcePortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderSourcePortRangesObservation.
func (in *InboundHeaderSourcePortRangesObservation) DeepCopy() *InboundHeaderSourcePortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderSourcePortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InboundHeaderSourcePortRangesParameters) DeepCopyInto(out *InboundHeaderSourcePortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InboundHeaderSourcePortRangesParameters.
func (in *InboundHeaderSourcePortRangesParameters) DeepCopy() *InboundHeaderSourcePortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(InboundHeaderSourcePortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressInitParameters) DeepCopyInto(out *IngressInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockRef != nil {
		in, out := &in.CidrBlockRef, &out.CidrBlockRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrBlockSelector != nil {
		in, out := &in.CidrBlockSelector, &out.CidrBlockSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressInitParameters.
func (in *IngressInitParameters) DeepCopy() *IngressInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressObservation) DeepCopyInto(out *IngressObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressObservation.
func (in *IngressObservation) DeepCopy() *IngressObservation {
	if in == nil {
		return nil
	}
	out := new(IngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressParameters) DeepCopyInto(out *IngressParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CidrBlockRef != nil {
		in, out := &in.CidrBlockRef, &out.CidrBlockRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrBlockSelector != nil {
		in, out := &in.CidrBlockSelector, &out.CidrBlockSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressParameters.
func (in *IngressParameters) DeepCopy() *IngressParameters {
	if in == nil {
		return nil
	}
	out := new(IngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressRouteTableInitParameters) DeepCopyInto(out *IngressRouteTableInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressRouteTableInitParameters.
func (in *IngressRouteTableInitParameters) DeepCopy() *IngressRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressRouteTableObservation) DeepCopyInto(out *IngressRouteTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressRouteTableObservation.
func (in *IngressRouteTableObservation) DeepCopy() *IngressRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(IngressRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressRouteTableParameters) DeepCopyInto(out *IngressRouteTableParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressRouteTableParameters.
func (in *IngressRouteTableParameters) DeepCopy() *IngressRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(IngressRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEBSBlockDeviceInitParameters) DeepCopyInto(out *InstanceEBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEBSBlockDeviceInitParameters.
func (in *InstanceEBSBlockDeviceInitParameters) DeepCopy() *InstanceEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEBSBlockDeviceObservation) DeepCopyInto(out *InstanceEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEBSBlockDeviceObservation.
func (in *InstanceEBSBlockDeviceObservation) DeepCopy() *InstanceEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEBSBlockDeviceParameters) DeepCopyInto(out *InstanceEBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEBSBlockDeviceParameters.
func (in *InstanceEBSBlockDeviceParameters) DeepCopy() *InstanceEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEphemeralBlockDeviceInitParameters) DeepCopyInto(out *InstanceEphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEphemeralBlockDeviceInitParameters.
func (in *InstanceEphemeralBlockDeviceInitParameters) DeepCopy() *InstanceEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEphemeralBlockDeviceObservation) DeepCopyInto(out *InstanceEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEphemeralBlockDeviceObservation.
func (in *InstanceEphemeralBlockDeviceObservation) DeepCopy() *InstanceEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceEphemeralBlockDeviceParameters) DeepCopyInto(out *InstanceEphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceEphemeralBlockDeviceParameters.
func (in *InstanceEphemeralBlockDeviceParameters) DeepCopy() *InstanceEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]InstanceEBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]InstanceEphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceNetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsInitParameters) DeepCopyInto(out *InstanceMarketOptionsInitParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsInitParameters.
func (in *InstanceMarketOptionsInitParameters) DeepCopy() *InstanceMarketOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsObservation) DeepCopyInto(out *InstanceMarketOptionsObservation) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsObservation.
func (in *InstanceMarketOptionsObservation) DeepCopy() *InstanceMarketOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsParameters) DeepCopyInto(out *InstanceMarketOptionsParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]SpotOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsParameters.
func (in *InstanceMarketOptionsParameters) DeepCopy() *InstanceMarketOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsInitParameters) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsInitParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsInitParameters.
func (in *InstanceMarketOptionsSpotOptionsInitParameters) DeepCopy() *InstanceMarketOptionsSpotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsObservation) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsObservation) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsObservation.
func (in *InstanceMarketOptionsSpotOptionsObservation) DeepCopy() *InstanceMarketOptionsSpotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMarketOptionsSpotOptionsParameters) DeepCopyInto(out *InstanceMarketOptionsSpotOptionsParameters) {
	*out = *in
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMarketOptionsSpotOptionsParameters.
func (in *InstanceMarketOptionsSpotOptionsParameters) DeepCopy() *InstanceMarketOptionsSpotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMarketOptionsSpotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNetworkInterfaceInitParameters) DeepCopyInto(out *InstanceNetworkInterfaceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNetworkInterfaceInitParameters.
func (in *InstanceNetworkInterfaceInitParameters) DeepCopy() *InstanceNetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceNetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNetworkInterfaceObservation) DeepCopyInto(out *InstanceNetworkInterfaceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNetworkInterfaceObservation.
func (in *InstanceNetworkInterfaceObservation) DeepCopy() *InstanceNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNetworkInterfaceParameters) DeepCopyInto(out *InstanceNetworkInterfaceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNetworkInterfaceParameters.
func (in *InstanceNetworkInterfaceParameters) DeepCopy() *InstanceNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]InstanceEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]InstanceEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecycle != nil {
		in, out := &in.InstanceLifecycle, &out.InstanceLifecycle
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceState != nil {
		in, out := &in.InstanceState, &out.InstanceState
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PasswordData != nil {
		in, out := &in.PasswordData, &out.PasswordData
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryNetworkInterfaceID != nil {
		in, out := &in.PrimaryNetworkInterfaceID, &out.PrimaryNetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotInstanceRequestID != nil {
		in, out := &in.SpotInstanceRequestID, &out.SpotInstanceRequestID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]CPUOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]CapacityReservationSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]CreditSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]InstanceEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]EnclaveOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]InstanceEphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]InstanceMarketOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]MaintenanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]MetadataOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]InstanceNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]PrivateDNSNameOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountInitParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountInitParameters.
func (in *InstanceRequirementsAcceleratorCountInitParameters) DeepCopy() *InstanceRequirementsAcceleratorCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountObservation) DeepCopyInto(out *InstanceRequirementsAcceleratorCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountObservation.
func (in *InstanceRequirementsAcceleratorCountObservation) DeepCopy() *InstanceRequirementsAcceleratorCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorCountParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorCountParameters.
func (in *InstanceRequirementsAcceleratorCountParameters) DeepCopy() *InstanceRequirementsAcceleratorCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibInitParameters.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibObservation) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibObservation.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibObservation) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibParameters) DeepCopyInto(out *InstanceRequirementsAcceleratorTotalMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsAcceleratorTotalMemoryMibParameters.
func (in *InstanceRequirementsAcceleratorTotalMemoryMibParameters) DeepCopy() *InstanceRequirementsAcceleratorTotalMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsAcceleratorTotalMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsObservation.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsObservation) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) DeepCopyInto(out *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsBaselineEBSBandwidthMbpsParameters.
func (in *InstanceRequirementsBaselineEBSBandwidthMbpsParameters) DeepCopy() *InstanceRequirementsBaselineEBSBandwidthMbpsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsBaselineEBSBandwidthMbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsInitParameters) DeepCopyInto(out *InstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsInitParameters.
func (in *InstanceRequirementsInitParameters) DeepCopy() *InstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuInitParameters) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuInitParameters.
func (in *InstanceRequirementsMemoryGibPerVcpuInitParameters) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuObservation) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuObservation.
func (in *InstanceRequirementsMemoryGibPerVcpuObservation) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryGibPerVcpuParameters) DeepCopyInto(out *InstanceRequirementsMemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryGibPerVcpuParameters.
func (in *InstanceRequirementsMemoryGibPerVcpuParameters) DeepCopy() *InstanceRequirementsMemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibInitParameters) DeepCopyInto(out *InstanceRequirementsMemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibInitParameters.
func (in *InstanceRequirementsMemoryMibInitParameters) DeepCopy() *InstanceRequirementsMemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibObservation) DeepCopyInto(out *InstanceRequirementsMemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibObservation.
func (in *InstanceRequirementsMemoryMibObservation) DeepCopy() *InstanceRequirementsMemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsMemoryMibParameters) DeepCopyInto(out *InstanceRequirementsMemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsMemoryMibParameters.
func (in *InstanceRequirementsMemoryMibParameters) DeepCopy() *InstanceRequirementsMemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsMemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsInitParameters) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsInitParameters.
func (in *InstanceRequirementsNetworkBandwidthGbpsInitParameters) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsObservation) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsObservation.
func (in *InstanceRequirementsNetworkBandwidthGbpsObservation) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkBandwidthGbpsParameters) DeepCopyInto(out *InstanceRequirementsNetworkBandwidthGbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkBandwidthGbpsParameters.
func (in *InstanceRequirementsNetworkBandwidthGbpsParameters) DeepCopy() *InstanceRequirementsNetworkBandwidthGbpsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkBandwidthGbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountInitParameters) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountInitParameters.
func (in *InstanceRequirementsNetworkInterfaceCountInitParameters) DeepCopy() *InstanceRequirementsNetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountObservation) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountObservation.
func (in *InstanceRequirementsNetworkInterfaceCountObservation) DeepCopy() *InstanceRequirementsNetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsNetworkInterfaceCountParameters) DeepCopyInto(out *InstanceRequirementsNetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsNetworkInterfaceCountParameters.
func (in *InstanceRequirementsNetworkInterfaceCountParameters) DeepCopy() *InstanceRequirementsNetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsNetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsObservation) DeepCopyInto(out *InstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsObservation.
func (in *InstanceRequirementsObservation) DeepCopy() *InstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsParameters) DeepCopyInto(out *InstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]AcceleratorCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]AcceleratorTotalMemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]BaselineEBSBandwidthMbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]MemoryGibPerVcpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]MemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]NetworkBandwidthGbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]NetworkInterfaceCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]TotalLocalStorageGbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]VcpuCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsParameters.
func (in *InstanceRequirementsParameters) DeepCopy() *InstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbInitParameters) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbInitParameters.
func (in *InstanceRequirementsTotalLocalStorageGbInitParameters) DeepCopy() *InstanceRequirementsTotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbObservation) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbObservation.
func (in *InstanceRequirementsTotalLocalStorageGbObservation) DeepCopy() *InstanceRequirementsTotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsTotalLocalStorageGbParameters) DeepCopyInto(out *InstanceRequirementsTotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsTotalLocalStorageGbParameters.
func (in *InstanceRequirementsTotalLocalStorageGbParameters) DeepCopy() *InstanceRequirementsTotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsTotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountInitParameters) DeepCopyInto(out *InstanceRequirementsVcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountInitParameters.
func (in *InstanceRequirementsVcpuCountInitParameters) DeepCopy() *InstanceRequirementsVcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountObservation) DeepCopyInto(out *InstanceRequirementsVcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountObservation.
func (in *InstanceRequirementsVcpuCountObservation) DeepCopy() *InstanceRequirementsVcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceRequirementsVcpuCountParameters) DeepCopyInto(out *InstanceRequirementsVcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceRequirementsVcpuCountParameters.
func (in *InstanceRequirementsVcpuCountParameters) DeepCopy() *InstanceRequirementsVcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceRequirementsVcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceState) DeepCopyInto(out *InstanceState) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceState.
func (in *InstanceState) DeepCopy() *InstanceState {
	if in == nil {
		return nil
	}
	out := new(InstanceState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceState) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateInitParameters) DeepCopyInto(out *InstanceStateInitParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateInitParameters.
func (in *InstanceStateInitParameters) DeepCopy() *InstanceStateInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceStateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateList) DeepCopyInto(out *InstanceStateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateList.
func (in *InstanceStateList) DeepCopy() *InstanceStateList {
	if in == nil {
		return nil
	}
	out := new(InstanceStateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceStateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateObservation) DeepCopyInto(out *InstanceStateObservation) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateObservation.
func (in *InstanceStateObservation) DeepCopy() *InstanceStateObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceStateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateParameters) DeepCopyInto(out *InstanceStateParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateParameters.
func (in *InstanceStateParameters) DeepCopy() *InstanceStateParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceStateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateSpec) DeepCopyInto(out *InstanceStateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateSpec.
func (in *InstanceStateSpec) DeepCopy() *InstanceStateSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceStateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStateStatus) DeepCopyInto(out *InstanceStateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStateStatus.
func (in *InstanceStateStatus) DeepCopy() *InstanceStateStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGateway) DeepCopyInto(out *InternetGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGateway.
func (in *InternetGateway) DeepCopy() *InternetGateway {
	if in == nil {
		return nil
	}
	out := new(InternetGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InternetGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayInitParameters) DeepCopyInto(out *InternetGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayInitParameters.
func (in *InternetGatewayInitParameters) DeepCopy() *InternetGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayInitParameters_2) DeepCopyInto(out *InternetGatewayInitParameters_2) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayInitParameters_2.
func (in *InternetGatewayInitParameters_2) DeepCopy() *InternetGatewayInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayList) DeepCopyInto(out *InternetGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InternetGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayList.
func (in *InternetGatewayList) DeepCopy() *InternetGatewayList {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InternetGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayObservation) DeepCopyInto(out *InternetGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayObservation.
func (in *InternetGatewayObservation) DeepCopy() *InternetGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayObservation_2) DeepCopyInto(out *InternetGatewayObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayObservation_2.
func (in *InternetGatewayObservation_2) DeepCopy() *InternetGatewayObservation_2 {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayParameters) DeepCopyInto(out *InternetGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayParameters.
func (in *InternetGatewayParameters) DeepCopy() *InternetGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayParameters_2) DeepCopyInto(out *InternetGatewayParameters_2) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayParameters_2.
func (in *InternetGatewayParameters_2) DeepCopy() *InternetGatewayParameters_2 {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewaySpec) DeepCopyInto(out *InternetGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewaySpec.
func (in *InternetGatewaySpec) DeepCopy() *InternetGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(InternetGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayStatus) DeepCopyInto(out *InternetGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayStatus.
func (in *InternetGatewayStatus) DeepCopy() *InternetGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPair) DeepCopyInto(out *KeyPair) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPair.
func (in *KeyPair) DeepCopy() *KeyPair {
	if in == nil {
		return nil
	}
	out := new(KeyPair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeyPair) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairInitParameters) DeepCopyInto(out *KeyPairInitParameters) {
	*out = *in
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairInitParameters.
func (in *KeyPairInitParameters) DeepCopy() *KeyPairInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPairInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairList) DeepCopyInto(out *KeyPairList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeyPair, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairList.
func (in *KeyPairList) DeepCopy() *KeyPairList {
	if in == nil {
		return nil
	}
	out := new(KeyPairList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeyPairList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairObservation) DeepCopyInto(out *KeyPairObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyPairID != nil {
		in, out := &in.KeyPairID, &out.KeyPairID
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairObservation.
func (in *KeyPairObservation) DeepCopy() *KeyPairObservation {
	if in == nil {
		return nil
	}
	out := new(KeyPairObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairParameters) DeepCopyInto(out *KeyPairParameters) {
	*out = *in
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairParameters.
func (in *KeyPairParameters) DeepCopy() *KeyPairParameters {
	if in == nil {
		return nil
	}
	out := new(KeyPairParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairSpec) DeepCopyInto(out *KeyPairSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairSpec.
func (in *KeyPairSpec) DeepCopy() *KeyPairSpec {
	if in == nil {
		return nil
	}
	out := new(KeyPairSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyPairStatus) DeepCopyInto(out *KeyPairStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyPairStatus.
func (in *KeyPairStatus) DeepCopy() *KeyPairStatus {
	if in == nil {
		return nil
	}
	out := new(KeyPairStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceInitParameters.
func (in *LaunchSpecificationEBSBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceObservation.
func (in *LaunchSpecificationEBSBlockDeviceObservation) DeepCopy() *LaunchSpecificationEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEBSBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationEBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEBSBlockDeviceParameters.
func (in *LaunchSpecificationEBSBlockDeviceParameters) DeepCopy() *LaunchSpecificationEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceInitParameters.
func (in *LaunchSpecificationEphemeralBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceObservation.
func (in *LaunchSpecificationEphemeralBlockDeviceObservation) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationEphemeralBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationEphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationEphemeralBlockDeviceParameters.
func (in *LaunchSpecificationEphemeralBlockDeviceParameters) DeepCopy() *LaunchSpecificationEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationInitParameters) DeepCopyInto(out *LaunchSpecificationInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArnRef != nil {
		in, out := &in.IAMInstanceProfileArnRef, &out.IAMInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfileArnSelector != nil {
		in, out := &in.IAMInstanceProfileArnSelector, &out.IAMInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationInitParameters.
func (in *LaunchSpecificationInitParameters) DeepCopy() *LaunchSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationObservation) DeepCopyInto(out *LaunchSpecificationObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationObservation.
func (in *LaunchSpecificationObservation) DeepCopy() *LaunchSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationParameters) DeepCopyInto(out *LaunchSpecificationParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]LaunchSpecificationEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]LaunchSpecificationEphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArn != nil {
		in, out := &in.IAMInstanceProfileArn, &out.IAMInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfileArnRef != nil {
		in, out := &in.IAMInstanceProfileArnRef, &out.IAMInstanceProfileArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMInstanceProfileArnSelector != nil {
		in, out := &in.IAMInstanceProfileArnSelector, &out.IAMInstanceProfileArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementTenancy != nil {
		in, out := &in.PlacementTenancy, &out.PlacementTenancy
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]LaunchSpecificationRootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationParameters.
func (in *LaunchSpecificationParameters) DeepCopy() *LaunchSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceInitParameters) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceInitParameters.
func (in *LaunchSpecificationRootBlockDeviceInitParameters) DeepCopy() *LaunchSpecificationRootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceObservation) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceObservation.
func (in *LaunchSpecificationRootBlockDeviceObservation) DeepCopy() *LaunchSpecificationRootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchSpecificationRootBlockDeviceParameters) DeepCopyInto(out *LaunchSpecificationRootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchSpecificationRootBlockDeviceParameters.
func (in *LaunchSpecificationRootBlockDeviceParameters) DeepCopy() *LaunchSpecificationRootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchSpecificationRootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplate) DeepCopyInto(out *LaunchTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplate.
func (in *LaunchTemplate) DeepCopy() *LaunchTemplate {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LaunchTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsInitParameters) DeepCopyInto(out *LaunchTemplateCPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsInitParameters.
func (in *LaunchTemplateCPUOptionsInitParameters) DeepCopy() *LaunchTemplateCPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsObservation) DeepCopyInto(out *LaunchTemplateCPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsObservation.
func (in *LaunchTemplateCPUOptionsObservation) DeepCopy() *LaunchTemplateCPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCPUOptionsParameters) DeepCopyInto(out *LaunchTemplateCPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCPUOptionsParameters.
func (in *LaunchTemplateCPUOptionsParameters) DeepCopy() *LaunchTemplateCPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationSpecificationCapacityReservationTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationInitParameters.
func (in *LaunchTemplateCapacityReservationSpecificationInitParameters) DeepCopy() *LaunchTemplateCapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationObservation) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationSpecificationCapacityReservationTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationObservation.
func (in *LaunchTemplateCapacityReservationSpecificationObservation) DeepCopy() *LaunchTemplateCapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCapacityReservationSpecificationParameters) DeepCopyInto(out *LaunchTemplateCapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]CapacityReservationSpecificationCapacityReservationTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCapacityReservationSpecificationParameters.
func (in *LaunchTemplateCapacityReservationSpecificationParameters) DeepCopy() *LaunchTemplateCapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigInitParameters) DeepCopyInto(out *LaunchTemplateConfigInitParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigInitParameters.
func (in *LaunchTemplateConfigInitParameters) DeepCopy() *LaunchTemplateConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigObservation) DeepCopyInto(out *LaunchTemplateConfigObservation) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigObservation.
func (in *LaunchTemplateConfigObservation) DeepCopy() *LaunchTemplateConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateConfigParameters) DeepCopyInto(out *LaunchTemplateConfigParameters) {
	*out = *in
	if in.LaunchTemplateSpecification != nil {
		in, out := &in.LaunchTemplateSpecification, &out.LaunchTemplateSpecification
		*out = make([]LaunchTemplateSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Overrides != nil {
		in, out := &in.Overrides, &out.Overrides
		*out = make([]OverridesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateConfigParameters.
func (in *LaunchTemplateConfigParameters) DeepCopy() *LaunchTemplateConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateCreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationInitParameters.
func (in *LaunchTemplateCreditSpecificationInitParameters) DeepCopy() *LaunchTemplateCreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationObservation) DeepCopyInto(out *LaunchTemplateCreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationObservation.
func (in *LaunchTemplateCreditSpecificationObservation) DeepCopy() *LaunchTemplateCreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateCreditSpecificationParameters) DeepCopyInto(out *LaunchTemplateCreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateCreditSpecificationParameters.
func (in *LaunchTemplateCreditSpecificationParameters) DeepCopy() *LaunchTemplateCreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateCreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsInitParameters) DeepCopyInto(out *LaunchTemplateEnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsInitParameters.
func (in *LaunchTemplateEnclaveOptionsInitParameters) DeepCopy() *LaunchTemplateEnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsObservation) DeepCopyInto(out *LaunchTemplateEnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsObservation.
func (in *LaunchTemplateEnclaveOptionsObservation) DeepCopy() *LaunchTemplateEnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateEnclaveOptionsParameters) DeepCopyInto(out *LaunchTemplateEnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateEnclaveOptionsParameters.
func (in *LaunchTemplateEnclaveOptionsParameters) DeepCopy() *LaunchTemplateEnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateEnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInitParameters) DeepCopyInto(out *LaunchTemplateInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInitParameters.
func (in *LaunchTemplateInitParameters) DeepCopy() *LaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInitParameters_2) DeepCopyInto(out *LaunchTemplateInitParameters_2) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]LaunchTemplateCPUOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]LaunchTemplateCapacityReservationSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]LaunchTemplateCreditSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]LaunchTemplateEnclaveOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]LaunchTemplateInstanceMarketOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]LaunchTemplateMaintenanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]LaunchTemplateMetadataOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]LaunchTemplatePrivateDNSNameOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNameRefs != nil {
		in, out := &in.SecurityGroupNameRefs, &out.SecurityGroupNameRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupNameSelector != nil {
		in, out := &in.SecurityGroupNameSelector, &out.SecurityGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInitParameters_2.
func (in *LaunchTemplateInitParameters_2) DeepCopy() *LaunchTemplateInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsInitParameters) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsInitParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]InstanceMarketOptionsSpotOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsInitParameters.
func (in *LaunchTemplateInstanceMarketOptionsInitParameters) DeepCopy() *LaunchTemplateInstanceMarketOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsObservation) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsObservation) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]InstanceMarketOptionsSpotOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsObservation.
func (in *LaunchTemplateInstanceMarketOptionsObservation) DeepCopy() *LaunchTemplateInstanceMarketOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateInstanceMarketOptionsParameters) DeepCopyInto(out *LaunchTemplateInstanceMarketOptionsParameters) {
	*out = *in
	if in.MarketType != nil {
		in, out := &in.MarketType, &out.MarketType
		*out = new(string)
		**out = **in
	}
	if in.SpotOptions != nil {
		in, out := &in.SpotOptions, &out.SpotOptions
		*out = make([]InstanceMarketOptionsSpotOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateInstanceMarketOptionsParameters.
func (in *LaunchTemplateInstanceMarketOptionsParameters) DeepCopy() *LaunchTemplateInstanceMarketOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateInstanceMarketOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateList) DeepCopyInto(out *LaunchTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LaunchTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateList.
func (in *LaunchTemplateList) DeepCopy() *LaunchTemplateList {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LaunchTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsInitParameters) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsInitParameters.
func (in *LaunchTemplateMaintenanceOptionsInitParameters) DeepCopy() *LaunchTemplateMaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsObservation) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsObservation.
func (in *LaunchTemplateMaintenanceOptionsObservation) DeepCopy() *LaunchTemplateMaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMaintenanceOptionsParameters) DeepCopyInto(out *LaunchTemplateMaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMaintenanceOptionsParameters.
func (in *LaunchTemplateMaintenanceOptionsParameters) DeepCopy() *LaunchTemplateMaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsInitParameters) DeepCopyInto(out *LaunchTemplateMetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsInitParameters.
func (in *LaunchTemplateMetadataOptionsInitParameters) DeepCopy() *LaunchTemplateMetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsObservation) DeepCopyInto(out *LaunchTemplateMetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsObservation.
func (in *LaunchTemplateMetadataOptionsObservation) DeepCopy() *LaunchTemplateMetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateMetadataOptionsParameters) DeepCopyInto(out *LaunchTemplateMetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateMetadataOptionsParameters.
func (in *LaunchTemplateMetadataOptionsParameters) DeepCopy() *LaunchTemplateMetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateMetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation) DeepCopyInto(out *LaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation.
func (in *LaunchTemplateObservation) DeepCopy() *LaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation_2) DeepCopyInto(out *LaunchTemplateObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]LaunchTemplateCPUOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]LaunchTemplateCapacityReservationSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]LaunchTemplateCreditSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]LaunchTemplateEnclaveOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]LaunchTemplateInstanceMarketOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(float64)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]LaunchTemplateMaintenanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]LaunchTemplateMetadataOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]LaunchTemplatePrivateDNSNameOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation_2.
func (in *LaunchTemplateObservation_2) DeepCopy() *LaunchTemplateObservation_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters_2) DeepCopyInto(out *LaunchTemplateParameters_2) {
	*out = *in
	if in.BlockDeviceMappings != nil {
		in, out := &in.BlockDeviceMappings, &out.BlockDeviceMappings
		*out = make([]BlockDeviceMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]LaunchTemplateCPUOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]LaunchTemplateCapacityReservationSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]LaunchTemplateCreditSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(string)
		**out = **in
	}
	if in.ElasticGpuSpecifications != nil {
		in, out := &in.ElasticGpuSpecifications, &out.ElasticGpuSpecifications
		*out = make([]ElasticGpuSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticInferenceAccelerator != nil {
		in, out := &in.ElasticInferenceAccelerator, &out.ElasticInferenceAccelerator
		*out = make([]ElasticInferenceAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]LaunchTemplateEnclaveOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HibernationOptions != nil {
		in, out := &in.HibernationOptions, &out.HibernationOptions
		*out = make([]HibernationOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = make([]IAMInstanceProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceMarketOptions != nil {
		in, out := &in.InstanceMarketOptions, &out.InstanceMarketOptions
		*out = make([]LaunchTemplateInstanceMarketOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]InstanceRequirementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KernelID != nil {
		in, out := &in.KernelID, &out.KernelID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LicenseSpecification != nil {
		in, out := &in.LicenseSpecification, &out.LicenseSpecification
		*out = make([]LicenseSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]LaunchTemplateMaintenanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]LaunchTemplateMetadataOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaces != nil {
		in, out := &in.NetworkInterfaces, &out.NetworkInterfaces
		*out = make([]NetworkInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]LaunchTemplatePrivateDNSNameOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAMDiskID != nil {
		in, out := &in.RAMDiskID, &out.RAMDiskID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupNameRefs != nil {
		in, out := &in.SecurityGroupNameRefs, &out.SecurityGroupNameRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupNameSelector != nil {
		in, out := &in.SecurityGroupNameSelector, &out.SecurityGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupNames != nil {
		in, out := &in.SecurityGroupNames, &out.SecurityGroupNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagSpecifications != nil {
		in, out := &in.TagSpecifications, &out.TagSpecifications
		*out = make([]TagSpecificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateDefaultVersion != nil {
		in, out := &in.UpdateDefaultVersion, &out.UpdateDefaultVersion
		*out = new(bool)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters_2.
func (in *LaunchTemplateParameters_2) DeepCopy() *LaunchTemplateParameters_2 {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsInitParameters) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsInitParameters.
func (in *LaunchTemplatePrivateDNSNameOptionsInitParameters) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsObservation) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsObservation.
func (in *LaunchTemplatePrivateDNSNameOptionsObservation) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplatePrivateDNSNameOptionsParameters) DeepCopyInto(out *LaunchTemplatePrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplatePrivateDNSNameOptionsParameters.
func (in *LaunchTemplatePrivateDNSNameOptionsParameters) DeepCopy() *LaunchTemplatePrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplatePrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpec) DeepCopyInto(out *LaunchTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpec.
func (in *LaunchTemplateSpec) DeepCopy() *LaunchTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopyInto(out *LaunchTemplateSpecificationInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionRef != nil {
		in, out := &in.VersionRef, &out.VersionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionSelector != nil {
		in, out := &in.VersionSelector, &out.VersionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationInitParameters.
func (in *LaunchTemplateSpecificationInitParameters) DeepCopy() *LaunchTemplateSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationObservation) DeepCopyInto(out *LaunchTemplateSpecificationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationObservation.
func (in *LaunchTemplateSpecificationObservation) DeepCopy() *LaunchTemplateSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateSpecificationParameters) DeepCopyInto(out *LaunchTemplateSpecificationParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VersionRef != nil {
		in, out := &in.VersionRef, &out.VersionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VersionSelector != nil {
		in, out := &in.VersionSelector, &out.VersionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateSpecificationParameters.
func (in *LaunchTemplateSpecificationParameters) DeepCopy() *LaunchTemplateSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateStatus) DeepCopyInto(out *LaunchTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateStatus.
func (in *LaunchTemplateStatus) DeepCopy() *LaunchTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationInitParameters) DeepCopyInto(out *LicenseSpecificationInitParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationInitParameters.
func (in *LicenseSpecificationInitParameters) DeepCopy() *LicenseSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationObservation) DeepCopyInto(out *LicenseSpecificationObservation) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationObservation.
func (in *LicenseSpecificationObservation) DeepCopy() *LicenseSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseSpecificationParameters) DeepCopyInto(out *LicenseSpecificationParameters) {
	*out = *in
	if in.LicenseConfigurationArn != nil {
		in, out := &in.LicenseConfigurationArn, &out.LicenseConfigurationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseSpecificationParameters.
func (in *LicenseSpecificationParameters) DeepCopy() *LicenseSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(LicenseSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupInitParameters) DeepCopyInto(out *LoadBalancerTargetGroupInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupInitParameters.
func (in *LoadBalancerTargetGroupInitParameters) DeepCopy() *LoadBalancerTargetGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupObservation) DeepCopyInto(out *LoadBalancerTargetGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupObservation.
func (in *LoadBalancerTargetGroupObservation) DeepCopy() *LoadBalancerTargetGroupObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupParameters) DeepCopyInto(out *LoadBalancerTargetGroupParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupParameters.
func (in *LoadBalancerTargetGroupParameters) DeepCopy() *LoadBalancerTargetGroupParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupsInitParameters) DeepCopyInto(out *LoadBalancerTargetGroupsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupsInitParameters.
func (in *LoadBalancerTargetGroupsInitParameters) DeepCopy() *LoadBalancerTargetGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupsObservation) DeepCopyInto(out *LoadBalancerTargetGroupsObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupsObservation.
func (in *LoadBalancerTargetGroupsObservation) DeepCopy() *LoadBalancerTargetGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerTargetGroupsParameters) DeepCopyInto(out *LoadBalancerTargetGroupsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerTargetGroupsParameters.
func (in *LoadBalancerTargetGroupsParameters) DeepCopy() *LoadBalancerTargetGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerTargetGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociation) DeepCopyInto(out *MainRouteTableAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociation.
func (in *MainRouteTableAssociation) DeepCopy() *MainRouteTableAssociation {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MainRouteTableAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationInitParameters) DeepCopyInto(out *MainRouteTableAssociationInitParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationInitParameters.
func (in *MainRouteTableAssociationInitParameters) DeepCopy() *MainRouteTableAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationList) DeepCopyInto(out *MainRouteTableAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MainRouteTableAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationList.
func (in *MainRouteTableAssociationList) DeepCopy() *MainRouteTableAssociationList {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MainRouteTableAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationObservation) DeepCopyInto(out *MainRouteTableAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OriginalRouteTableID != nil {
		in, out := &in.OriginalRouteTableID, &out.OriginalRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationObservation.
func (in *MainRouteTableAssociationObservation) DeepCopy() *MainRouteTableAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationParameters) DeepCopyInto(out *MainRouteTableAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationParameters.
func (in *MainRouteTableAssociationParameters) DeepCopy() *MainRouteTableAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationSpec) DeepCopyInto(out *MainRouteTableAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationSpec.
func (in *MainRouteTableAssociationSpec) DeepCopy() *MainRouteTableAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MainRouteTableAssociationStatus) DeepCopyInto(out *MainRouteTableAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MainRouteTableAssociationStatus.
func (in *MainRouteTableAssociationStatus) DeepCopy() *MainRouteTableAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(MainRouteTableAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsInitParameters) DeepCopyInto(out *MaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsInitParameters.
func (in *MaintenanceOptionsInitParameters) DeepCopy() *MaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsObservation) DeepCopyInto(out *MaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsObservation.
func (in *MaintenanceOptionsObservation) DeepCopy() *MaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceOptionsParameters) DeepCopyInto(out *MaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceOptionsParameters.
func (in *MaintenanceOptionsParameters) DeepCopy() *MaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixList) DeepCopyInto(out *ManagedPrefixList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixList.
func (in *ManagedPrefixList) DeepCopy() *ManagedPrefixList {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedPrefixList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntry) DeepCopyInto(out *ManagedPrefixListEntry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntry.
func (in *ManagedPrefixListEntry) DeepCopy() *ManagedPrefixListEntry {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedPrefixListEntry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntryInitParameters) DeepCopyInto(out *ManagedPrefixListEntryInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrRef != nil {
		in, out := &in.CidrRef, &out.CidrRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrSelector != nil {
		in, out := &in.CidrSelector, &out.CidrSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntryInitParameters.
func (in *ManagedPrefixListEntryInitParameters) DeepCopy() *ManagedPrefixListEntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntryList) DeepCopyInto(out *ManagedPrefixListEntryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedPrefixListEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntryList.
func (in *ManagedPrefixListEntryList) DeepCopy() *ManagedPrefixListEntryList {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedPrefixListEntryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntryObservation) DeepCopyInto(out *ManagedPrefixListEntryObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntryObservation.
func (in *ManagedPrefixListEntryObservation) DeepCopy() *ManagedPrefixListEntryObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntryParameters) DeepCopyInto(out *ManagedPrefixListEntryParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrRef != nil {
		in, out := &in.CidrRef, &out.CidrRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CidrSelector != nil {
		in, out := &in.CidrSelector, &out.CidrSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntryParameters.
func (in *ManagedPrefixListEntryParameters) DeepCopy() *ManagedPrefixListEntryParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntrySpec) DeepCopyInto(out *ManagedPrefixListEntrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntrySpec.
func (in *ManagedPrefixListEntrySpec) DeepCopy() *ManagedPrefixListEntrySpec {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListEntryStatus) DeepCopyInto(out *ManagedPrefixListEntryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListEntryStatus.
func (in *ManagedPrefixListEntryStatus) DeepCopy() *ManagedPrefixListEntryStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListEntryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListInitParameters) DeepCopyInto(out *ManagedPrefixListInitParameters) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = make([]EntryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEntries != nil {
		in, out := &in.MaxEntries, &out.MaxEntries
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListInitParameters.
func (in *ManagedPrefixListInitParameters) DeepCopy() *ManagedPrefixListInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListList) DeepCopyInto(out *ManagedPrefixListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedPrefixList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListList.
func (in *ManagedPrefixListList) DeepCopy() *ManagedPrefixListList {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedPrefixListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListObservation) DeepCopyInto(out *ManagedPrefixListObservation) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = make([]EntryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxEntries != nil {
		in, out := &in.MaxEntries, &out.MaxEntries
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListObservation.
func (in *ManagedPrefixListObservation) DeepCopy() *ManagedPrefixListObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListParameters) DeepCopyInto(out *ManagedPrefixListParameters) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = make([]EntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEntries != nil {
		in, out := &in.MaxEntries, &out.MaxEntries
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListParameters.
func (in *ManagedPrefixListParameters) DeepCopy() *ManagedPrefixListParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListSpec) DeepCopyInto(out *ManagedPrefixListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListSpec.
func (in *ManagedPrefixListSpec) DeepCopy() *ManagedPrefixListSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedPrefixListStatus) DeepCopyInto(out *ManagedPrefixListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedPrefixListStatus.
func (in *ManagedPrefixListStatus) DeepCopy() *ManagedPrefixListStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedPrefixListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuInitParameters) DeepCopyInto(out *MemoryGibPerVcpuInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuInitParameters.
func (in *MemoryGibPerVcpuInitParameters) DeepCopy() *MemoryGibPerVcpuInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuObservation) DeepCopyInto(out *MemoryGibPerVcpuObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuObservation.
func (in *MemoryGibPerVcpuObservation) DeepCopy() *MemoryGibPerVcpuObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryGibPerVcpuParameters) DeepCopyInto(out *MemoryGibPerVcpuParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryGibPerVcpuParameters.
func (in *MemoryGibPerVcpuParameters) DeepCopy() *MemoryGibPerVcpuParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryGibPerVcpuParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibInitParameters) DeepCopyInto(out *MemoryMibInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibInitParameters.
func (in *MemoryMibInitParameters) DeepCopy() *MemoryMibInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibObservation) DeepCopyInto(out *MemoryMibObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibObservation.
func (in *MemoryMibObservation) DeepCopy() *MemoryMibObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryMibObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryMibParameters) DeepCopyInto(out *MemoryMibParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryMibParameters.
func (in *MemoryMibParameters) DeepCopy() *MemoryMibParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryMibParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsInitParameters) DeepCopyInto(out *MetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsInitParameters.
func (in *MetadataOptionsInitParameters) DeepCopy() *MetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsObservation) DeepCopyInto(out *MetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsObservation.
func (in *MetadataOptionsObservation) DeepCopy() *MetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataOptionsParameters) DeepCopyInto(out *MetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataOptionsParameters.
func (in *MetadataOptionsParameters) DeepCopy() *MetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringInitParameters) DeepCopyInto(out *MonitoringInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringInitParameters.
func (in *MonitoringInitParameters) DeepCopy() *MonitoringInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGateway) DeepCopyInto(out *NATGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGateway.
func (in *NATGateway) DeepCopy() *NATGateway {
	if in == nil {
		return nil
	}
	out := new(NATGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayInitParameters) DeepCopyInto(out *NATGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayInitParameters.
func (in *NATGatewayInitParameters) DeepCopy() *NATGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayInitParameters_2) DeepCopyInto(out *NATGatewayInitParameters_2) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AllocationIDRef != nil {
		in, out := &in.AllocationIDRef, &out.AllocationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AllocationIDSelector != nil {
		in, out := &in.AllocationIDSelector, &out.AllocationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAllocationIds != nil {
		in, out := &in.SecondaryAllocationIds, &out.SecondaryAllocationIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryPrivateIPAddressCount != nil {
		in, out := &in.SecondaryPrivateIPAddressCount, &out.SecondaryPrivateIPAddressCount
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryPrivateIPAddresses != nil {
		in, out := &in.SecondaryPrivateIPAddresses, &out.SecondaryPrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayInitParameters_2.
func (in *NATGatewayInitParameters_2) DeepCopy() *NATGatewayInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(NATGatewayInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayList) DeepCopyInto(out *NATGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayList.
func (in *NATGatewayList) DeepCopy() *NATGatewayList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayObservation) DeepCopyInto(out *NATGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayObservation.
func (in *NATGatewayObservation) DeepCopy() *NATGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayObservation_2) DeepCopyInto(out *NATGatewayObservation_2) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AssociationID != nil {
		in, out := &in.AssociationID, &out.AssociationID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAllocationIds != nil {
		in, out := &in.SecondaryAllocationIds, &out.SecondaryAllocationIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryPrivateIPAddressCount != nil {
		in, out := &in.SecondaryPrivateIPAddressCount, &out.SecondaryPrivateIPAddressCount
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryPrivateIPAddresses != nil {
		in, out := &in.SecondaryPrivateIPAddresses, &out.SecondaryPrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayObservation_2.
func (in *NATGatewayObservation_2) DeepCopy() *NATGatewayObservation_2 {
	if in == nil {
		return nil
	}
	out := new(NATGatewayObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayParameters) DeepCopyInto(out *NATGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayParameters.
func (in *NATGatewayParameters) DeepCopy() *NATGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayParameters_2) DeepCopyInto(out *NATGatewayParameters_2) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.AllocationIDRef != nil {
		in, out := &in.AllocationIDRef, &out.AllocationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AllocationIDSelector != nil {
		in, out := &in.AllocationIDSelector, &out.AllocationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectivityType != nil {
		in, out := &in.ConnectivityType, &out.ConnectivityType
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAllocationIds != nil {
		in, out := &in.SecondaryAllocationIds, &out.SecondaryAllocationIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecondaryPrivateIPAddressCount != nil {
		in, out := &in.SecondaryPrivateIPAddressCount, &out.SecondaryPrivateIPAddressCount
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryPrivateIPAddresses != nil {
		in, out := &in.SecondaryPrivateIPAddresses, &out.SecondaryPrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayParameters_2.
func (in *NATGatewayParameters_2) DeepCopy() *NATGatewayParameters_2 {
	if in == nil {
		return nil
	}
	out := new(NATGatewayParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewaySpec) DeepCopyInto(out *NATGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewaySpec.
func (in *NATGatewaySpec) DeepCopy() *NATGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayStatus) DeepCopyInto(out *NATGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayStatus.
func (in *NATGatewayStatus) DeepCopy() *NATGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACL) DeepCopyInto(out *NetworkACL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACL.
func (in *NetworkACL) DeepCopy() *NetworkACL {
	if in == nil {
		return nil
	}
	out := new(NetworkACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkACL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLEgressInitParameters) DeepCopyInto(out *NetworkACLEgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLEgressInitParameters.
func (in *NetworkACLEgressInitParameters) DeepCopy() *NetworkACLEgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLEgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLEgressObservation) DeepCopyInto(out *NetworkACLEgressObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLEgressObservation.
func (in *NetworkACLEgressObservation) DeepCopy() *NetworkACLEgressObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkACLEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLEgressParameters) DeepCopyInto(out *NetworkACLEgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLEgressParameters.
func (in *NetworkACLEgressParameters) DeepCopy() *NetworkACLEgressParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLIngressInitParameters) DeepCopyInto(out *NetworkACLIngressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLIngressInitParameters.
func (in *NetworkACLIngressInitParameters) DeepCopy() *NetworkACLIngressInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLIngressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLIngressObservation) DeepCopyInto(out *NetworkACLIngressObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleNo != nil {
		in, out := &in.RuleNo, &out.RuleNo
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLIngressObservation.
func (in *NetworkACLIngressObservation) DeepCopy() *NetworkACLIngressObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkACLIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLIngressParameters) DeepCopyInto(out *NetworkACLIngressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLIngressParameters.
func (in *NetworkACLIngressParameters) DeepCopy() *NetworkACLIngressParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLInitParameters) DeepCopyInto(out *NetworkACLInitParameters) {
	*out = *in
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLInitParameters.
func (in *NetworkACLInitParameters) DeepCopy() *NetworkACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLList) DeepCopyInto(out *NetworkACLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLList.
func (in *NetworkACLList) DeepCopy() *NetworkACLList {
	if in == nil {
		return nil
	}
	out := new(NetworkACLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkACLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLObservation) DeepCopyInto(out *NetworkACLObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]NetworkACLEgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]NetworkACLIngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLObservation.
func (in *NetworkACLObservation) DeepCopy() *NetworkACLObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLParameters) DeepCopyInto(out *NetworkACLParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLParameters.
func (in *NetworkACLParameters) DeepCopy() *NetworkACLParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRule) DeepCopyInto(out *NetworkACLRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRule.
func (in *NetworkACLRule) DeepCopy() *NetworkACLRule {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkACLRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleInitParameters) DeepCopyInto(out *NetworkACLRuleInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.NetworkACLID != nil {
		in, out := &in.NetworkACLID, &out.NetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLIDRef != nil {
		in, out := &in.NetworkACLIDRef, &out.NetworkACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkACLIDSelector != nil {
		in, out := &in.NetworkACLIDSelector, &out.NetworkACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleInitParameters.
func (in *NetworkACLRuleInitParameters) DeepCopy() *NetworkACLRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleList) DeepCopyInto(out *NetworkACLRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkACLRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleList.
func (in *NetworkACLRuleList) DeepCopy() *NetworkACLRuleList {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkACLRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleObservation) DeepCopyInto(out *NetworkACLRuleObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.NetworkACLID != nil {
		in, out := &in.NetworkACLID, &out.NetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleObservation.
func (in *NetworkACLRuleObservation) DeepCopy() *NetworkACLRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleParameters) DeepCopyInto(out *NetworkACLRuleParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(float64)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(float64)
		**out = **in
	}
	if in.NetworkACLID != nil {
		in, out := &in.NetworkACLID, &out.NetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLIDRef != nil {
		in, out := &in.NetworkACLIDRef, &out.NetworkACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkACLIDSelector != nil {
		in, out := &in.NetworkACLIDSelector, &out.NetworkACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleParameters.
func (in *NetworkACLRuleParameters) DeepCopy() *NetworkACLRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleSpec) DeepCopyInto(out *NetworkACLRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleSpec.
func (in *NetworkACLRuleSpec) DeepCopy() *NetworkACLRuleSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLRuleStatus) DeepCopyInto(out *NetworkACLRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLRuleStatus.
func (in *NetworkACLRuleStatus) DeepCopy() *NetworkACLRuleStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkACLRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLSpec) DeepCopyInto(out *NetworkACLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLSpec.
func (in *NetworkACLSpec) DeepCopy() *NetworkACLSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkACLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkACLStatus) DeepCopyInto(out *NetworkACLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkACLStatus.
func (in *NetworkACLStatus) DeepCopy() *NetworkACLStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkACLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopyInto(out *NetworkBandwidthGbpsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsInitParameters.
func (in *NetworkBandwidthGbpsInitParameters) DeepCopy() *NetworkBandwidthGbpsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsObservation) DeepCopyInto(out *NetworkBandwidthGbpsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsObservation.
func (in *NetworkBandwidthGbpsObservation) DeepCopy() *NetworkBandwidthGbpsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthGbpsParameters) DeepCopyInto(out *NetworkBandwidthGbpsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthGbpsParameters.
func (in *NetworkBandwidthGbpsParameters) DeepCopy() *NetworkBandwidthGbpsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthGbpsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysis) DeepCopyInto(out *NetworkInsightsAnalysis) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysis.
func (in *NetworkInsightsAnalysis) DeepCopy() *NetworkInsightsAnalysis {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInsightsAnalysis) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisInitParameters) DeepCopyInto(out *NetworkInsightsAnalysisInitParameters) {
	*out = *in
	if in.FilterInArns != nil {
		in, out := &in.FilterInArns, &out.FilterInArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkInsightsPathID != nil {
		in, out := &in.NetworkInsightsPathID, &out.NetworkInsightsPathID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInsightsPathIDRef != nil {
		in, out := &in.NetworkInsightsPathIDRef, &out.NetworkInsightsPathIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInsightsPathIDSelector != nil {
		in, out := &in.NetworkInsightsPathIDSelector, &out.NetworkInsightsPathIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForCompletion != nil {
		in, out := &in.WaitForCompletion, &out.WaitForCompletion
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisInitParameters.
func (in *NetworkInsightsAnalysisInitParameters) DeepCopy() *NetworkInsightsAnalysisInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisList) DeepCopyInto(out *NetworkInsightsAnalysisList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInsightsAnalysis, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisList.
func (in *NetworkInsightsAnalysisList) DeepCopy() *NetworkInsightsAnalysisList {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInsightsAnalysisList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisObservation) DeepCopyInto(out *NetworkInsightsAnalysisObservation) {
	*out = *in
	if in.AlternatePathHints != nil {
		in, out := &in.AlternatePathHints, &out.AlternatePathHints
		*out = make([]AlternatePathHintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Explanations != nil {
		in, out := &in.Explanations, &out.Explanations
		*out = make([]ExplanationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterInArns != nil {
		in, out := &in.FilterInArns, &out.FilterInArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForwardPathComponents != nil {
		in, out := &in.ForwardPathComponents, &out.ForwardPathComponents
		*out = make([]ForwardPathComponentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInsightsPathID != nil {
		in, out := &in.NetworkInsightsPathID, &out.NetworkInsightsPathID
		*out = new(string)
		**out = **in
	}
	if in.PathFound != nil {
		in, out := &in.PathFound, &out.PathFound
		*out = new(bool)
		**out = **in
	}
	if in.ReturnPathComponents != nil {
		in, out := &in.ReturnPathComponents, &out.ReturnPathComponents
		*out = make([]ReturnPathComponentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForCompletion != nil {
		in, out := &in.WaitForCompletion, &out.WaitForCompletion
		*out = new(bool)
		**out = **in
	}
	if in.WarningMessage != nil {
		in, out := &in.WarningMessage, &out.WarningMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisObservation.
func (in *NetworkInsightsAnalysisObservation) DeepCopy() *NetworkInsightsAnalysisObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisParameters) DeepCopyInto(out *NetworkInsightsAnalysisParameters) {
	*out = *in
	if in.FilterInArns != nil {
		in, out := &in.FilterInArns, &out.FilterInArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkInsightsPathID != nil {
		in, out := &in.NetworkInsightsPathID, &out.NetworkInsightsPathID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInsightsPathIDRef != nil {
		in, out := &in.NetworkInsightsPathIDRef, &out.NetworkInsightsPathIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInsightsPathIDSelector != nil {
		in, out := &in.NetworkInsightsPathIDSelector, &out.NetworkInsightsPathIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForCompletion != nil {
		in, out := &in.WaitForCompletion, &out.WaitForCompletion
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisParameters.
func (in *NetworkInsightsAnalysisParameters) DeepCopy() *NetworkInsightsAnalysisParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisSpec) DeepCopyInto(out *NetworkInsightsAnalysisSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisSpec.
func (in *NetworkInsightsAnalysisSpec) DeepCopy() *NetworkInsightsAnalysisSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsAnalysisStatus) DeepCopyInto(out *NetworkInsightsAnalysisStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsAnalysisStatus.
func (in *NetworkInsightsAnalysisStatus) DeepCopy() *NetworkInsightsAnalysisStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsAnalysisStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPath) DeepCopyInto(out *NetworkInsightsPath) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPath.
func (in *NetworkInsightsPath) DeepCopy() *NetworkInsightsPath {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInsightsPath) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathInitParameters) DeepCopyInto(out *NetworkInsightsPathInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationIP != nil {
		in, out := &in.DestinationIP, &out.DestinationIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathInitParameters.
func (in *NetworkInsightsPathInitParameters) DeepCopy() *NetworkInsightsPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathList) DeepCopyInto(out *NetworkInsightsPathList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInsightsPath, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathList.
func (in *NetworkInsightsPathList) DeepCopy() *NetworkInsightsPathList {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInsightsPathList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathObservation) DeepCopyInto(out *NetworkInsightsPathObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationIP != nil {
		in, out := &in.DestinationIP, &out.DestinationIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceArn != nil {
		in, out := &in.SourceArn, &out.SourceArn
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathObservation.
func (in *NetworkInsightsPathObservation) DeepCopy() *NetworkInsightsPathObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathParameters) DeepCopyInto(out *NetworkInsightsPathParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationIP != nil {
		in, out := &in.DestinationIP, &out.DestinationIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(float64)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourceRef != nil {
		in, out := &in.SourceRef, &out.SourceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSelector != nil {
		in, out := &in.SourceSelector, &out.SourceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathParameters.
func (in *NetworkInsightsPathParameters) DeepCopy() *NetworkInsightsPathParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathSpec) DeepCopyInto(out *NetworkInsightsPathSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathSpec.
func (in *NetworkInsightsPathSpec) DeepCopy() *NetworkInsightsPathSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInsightsPathStatus) DeepCopyInto(out *NetworkInsightsPathStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInsightsPathStatus.
func (in *NetworkInsightsPathStatus) DeepCopy() *NetworkInsightsPathStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInsightsPathStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterface) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachment) DeepCopyInto(out *NetworkInterfaceAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachment.
func (in *NetworkInterfaceAttachment) DeepCopy() *NetworkInterfaceAttachment {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentInitParameters) DeepCopyInto(out *NetworkInterfaceAttachmentInitParameters) {
	*out = *in
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentInitParameters.
func (in *NetworkInterfaceAttachmentInitParameters) DeepCopy() *NetworkInterfaceAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentList) DeepCopyInto(out *NetworkInterfaceAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentList.
func (in *NetworkInterfaceAttachmentList) DeepCopy() *NetworkInterfaceAttachmentList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentObservation) DeepCopyInto(out *NetworkInterfaceAttachmentObservation) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentObservation.
func (in *NetworkInterfaceAttachmentObservation) DeepCopy() *NetworkInterfaceAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentParameters) DeepCopyInto(out *NetworkInterfaceAttachmentParameters) {
	*out = *in
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentParameters.
func (in *NetworkInterfaceAttachmentParameters) DeepCopy() *NetworkInterfaceAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentSpec) DeepCopyInto(out *NetworkInterfaceAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentSpec.
func (in *NetworkInterfaceAttachmentSpec) DeepCopy() *NetworkInterfaceAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceAttachmentStatus) DeepCopyInto(out *NetworkInterfaceAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceAttachmentStatus.
func (in *NetworkInterfaceAttachmentStatus) DeepCopy() *NetworkInterfaceAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountInitParameters) DeepCopyInto(out *NetworkInterfaceCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountInitParameters.
func (in *NetworkInterfaceCountInitParameters) DeepCopy() *NetworkInterfaceCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountObservation) DeepCopyInto(out *NetworkInterfaceCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountObservation.
func (in *NetworkInterfaceCountObservation) DeepCopy() *NetworkInterfaceCountObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceCountParameters) DeepCopyInto(out *NetworkInterfaceCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceCountParameters.
func (in *NetworkInterfaceCountParameters) DeepCopy() *NetworkInterfaceCountParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceInitParameters) DeepCopyInto(out *NetworkInterfaceInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceInitParameters.
func (in *NetworkInterfaceInitParameters) DeepCopy() *NetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceInitParameters_2) DeepCopyInto(out *NetworkInterfaceInitParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6AddressList != nil {
		in, out := &in.IPv6AddressList, &out.IPv6AddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressListEnabled != nil {
		in, out := &in.IPv6AddressListEnabled, &out.IPv6AddressListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPList != nil {
		in, out := &in.PrivateIPList, &out.PrivateIPList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIPListEnabled != nil {
		in, out := &in.PrivateIPListEnabled, &out.PrivateIPListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIps != nil {
		in, out := &in.PrivateIps, &out.PrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIpsCount != nil {
		in, out := &in.PrivateIpsCount, &out.PrivateIpsCount
		*out = new(float64)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceInitParameters_2.
func (in *NetworkInterfaceInitParameters_2) DeepCopy() *NetworkInterfaceInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceList) DeepCopyInto(out *NetworkInterfaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterface, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceList.
func (in *NetworkInterfaceList) DeepCopy() *NetworkInterfaceList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation) DeepCopyInto(out *NetworkInterfaceObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation.
func (in *NetworkInterfaceObservation) DeepCopy() *NetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation_2) DeepCopyInto(out *NetworkInterfaceObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Attachment != nil {
		in, out := &in.Attachment, &out.Attachment
		*out = make([]AttachmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6AddressList != nil {
		in, out := &in.IPv6AddressList, &out.IPv6AddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressListEnabled != nil {
		in, out := &in.IPv6AddressListEnabled, &out.IPv6AddressListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSName != nil {
		in, out := &in.PrivateDNSName, &out.PrivateDNSName
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPList != nil {
		in, out := &in.PrivateIPList, &out.PrivateIPList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIPListEnabled != nil {
		in, out := &in.PrivateIPListEnabled, &out.PrivateIPListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIps != nil {
		in, out := &in.PrivateIps, &out.PrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIpsCount != nil {
		in, out := &in.PrivateIpsCount, &out.PrivateIpsCount
		*out = new(float64)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation_2.
func (in *NetworkInterfaceObservation_2) DeepCopy() *NetworkInterfaceObservation_2 {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters) DeepCopyInto(out *NetworkInterfaceParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters.
func (in *NetworkInterfaceParameters) DeepCopy() *NetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters_2) DeepCopyInto(out *NetworkInterfaceParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6AddressList != nil {
		in, out := &in.IPv6AddressList, &out.IPv6AddressList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressListEnabled != nil {
		in, out := &in.IPv6AddressListEnabled, &out.IPv6AddressListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPList != nil {
		in, out := &in.PrivateIPList, &out.PrivateIPList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIPListEnabled != nil {
		in, out := &in.PrivateIPListEnabled, &out.PrivateIPListEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIps != nil {
		in, out := &in.PrivateIps, &out.PrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIpsCount != nil {
		in, out := &in.PrivateIpsCount, &out.PrivateIpsCount
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters_2.
func (in *NetworkInterfaceParameters_2) DeepCopy() *NetworkInterfaceParameters_2 {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachment) DeepCopyInto(out *NetworkInterfaceSgAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachment.
func (in *NetworkInterfaceSgAttachment) DeepCopy() *NetworkInterfaceSgAttachment {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceSgAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentInitParameters) DeepCopyInto(out *NetworkInterfaceSgAttachmentInitParameters) {
	*out = *in
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentInitParameters.
func (in *NetworkInterfaceSgAttachmentInitParameters) DeepCopy() *NetworkInterfaceSgAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentList) DeepCopyInto(out *NetworkInterfaceSgAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkInterfaceSgAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentList.
func (in *NetworkInterfaceSgAttachmentList) DeepCopy() *NetworkInterfaceSgAttachmentList {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkInterfaceSgAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentObservation) DeepCopyInto(out *NetworkInterfaceSgAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentObservation.
func (in *NetworkInterfaceSgAttachmentObservation) DeepCopy() *NetworkInterfaceSgAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentParameters) DeepCopyInto(out *NetworkInterfaceSgAttachmentParameters) {
	*out = *in
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentParameters.
func (in *NetworkInterfaceSgAttachmentParameters) DeepCopy() *NetworkInterfaceSgAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentSpec) DeepCopyInto(out *NetworkInterfaceSgAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentSpec.
func (in *NetworkInterfaceSgAttachmentSpec) DeepCopy() *NetworkInterfaceSgAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSgAttachmentStatus) DeepCopyInto(out *NetworkInterfaceSgAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSgAttachmentStatus.
func (in *NetworkInterfaceSgAttachmentStatus) DeepCopy() *NetworkInterfaceSgAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSgAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceSpec) DeepCopyInto(out *NetworkInterfaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceSpec.
func (in *NetworkInterfaceSpec) DeepCopy() *NetworkInterfaceSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceStatus) DeepCopyInto(out *NetworkInterfaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceStatus.
func (in *NetworkInterfaceStatus) DeepCopy() *NetworkInterfaceStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesInitParameters) DeepCopyInto(out *NetworkInterfacesInitParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesInitParameters.
func (in *NetworkInterfacesInitParameters) DeepCopy() *NetworkInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesObservation) DeepCopyInto(out *NetworkInterfacesObservation) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesObservation.
func (in *NetworkInterfacesObservation) DeepCopy() *NetworkInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfacesParameters) DeepCopyInto(out *NetworkInterfacesParameters) {
	*out = *in
	if in.AssociateCarrierIPAddress != nil {
		in, out := &in.AssociateCarrierIPAddress, &out.AssociateCarrierIPAddress
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.IPv4AddressCount != nil {
		in, out := &in.IPv4AddressCount, &out.IPv4AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4PrefixCount != nil {
		in, out := &in.IPv4PrefixCount, &out.IPv4PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv4Prefixes != nil {
		in, out := &in.IPv4Prefixes, &out.IPv4Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6PrefixCount != nil {
		in, out := &in.IPv6PrefixCount, &out.IPv6PrefixCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Prefixes != nil {
		in, out := &in.IPv6Prefixes, &out.IPv6Prefixes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InterfaceType != nil {
		in, out := &in.InterfaceType, &out.InterfaceType
		*out = new(string)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfacesParameters.
func (in *NetworkInterfacesParameters) DeepCopy() *NetworkInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingRegionsInitParameters) DeepCopyInto(out *OperatingRegionsInitParameters) {
	*out = *in
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingRegionsInitParameters.
func (in *OperatingRegionsInitParameters) DeepCopy() *OperatingRegionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperatingRegionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingRegionsObservation) DeepCopyInto(out *OperatingRegionsObservation) {
	*out = *in
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingRegionsObservation.
func (in *OperatingRegionsObservation) DeepCopy() *OperatingRegionsObservation {
	if in == nil {
		return nil
	}
	out := new(OperatingRegionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingRegionsParameters) DeepCopyInto(out *OperatingRegionsParameters) {
	*out = *in
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingRegionsParameters.
func (in *OperatingRegionsParameters) DeepCopy() *OperatingRegionsParameters {
	if in == nil {
		return nil
	}
	out := new(OperatingRegionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderDestinationPortRangesInitParameters) DeepCopyInto(out *OutboundHeaderDestinationPortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderDestinationPortRangesInitParameters.
func (in *OutboundHeaderDestinationPortRangesInitParameters) DeepCopy() *OutboundHeaderDestinationPortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderDestinationPortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderDestinationPortRangesObservation) DeepCopyInto(out *OutboundHeaderDestinationPortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderDestinationPortRangesObservation.
func (in *OutboundHeaderDestinationPortRangesObservation) DeepCopy() *OutboundHeaderDestinationPortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderDestinationPortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderDestinationPortRangesParameters) DeepCopyInto(out *OutboundHeaderDestinationPortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderDestinationPortRangesParameters.
func (in *OutboundHeaderDestinationPortRangesParameters) DeepCopy() *OutboundHeaderDestinationPortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderDestinationPortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderInitParameters) DeepCopyInto(out *OutboundHeaderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderInitParameters.
func (in *OutboundHeaderInitParameters) DeepCopy() *OutboundHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderObservation) DeepCopyInto(out *OutboundHeaderObservation) {
	*out = *in
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]OutboundHeaderDestinationPortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]OutboundHeaderSourcePortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderObservation.
func (in *OutboundHeaderObservation) DeepCopy() *OutboundHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderParameters) DeepCopyInto(out *OutboundHeaderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderParameters.
func (in *OutboundHeaderParameters) DeepCopy() *OutboundHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderSourcePortRangesInitParameters) DeepCopyInto(out *OutboundHeaderSourcePortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderSourcePortRangesInitParameters.
func (in *OutboundHeaderSourcePortRangesInitParameters) DeepCopy() *OutboundHeaderSourcePortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderSourcePortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderSourcePortRangesObservation) DeepCopyInto(out *OutboundHeaderSourcePortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderSourcePortRangesObservation.
func (in *OutboundHeaderSourcePortRangesObservation) DeepCopy() *OutboundHeaderSourcePortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderSourcePortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutboundHeaderSourcePortRangesParameters) DeepCopyInto(out *OutboundHeaderSourcePortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutboundHeaderSourcePortRangesParameters.
func (in *OutboundHeaderSourcePortRangesParameters) DeepCopy() *OutboundHeaderSourcePortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(OutboundHeaderSourcePortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInitParameters) DeepCopyInto(out *OverridesInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]OverridesInstanceRequirementsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInitParameters.
func (in *OverridesInitParameters) DeepCopy() *OverridesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsInitParameters) DeepCopyInto(out *OverridesInstanceRequirementsInitParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]InstanceRequirementsAcceleratorCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]InstanceRequirementsAcceleratorTotalMemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]InstanceRequirementsBaselineEBSBandwidthMbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]InstanceRequirementsMemoryGibPerVcpuInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]InstanceRequirementsMemoryMibInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]InstanceRequirementsNetworkBandwidthGbpsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]InstanceRequirementsNetworkInterfaceCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]InstanceRequirementsTotalLocalStorageGbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]InstanceRequirementsVcpuCountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsInitParameters.
func (in *OverridesInstanceRequirementsInitParameters) DeepCopy() *OverridesInstanceRequirementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsObservation) DeepCopyInto(out *OverridesInstanceRequirementsObservation) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]InstanceRequirementsAcceleratorCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]InstanceRequirementsAcceleratorTotalMemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]InstanceRequirementsBaselineEBSBandwidthMbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]InstanceRequirementsMemoryGibPerVcpuObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]InstanceRequirementsMemoryMibObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]InstanceRequirementsNetworkBandwidthGbpsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]InstanceRequirementsNetworkInterfaceCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]InstanceRequirementsTotalLocalStorageGbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]InstanceRequirementsVcpuCountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsObservation.
func (in *OverridesInstanceRequirementsObservation) DeepCopy() *OverridesInstanceRequirementsObservation {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesInstanceRequirementsParameters) DeepCopyInto(out *OverridesInstanceRequirementsParameters) {
	*out = *in
	if in.AcceleratorCount != nil {
		in, out := &in.AcceleratorCount, &out.AcceleratorCount
		*out = make([]InstanceRequirementsAcceleratorCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorManufacturers != nil {
		in, out := &in.AcceleratorManufacturers, &out.AcceleratorManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorNames != nil {
		in, out := &in.AcceleratorNames, &out.AcceleratorNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AcceleratorTotalMemoryMib != nil {
		in, out := &in.AcceleratorTotalMemoryMib, &out.AcceleratorTotalMemoryMib
		*out = make([]InstanceRequirementsAcceleratorTotalMemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedInstanceTypes != nil {
		in, out := &in.AllowedInstanceTypes, &out.AllowedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BareMetal != nil {
		in, out := &in.BareMetal, &out.BareMetal
		*out = new(string)
		**out = **in
	}
	if in.BaselineEBSBandwidthMbps != nil {
		in, out := &in.BaselineEBSBandwidthMbps, &out.BaselineEBSBandwidthMbps
		*out = make([]InstanceRequirementsBaselineEBSBandwidthMbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BurstablePerformance != nil {
		in, out := &in.BurstablePerformance, &out.BurstablePerformance
		*out = new(string)
		**out = **in
	}
	if in.CPUManufacturers != nil {
		in, out := &in.CPUManufacturers, &out.CPUManufacturers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExcludedInstanceTypes != nil {
		in, out := &in.ExcludedInstanceTypes, &out.ExcludedInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceGenerations != nil {
		in, out := &in.InstanceGenerations, &out.InstanceGenerations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LocalStorage != nil {
		in, out := &in.LocalStorage, &out.LocalStorage
		*out = new(string)
		**out = **in
	}
	if in.LocalStorageTypes != nil {
		in, out := &in.LocalStorageTypes, &out.LocalStorageTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryGibPerVcpu != nil {
		in, out := &in.MemoryGibPerVcpu, &out.MemoryGibPerVcpu
		*out = make([]InstanceRequirementsMemoryGibPerVcpuParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMib != nil {
		in, out := &in.MemoryMib, &out.MemoryMib
		*out = make([]InstanceRequirementsMemoryMibParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBandwidthGbps != nil {
		in, out := &in.NetworkBandwidthGbps, &out.NetworkBandwidthGbps
		*out = make([]InstanceRequirementsNetworkBandwidthGbpsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceCount != nil {
		in, out := &in.NetworkInterfaceCount, &out.NetworkInterfaceCount
		*out = make([]InstanceRequirementsNetworkInterfaceCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnDemandMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.OnDemandMaxPricePercentageOverLowestPrice, &out.OnDemandMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.RequireHibernateSupport != nil {
		in, out := &in.RequireHibernateSupport, &out.RequireHibernateSupport
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaxPricePercentageOverLowestPrice != nil {
		in, out := &in.SpotMaxPricePercentageOverLowestPrice, &out.SpotMaxPricePercentageOverLowestPrice
		*out = new(float64)
		**out = **in
	}
	if in.TotalLocalStorageGb != nil {
		in, out := &in.TotalLocalStorageGb, &out.TotalLocalStorageGb
		*out = make([]InstanceRequirementsTotalLocalStorageGbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpuCount != nil {
		in, out := &in.VcpuCount, &out.VcpuCount
		*out = make([]InstanceRequirementsVcpuCountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesInstanceRequirementsParameters.
func (in *OverridesInstanceRequirementsParameters) DeepCopy() *OverridesInstanceRequirementsParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesInstanceRequirementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesObservation) DeepCopyInto(out *OverridesObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]OverridesInstanceRequirementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesObservation.
func (in *OverridesObservation) DeepCopy() *OverridesObservation {
	if in == nil {
		return nil
	}
	out := new(OverridesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridesParameters) DeepCopyInto(out *OverridesParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.InstanceRequirements != nil {
		in, out := &in.InstanceRequirements, &out.InstanceRequirements
		*out = make([]OverridesInstanceRequirementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridesParameters.
func (in *OverridesParameters) DeepCopy() *OverridesParameters {
	if in == nil {
		return nil
	}
	out := new(OverridesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroup) DeepCopyInto(out *PlacementGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroup.
func (in *PlacementGroup) DeepCopy() *PlacementGroup {
	if in == nil {
		return nil
	}
	out := new(PlacementGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupInitParameters) DeepCopyInto(out *PlacementGroupInitParameters) {
	*out = *in
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.SpreadLevel != nil {
		in, out := &in.SpreadLevel, &out.SpreadLevel
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupInitParameters.
func (in *PlacementGroupInitParameters) DeepCopy() *PlacementGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupList) DeepCopyInto(out *PlacementGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupList.
func (in *PlacementGroupList) DeepCopy() *PlacementGroupList {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupObservation) DeepCopyInto(out *PlacementGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.PlacementGroupID != nil {
		in, out := &in.PlacementGroupID, &out.PlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.SpreadLevel != nil {
		in, out := &in.SpreadLevel, &out.SpreadLevel
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupObservation.
func (in *PlacementGroupObservation) DeepCopy() *PlacementGroupObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupParameters) DeepCopyInto(out *PlacementGroupParameters) {
	*out = *in
	if in.PartitionCount != nil {
		in, out := &in.PartitionCount, &out.PartitionCount
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SpreadLevel != nil {
		in, out := &in.SpreadLevel, &out.SpreadLevel
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupParameters.
func (in *PlacementGroupParameters) DeepCopy() *PlacementGroupParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupSpec) DeepCopyInto(out *PlacementGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupSpec.
func (in *PlacementGroupSpec) DeepCopy() *PlacementGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupStatus) DeepCopyInto(out *PlacementGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupStatus.
func (in *PlacementGroupStatus) DeepCopy() *PlacementGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.PartitionNumber != nil {
		in, out := &in.PartitionNumber, &out.PartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.SpreadDomain != nil {
		in, out := &in.SpreadDomain, &out.SpreadDomain
		*out = new(string)
		**out = **in
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangeInitParameters) DeepCopyInto(out *PortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangeInitParameters.
func (in *PortRangeInitParameters) DeepCopy() *PortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(PortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangeObservation) DeepCopyInto(out *PortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangeObservation.
func (in *PortRangeObservation) DeepCopy() *PortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(PortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangeParameters) DeepCopyInto(out *PortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangeParameters.
func (in *PortRangeParameters) DeepCopy() *PortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(PortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangesInitParameters) DeepCopyInto(out *PortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangesInitParameters.
func (in *PortRangesInitParameters) DeepCopy() *PortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangesObservation) DeepCopyInto(out *PortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangesObservation.
func (in *PortRangesObservation) DeepCopy() *PortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(PortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortRangesParameters) DeepCopyInto(out *PortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortRangesParameters.
func (in *PortRangesParameters) DeepCopy() *PortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(PortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixListInitParameters) DeepCopyInto(out *PrefixListInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixListInitParameters.
func (in *PrefixListInitParameters) DeepCopy() *PrefixListInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixListObservation) DeepCopyInto(out *PrefixListObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixListObservation.
func (in *PrefixListObservation) DeepCopy() *PrefixListObservation {
	if in == nil {
		return nil
	}
	out := new(PrefixListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixListParameters) DeepCopyInto(out *PrefixListParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixListParameters.
func (in *PrefixListParameters) DeepCopy() *PrefixListParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameConfigurationInitParameters) DeepCopyInto(out *PrivateDNSNameConfigurationInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameConfigurationInitParameters.
func (in *PrivateDNSNameConfigurationInitParameters) DeepCopy() *PrivateDNSNameConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameConfigurationObservation) DeepCopyInto(out *PrivateDNSNameConfigurationObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameConfigurationObservation.
func (in *PrivateDNSNameConfigurationObservation) DeepCopy() *PrivateDNSNameConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameConfigurationParameters) DeepCopyInto(out *PrivateDNSNameConfigurationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameConfigurationParameters.
func (in *PrivateDNSNameConfigurationParameters) DeepCopy() *PrivateDNSNameConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopyInto(out *PrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsInitParameters.
func (in *PrivateDNSNameOptionsInitParameters) DeepCopy() *PrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsObservation) DeepCopyInto(out *PrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsObservation.
func (in *PrivateDNSNameOptionsObservation) DeepCopy() *PrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDNSNameOptionsParameters) DeepCopyInto(out *PrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDNSNameOptionsParameters.
func (in *PrivateDNSNameOptionsParameters) DeepCopy() *PrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterInitParameters) DeepCopyInto(out *RequesterInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterInitParameters.
func (in *RequesterInitParameters) DeepCopy() *RequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterObservation) DeepCopyInto(out *RequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterObservation.
func (in *RequesterObservation) DeepCopy() *RequesterObservation {
	if in == nil {
		return nil
	}
	out := new(RequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequesterParameters) DeepCopyInto(out *RequesterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequesterParameters.
func (in *RequesterParameters) DeepCopy() *RequesterParameters {
	if in == nil {
		return nil
	}
	out := new(RequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRuleInitParameters) DeepCopyInto(out *ReturnPathComponentsACLRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRuleInitParameters.
func (in *ReturnPathComponentsACLRuleInitParameters) DeepCopy() *ReturnPathComponentsACLRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRuleObservation) DeepCopyInto(out *ReturnPathComponentsACLRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]ReturnPathComponentsACLRulePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRuleObservation.
func (in *ReturnPathComponentsACLRuleObservation) DeepCopy() *ReturnPathComponentsACLRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRuleParameters) DeepCopyInto(out *ReturnPathComponentsACLRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRuleParameters.
func (in *ReturnPathComponentsACLRuleParameters) DeepCopy() *ReturnPathComponentsACLRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRulePortRangeInitParameters) DeepCopyInto(out *ReturnPathComponentsACLRulePortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRulePortRangeInitParameters.
func (in *ReturnPathComponentsACLRulePortRangeInitParameters) DeepCopy() *ReturnPathComponentsACLRulePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRulePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRulePortRangeObservation) DeepCopyInto(out *ReturnPathComponentsACLRulePortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRulePortRangeObservation.
func (in *ReturnPathComponentsACLRulePortRangeObservation) DeepCopy() *ReturnPathComponentsACLRulePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRulePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsACLRulePortRangeParameters) DeepCopyInto(out *ReturnPathComponentsACLRulePortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsACLRulePortRangeParameters.
func (in *ReturnPathComponentsACLRulePortRangeParameters) DeepCopy() *ReturnPathComponentsACLRulePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsACLRulePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsComponentInitParameters) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsComponentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsComponentInitParameters.
func (in *ReturnPathComponentsAdditionalDetailsComponentInitParameters) DeepCopy() *ReturnPathComponentsAdditionalDetailsComponentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsComponentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsComponentObservation) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsComponentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsComponentObservation.
func (in *ReturnPathComponentsAdditionalDetailsComponentObservation) DeepCopy() *ReturnPathComponentsAdditionalDetailsComponentObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsComponentParameters) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsComponentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsComponentParameters.
func (in *ReturnPathComponentsAdditionalDetailsComponentParameters) DeepCopy() *ReturnPathComponentsAdditionalDetailsComponentParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsInitParameters) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsInitParameters.
func (in *ReturnPathComponentsAdditionalDetailsInitParameters) DeepCopy() *ReturnPathComponentsAdditionalDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsObservation) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsObservation) {
	*out = *in
	if in.AdditionalDetailType != nil {
		in, out := &in.AdditionalDetailType, &out.AdditionalDetailType
		*out = new(string)
		**out = **in
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]ReturnPathComponentsAdditionalDetailsComponentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsObservation.
func (in *ReturnPathComponentsAdditionalDetailsObservation) DeepCopy() *ReturnPathComponentsAdditionalDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAdditionalDetailsParameters) DeepCopyInto(out *ReturnPathComponentsAdditionalDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAdditionalDetailsParameters.
func (in *ReturnPathComponentsAdditionalDetailsParameters) DeepCopy() *ReturnPathComponentsAdditionalDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAdditionalDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAttachedToInitParameters) DeepCopyInto(out *ReturnPathComponentsAttachedToInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAttachedToInitParameters.
func (in *ReturnPathComponentsAttachedToInitParameters) DeepCopy() *ReturnPathComponentsAttachedToInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAttachedToInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAttachedToObservation) DeepCopyInto(out *ReturnPathComponentsAttachedToObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAttachedToObservation.
func (in *ReturnPathComponentsAttachedToObservation) DeepCopy() *ReturnPathComponentsAttachedToObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAttachedToObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsAttachedToParameters) DeepCopyInto(out *ReturnPathComponentsAttachedToParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsAttachedToParameters.
func (in *ReturnPathComponentsAttachedToParameters) DeepCopy() *ReturnPathComponentsAttachedToParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsAttachedToParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsComponentInitParameters) DeepCopyInto(out *ReturnPathComponentsComponentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsComponentInitParameters.
func (in *ReturnPathComponentsComponentInitParameters) DeepCopy() *ReturnPathComponentsComponentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsComponentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsComponentObservation) DeepCopyInto(out *ReturnPathComponentsComponentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsComponentObservation.
func (in *ReturnPathComponentsComponentObservation) DeepCopy() *ReturnPathComponentsComponentObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsComponentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsComponentParameters) DeepCopyInto(out *ReturnPathComponentsComponentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsComponentParameters.
func (in *ReturnPathComponentsComponentParameters) DeepCopy() *ReturnPathComponentsComponentParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsComponentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsDestinationVPCInitParameters) DeepCopyInto(out *ReturnPathComponentsDestinationVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsDestinationVPCInitParameters.
func (in *ReturnPathComponentsDestinationVPCInitParameters) DeepCopy() *ReturnPathComponentsDestinationVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsDestinationVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsDestinationVPCObservation) DeepCopyInto(out *ReturnPathComponentsDestinationVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsDestinationVPCObservation.
func (in *ReturnPathComponentsDestinationVPCObservation) DeepCopy() *ReturnPathComponentsDestinationVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsDestinationVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsDestinationVPCParameters) DeepCopyInto(out *ReturnPathComponentsDestinationVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsDestinationVPCParameters.
func (in *ReturnPathComponentsDestinationVPCParameters) DeepCopy() *ReturnPathComponentsDestinationVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsDestinationVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsInboundHeaderInitParameters) DeepCopyInto(out *ReturnPathComponentsInboundHeaderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsInboundHeaderInitParameters.
func (in *ReturnPathComponentsInboundHeaderInitParameters) DeepCopy() *ReturnPathComponentsInboundHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsInboundHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsInboundHeaderObservation) DeepCopyInto(out *ReturnPathComponentsInboundHeaderObservation) {
	*out = *in
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]InboundHeaderDestinationPortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]InboundHeaderSourcePortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsInboundHeaderObservation.
func (in *ReturnPathComponentsInboundHeaderObservation) DeepCopy() *ReturnPathComponentsInboundHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsInboundHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsInboundHeaderParameters) DeepCopyInto(out *ReturnPathComponentsInboundHeaderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsInboundHeaderParameters.
func (in *ReturnPathComponentsInboundHeaderParameters) DeepCopy() *ReturnPathComponentsInboundHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsInboundHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsInitParameters) DeepCopyInto(out *ReturnPathComponentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsInitParameters.
func (in *ReturnPathComponentsInitParameters) DeepCopy() *ReturnPathComponentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsObservation) DeepCopyInto(out *ReturnPathComponentsObservation) {
	*out = *in
	if in.ACLRule != nil {
		in, out := &in.ACLRule, &out.ACLRule
		*out = make([]ReturnPathComponentsACLRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalDetails != nil {
		in, out := &in.AdditionalDetails, &out.AdditionalDetails
		*out = make([]ReturnPathComponentsAdditionalDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AttachedTo != nil {
		in, out := &in.AttachedTo, &out.AttachedTo
		*out = make([]ReturnPathComponentsAttachedToObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Component != nil {
		in, out := &in.Component, &out.Component
		*out = make([]ReturnPathComponentsComponentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DestinationVPC != nil {
		in, out := &in.DestinationVPC, &out.DestinationVPC
		*out = make([]ReturnPathComponentsDestinationVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InboundHeader != nil {
		in, out := &in.InboundHeader, &out.InboundHeader
		*out = make([]ReturnPathComponentsInboundHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundHeader != nil {
		in, out := &in.OutboundHeader, &out.OutboundHeader
		*out = make([]ReturnPathComponentsOutboundHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteTableRoute != nil {
		in, out := &in.RouteTableRoute, &out.RouteTableRoute
		*out = make([]ReturnPathComponentsRouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupRule != nil {
		in, out := &in.SecurityGroupRule, &out.SecurityGroupRule
		*out = make([]ReturnPathComponentsSecurityGroupRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SequenceNumber != nil {
		in, out := &in.SequenceNumber, &out.SequenceNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceVPC != nil {
		in, out := &in.SourceVPC, &out.SourceVPC
		*out = make([]ReturnPathComponentsSourceVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]ReturnPathComponentsSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGateway != nil {
		in, out := &in.TransitGateway, &out.TransitGateway
		*out = make([]ReturnPathComponentsTransitGatewayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TransitGatewayRouteTableRoute != nil {
		in, out := &in.TransitGatewayRouteTableRoute, &out.TransitGatewayRouteTableRoute
		*out = make([]ReturnPathComponentsTransitGatewayRouteTableRouteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = make([]ReturnPathComponentsVPCObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsObservation.
func (in *ReturnPathComponentsObservation) DeepCopy() *ReturnPathComponentsObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderDestinationPortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation) DeepCopy() *ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters.
func (in *ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderDestinationPortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderInitParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderInitParameters.
func (in *ReturnPathComponentsOutboundHeaderInitParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderObservation) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderObservation) {
	*out = *in
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DestinationPortRanges != nil {
		in, out := &in.DestinationPortRanges, &out.DestinationPortRanges
		*out = make([]ReturnPathComponentsOutboundHeaderDestinationPortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourcePortRanges != nil {
		in, out := &in.SourcePortRanges, &out.SourcePortRanges
		*out = make([]ReturnPathComponentsOutboundHeaderSourcePortRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderObservation.
func (in *ReturnPathComponentsOutboundHeaderObservation) DeepCopy() *ReturnPathComponentsOutboundHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderParameters.
func (in *ReturnPathComponentsOutboundHeaderParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderSourcePortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesObservation) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderSourcePortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderSourcePortRangesObservation.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesObservation) DeepCopy() *ReturnPathComponentsOutboundHeaderSourcePortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderSourcePortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesParameters) DeepCopyInto(out *ReturnPathComponentsOutboundHeaderSourcePortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsOutboundHeaderSourcePortRangesParameters.
func (in *ReturnPathComponentsOutboundHeaderSourcePortRangesParameters) DeepCopy() *ReturnPathComponentsOutboundHeaderSourcePortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsOutboundHeaderSourcePortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsParameters) DeepCopyInto(out *ReturnPathComponentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsParameters.
func (in *ReturnPathComponentsParameters) DeepCopy() *ReturnPathComponentsParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsRouteTableRouteInitParameters) DeepCopyInto(out *ReturnPathComponentsRouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsRouteTableRouteInitParameters.
func (in *ReturnPathComponentsRouteTableRouteInitParameters) DeepCopy() *ReturnPathComponentsRouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsRouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsRouteTableRouteObservation) DeepCopyInto(out *ReturnPathComponentsRouteTableRouteObservation) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyInternetGatewayID != nil {
		in, out := &in.EgressOnlyInternetGatewayID, &out.EgressOnlyInternetGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsRouteTableRouteObservation.
func (in *ReturnPathComponentsRouteTableRouteObservation) DeepCopy() *ReturnPathComponentsRouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsRouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsRouteTableRouteParameters) DeepCopyInto(out *ReturnPathComponentsRouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsRouteTableRouteParameters.
func (in *ReturnPathComponentsRouteTableRouteParameters) DeepCopy() *ReturnPathComponentsRouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsRouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRuleInitParameters) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRuleInitParameters.
func (in *ReturnPathComponentsSecurityGroupRuleInitParameters) DeepCopy() *ReturnPathComponentsSecurityGroupRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRuleObservation) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]ReturnPathComponentsSecurityGroupRulePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRuleObservation.
func (in *ReturnPathComponentsSecurityGroupRuleObservation) DeepCopy() *ReturnPathComponentsSecurityGroupRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRuleParameters) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRuleParameters.
func (in *ReturnPathComponentsSecurityGroupRuleParameters) DeepCopy() *ReturnPathComponentsSecurityGroupRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeInitParameters) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRulePortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRulePortRangeInitParameters.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeInitParameters) DeepCopy() *ReturnPathComponentsSecurityGroupRulePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRulePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeObservation) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRulePortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRulePortRangeObservation.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeObservation) DeepCopy() *ReturnPathComponentsSecurityGroupRulePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRulePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeParameters) DeepCopyInto(out *ReturnPathComponentsSecurityGroupRulePortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSecurityGroupRulePortRangeParameters.
func (in *ReturnPathComponentsSecurityGroupRulePortRangeParameters) DeepCopy() *ReturnPathComponentsSecurityGroupRulePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSecurityGroupRulePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSourceVPCInitParameters) DeepCopyInto(out *ReturnPathComponentsSourceVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSourceVPCInitParameters.
func (in *ReturnPathComponentsSourceVPCInitParameters) DeepCopy() *ReturnPathComponentsSourceVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSourceVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSourceVPCObservation) DeepCopyInto(out *ReturnPathComponentsSourceVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSourceVPCObservation.
func (in *ReturnPathComponentsSourceVPCObservation) DeepCopy() *ReturnPathComponentsSourceVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSourceVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSourceVPCParameters) DeepCopyInto(out *ReturnPathComponentsSourceVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSourceVPCParameters.
func (in *ReturnPathComponentsSourceVPCParameters) DeepCopy() *ReturnPathComponentsSourceVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSourceVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSubnetInitParameters) DeepCopyInto(out *ReturnPathComponentsSubnetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSubnetInitParameters.
func (in *ReturnPathComponentsSubnetInitParameters) DeepCopy() *ReturnPathComponentsSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSubnetObservation) DeepCopyInto(out *ReturnPathComponentsSubnetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSubnetObservation.
func (in *ReturnPathComponentsSubnetObservation) DeepCopy() *ReturnPathComponentsSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsSubnetParameters) DeepCopyInto(out *ReturnPathComponentsSubnetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsSubnetParameters.
func (in *ReturnPathComponentsSubnetParameters) DeepCopy() *ReturnPathComponentsSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayInitParameters) DeepCopyInto(out *ReturnPathComponentsTransitGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayInitParameters.
func (in *ReturnPathComponentsTransitGatewayInitParameters) DeepCopy() *ReturnPathComponentsTransitGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayObservation) DeepCopyInto(out *ReturnPathComponentsTransitGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayObservation.
func (in *ReturnPathComponentsTransitGatewayObservation) DeepCopy() *ReturnPathComponentsTransitGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayParameters) DeepCopyInto(out *ReturnPathComponentsTransitGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayParameters.
func (in *ReturnPathComponentsTransitGatewayParameters) DeepCopy() *ReturnPathComponentsTransitGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters) DeepCopyInto(out *ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters) DeepCopy() *ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayRouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteObservation) DeepCopyInto(out *ReturnPathComponentsTransitGatewayRouteTableRouteObservation) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.RouteOrigin != nil {
		in, out := &in.RouteOrigin, &out.RouteOrigin
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayRouteTableRouteObservation.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteObservation) DeepCopy() *ReturnPathComponentsTransitGatewayRouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayRouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteParameters) DeepCopyInto(out *ReturnPathComponentsTransitGatewayRouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsTransitGatewayRouteTableRouteParameters.
func (in *ReturnPathComponentsTransitGatewayRouteTableRouteParameters) DeepCopy() *ReturnPathComponentsTransitGatewayRouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsTransitGatewayRouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsVPCInitParameters) DeepCopyInto(out *ReturnPathComponentsVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsVPCInitParameters.
func (in *ReturnPathComponentsVPCInitParameters) DeepCopy() *ReturnPathComponentsVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsVPCObservation) DeepCopyInto(out *ReturnPathComponentsVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsVPCObservation.
func (in *ReturnPathComponentsVPCObservation) DeepCopy() *ReturnPathComponentsVPCObservation {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReturnPathComponentsVPCParameters) DeepCopyInto(out *ReturnPathComponentsVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReturnPathComponentsVPCParameters.
func (in *ReturnPathComponentsVPCParameters) DeepCopy() *ReturnPathComponentsVPCParameters {
	if in == nil {
		return nil
	}
	out := new(ReturnPathComponentsVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceInitParameters) DeepCopyInto(out *RootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceInitParameters.
func (in *RootBlockDeviceInitParameters) DeepCopy() *RootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceObservation) DeepCopyInto(out *RootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceObservation.
func (in *RootBlockDeviceObservation) DeepCopy() *RootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceParameters) DeepCopyInto(out *RootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceParameters.
func (in *RootBlockDeviceParameters) DeepCopy() *RootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteInitParameters) DeepCopyInto(out *RouteInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteInitParameters.
func (in *RouteInitParameters) DeepCopy() *RouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteInitParameters_2) DeepCopyInto(out *RouteInitParameters_2) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListIDRef != nil {
		in, out := &in.DestinationPrefixListIDRef, &out.DestinationPrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationPrefixListIDSelector != nil {
		in, out := &in.DestinationPrefixListIDSelector, &out.DestinationPrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteInitParameters_2.
func (in *RouteInitParameters_2) DeepCopy() *RouteInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation_2) DeepCopyInto(out *RouteObservation_2) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOwnerID != nil {
		in, out := &in.InstanceOwnerID, &out.InstanceOwnerID
		*out = new(string)
		**out = **in
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation_2.
func (in *RouteObservation_2) DeepCopy() *RouteObservation_2 {
	if in == nil {
		return nil
	}
	out := new(RouteObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters_2) DeepCopyInto(out *RouteParameters_2) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationIPv6CidrBlock != nil {
		in, out := &in.DestinationIPv6CidrBlock, &out.DestinationIPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListIDRef != nil {
		in, out := &in.DestinationPrefixListIDRef, &out.DestinationPrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationPrefixListIDSelector != nil {
		in, out := &in.DestinationPrefixListIDSelector, &out.DestinationPrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayIDRef != nil {
		in, out := &in.EgressOnlyGatewayIDRef, &out.EgressOnlyGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EgressOnlyGatewayIDSelector != nil {
		in, out := &in.EgressOnlyGatewayIDSelector, &out.EgressOnlyGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters_2.
func (in *RouteParameters_2) DeepCopy() *RouteParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteStatus) DeepCopyInto(out *RouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteStatus.
func (in *RouteStatus) DeepCopy() *RouteStatus {
	if in == nil {
		return nil
	}
	out := new(RouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable) DeepCopyInto(out *RouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable.
func (in *RouteTable) DeepCopy() *RouteTable {
	if in == nil {
		return nil
	}
	out := new(RouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociation) DeepCopyInto(out *RouteTableAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociation.
func (in *RouteTableAssociation) DeepCopy() *RouteTableAssociation {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationInitParameters) DeepCopyInto(out *RouteTableAssociationInitParameters) {
	*out = *in
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationInitParameters.
func (in *RouteTableAssociationInitParameters) DeepCopy() *RouteTableAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationList) DeepCopyInto(out *RouteTableAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTableAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationList.
func (in *RouteTableAssociationList) DeepCopy() *RouteTableAssociationList {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationObservation) DeepCopyInto(out *RouteTableAssociationObservation) {
	*out = *in
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationObservation.
func (in *RouteTableAssociationObservation) DeepCopy() *RouteTableAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationParameters) DeepCopyInto(out *RouteTableAssociationParameters) {
	*out = *in
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayIDRef != nil {
		in, out := &in.GatewayIDRef, &out.GatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GatewayIDSelector != nil {
		in, out := &in.GatewayIDSelector, &out.GatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationParameters.
func (in *RouteTableAssociationParameters) DeepCopy() *RouteTableAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationSpec) DeepCopyInto(out *RouteTableAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationSpec.
func (in *RouteTableAssociationSpec) DeepCopy() *RouteTableAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAssociationStatus) DeepCopyInto(out *RouteTableAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAssociationStatus.
func (in *RouteTableAssociationStatus) DeepCopy() *RouteTableAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(RouteTableAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableInitParameters) DeepCopyInto(out *RouteTableInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableInitParameters.
func (in *RouteTableInitParameters) DeepCopy() *RouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableInitParameters_2) DeepCopyInto(out *RouteTableInitParameters_2) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableInitParameters_2.
func (in *RouteTableInitParameters_2) DeepCopy() *RouteTableInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableList) DeepCopyInto(out *RouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableList.
func (in *RouteTableList) DeepCopy() *RouteTableList {
	if in == nil {
		return nil
	}
	out := new(RouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableObservation) DeepCopyInto(out *RouteTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableObservation.
func (in *RouteTableObservation) DeepCopy() *RouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(RouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableObservation_2) DeepCopyInto(out *RouteTableObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PropagatingVgws != nil {
		in, out := &in.PropagatingVgws, &out.PropagatingVgws
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteTableRouteObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableObservation_2.
func (in *RouteTableObservation_2) DeepCopy() *RouteTableObservation_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableParameters) DeepCopyInto(out *RouteTableParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableParameters.
func (in *RouteTableParameters) DeepCopy() *RouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableParameters_2) DeepCopyInto(out *RouteTableParameters_2) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableParameters_2.
func (in *RouteTableParameters_2) DeepCopy() *RouteTableParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteInitParameters) DeepCopyInto(out *RouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteInitParameters.
func (in *RouteTableRouteInitParameters) DeepCopy() *RouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteInitParameters_2) DeepCopyInto(out *RouteTableRouteInitParameters_2) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteInitParameters_2.
func (in *RouteTableRouteInitParameters_2) DeepCopy() *RouteTableRouteInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteObservation) DeepCopyInto(out *RouteTableRouteObservation) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyInternetGatewayID != nil {
		in, out := &in.EgressOnlyInternetGatewayID, &out.EgressOnlyInternetGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteObservation.
func (in *RouteTableRouteObservation) DeepCopy() *RouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteObservation_2) DeepCopyInto(out *RouteTableRouteObservation_2) {
	*out = *in
	if in.CarrierGatewayID != nil {
		in, out := &in.CarrierGatewayID, &out.CarrierGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationPrefixListID != nil {
		in, out := &in.DestinationPrefixListID, &out.DestinationPrefixListID
		*out = new(string)
		**out = **in
	}
	if in.EgressOnlyGatewayID != nil {
		in, out := &in.EgressOnlyGatewayID, &out.EgressOnlyGatewayID
		*out = new(string)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.LocalGatewayID != nil {
		in, out := &in.LocalGatewayID, &out.LocalGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteObservation_2.
func (in *RouteTableRouteObservation_2) DeepCopy() *RouteTableRouteObservation_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteParameters) DeepCopyInto(out *RouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteParameters.
func (in *RouteTableRouteParameters) DeepCopy() *RouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableRouteParameters_2) DeepCopyInto(out *RouteTableRouteParameters_2) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableRouteParameters_2.
func (in *RouteTableRouteParameters_2) DeepCopy() *RouteTableRouteParameters_2 {
	if in == nil {
		return nil
	}
	out := new(RouteTableRouteParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableSpec) DeepCopyInto(out *RouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableSpec.
func (in *RouteTableSpec) DeepCopy() *RouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableStatus) DeepCopyInto(out *RouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableStatus.
func (in *RouteTableStatus) DeepCopy() *RouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(RouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesInitParameters) DeepCopyInto(out *RoutesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesInitParameters.
func (in *RoutesInitParameters) DeepCopy() *RoutesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesObservation) DeepCopyInto(out *RoutesObservation) {
	*out = *in
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesObservation.
func (in *RoutesObservation) DeepCopy() *RoutesObservation {
	if in == nil {
		return nil
	}
	out := new(RoutesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutesParameters) DeepCopyInto(out *RoutesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutesParameters.
func (in *RoutesParameters) DeepCopy() *RoutesParameters {
	if in == nil {
		return nil
	}
	out := new(RoutesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroup) DeepCopyInto(out *SecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroup.
func (in *SecurityGroup) DeepCopy() *SecurityGroup {
	if in == nil {
		return nil
	}
	out := new(SecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressInitParameters) DeepCopyInto(out *SecurityGroupEgressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressInitParameters.
func (in *SecurityGroupEgressInitParameters) DeepCopy() *SecurityGroupEgressInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressObservation) DeepCopyInto(out *SecurityGroupEgressObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressObservation.
func (in *SecurityGroupEgressObservation) DeepCopy() *SecurityGroupEgressObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressParameters) DeepCopyInto(out *SecurityGroupEgressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressParameters.
func (in *SecurityGroupEgressParameters) DeepCopy() *SecurityGroupEgressParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRule) DeepCopyInto(out *SecurityGroupEgressRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRule.
func (in *SecurityGroupEgressRule) DeepCopy() *SecurityGroupEgressRule {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupEgressRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleInitParameters) DeepCopyInto(out *SecurityGroupEgressRuleInitParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupIDRef != nil {
		in, out := &in.ReferencedSecurityGroupIDRef, &out.ReferencedSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupIDSelector != nil {
		in, out := &in.ReferencedSecurityGroupIDSelector, &out.ReferencedSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleInitParameters.
func (in *SecurityGroupEgressRuleInitParameters) DeepCopy() *SecurityGroupEgressRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleList) DeepCopyInto(out *SecurityGroupEgressRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupEgressRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleList.
func (in *SecurityGroupEgressRuleList) DeepCopy() *SecurityGroupEgressRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupEgressRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleObservation) DeepCopyInto(out *SecurityGroupEgressRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRuleID != nil {
		in, out := &in.SecurityGroupRuleID, &out.SecurityGroupRuleID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleObservation.
func (in *SecurityGroupEgressRuleObservation) DeepCopy() *SecurityGroupEgressRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleParameters) DeepCopyInto(out *SecurityGroupEgressRuleParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupIDRef != nil {
		in, out := &in.ReferencedSecurityGroupIDRef, &out.ReferencedSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupIDSelector != nil {
		in, out := &in.ReferencedSecurityGroupIDSelector, &out.ReferencedSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleParameters.
func (in *SecurityGroupEgressRuleParameters) DeepCopy() *SecurityGroupEgressRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleSpec) DeepCopyInto(out *SecurityGroupEgressRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleSpec.
func (in *SecurityGroupEgressRuleSpec) DeepCopy() *SecurityGroupEgressRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupEgressRuleStatus) DeepCopyInto(out *SecurityGroupEgressRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupEgressRuleStatus.
func (in *SecurityGroupEgressRuleStatus) DeepCopy() *SecurityGroupEgressRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupEgressRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressInitParameters) DeepCopyInto(out *SecurityGroupIngressInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressInitParameters.
func (in *SecurityGroupIngressInitParameters) DeepCopy() *SecurityGroupIngressInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressObservation) DeepCopyInto(out *SecurityGroupIngressObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressObservation.
func (in *SecurityGroupIngressObservation) DeepCopy() *SecurityGroupIngressObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressParameters) DeepCopyInto(out *SecurityGroupIngressParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressParameters.
func (in *SecurityGroupIngressParameters) DeepCopy() *SecurityGroupIngressParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRule) DeepCopyInto(out *SecurityGroupIngressRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRule.
func (in *SecurityGroupIngressRule) DeepCopy() *SecurityGroupIngressRule {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupIngressRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleInitParameters) DeepCopyInto(out *SecurityGroupIngressRuleInitParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupIDRef != nil {
		in, out := &in.ReferencedSecurityGroupIDRef, &out.ReferencedSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupIDSelector != nil {
		in, out := &in.ReferencedSecurityGroupIDSelector, &out.ReferencedSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleInitParameters.
func (in *SecurityGroupIngressRuleInitParameters) DeepCopy() *SecurityGroupIngressRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleList) DeepCopyInto(out *SecurityGroupIngressRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupIngressRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleList.
func (in *SecurityGroupIngressRuleList) DeepCopy() *SecurityGroupIngressRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupIngressRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleObservation) DeepCopyInto(out *SecurityGroupIngressRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRuleID != nil {
		in, out := &in.SecurityGroupRuleID, &out.SecurityGroupRuleID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleObservation.
func (in *SecurityGroupIngressRuleObservation) DeepCopy() *SecurityGroupIngressRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleParameters) DeepCopyInto(out *SecurityGroupIngressRuleParameters) {
	*out = *in
	if in.CidrIPv4 != nil {
		in, out := &in.CidrIPv4, &out.CidrIPv4
		*out = new(string)
		**out = **in
	}
	if in.CidrIPv6 != nil {
		in, out := &in.CidrIPv6, &out.CidrIPv6
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupID != nil {
		in, out := &in.ReferencedSecurityGroupID, &out.ReferencedSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ReferencedSecurityGroupIDRef != nil {
		in, out := &in.ReferencedSecurityGroupIDRef, &out.ReferencedSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ReferencedSecurityGroupIDSelector != nil {
		in, out := &in.ReferencedSecurityGroupIDSelector, &out.ReferencedSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleParameters.
func (in *SecurityGroupIngressRuleParameters) DeepCopy() *SecurityGroupIngressRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleSpec) DeepCopyInto(out *SecurityGroupIngressRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleSpec.
func (in *SecurityGroupIngressRuleSpec) DeepCopy() *SecurityGroupIngressRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupIngressRuleStatus) DeepCopyInto(out *SecurityGroupIngressRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupIngressRuleStatus.
func (in *SecurityGroupIngressRuleStatus) DeepCopy() *SecurityGroupIngressRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupIngressRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupInitParameters) DeepCopyInto(out *SecurityGroupInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupInitParameters.
func (in *SecurityGroupInitParameters) DeepCopy() *SecurityGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupInitParameters_2) DeepCopyInto(out *SecurityGroupInitParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupInitParameters_2.
func (in *SecurityGroupInitParameters_2) DeepCopy() *SecurityGroupInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupList) DeepCopyInto(out *SecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupList.
func (in *SecurityGroupList) DeepCopy() *SecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupObservation) DeepCopyInto(out *SecurityGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupObservation.
func (in *SecurityGroupObservation) DeepCopy() *SecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupObservation_2) DeepCopyInto(out *SecurityGroupObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = make([]SecurityGroupEgressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]SecurityGroupIngressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupObservation_2.
func (in *SecurityGroupObservation_2) DeepCopy() *SecurityGroupObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupParameters) DeepCopyInto(out *SecurityGroupParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupParameters.
func (in *SecurityGroupParameters) DeepCopy() *SecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupParameters_2) DeepCopyInto(out *SecurityGroupParameters_2) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RevokeRulesOnDelete != nil {
		in, out := &in.RevokeRulesOnDelete, &out.RevokeRulesOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupParameters_2.
func (in *SecurityGroupParameters_2) DeepCopy() *SecurityGroupParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRule) DeepCopyInto(out *SecurityGroupRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRule.
func (in *SecurityGroupRule) DeepCopy() *SecurityGroupRule {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleInitParameters) DeepCopyInto(out *SecurityGroupRuleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleInitParameters.
func (in *SecurityGroupRuleInitParameters) DeepCopy() *SecurityGroupRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleInitParameters_2) DeepCopyInto(out *SecurityGroupRuleInitParameters_2) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIDRefs != nil {
		in, out := &in.PrefixListIDRefs, &out.PrefixListIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.SourceSecurityGroupID != nil {
		in, out := &in.SourceSecurityGroupID, &out.SourceSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SourceSecurityGroupIDRef != nil {
		in, out := &in.SourceSecurityGroupIDRef, &out.SourceSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSecurityGroupIDSelector != nil {
		in, out := &in.SourceSecurityGroupIDSelector, &out.SourceSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleInitParameters_2.
func (in *SecurityGroupRuleInitParameters_2) DeepCopy() *SecurityGroupRuleInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleList) DeepCopyInto(out *SecurityGroupRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleList.
func (in *SecurityGroupRuleList) DeepCopy() *SecurityGroupRuleList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleObservation) DeepCopyInto(out *SecurityGroupRuleObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = make([]SecurityGroupRulePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleObservation.
func (in *SecurityGroupRuleObservation) DeepCopy() *SecurityGroupRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleObservation_2) DeepCopyInto(out *SecurityGroupRuleObservation_2) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupRuleID != nil {
		in, out := &in.SecurityGroupRuleID, &out.SecurityGroupRuleID
		*out = new(string)
		**out = **in
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.SourceSecurityGroupID != nil {
		in, out := &in.SourceSecurityGroupID, &out.SourceSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleObservation_2.
func (in *SecurityGroupRuleObservation_2) DeepCopy() *SecurityGroupRuleObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleParameters) DeepCopyInto(out *SecurityGroupRuleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleParameters.
func (in *SecurityGroupRuleParameters) DeepCopy() *SecurityGroupRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleParameters_2) DeepCopyInto(out *SecurityGroupRuleParameters_2) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlocks != nil {
		in, out := &in.IPv6CidrBlocks, &out.IPv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrefixListIDRefs != nil {
		in, out := &in.PrefixListIDRefs, &out.PrefixListIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIds != nil {
		in, out := &in.PrefixListIds, &out.PrefixListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Self != nil {
		in, out := &in.Self, &out.Self
		*out = new(bool)
		**out = **in
	}
	if in.SourceSecurityGroupID != nil {
		in, out := &in.SourceSecurityGroupID, &out.SourceSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SourceSecurityGroupIDRef != nil {
		in, out := &in.SourceSecurityGroupIDRef, &out.SourceSecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceSecurityGroupIDSelector != nil {
		in, out := &in.SourceSecurityGroupIDSelector, &out.SourceSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleParameters_2.
func (in *SecurityGroupRuleParameters_2) DeepCopy() *SecurityGroupRuleParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRulePortRangeInitParameters) DeepCopyInto(out *SecurityGroupRulePortRangeInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRulePortRangeInitParameters.
func (in *SecurityGroupRulePortRangeInitParameters) DeepCopy() *SecurityGroupRulePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRulePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRulePortRangeObservation) DeepCopyInto(out *SecurityGroupRulePortRangeObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRulePortRangeObservation.
func (in *SecurityGroupRulePortRangeObservation) DeepCopy() *SecurityGroupRulePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRulePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRulePortRangeParameters) DeepCopyInto(out *SecurityGroupRulePortRangeParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRulePortRangeParameters.
func (in *SecurityGroupRulePortRangeParameters) DeepCopy() *SecurityGroupRulePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRulePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleSpec) DeepCopyInto(out *SecurityGroupRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleSpec.
func (in *SecurityGroupRuleSpec) DeepCopy() *SecurityGroupRuleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupRuleStatus) DeepCopyInto(out *SecurityGroupRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupRuleStatus.
func (in *SecurityGroupRuleStatus) DeepCopy() *SecurityGroupRuleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupSpec) DeepCopyInto(out *SecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupSpec.
func (in *SecurityGroupSpec) DeepCopy() *SecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupStatus) DeepCopyInto(out *SecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupStatus.
func (in *SecurityGroupStatus) DeepCopy() *SecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupsInitParameters) DeepCopyInto(out *SecurityGroupsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupsInitParameters.
func (in *SecurityGroupsInitParameters) DeepCopy() *SecurityGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupsObservation) DeepCopyInto(out *SecurityGroupsObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupsObservation.
func (in *SecurityGroupsObservation) DeepCopy() *SecurityGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupsParameters) DeepCopyInto(out *SecurityGroupsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupsParameters.
func (in *SecurityGroupsParameters) DeepCopy() *SecurityGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccess) DeepCopyInto(out *SerialConsoleAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccess.
func (in *SerialConsoleAccess) DeepCopy() *SerialConsoleAccess {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SerialConsoleAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessInitParameters) DeepCopyInto(out *SerialConsoleAccessInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessInitParameters.
func (in *SerialConsoleAccessInitParameters) DeepCopy() *SerialConsoleAccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessList) DeepCopyInto(out *SerialConsoleAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SerialConsoleAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessList.
func (in *SerialConsoleAccessList) DeepCopy() *SerialConsoleAccessList {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SerialConsoleAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessObservation) DeepCopyInto(out *SerialConsoleAccessObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessObservation.
func (in *SerialConsoleAccessObservation) DeepCopy() *SerialConsoleAccessObservation {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessParameters) DeepCopyInto(out *SerialConsoleAccessParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessParameters.
func (in *SerialConsoleAccessParameters) DeepCopy() *SerialConsoleAccessParameters {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessSpec) DeepCopyInto(out *SerialConsoleAccessSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessSpec.
func (in *SerialConsoleAccessSpec) DeepCopy() *SerialConsoleAccessSpec {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialConsoleAccessStatus) DeepCopyInto(out *SerialConsoleAccessStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialConsoleAccessStatus.
func (in *SerialConsoleAccessStatus) DeepCopy() *SerialConsoleAccessStatus {
	if in == nil {
		return nil
	}
	out := new(SerialConsoleAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermission) DeepCopyInto(out *SnapshotCreateVolumePermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermission.
func (in *SnapshotCreateVolumePermission) DeepCopy() *SnapshotCreateVolumePermission {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotCreateVolumePermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionInitParameters) DeepCopyInto(out *SnapshotCreateVolumePermissionInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotIDRef != nil {
		in, out := &in.SnapshotIDRef, &out.SnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotIDSelector != nil {
		in, out := &in.SnapshotIDSelector, &out.SnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionInitParameters.
func (in *SnapshotCreateVolumePermissionInitParameters) DeepCopy() *SnapshotCreateVolumePermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionList) DeepCopyInto(out *SnapshotCreateVolumePermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnapshotCreateVolumePermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionList.
func (in *SnapshotCreateVolumePermissionList) DeepCopy() *SnapshotCreateVolumePermissionList {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotCreateVolumePermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionObservation) DeepCopyInto(out *SnapshotCreateVolumePermissionObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionObservation.
func (in *SnapshotCreateVolumePermissionObservation) DeepCopy() *SnapshotCreateVolumePermissionObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionParameters) DeepCopyInto(out *SnapshotCreateVolumePermissionParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotIDRef != nil {
		in, out := &in.SnapshotIDRef, &out.SnapshotIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnapshotIDSelector != nil {
		in, out := &in.SnapshotIDSelector, &out.SnapshotIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionParameters.
func (in *SnapshotCreateVolumePermissionParameters) DeepCopy() *SnapshotCreateVolumePermissionParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionSpec) DeepCopyInto(out *SnapshotCreateVolumePermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionSpec.
func (in *SnapshotCreateVolumePermissionSpec) DeepCopy() *SnapshotCreateVolumePermissionSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotCreateVolumePermissionStatus) DeepCopyInto(out *SnapshotCreateVolumePermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotCreateVolumePermissionStatus.
func (in *SnapshotCreateVolumePermissionStatus) DeepCopy() *SnapshotCreateVolumePermissionStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotCreateVolumePermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeInitParameters) DeepCopyInto(out *SourcePortRangeInitParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeInitParameters.
func (in *SourcePortRangeInitParameters) DeepCopy() *SourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeObservation) DeepCopyInto(out *SourcePortRangeObservation) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeObservation.
func (in *SourcePortRangeObservation) DeepCopy() *SourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeParameters) DeepCopyInto(out *SourcePortRangeParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(float64)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeParameters.
func (in *SourcePortRangeParameters) DeepCopy() *SourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangesInitParameters) DeepCopyInto(out *SourcePortRangesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangesInitParameters.
func (in *SourcePortRangesInitParameters) DeepCopy() *SourcePortRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangesObservation) DeepCopyInto(out *SourcePortRangesObservation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(float64)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangesObservation.
func (in *SourcePortRangesObservation) DeepCopy() *SourcePortRangesObservation {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangesParameters) DeepCopyInto(out *SourcePortRangesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangesParameters.
func (in *SourcePortRangesParameters) DeepCopy() *SourcePortRangesParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceVPCInitParameters) DeepCopyInto(out *SourceVPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceVPCInitParameters.
func (in *SourceVPCInitParameters) DeepCopy() *SourceVPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceVPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceVPCObservation) DeepCopyInto(out *SourceVPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceVPCObservation.
func (in *SourceVPCObservation) DeepCopy() *SourceVPCObservation {
	if in == nil {
		return nil
	}
	out := new(SourceVPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceVPCParameters) DeepCopyInto(out *SourceVPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceVPCParameters.
func (in *SourceVPCParameters) DeepCopy() *SourceVPCParameters {
	if in == nil {
		return nil
	}
	out := new(SourceVPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscription) DeepCopyInto(out *SpotDatafeedSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscription.
func (in *SpotDatafeedSubscription) DeepCopy() *SpotDatafeedSubscription {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotDatafeedSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionInitParameters) DeepCopyInto(out *SpotDatafeedSubscriptionInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionInitParameters.
func (in *SpotDatafeedSubscriptionInitParameters) DeepCopy() *SpotDatafeedSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionList) DeepCopyInto(out *SpotDatafeedSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpotDatafeedSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionList.
func (in *SpotDatafeedSubscriptionList) DeepCopy() *SpotDatafeedSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotDatafeedSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionObservation) DeepCopyInto(out *SpotDatafeedSubscriptionObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionObservation.
func (in *SpotDatafeedSubscriptionObservation) DeepCopy() *SpotDatafeedSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionParameters) DeepCopyInto(out *SpotDatafeedSubscriptionParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionParameters.
func (in *SpotDatafeedSubscriptionParameters) DeepCopy() *SpotDatafeedSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionSpec) DeepCopyInto(out *SpotDatafeedSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionSpec.
func (in *SpotDatafeedSubscriptionSpec) DeepCopy() *SpotDatafeedSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotDatafeedSubscriptionStatus) DeepCopyInto(out *SpotDatafeedSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotDatafeedSubscriptionStatus.
func (in *SpotDatafeedSubscriptionStatus) DeepCopy() *SpotDatafeedSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SpotDatafeedSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequest) DeepCopyInto(out *SpotFleetRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequest.
func (in *SpotFleetRequest) DeepCopy() *SpotFleetRequest {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotFleetRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestInitParameters) DeepCopyInto(out *SpotFleetRequestInitParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = make([]SpotMaintenanceStrategiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestInitParameters.
func (in *SpotFleetRequestInitParameters) DeepCopy() *SpotFleetRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestList) DeepCopyInto(out *SpotFleetRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpotFleetRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestList.
func (in *SpotFleetRequestList) DeepCopy() *SpotFleetRequestList {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotFleetRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestObservation) DeepCopyInto(out *SpotFleetRequestObservation) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.ClientToken != nil {
		in, out := &in.ClientToken, &out.ClientToken
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = make([]SpotMaintenanceStrategiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotRequestState != nil {
		in, out := &in.SpotRequestState, &out.SpotRequestState
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestObservation.
func (in *SpotFleetRequestObservation) DeepCopy() *SpotFleetRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestParameters) DeepCopyInto(out *SpotFleetRequestParameters) {
	*out = *in
	if in.AllocationStrategy != nil {
		in, out := &in.AllocationStrategy, &out.AllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExcessCapacityTerminationPolicy != nil {
		in, out := &in.ExcessCapacityTerminationPolicy, &out.ExcessCapacityTerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.IAMFleetRole != nil {
		in, out := &in.IAMFleetRole, &out.IAMFleetRole
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehaviour != nil {
		in, out := &in.InstanceInterruptionBehaviour, &out.InstanceInterruptionBehaviour
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolsToUseCount != nil {
		in, out := &in.InstancePoolsToUseCount, &out.InstancePoolsToUseCount
		*out = new(float64)
		**out = **in
	}
	if in.LaunchSpecification != nil {
		in, out := &in.LaunchSpecification, &out.LaunchSpecification
		*out = make([]LaunchSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchTemplateConfig != nil {
		in, out := &in.LaunchTemplateConfig, &out.LaunchTemplateConfig
		*out = make([]LaunchTemplateConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OnDemandAllocationStrategy != nil {
		in, out := &in.OnDemandAllocationStrategy, &out.OnDemandAllocationStrategy
		*out = new(string)
		**out = **in
	}
	if in.OnDemandMaxTotalPrice != nil {
		in, out := &in.OnDemandMaxTotalPrice, &out.OnDemandMaxTotalPrice
		*out = new(string)
		**out = **in
	}
	if in.OnDemandTargetCapacity != nil {
		in, out := &in.OnDemandTargetCapacity, &out.OnDemandTargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplaceUnhealthyInstances != nil {
		in, out := &in.ReplaceUnhealthyInstances, &out.ReplaceUnhealthyInstances
		*out = new(bool)
		**out = **in
	}
	if in.SpotMaintenanceStrategies != nil {
		in, out := &in.SpotMaintenanceStrategies, &out.SpotMaintenanceStrategies
		*out = make([]SpotMaintenanceStrategiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetCapacity != nil {
		in, out := &in.TargetCapacity, &out.TargetCapacity
		*out = new(float64)
		**out = **in
	}
	if in.TargetCapacityUnitType != nil {
		in, out := &in.TargetCapacityUnitType, &out.TargetCapacityUnitType
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupArns != nil {
		in, out := &in.TargetGroupArns, &out.TargetGroupArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TerminateInstancesOnDelete != nil {
		in, out := &in.TerminateInstancesOnDelete, &out.TerminateInstancesOnDelete
		*out = new(string)
		**out = **in
	}
	if in.TerminateInstancesWithExpiration != nil {
		in, out := &in.TerminateInstancesWithExpiration, &out.TerminateInstancesWithExpiration
		*out = new(bool)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestParameters.
func (in *SpotFleetRequestParameters) DeepCopy() *SpotFleetRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestSpec) DeepCopyInto(out *SpotFleetRequestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestSpec.
func (in *SpotFleetRequestSpec) DeepCopy() *SpotFleetRequestSpec {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotFleetRequestStatus) DeepCopyInto(out *SpotFleetRequestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotFleetRequestStatus.
func (in *SpotFleetRequestStatus) DeepCopy() *SpotFleetRequestStatus {
	if in == nil {
		return nil
	}
	out := new(SpotFleetRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequest) DeepCopyInto(out *SpotInstanceRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequest.
func (in *SpotInstanceRequest) DeepCopy() *SpotInstanceRequest {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotInstanceRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestCPUOptionsInitParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsInitParameters.
func (in *SpotInstanceRequestCPUOptionsInitParameters) DeepCopy() *SpotInstanceRequestCPUOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsObservation) DeepCopyInto(out *SpotInstanceRequestCPUOptionsObservation) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsObservation.
func (in *SpotInstanceRequestCPUOptionsObservation) DeepCopy() *SpotInstanceRequestCPUOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCPUOptionsParameters) DeepCopyInto(out *SpotInstanceRequestCPUOptionsParameters) {
	*out = *in
	if in.AmdSevSnp != nil {
		in, out := &in.AmdSevSnp, &out.AmdSevSnp
		*out = new(string)
		**out = **in
	}
	if in.CoreCount != nil {
		in, out := &in.CoreCount, &out.CoreCount
		*out = new(float64)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCPUOptionsParameters.
func (in *SpotInstanceRequestCPUOptionsParameters) DeepCopy() *SpotInstanceRequestCPUOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCPUOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) {
	*out = *in
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationResourceGroupArn != nil {
		in, out := &in.CapacityReservationResourceGroupArn, &out.CapacityReservationResourceGroupArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationInitParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationInitParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationInitParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationInitParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationObservation) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationObservation) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationObservation.
func (in *SpotInstanceRequestCapacityReservationSpecificationObservation) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCapacityReservationSpecificationParameters) DeepCopyInto(out *SpotInstanceRequestCapacityReservationSpecificationParameters) {
	*out = *in
	if in.CapacityReservationPreference != nil {
		in, out := &in.CapacityReservationPreference, &out.CapacityReservationPreference
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationTarget != nil {
		in, out := &in.CapacityReservationTarget, &out.CapacityReservationTarget
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCapacityReservationSpecificationParameters.
func (in *SpotInstanceRequestCapacityReservationSpecificationParameters) DeepCopy() *SpotInstanceRequestCapacityReservationSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCapacityReservationSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationInitParameters) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationInitParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationInitParameters.
func (in *SpotInstanceRequestCreditSpecificationInitParameters) DeepCopy() *SpotInstanceRequestCreditSpecificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationObservation) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationObservation) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationObservation.
func (in *SpotInstanceRequestCreditSpecificationObservation) DeepCopy() *SpotInstanceRequestCreditSpecificationObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestCreditSpecificationParameters) DeepCopyInto(out *SpotInstanceRequestCreditSpecificationParameters) {
	*out = *in
	if in.CPUCredits != nil {
		in, out := &in.CPUCredits, &out.CPUCredits
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestCreditSpecificationParameters.
func (in *SpotInstanceRequestCreditSpecificationParameters) DeepCopy() *SpotInstanceRequestCreditSpecificationParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestCreditSpecificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceInitParameters.
func (in *SpotInstanceRequestEBSBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestEBSBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceObservation.
func (in *SpotInstanceRequestEBSBlockDeviceObservation) DeepCopy() *SpotInstanceRequestEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEBSBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestEBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEBSBlockDeviceParameters.
func (in *SpotInstanceRequestEBSBlockDeviceParameters) DeepCopy() *SpotInstanceRequestEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsInitParameters.
func (in *SpotInstanceRequestEnclaveOptionsInitParameters) DeepCopy() *SpotInstanceRequestEnclaveOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsObservation) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsObservation.
func (in *SpotInstanceRequestEnclaveOptionsObservation) DeepCopy() *SpotInstanceRequestEnclaveOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEnclaveOptionsParameters) DeepCopyInto(out *SpotInstanceRequestEnclaveOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEnclaveOptionsParameters.
func (in *SpotInstanceRequestEnclaveOptionsParameters) DeepCopy() *SpotInstanceRequestEnclaveOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEnclaveOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceInitParameters.
func (in *SpotInstanceRequestEphemeralBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceObservation.
func (in *SpotInstanceRequestEphemeralBlockDeviceObservation) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestEphemeralBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestEphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.NoDevice != nil {
		in, out := &in.NoDevice, &out.NoDevice
		*out = new(bool)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestEphemeralBlockDeviceParameters.
func (in *SpotInstanceRequestEphemeralBlockDeviceParameters) DeepCopy() *SpotInstanceRequestEphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestEphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestInitParameters) DeepCopyInto(out *SpotInstanceRequestInitParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]SpotInstanceRequestCPUOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]SpotInstanceRequestCreditSpecificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]SpotInstanceRequestEnclaveOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]SpotInstanceRequestLaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]SpotInstanceRequestMaintenanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]SpotInstanceRequestMetadataOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]SpotInstanceRequestPrivateDNSNameOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]SpotInstanceRequestRootBlockDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestInitParameters.
func (in *SpotInstanceRequestInitParameters) DeepCopy() *SpotInstanceRequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateInitParameters) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateInitParameters.
func (in *SpotInstanceRequestLaunchTemplateInitParameters) DeepCopy() *SpotInstanceRequestLaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateObservation) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateObservation.
func (in *SpotInstanceRequestLaunchTemplateObservation) DeepCopy() *SpotInstanceRequestLaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestLaunchTemplateParameters) DeepCopyInto(out *SpotInstanceRequestLaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestLaunchTemplateParameters.
func (in *SpotInstanceRequestLaunchTemplateParameters) DeepCopy() *SpotInstanceRequestLaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestLaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestList) DeepCopyInto(out *SpotInstanceRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpotInstanceRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestList.
func (in *SpotInstanceRequestList) DeepCopy() *SpotInstanceRequestList {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpotInstanceRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsInitParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsInitParameters.
func (in *SpotInstanceRequestMaintenanceOptionsInitParameters) DeepCopy() *SpotInstanceRequestMaintenanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsObservation) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsObservation) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsObservation.
func (in *SpotInstanceRequestMaintenanceOptionsObservation) DeepCopy() *SpotInstanceRequestMaintenanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMaintenanceOptionsParameters) DeepCopyInto(out *SpotInstanceRequestMaintenanceOptionsParameters) {
	*out = *in
	if in.AutoRecovery != nil {
		in, out := &in.AutoRecovery, &out.AutoRecovery
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMaintenanceOptionsParameters.
func (in *SpotInstanceRequestMaintenanceOptionsParameters) DeepCopy() *SpotInstanceRequestMaintenanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMaintenanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsInitParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsInitParameters.
func (in *SpotInstanceRequestMetadataOptionsInitParameters) DeepCopy() *SpotInstanceRequestMetadataOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsObservation) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsObservation) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsObservation.
func (in *SpotInstanceRequestMetadataOptionsObservation) DeepCopy() *SpotInstanceRequestMetadataOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestMetadataOptionsParameters) DeepCopyInto(out *SpotInstanceRequestMetadataOptionsParameters) {
	*out = *in
	if in.HTTPEndpoint != nil {
		in, out := &in.HTTPEndpoint, &out.HTTPEndpoint
		*out = new(string)
		**out = **in
	}
	if in.HTTPProtocolIPv6 != nil {
		in, out := &in.HTTPProtocolIPv6, &out.HTTPProtocolIPv6
		*out = new(string)
		**out = **in
	}
	if in.HTTPPutResponseHopLimit != nil {
		in, out := &in.HTTPPutResponseHopLimit, &out.HTTPPutResponseHopLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTokens != nil {
		in, out := &in.HTTPTokens, &out.HTTPTokens
		*out = new(string)
		**out = **in
	}
	if in.InstanceMetadataTags != nil {
		in, out := &in.InstanceMetadataTags, &out.InstanceMetadataTags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestMetadataOptionsParameters.
func (in *SpotInstanceRequestMetadataOptionsParameters) DeepCopy() *SpotInstanceRequestMetadataOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestMetadataOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceInitParameters) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceInitParameters.
func (in *SpotInstanceRequestNetworkInterfaceInitParameters) DeepCopy() *SpotInstanceRequestNetworkInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceObservation) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceObservation.
func (in *SpotInstanceRequestNetworkInterfaceObservation) DeepCopy() *SpotInstanceRequestNetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestNetworkInterfaceParameters) DeepCopyInto(out *SpotInstanceRequestNetworkInterfaceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceIndex != nil {
		in, out := &in.DeviceIndex, &out.DeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkCardIndex != nil {
		in, out := &in.NetworkCardIndex, &out.NetworkCardIndex
		*out = new(float64)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestNetworkInterfaceParameters.
func (in *SpotInstanceRequestNetworkInterfaceParameters) DeepCopy() *SpotInstanceRequestNetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestNetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestObservation) DeepCopyInto(out *SpotInstanceRequestObservation) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]SpotInstanceRequestCPUOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]SpotInstanceRequestCreditSpecificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]SpotInstanceRequestEnclaveOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceState != nil {
		in, out := &in.InstanceState, &out.InstanceState
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]SpotInstanceRequestLaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]SpotInstanceRequestMaintenanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]SpotInstanceRequestMetadataOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PasswordData != nil {
		in, out := &in.PasswordData, &out.PasswordData
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryNetworkInterfaceID != nil {
		in, out := &in.PrimaryNetworkInterfaceID, &out.PrimaryNetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]SpotInstanceRequestPrivateDNSNameOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]SpotInstanceRequestRootBlockDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotBidStatus != nil {
		in, out := &in.SpotBidStatus, &out.SpotBidStatus
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceID != nil {
		in, out := &in.SpotInstanceID, &out.SpotInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotRequestState != nil {
		in, out := &in.SpotRequestState, &out.SpotRequestState
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestObservation.
func (in *SpotInstanceRequestObservation) DeepCopy() *SpotInstanceRequestObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestParameters) DeepCopyInto(out *SpotInstanceRequestParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	if in.AssociatePublicIPAddress != nil {
		in, out := &in.AssociatePublicIPAddress, &out.AssociatePublicIPAddress
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BlockDurationMinutes != nil {
		in, out := &in.BlockDurationMinutes, &out.BlockDurationMinutes
		*out = new(float64)
		**out = **in
	}
	if in.CPUCoreCount != nil {
		in, out := &in.CPUCoreCount, &out.CPUCoreCount
		*out = new(float64)
		**out = **in
	}
	if in.CPUOptions != nil {
		in, out := &in.CPUOptions, &out.CPUOptions
		*out = make([]SpotInstanceRequestCPUOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUThreadsPerCore != nil {
		in, out := &in.CPUThreadsPerCore, &out.CPUThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.CapacityReservationSpecification != nil {
		in, out := &in.CapacityReservationSpecification, &out.CapacityReservationSpecification
		*out = make([]SpotInstanceRequestCapacityReservationSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreditSpecification != nil {
		in, out := &in.CreditSpecification, &out.CreditSpecification
		*out = make([]SpotInstanceRequestCreditSpecificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAPIStop != nil {
		in, out := &in.DisableAPIStop, &out.DisableAPIStop
		*out = new(bool)
		**out = **in
	}
	if in.DisableAPITermination != nil {
		in, out := &in.DisableAPITermination, &out.DisableAPITermination
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]SpotInstanceRequestEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EnclaveOptions != nil {
		in, out := &in.EnclaveOptions, &out.EnclaveOptions
		*out = make([]SpotInstanceRequestEnclaveOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]SpotInstanceRequestEphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GetPasswordData != nil {
		in, out := &in.GetPasswordData, &out.GetPasswordData
		*out = new(bool)
		**out = **in
	}
	if in.Hibernation != nil {
		in, out := &in.Hibernation, &out.Hibernation
		*out = new(bool)
		**out = **in
	}
	if in.HostID != nil {
		in, out := &in.HostID, &out.HostID
		*out = new(string)
		**out = **in
	}
	if in.HostResourceGroupArn != nil {
		in, out := &in.HostResourceGroupArn, &out.HostResourceGroupArn
		*out = new(string)
		**out = **in
	}
	if in.IAMInstanceProfile != nil {
		in, out := &in.IAMInstanceProfile, &out.IAMInstanceProfile
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressCount != nil {
		in, out := &in.IPv6AddressCount, &out.IPv6AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceInitiatedShutdownBehavior != nil {
		in, out := &in.InstanceInitiatedShutdownBehavior, &out.InstanceInitiatedShutdownBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.LaunchGroup != nil {
		in, out := &in.LaunchGroup, &out.LaunchGroup
		*out = new(string)
		**out = **in
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]SpotInstanceRequestLaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceOptions != nil {
		in, out := &in.MaintenanceOptions, &out.MaintenanceOptions
		*out = make([]SpotInstanceRequestMaintenanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetadataOptions != nil {
		in, out := &in.MetadataOptions, &out.MetadataOptions
		*out = make([]SpotInstanceRequestMetadataOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]SpotInstanceRequestNetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = new(string)
		**out = **in
	}
	if in.PlacementPartitionNumber != nil {
		in, out := &in.PlacementPartitionNumber, &out.PlacementPartitionNumber
		*out = new(float64)
		**out = **in
	}
	if in.PrivateDNSNameOptions != nil {
		in, out := &in.PrivateDNSNameOptions, &out.PrivateDNSNameOptions
		*out = make([]SpotInstanceRequestPrivateDNSNameOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]SpotInstanceRequestRootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPrivateIps != nil {
		in, out := &in.SecondaryPrivateIps, &out.SecondaryPrivateIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceDestCheck != nil {
		in, out := &in.SourceDestCheck, &out.SourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SpotPrice != nil {
		in, out := &in.SpotPrice, &out.SpotPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotType != nil {
		in, out := &in.SpotType, &out.SpotType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.UserDataBase64 != nil {
		in, out := &in.UserDataBase64, &out.UserDataBase64
		*out = new(string)
		**out = **in
	}
	if in.UserDataReplaceOnChange != nil {
		in, out := &in.UserDataReplaceOnChange, &out.UserDataReplaceOnChange
		*out = new(bool)
		**out = **in
	}
	if in.VPCSecurityGroupIDRefs != nil {
		in, out := &in.VPCSecurityGroupIDRefs, &out.VPCSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCSecurityGroupIDSelector != nil {
		in, out := &in.VPCSecurityGroupIDSelector, &out.VPCSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCSecurityGroupIds != nil {
		in, out := &in.VPCSecurityGroupIds, &out.VPCSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
	if in.VolumeTags != nil {
		in, out := &in.VolumeTags, &out.VolumeTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WaitForFulfillment != nil {
		in, out := &in.WaitForFulfillment, &out.WaitForFulfillment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestParameters.
func (in *SpotInstanceRequestParameters) DeepCopy() *SpotInstanceRequestParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsInitParameters.
func (in *SpotInstanceRequestPrivateDNSNameOptionsInitParameters) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsObservation) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsObservation) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsObservation.
func (in *SpotInstanceRequestPrivateDNSNameOptionsObservation) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestPrivateDNSNameOptionsParameters) DeepCopyInto(out *SpotInstanceRequestPrivateDNSNameOptionsParameters) {
	*out = *in
	if in.EnableResourceNameDNSARecord != nil {
		in, out := &in.EnableResourceNameDNSARecord, &out.EnableResourceNameDNSARecord
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecord != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecord, &out.EnableResourceNameDNSAaaaRecord
		*out = new(bool)
		**out = **in
	}
	if in.HostnameType != nil {
		in, out := &in.HostnameType, &out.HostnameType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestPrivateDNSNameOptionsParameters.
func (in *SpotInstanceRequestPrivateDNSNameOptionsParameters) DeepCopy() *SpotInstanceRequestPrivateDNSNameOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestPrivateDNSNameOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceInitParameters) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceInitParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceInitParameters.
func (in *SpotInstanceRequestRootBlockDeviceInitParameters) DeepCopy() *SpotInstanceRequestRootBlockDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceObservation) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceObservation) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceObservation.
func (in *SpotInstanceRequestRootBlockDeviceObservation) DeepCopy() *SpotInstanceRequestRootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestRootBlockDeviceParameters) DeepCopyInto(out *SpotInstanceRequestRootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestRootBlockDeviceParameters.
func (in *SpotInstanceRequestRootBlockDeviceParameters) DeepCopy() *SpotInstanceRequestRootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestRootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestSpec) DeepCopyInto(out *SpotInstanceRequestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestSpec.
func (in *SpotInstanceRequestSpec) DeepCopy() *SpotInstanceRequestSpec {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotInstanceRequestStatus) DeepCopyInto(out *SpotInstanceRequestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotInstanceRequestStatus.
func (in *SpotInstanceRequestStatus) DeepCopy() *SpotInstanceRequestStatus {
	if in == nil {
		return nil
	}
	out := new(SpotInstanceRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesInitParameters) DeepCopyInto(out *SpotMaintenanceStrategiesInitParameters) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = make([]CapacityRebalanceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesInitParameters.
func (in *SpotMaintenanceStrategiesInitParameters) DeepCopy() *SpotMaintenanceStrategiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesObservation) DeepCopyInto(out *SpotMaintenanceStrategiesObservation) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = make([]CapacityRebalanceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesObservation.
func (in *SpotMaintenanceStrategiesObservation) DeepCopy() *SpotMaintenanceStrategiesObservation {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotMaintenanceStrategiesParameters) DeepCopyInto(out *SpotMaintenanceStrategiesParameters) {
	*out = *in
	if in.CapacityRebalance != nil {
		in, out := &in.CapacityRebalance, &out.CapacityRebalance
		*out = make([]CapacityRebalanceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotMaintenanceStrategiesParameters.
func (in *SpotMaintenanceStrategiesParameters) DeepCopy() *SpotMaintenanceStrategiesParameters {
	if in == nil {
		return nil
	}
	out := new(SpotMaintenanceStrategiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsInitParameters) DeepCopyInto(out *SpotOptionsInitParameters) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsInitParameters.
func (in *SpotOptionsInitParameters) DeepCopy() *SpotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsObservation) DeepCopyInto(out *SpotOptionsObservation) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsObservation.
func (in *SpotOptionsObservation) DeepCopy() *SpotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotOptionsParameters) DeepCopyInto(out *SpotOptionsParameters) {
	*out = *in
	if in.InstanceInterruptionBehavior != nil {
		in, out := &in.InstanceInterruptionBehavior, &out.InstanceInterruptionBehavior
		*out = new(string)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.SpotInstanceType != nil {
		in, out := &in.SpotInstanceType, &out.SpotInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ValidUntil != nil {
		in, out := &in.ValidUntil, &out.ValidUntil
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotOptionsParameters.
func (in *SpotOptionsParameters) DeepCopy() *SpotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SpotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservation) DeepCopyInto(out *SubnetCidrReservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservation.
func (in *SubnetCidrReservation) DeepCopy() *SubnetCidrReservation {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetCidrReservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationInitParameters) DeepCopyInto(out *SubnetCidrReservationInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ReservationType != nil {
		in, out := &in.ReservationType, &out.ReservationType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationInitParameters.
func (in *SubnetCidrReservationInitParameters) DeepCopy() *SubnetCidrReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationList) DeepCopyInto(out *SubnetCidrReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetCidrReservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationList.
func (in *SubnetCidrReservationList) DeepCopy() *SubnetCidrReservationList {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetCidrReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationObservation) DeepCopyInto(out *SubnetCidrReservationObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.ReservationType != nil {
		in, out := &in.ReservationType, &out.ReservationType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationObservation.
func (in *SubnetCidrReservationObservation) DeepCopy() *SubnetCidrReservationObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationParameters) DeepCopyInto(out *SubnetCidrReservationParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationType != nil {
		in, out := &in.ReservationType, &out.ReservationType
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationParameters.
func (in *SubnetCidrReservationParameters) DeepCopy() *SubnetCidrReservationParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationSpec) DeepCopyInto(out *SubnetCidrReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationSpec.
func (in *SubnetCidrReservationSpec) DeepCopy() *SubnetCidrReservationSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetCidrReservationStatus) DeepCopyInto(out *SubnetCidrReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetCidrReservationStatus.
func (in *SubnetCidrReservationStatus) DeepCopy() *SubnetCidrReservationStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetCidrReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters) DeepCopyInto(out *SubnetInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters.
func (in *SubnetInitParameters) DeepCopy() *SubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters_2) DeepCopyInto(out *SubnetInitParameters_2) {
	*out = *in
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneID != nil {
		in, out := &in.AvailabilityZoneID, &out.AvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableLniAtDeviceIndex != nil {
		in, out := &in.EnableLniAtDeviceIndex, &out.EnableLniAtDeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters_2.
func (in *SubnetInitParameters_2) DeepCopy() *SubnetInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetList) DeepCopyInto(out *SubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetList.
func (in *SubnetList) DeepCopy() *SubnetList {
	if in == nil {
		return nil
	}
	out := new(SubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation_2) DeepCopyInto(out *SubnetObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneID != nil {
		in, out := &in.AvailabilityZoneID, &out.AvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableLniAtDeviceIndex != nil {
		in, out := &in.EnableLniAtDeviceIndex, &out.EnableLniAtDeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockAssociationID != nil {
		in, out := &in.IPv6CidrBlockAssociationID, &out.IPv6CidrBlockAssociationID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation_2.
func (in *SubnetObservation_2) DeepCopy() *SubnetObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters_2) DeepCopyInto(out *SubnetParameters_2) {
	*out = *in
	if in.AssignIPv6AddressOnCreation != nil {
		in, out := &in.AssignIPv6AddressOnCreation, &out.AssignIPv6AddressOnCreation
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneID != nil {
		in, out := &in.AvailabilityZoneID, &out.AvailabilityZoneID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIPv4Pool != nil {
		in, out := &in.CustomerOwnedIPv4Pool, &out.CustomerOwnedIPv4Pool
		*out = new(string)
		**out = **in
	}
	if in.EnableDns64 != nil {
		in, out := &in.EnableDns64, &out.EnableDns64
		*out = new(bool)
		**out = **in
	}
	if in.EnableLniAtDeviceIndex != nil {
		in, out := &in.EnableLniAtDeviceIndex, &out.EnableLniAtDeviceIndex
		*out = new(float64)
		**out = **in
	}
	if in.EnableResourceNameDNSARecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSARecordOnLaunch, &out.EnableResourceNameDNSARecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.EnableResourceNameDNSAaaaRecordOnLaunch != nil {
		in, out := &in.EnableResourceNameDNSAaaaRecordOnLaunch, &out.EnableResourceNameDNSAaaaRecordOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Native != nil {
		in, out := &in.IPv6Native, &out.IPv6Native
		*out = new(bool)
		**out = **in
	}
	if in.MapCustomerOwnedIPOnLaunch != nil {
		in, out := &in.MapCustomerOwnedIPOnLaunch, &out.MapCustomerOwnedIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MapPublicIPOnLaunch != nil {
		in, out := &in.MapPublicIPOnLaunch, &out.MapPublicIPOnLaunch
		*out = new(bool)
		**out = **in
	}
	if in.OutpostArn != nil {
		in, out := &in.OutpostArn, &out.OutpostArn
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSHostnameTypeOnLaunch != nil {
		in, out := &in.PrivateDNSHostnameTypeOnLaunch, &out.PrivateDNSHostnameTypeOnLaunch
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters_2.
func (in *SubnetParameters_2) DeepCopy() *SubnetParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableInitParameters) DeepCopyInto(out *SubnetRouteTableInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableInitParameters.
func (in *SubnetRouteTableInitParameters) DeepCopy() *SubnetRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableObservation) DeepCopyInto(out *SubnetRouteTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableObservation.
func (in *SubnetRouteTableObservation) DeepCopy() *SubnetRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetRouteTableParameters) DeepCopyInto(out *SubnetRouteTableParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetRouteTableParameters.
func (in *SubnetRouteTableParameters) DeepCopy() *SubnetRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetSpec) DeepCopyInto(out *SubnetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetSpec.
func (in *SubnetSpec) DeepCopy() *SubnetSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetStatus) DeepCopyInto(out *SubnetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetStatus.
func (in *SubnetStatus) DeepCopy() *SubnetStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Tag) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagInitParameters) DeepCopyInto(out *TagInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagInitParameters.
func (in *TagInitParameters) DeepCopy() *TagInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagList) DeepCopyInto(out *TagList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Tag, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagList.
func (in *TagList) DeepCopy() *TagList {
	if in == nil {
		return nil
	}
	out := new(TagList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TagList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpec) DeepCopyInto(out *TagSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpec.
func (in *TagSpec) DeepCopy() *TagSpec {
	if in == nil {
		return nil
	}
	out := new(TagSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsInitParameters) DeepCopyInto(out *TagSpecificationsInitParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsInitParameters.
func (in *TagSpecificationsInitParameters) DeepCopy() *TagSpecificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsObservation) DeepCopyInto(out *TagSpecificationsObservation) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsObservation.
func (in *TagSpecificationsObservation) DeepCopy() *TagSpecificationsObservation {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagSpecificationsParameters) DeepCopyInto(out *TagSpecificationsParameters) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagSpecificationsParameters.
func (in *TagSpecificationsParameters) DeepCopy() *TagSpecificationsParameters {
	if in == nil {
		return nil
	}
	out := new(TagSpecificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagStatus) DeepCopyInto(out *TagStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagStatus.
func (in *TagStatus) DeepCopy() *TagStatus {
	if in == nil {
		return nil
	}
	out := new(TagStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbInitParameters) DeepCopyInto(out *TotalLocalStorageGbInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbInitParameters.
func (in *TotalLocalStorageGbInitParameters) DeepCopy() *TotalLocalStorageGbInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbObservation) DeepCopyInto(out *TotalLocalStorageGbObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbObservation.
func (in *TotalLocalStorageGbObservation) DeepCopy() *TotalLocalStorageGbObservation {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalLocalStorageGbParameters) DeepCopyInto(out *TotalLocalStorageGbParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalLocalStorageGbParameters.
func (in *TotalLocalStorageGbParameters) DeepCopy() *TotalLocalStorageGbParameters {
	if in == nil {
		return nil
	}
	out := new(TotalLocalStorageGbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilter) DeepCopyInto(out *TrafficMirrorFilter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilter.
func (in *TrafficMirrorFilter) DeepCopy() *TrafficMirrorFilter {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterInitParameters) DeepCopyInto(out *TrafficMirrorFilterInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NetworkServices != nil {
		in, out := &in.NetworkServices, &out.NetworkServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterInitParameters.
func (in *TrafficMirrorFilterInitParameters) DeepCopy() *TrafficMirrorFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterList) DeepCopyInto(out *TrafficMirrorFilterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficMirrorFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterList.
func (in *TrafficMirrorFilterList) DeepCopy() *TrafficMirrorFilterList {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterObservation) DeepCopyInto(out *TrafficMirrorFilterObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkServices != nil {
		in, out := &in.NetworkServices, &out.NetworkServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterObservation.
func (in *TrafficMirrorFilterObservation) DeepCopy() *TrafficMirrorFilterObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterParameters) DeepCopyInto(out *TrafficMirrorFilterParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.NetworkServices != nil {
		in, out := &in.NetworkServices, &out.NetworkServices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterParameters.
func (in *TrafficMirrorFilterParameters) DeepCopy() *TrafficMirrorFilterParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRule) DeepCopyInto(out *TrafficMirrorFilterRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRule.
func (in *TrafficMirrorFilterRule) DeepCopy() *TrafficMirrorFilterRule {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilterRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleInitParameters) DeepCopyInto(out *TrafficMirrorFilterRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterIDRef != nil {
		in, out := &in.TrafficMirrorFilterIDRef, &out.TrafficMirrorFilterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficMirrorFilterIDSelector != nil {
		in, out := &in.TrafficMirrorFilterIDSelector, &out.TrafficMirrorFilterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleInitParameters.
func (in *TrafficMirrorFilterRuleInitParameters) DeepCopy() *TrafficMirrorFilterRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleList) DeepCopyInto(out *TrafficMirrorFilterRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TrafficMirrorFilterRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleList.
func (in *TrafficMirrorFilterRuleList) DeepCopy() *TrafficMirrorFilterRuleList {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficMirrorFilterRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleObservation) DeepCopyInto(out *TrafficMirrorFilterRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleObservation.
func (in *TrafficMirrorFilterRuleObservation) DeepCopy() *TrafficMirrorFilterRuleObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleParameters) DeepCopyInto(out *TrafficMirrorFilterRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.RuleNumber != nil {
		in, out := &in.RuleNumber, &out.RuleNumber
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidrBlock != nil {
		in, out := &in.SourceCidrBlock, &out.SourceCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterID != nil {
		in, out := &in.TrafficMirrorFilterID, &out.TrafficMirrorFilterID
		*out = new(string)
		**out = **in
	}
	if in.TrafficMirrorFilterIDRef != nil {
		in, out := &in.TrafficMirrorFilterIDRef, &out.TrafficMirrorFilterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficMirrorFilterIDSelector != nil {
		in, out := &in.TrafficMirrorFilterIDSelector, &out.TrafficMirrorFilterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleParameters.
func (in *TrafficMirrorFilterRuleParameters) DeepCopy() *TrafficMirrorFilterRuleParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleSpec) DeepCopyInto(out *TrafficMirrorFilterRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleSpec.
func (in *TrafficMirrorFilterRuleSpec) DeepCopy() *TrafficMirrorFilterRuleSpec {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterRuleStatus) DeepCopyInto(out *TrafficMirrorFilterRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterRuleStatus.
func (in *TrafficMirrorFilterRuleStatus) DeepCopy() *TrafficMirrorFilterRuleStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterSpec) DeepCopyInto(out *TrafficMirrorFilterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterSpec.
func (in *TrafficMirrorFilterSpec) DeepCopy() *TrafficMirrorFilterSpec {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorFilterStatus) DeepCopyInto(out *TrafficMirrorFilterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorFilterStatus.
func (in *TrafficMirrorFilterStatus) DeepCopy() *TrafficMirrorFilterStatus {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorFilterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGateway) DeepCopyInto(out *TransitGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGateway.
func (in *TransitGateway) DeepCopy() *TransitGateway {
	if in == nil {
		return nil
	}
	out := new(TransitGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayAttachmentInitParameters) DeepCopyInto(out *TransitGatewayAttachmentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayAttachmentInitParameters.
func (in *TransitGatewayAttachmentInitParameters) DeepCopy() *TransitGatewayAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayAttachmentObservation) DeepCopyInto(out *TransitGatewayAttachmentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayAttachmentObservation.
func (in *TransitGatewayAttachmentObservation) DeepCopy() *TransitGatewayAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayAttachmentParameters) DeepCopyInto(out *TransitGatewayAttachmentParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayAttachmentParameters.
func (in *TransitGatewayAttachmentParameters) DeepCopy() *TransitGatewayAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnect) DeepCopyInto(out *TransitGatewayConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnect.
func (in *TransitGatewayConnect) DeepCopy() *TransitGatewayConnect {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectInitParameters) DeepCopyInto(out *TransitGatewayConnectInitParameters) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportAttachmentID != nil {
		in, out := &in.TransportAttachmentID, &out.TransportAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransportAttachmentIDRef != nil {
		in, out := &in.TransportAttachmentIDRef, &out.TransportAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportAttachmentIDSelector != nil {
		in, out := &in.TransportAttachmentIDSelector, &out.TransportAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectInitParameters.
func (in *TransitGatewayConnectInitParameters) DeepCopy() *TransitGatewayConnectInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectList) DeepCopyInto(out *TransitGatewayConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectList.
func (in *TransitGatewayConnectList) DeepCopy() *TransitGatewayConnectList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectObservation) DeepCopyInto(out *TransitGatewayConnectObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransportAttachmentID != nil {
		in, out := &in.TransportAttachmentID, &out.TransportAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectObservation.
func (in *TransitGatewayConnectObservation) DeepCopy() *TransitGatewayConnectObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectParameters) DeepCopyInto(out *TransitGatewayConnectParameters) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportAttachmentID != nil {
		in, out := &in.TransportAttachmentID, &out.TransportAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransportAttachmentIDRef != nil {
		in, out := &in.TransportAttachmentIDRef, &out.TransportAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportAttachmentIDSelector != nil {
		in, out := &in.TransportAttachmentIDSelector, &out.TransportAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectParameters.
func (in *TransitGatewayConnectParameters) DeepCopy() *TransitGatewayConnectParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeer) DeepCopyInto(out *TransitGatewayConnectPeer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeer.
func (in *TransitGatewayConnectPeer) DeepCopy() *TransitGatewayConnectPeer {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayConnectPeer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerInitParameters) DeepCopyInto(out *TransitGatewayConnectPeerInitParameters) {
	*out = *in
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.InsideCidrBlocks != nil {
		in, out := &in.InsideCidrBlocks, &out.InsideCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerAddress != nil {
		in, out := &in.PeerAddress, &out.PeerAddress
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAddress != nil {
		in, out := &in.TransitGatewayAddress, &out.TransitGatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerInitParameters.
func (in *TransitGatewayConnectPeerInitParameters) DeepCopy() *TransitGatewayConnectPeerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerList) DeepCopyInto(out *TransitGatewayConnectPeerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayConnectPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerList.
func (in *TransitGatewayConnectPeerList) DeepCopy() *TransitGatewayConnectPeerList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayConnectPeerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerObservation) DeepCopyInto(out *TransitGatewayConnectPeerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.BGPPeerAddress != nil {
		in, out := &in.BGPPeerAddress, &out.BGPPeerAddress
		*out = new(string)
		**out = **in
	}
	if in.BGPTransitGatewayAddresses != nil {
		in, out := &in.BGPTransitGatewayAddresses, &out.BGPTransitGatewayAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsideCidrBlocks != nil {
		in, out := &in.InsideCidrBlocks, &out.InsideCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerAddress != nil {
		in, out := &in.PeerAddress, &out.PeerAddress
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAddress != nil {
		in, out := &in.TransitGatewayAddress, &out.TransitGatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerObservation.
func (in *TransitGatewayConnectPeerObservation) DeepCopy() *TransitGatewayConnectPeerObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerParameters) DeepCopyInto(out *TransitGatewayConnectPeerParameters) {
	*out = *in
	if in.BGPAsn != nil {
		in, out := &in.BGPAsn, &out.BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.InsideCidrBlocks != nil {
		in, out := &in.InsideCidrBlocks, &out.InsideCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerAddress != nil {
		in, out := &in.PeerAddress, &out.PeerAddress
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAddress != nil {
		in, out := &in.TransitGatewayAddress, &out.TransitGatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerParameters.
func (in *TransitGatewayConnectPeerParameters) DeepCopy() *TransitGatewayConnectPeerParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerSpec) DeepCopyInto(out *TransitGatewayConnectPeerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerSpec.
func (in *TransitGatewayConnectPeerSpec) DeepCopy() *TransitGatewayConnectPeerSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectPeerStatus) DeepCopyInto(out *TransitGatewayConnectPeerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectPeerStatus.
func (in *TransitGatewayConnectPeerStatus) DeepCopy() *TransitGatewayConnectPeerStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectPeerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectSpec) DeepCopyInto(out *TransitGatewayConnectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectSpec.
func (in *TransitGatewayConnectSpec) DeepCopy() *TransitGatewayConnectSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayConnectStatus) DeepCopyInto(out *TransitGatewayConnectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayConnectStatus.
func (in *TransitGatewayConnectStatus) DeepCopy() *TransitGatewayConnectStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayInitParameters) DeepCopyInto(out *TransitGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayInitParameters.
func (in *TransitGatewayInitParameters) DeepCopy() *TransitGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayInitParameters_2) DeepCopyInto(out *TransitGatewayInitParameters_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(float64)
		**out = **in
	}
	if in.AutoAcceptSharedAttachments != nil {
		in, out := &in.AutoAcceptSharedAttachments, &out.AutoAcceptSharedAttachments
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableAssociation != nil {
		in, out := &in.DefaultRouteTableAssociation, &out.DefaultRouteTableAssociation
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTablePropagation != nil {
		in, out := &in.DefaultRouteTablePropagation, &out.DefaultRouteTablePropagation
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MulticastSupport != nil {
		in, out := &in.MulticastSupport, &out.MulticastSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayCidrBlocks != nil {
		in, out := &in.TransitGatewayCidrBlocks, &out.TransitGatewayCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPNEcmpSupport != nil {
		in, out := &in.VPNEcmpSupport, &out.VPNEcmpSupport
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayInitParameters_2.
func (in *TransitGatewayInitParameters_2) DeepCopy() *TransitGatewayInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayList) DeepCopyInto(out *TransitGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayList.
func (in *TransitGatewayList) DeepCopy() *TransitGatewayList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomain) DeepCopyInto(out *TransitGatewayMulticastDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomain.
func (in *TransitGatewayMulticastDomain) DeepCopy() *TransitGatewayMulticastDomain {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociation) DeepCopyInto(out *TransitGatewayMulticastDomainAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociation.
func (in *TransitGatewayMulticastDomainAssociation) DeepCopy() *TransitGatewayMulticastDomainAssociation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastDomainAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationInitParameters) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationInitParameters) {
	*out = *in
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationInitParameters.
func (in *TransitGatewayMulticastDomainAssociationInitParameters) DeepCopy() *TransitGatewayMulticastDomainAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationList) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayMulticastDomainAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationList.
func (in *TransitGatewayMulticastDomainAssociationList) DeepCopy() *TransitGatewayMulticastDomainAssociationList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastDomainAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationObservation) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationObservation.
func (in *TransitGatewayMulticastDomainAssociationObservation) DeepCopy() *TransitGatewayMulticastDomainAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationParameters) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationParameters.
func (in *TransitGatewayMulticastDomainAssociationParameters) DeepCopy() *TransitGatewayMulticastDomainAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationSpec) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationSpec.
func (in *TransitGatewayMulticastDomainAssociationSpec) DeepCopy() *TransitGatewayMulticastDomainAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainAssociationStatus) DeepCopyInto(out *TransitGatewayMulticastDomainAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainAssociationStatus.
func (in *TransitGatewayMulticastDomainAssociationStatus) DeepCopy() *TransitGatewayMulticastDomainAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainInitParameters) DeepCopyInto(out *TransitGatewayMulticastDomainInitParameters) {
	*out = *in
	if in.AutoAcceptSharedAssociations != nil {
		in, out := &in.AutoAcceptSharedAssociations, &out.AutoAcceptSharedAssociations
		*out = new(string)
		**out = **in
	}
	if in.Igmpv2Support != nil {
		in, out := &in.Igmpv2Support, &out.Igmpv2Support
		*out = new(string)
		**out = **in
	}
	if in.StaticSourcesSupport != nil {
		in, out := &in.StaticSourcesSupport, &out.StaticSourcesSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainInitParameters.
func (in *TransitGatewayMulticastDomainInitParameters) DeepCopy() *TransitGatewayMulticastDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainList) DeepCopyInto(out *TransitGatewayMulticastDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayMulticastDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainList.
func (in *TransitGatewayMulticastDomainList) DeepCopy() *TransitGatewayMulticastDomainList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainObservation) DeepCopyInto(out *TransitGatewayMulticastDomainObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAcceptSharedAssociations != nil {
		in, out := &in.AutoAcceptSharedAssociations, &out.AutoAcceptSharedAssociations
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Igmpv2Support != nil {
		in, out := &in.Igmpv2Support, &out.Igmpv2Support
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.StaticSourcesSupport != nil {
		in, out := &in.StaticSourcesSupport, &out.StaticSourcesSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainObservation.
func (in *TransitGatewayMulticastDomainObservation) DeepCopy() *TransitGatewayMulticastDomainObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainParameters) DeepCopyInto(out *TransitGatewayMulticastDomainParameters) {
	*out = *in
	if in.AutoAcceptSharedAssociations != nil {
		in, out := &in.AutoAcceptSharedAssociations, &out.AutoAcceptSharedAssociations
		*out = new(string)
		**out = **in
	}
	if in.Igmpv2Support != nil {
		in, out := &in.Igmpv2Support, &out.Igmpv2Support
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StaticSourcesSupport != nil {
		in, out := &in.StaticSourcesSupport, &out.StaticSourcesSupport
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainParameters.
func (in *TransitGatewayMulticastDomainParameters) DeepCopy() *TransitGatewayMulticastDomainParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainSpec) DeepCopyInto(out *TransitGatewayMulticastDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainSpec.
func (in *TransitGatewayMulticastDomainSpec) DeepCopy() *TransitGatewayMulticastDomainSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastDomainStatus) DeepCopyInto(out *TransitGatewayMulticastDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastDomainStatus.
func (in *TransitGatewayMulticastDomainStatus) DeepCopy() *TransitGatewayMulticastDomainStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMember) DeepCopyInto(out *TransitGatewayMulticastGroupMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMember.
func (in *TransitGatewayMulticastGroupMember) DeepCopy() *TransitGatewayMulticastGroupMember {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastGroupMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberInitParameters) DeepCopyInto(out *TransitGatewayMulticastGroupMemberInitParameters) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberInitParameters.
func (in *TransitGatewayMulticastGroupMemberInitParameters) DeepCopy() *TransitGatewayMulticastGroupMemberInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberList) DeepCopyInto(out *TransitGatewayMulticastGroupMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayMulticastGroupMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberList.
func (in *TransitGatewayMulticastGroupMemberList) DeepCopy() *TransitGatewayMulticastGroupMemberList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastGroupMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberObservation) DeepCopyInto(out *TransitGatewayMulticastGroupMemberObservation) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberObservation.
func (in *TransitGatewayMulticastGroupMemberObservation) DeepCopy() *TransitGatewayMulticastGroupMemberObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberParameters) DeepCopyInto(out *TransitGatewayMulticastGroupMemberParameters) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberParameters.
func (in *TransitGatewayMulticastGroupMemberParameters) DeepCopy() *TransitGatewayMulticastGroupMemberParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberSpec) DeepCopyInto(out *TransitGatewayMulticastGroupMemberSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberSpec.
func (in *TransitGatewayMulticastGroupMemberSpec) DeepCopy() *TransitGatewayMulticastGroupMemberSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupMemberStatus) DeepCopyInto(out *TransitGatewayMulticastGroupMemberStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupMemberStatus.
func (in *TransitGatewayMulticastGroupMemberStatus) DeepCopy() *TransitGatewayMulticastGroupMemberStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSource) DeepCopyInto(out *TransitGatewayMulticastGroupSource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSource.
func (in *TransitGatewayMulticastGroupSource) DeepCopy() *TransitGatewayMulticastGroupSource {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastGroupSource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceInitParameters) DeepCopyInto(out *TransitGatewayMulticastGroupSourceInitParameters) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceInitParameters.
func (in *TransitGatewayMulticastGroupSourceInitParameters) DeepCopy() *TransitGatewayMulticastGroupSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceList) DeepCopyInto(out *TransitGatewayMulticastGroupSourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayMulticastGroupSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceList.
func (in *TransitGatewayMulticastGroupSourceList) DeepCopy() *TransitGatewayMulticastGroupSourceList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayMulticastGroupSourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceObservation) DeepCopyInto(out *TransitGatewayMulticastGroupSourceObservation) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceObservation.
func (in *TransitGatewayMulticastGroupSourceObservation) DeepCopy() *TransitGatewayMulticastGroupSourceObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceParameters) DeepCopyInto(out *TransitGatewayMulticastGroupSourceParameters) {
	*out = *in
	if in.GroupIPAddress != nil {
		in, out := &in.GroupIPAddress, &out.GroupIPAddress
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceID != nil {
		in, out := &in.NetworkInterfaceID, &out.NetworkInterfaceID
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIDRef != nil {
		in, out := &in.NetworkInterfaceIDRef, &out.NetworkInterfaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkInterfaceIDSelector != nil {
		in, out := &in.NetworkInterfaceIDSelector, &out.NetworkInterfaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainID != nil {
		in, out := &in.TransitGatewayMulticastDomainID, &out.TransitGatewayMulticastDomainID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayMulticastDomainIDRef != nil {
		in, out := &in.TransitGatewayMulticastDomainIDRef, &out.TransitGatewayMulticastDomainIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayMulticastDomainIDSelector != nil {
		in, out := &in.TransitGatewayMulticastDomainIDSelector, &out.TransitGatewayMulticastDomainIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceParameters.
func (in *TransitGatewayMulticastGroupSourceParameters) DeepCopy() *TransitGatewayMulticastGroupSourceParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceSpec) DeepCopyInto(out *TransitGatewayMulticastGroupSourceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceSpec.
func (in *TransitGatewayMulticastGroupSourceSpec) DeepCopy() *TransitGatewayMulticastGroupSourceSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayMulticastGroupSourceStatus) DeepCopyInto(out *TransitGatewayMulticastGroupSourceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayMulticastGroupSourceStatus.
func (in *TransitGatewayMulticastGroupSourceStatus) DeepCopy() *TransitGatewayMulticastGroupSourceStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayMulticastGroupSourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayObservation) DeepCopyInto(out *TransitGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayObservation.
func (in *TransitGatewayObservation) DeepCopy() *TransitGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayObservation_2) DeepCopyInto(out *TransitGatewayObservation_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(float64)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociationDefaultRouteTableID != nil {
		in, out := &in.AssociationDefaultRouteTableID, &out.AssociationDefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.AutoAcceptSharedAttachments != nil {
		in, out := &in.AutoAcceptSharedAttachments, &out.AutoAcceptSharedAttachments
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableAssociation != nil {
		in, out := &in.DefaultRouteTableAssociation, &out.DefaultRouteTableAssociation
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTablePropagation != nil {
		in, out := &in.DefaultRouteTablePropagation, &out.DefaultRouteTablePropagation
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MulticastSupport != nil {
		in, out := &in.MulticastSupport, &out.MulticastSupport
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.PropagationDefaultRouteTableID != nil {
		in, out := &in.PropagationDefaultRouteTableID, &out.PropagationDefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayCidrBlocks != nil {
		in, out := &in.TransitGatewayCidrBlocks, &out.TransitGatewayCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPNEcmpSupport != nil {
		in, out := &in.VPNEcmpSupport, &out.VPNEcmpSupport
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayObservation_2.
func (in *TransitGatewayObservation_2) DeepCopy() *TransitGatewayObservation_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayParameters) DeepCopyInto(out *TransitGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayParameters.
func (in *TransitGatewayParameters) DeepCopy() *TransitGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayParameters_2) DeepCopyInto(out *TransitGatewayParameters_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(float64)
		**out = **in
	}
	if in.AutoAcceptSharedAttachments != nil {
		in, out := &in.AutoAcceptSharedAttachments, &out.AutoAcceptSharedAttachments
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableAssociation != nil {
		in, out := &in.DefaultRouteTableAssociation, &out.DefaultRouteTableAssociation
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTablePropagation != nil {
		in, out := &in.DefaultRouteTablePropagation, &out.DefaultRouteTablePropagation
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MulticastSupport != nil {
		in, out := &in.MulticastSupport, &out.MulticastSupport
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayCidrBlocks != nil {
		in, out := &in.TransitGatewayCidrBlocks, &out.TransitGatewayCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPNEcmpSupport != nil {
		in, out := &in.VPNEcmpSupport, &out.VPNEcmpSupport
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayParameters_2.
func (in *TransitGatewayParameters_2) DeepCopy() *TransitGatewayParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachment) DeepCopyInto(out *TransitGatewayPeeringAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachment.
func (in *TransitGatewayPeeringAttachment) DeepCopy() *TransitGatewayPeeringAttachment {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPeeringAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepter) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepter.
func (in *TransitGatewayPeeringAttachmentAccepter) DeepCopy() *TransitGatewayPeeringAttachmentAccepter {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPeeringAttachmentAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterInitParameters) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterInitParameters.
func (in *TransitGatewayPeeringAttachmentAccepterInitParameters) DeepCopy() *TransitGatewayPeeringAttachmentAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterList) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayPeeringAttachmentAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterList.
func (in *TransitGatewayPeeringAttachmentAccepterList) DeepCopy() *TransitGatewayPeeringAttachmentAccepterList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPeeringAttachmentAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterObservation) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerAccountID != nil {
		in, out := &in.PeerAccountID, &out.PeerAccountID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayID != nil {
		in, out := &in.PeerTransitGatewayID, &out.PeerTransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterObservation.
func (in *TransitGatewayPeeringAttachmentAccepterObservation) DeepCopy() *TransitGatewayPeeringAttachmentAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterParameters) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterParameters.
func (in *TransitGatewayPeeringAttachmentAccepterParameters) DeepCopy() *TransitGatewayPeeringAttachmentAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterSpec) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterSpec.
func (in *TransitGatewayPeeringAttachmentAccepterSpec) DeepCopy() *TransitGatewayPeeringAttachmentAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentAccepterStatus) DeepCopyInto(out *TransitGatewayPeeringAttachmentAccepterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentAccepterStatus.
func (in *TransitGatewayPeeringAttachmentAccepterStatus) DeepCopy() *TransitGatewayPeeringAttachmentAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentInitParameters) DeepCopyInto(out *TransitGatewayPeeringAttachmentInitParameters) {
	*out = *in
	if in.PeerAccountID != nil {
		in, out := &in.PeerAccountID, &out.PeerAccountID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayID != nil {
		in, out := &in.PeerTransitGatewayID, &out.PeerTransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayIDRef != nil {
		in, out := &in.PeerTransitGatewayIDRef, &out.PeerTransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerTransitGatewayIDSelector != nil {
		in, out := &in.PeerTransitGatewayIDSelector, &out.PeerTransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentInitParameters.
func (in *TransitGatewayPeeringAttachmentInitParameters) DeepCopy() *TransitGatewayPeeringAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentList) DeepCopyInto(out *TransitGatewayPeeringAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayPeeringAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentList.
func (in *TransitGatewayPeeringAttachmentList) DeepCopy() *TransitGatewayPeeringAttachmentList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPeeringAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentObservation) DeepCopyInto(out *TransitGatewayPeeringAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerAccountID != nil {
		in, out := &in.PeerAccountID, &out.PeerAccountID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayID != nil {
		in, out := &in.PeerTransitGatewayID, &out.PeerTransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentObservation.
func (in *TransitGatewayPeeringAttachmentObservation) DeepCopy() *TransitGatewayPeeringAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentParameters) DeepCopyInto(out *TransitGatewayPeeringAttachmentParameters) {
	*out = *in
	if in.PeerAccountID != nil {
		in, out := &in.PeerAccountID, &out.PeerAccountID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayID != nil {
		in, out := &in.PeerTransitGatewayID, &out.PeerTransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.PeerTransitGatewayIDRef != nil {
		in, out := &in.PeerTransitGatewayIDRef, &out.PeerTransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerTransitGatewayIDSelector != nil {
		in, out := &in.PeerTransitGatewayIDSelector, &out.PeerTransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentParameters.
func (in *TransitGatewayPeeringAttachmentParameters) DeepCopy() *TransitGatewayPeeringAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentSpec) DeepCopyInto(out *TransitGatewayPeeringAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentSpec.
func (in *TransitGatewayPeeringAttachmentSpec) DeepCopy() *TransitGatewayPeeringAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPeeringAttachmentStatus) DeepCopyInto(out *TransitGatewayPeeringAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPeeringAttachmentStatus.
func (in *TransitGatewayPeeringAttachmentStatus) DeepCopy() *TransitGatewayPeeringAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPeeringAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTable) DeepCopyInto(out *TransitGatewayPolicyTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTable.
func (in *TransitGatewayPolicyTable) DeepCopy() *TransitGatewayPolicyTable {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPolicyTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableInitParameters) DeepCopyInto(out *TransitGatewayPolicyTableInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableInitParameters.
func (in *TransitGatewayPolicyTableInitParameters) DeepCopy() *TransitGatewayPolicyTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableList) DeepCopyInto(out *TransitGatewayPolicyTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayPolicyTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableList.
func (in *TransitGatewayPolicyTableList) DeepCopy() *TransitGatewayPolicyTableList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPolicyTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableObservation) DeepCopyInto(out *TransitGatewayPolicyTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableObservation.
func (in *TransitGatewayPolicyTableObservation) DeepCopy() *TransitGatewayPolicyTableObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableParameters) DeepCopyInto(out *TransitGatewayPolicyTableParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableParameters.
func (in *TransitGatewayPolicyTableParameters) DeepCopy() *TransitGatewayPolicyTableParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableSpec) DeepCopyInto(out *TransitGatewayPolicyTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableSpec.
func (in *TransitGatewayPolicyTableSpec) DeepCopy() *TransitGatewayPolicyTableSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPolicyTableStatus) DeepCopyInto(out *TransitGatewayPolicyTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPolicyTableStatus.
func (in *TransitGatewayPolicyTableStatus) DeepCopy() *TransitGatewayPolicyTableStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPolicyTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReference) DeepCopyInto(out *TransitGatewayPrefixListReference) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReference.
func (in *TransitGatewayPrefixListReference) DeepCopy() *TransitGatewayPrefixListReference {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPrefixListReference) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceInitParameters) DeepCopyInto(out *TransitGatewayPrefixListReferenceInitParameters) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceInitParameters.
func (in *TransitGatewayPrefixListReferenceInitParameters) DeepCopy() *TransitGatewayPrefixListReferenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceList) DeepCopyInto(out *TransitGatewayPrefixListReferenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayPrefixListReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceList.
func (in *TransitGatewayPrefixListReferenceList) DeepCopy() *TransitGatewayPrefixListReferenceList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayPrefixListReferenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceObservation) DeepCopyInto(out *TransitGatewayPrefixListReferenceObservation) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListOwnerID != nil {
		in, out := &in.PrefixListOwnerID, &out.PrefixListOwnerID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceObservation.
func (in *TransitGatewayPrefixListReferenceObservation) DeepCopy() *TransitGatewayPrefixListReferenceObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceParameters) DeepCopyInto(out *TransitGatewayPrefixListReferenceParameters) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrefixListIDRef != nil {
		in, out := &in.PrefixListIDRef, &out.PrefixListIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixListIDSelector != nil {
		in, out := &in.PrefixListIDSelector, &out.PrefixListIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceParameters.
func (in *TransitGatewayPrefixListReferenceParameters) DeepCopy() *TransitGatewayPrefixListReferenceParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceSpec) DeepCopyInto(out *TransitGatewayPrefixListReferenceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceSpec.
func (in *TransitGatewayPrefixListReferenceSpec) DeepCopy() *TransitGatewayPrefixListReferenceSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayPrefixListReferenceStatus) DeepCopyInto(out *TransitGatewayPrefixListReferenceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayPrefixListReferenceStatus.
func (in *TransitGatewayPrefixListReferenceStatus) DeepCopy() *TransitGatewayPrefixListReferenceStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayPrefixListReferenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRoute) DeepCopyInto(out *TransitGatewayRoute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRoute.
func (in *TransitGatewayRoute) DeepCopy() *TransitGatewayRoute {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRoute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteInitParameters) DeepCopyInto(out *TransitGatewayRouteInitParameters) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteInitParameters.
func (in *TransitGatewayRouteInitParameters) DeepCopy() *TransitGatewayRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteList) DeepCopyInto(out *TransitGatewayRouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayRoute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteList.
func (in *TransitGatewayRouteList) DeepCopy() *TransitGatewayRouteList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteObservation) DeepCopyInto(out *TransitGatewayRouteObservation) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteObservation.
func (in *TransitGatewayRouteObservation) DeepCopy() *TransitGatewayRouteObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteParameters) DeepCopyInto(out *TransitGatewayRouteParameters) {
	*out = *in
	if in.Blackhole != nil {
		in, out := &in.Blackhole, &out.Blackhole
		*out = new(bool)
		**out = **in
	}
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteParameters.
func (in *TransitGatewayRouteParameters) DeepCopy() *TransitGatewayRouteParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteSpec) DeepCopyInto(out *TransitGatewayRouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteSpec.
func (in *TransitGatewayRouteSpec) DeepCopy() *TransitGatewayRouteSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteStatus) DeepCopyInto(out *TransitGatewayRouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteStatus.
func (in *TransitGatewayRouteStatus) DeepCopy() *TransitGatewayRouteStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTable) DeepCopyInto(out *TransitGatewayRouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTable.
func (in *TransitGatewayRouteTable) DeepCopy() *TransitGatewayRouteTable {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociation) DeepCopyInto(out *TransitGatewayRouteTableAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociation.
func (in *TransitGatewayRouteTableAssociation) DeepCopy() *TransitGatewayRouteTableAssociation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTableAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationInitParameters) DeepCopyInto(out *TransitGatewayRouteTableAssociationInitParameters) {
	*out = *in
	if in.ReplaceExistingAssociation != nil {
		in, out := &in.ReplaceExistingAssociation, &out.ReplaceExistingAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationInitParameters.
func (in *TransitGatewayRouteTableAssociationInitParameters) DeepCopy() *TransitGatewayRouteTableAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationList) DeepCopyInto(out *TransitGatewayRouteTableAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayRouteTableAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationList.
func (in *TransitGatewayRouteTableAssociationList) DeepCopy() *TransitGatewayRouteTableAssociationList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTableAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationObservation) DeepCopyInto(out *TransitGatewayRouteTableAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ReplaceExistingAssociation != nil {
		in, out := &in.ReplaceExistingAssociation, &out.ReplaceExistingAssociation
		*out = new(bool)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationObservation.
func (in *TransitGatewayRouteTableAssociationObservation) DeepCopy() *TransitGatewayRouteTableAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationParameters) DeepCopyInto(out *TransitGatewayRouteTableAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplaceExistingAssociation != nil {
		in, out := &in.ReplaceExistingAssociation, &out.ReplaceExistingAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationParameters.
func (in *TransitGatewayRouteTableAssociationParameters) DeepCopy() *TransitGatewayRouteTableAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationSpec) DeepCopyInto(out *TransitGatewayRouteTableAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationSpec.
func (in *TransitGatewayRouteTableAssociationSpec) DeepCopy() *TransitGatewayRouteTableAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableAssociationStatus) DeepCopyInto(out *TransitGatewayRouteTableAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableAssociationStatus.
func (in *TransitGatewayRouteTableAssociationStatus) DeepCopy() *TransitGatewayRouteTableAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableInitParameters) DeepCopyInto(out *TransitGatewayRouteTableInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableInitParameters.
func (in *TransitGatewayRouteTableInitParameters) DeepCopy() *TransitGatewayRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableInitParameters_2) DeepCopyInto(out *TransitGatewayRouteTableInitParameters_2) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableInitParameters_2.
func (in *TransitGatewayRouteTableInitParameters_2) DeepCopy() *TransitGatewayRouteTableInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableList) DeepCopyInto(out *TransitGatewayRouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayRouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableList.
func (in *TransitGatewayRouteTableList) DeepCopy() *TransitGatewayRouteTableList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableObservation) DeepCopyInto(out *TransitGatewayRouteTableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableObservation.
func (in *TransitGatewayRouteTableObservation) DeepCopy() *TransitGatewayRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableObservation_2) DeepCopyInto(out *TransitGatewayRouteTableObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultAssociationRouteTable != nil {
		in, out := &in.DefaultAssociationRouteTable, &out.DefaultAssociationRouteTable
		*out = new(bool)
		**out = **in
	}
	if in.DefaultPropagationRouteTable != nil {
		in, out := &in.DefaultPropagationRouteTable, &out.DefaultPropagationRouteTable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableObservation_2.
func (in *TransitGatewayRouteTableObservation_2) DeepCopy() *TransitGatewayRouteTableObservation_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableParameters) DeepCopyInto(out *TransitGatewayRouteTableParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableParameters.
func (in *TransitGatewayRouteTableParameters) DeepCopy() *TransitGatewayRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableParameters_2) DeepCopyInto(out *TransitGatewayRouteTableParameters_2) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableParameters_2.
func (in *TransitGatewayRouteTableParameters_2) DeepCopy() *TransitGatewayRouteTableParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagation) DeepCopyInto(out *TransitGatewayRouteTablePropagation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagation.
func (in *TransitGatewayRouteTablePropagation) DeepCopy() *TransitGatewayRouteTablePropagation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTablePropagation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationInitParameters) DeepCopyInto(out *TransitGatewayRouteTablePropagationInitParameters) {
	*out = *in
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationInitParameters.
func (in *TransitGatewayRouteTablePropagationInitParameters) DeepCopy() *TransitGatewayRouteTablePropagationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationList) DeepCopyInto(out *TransitGatewayRouteTablePropagationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayRouteTablePropagation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationList.
func (in *TransitGatewayRouteTablePropagationList) DeepCopy() *TransitGatewayRouteTablePropagationList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayRouteTablePropagationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationObservation) DeepCopyInto(out *TransitGatewayRouteTablePropagationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationObservation.
func (in *TransitGatewayRouteTablePropagationObservation) DeepCopy() *TransitGatewayRouteTablePropagationObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationParameters) DeepCopyInto(out *TransitGatewayRouteTablePropagationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableID != nil {
		in, out := &in.TransitGatewayRouteTableID, &out.TransitGatewayRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayRouteTableIDRef != nil {
		in, out := &in.TransitGatewayRouteTableIDRef, &out.TransitGatewayRouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayRouteTableIDSelector != nil {
		in, out := &in.TransitGatewayRouteTableIDSelector, &out.TransitGatewayRouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationParameters.
func (in *TransitGatewayRouteTablePropagationParameters) DeepCopy() *TransitGatewayRouteTablePropagationParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationSpec) DeepCopyInto(out *TransitGatewayRouteTablePropagationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationSpec.
func (in *TransitGatewayRouteTablePropagationSpec) DeepCopy() *TransitGatewayRouteTablePropagationSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTablePropagationStatus) DeepCopyInto(out *TransitGatewayRouteTablePropagationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTablePropagationStatus.
func (in *TransitGatewayRouteTablePropagationStatus) DeepCopy() *TransitGatewayRouteTablePropagationStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTablePropagationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableRouteInitParameters) DeepCopyInto(out *TransitGatewayRouteTableRouteInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableRouteInitParameters.
func (in *TransitGatewayRouteTableRouteInitParameters) DeepCopy() *TransitGatewayRouteTableRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableRouteObservation) DeepCopyInto(out *TransitGatewayRouteTableRouteObservation) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.RouteOrigin != nil {
		in, out := &in.RouteOrigin, &out.RouteOrigin
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableRouteObservation.
func (in *TransitGatewayRouteTableRouteObservation) DeepCopy() *TransitGatewayRouteTableRouteObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableRouteParameters) DeepCopyInto(out *TransitGatewayRouteTableRouteParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableRouteParameters.
func (in *TransitGatewayRouteTableRouteParameters) DeepCopy() *TransitGatewayRouteTableRouteParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableSpec) DeepCopyInto(out *TransitGatewayRouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableSpec.
func (in *TransitGatewayRouteTableSpec) DeepCopy() *TransitGatewayRouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayRouteTableStatus) DeepCopyInto(out *TransitGatewayRouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayRouteTableStatus.
func (in *TransitGatewayRouteTableStatus) DeepCopy() *TransitGatewayRouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayRouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewaySpec) DeepCopyInto(out *TransitGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewaySpec.
func (in *TransitGatewaySpec) DeepCopy() *TransitGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayStatus) DeepCopyInto(out *TransitGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayStatus.
func (in *TransitGatewayStatus) DeepCopy() *TransitGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachment) DeepCopyInto(out *TransitGatewayVPCAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachment.
func (in *TransitGatewayVPCAttachment) DeepCopy() *TransitGatewayVPCAttachment {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayVPCAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepter) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepter.
func (in *TransitGatewayVPCAttachmentAccepter) DeepCopy() *TransitGatewayVPCAttachmentAccepter {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayVPCAttachmentAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterInitParameters) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterInitParameters) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterInitParameters.
func (in *TransitGatewayVPCAttachmentAccepterInitParameters) DeepCopy() *TransitGatewayVPCAttachmentAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterList) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayVPCAttachmentAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterList.
func (in *TransitGatewayVPCAttachmentAccepterList) DeepCopy() *TransitGatewayVPCAttachmentAccepterList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayVPCAttachmentAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterObservation) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterObservation) {
	*out = *in
	if in.ApplianceModeSupport != nil {
		in, out := &in.ApplianceModeSupport, &out.ApplianceModeSupport
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Support != nil {
		in, out := &in.IPv6Support, &out.IPv6Support
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCOwnerID != nil {
		in, out := &in.VPCOwnerID, &out.VPCOwnerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterObservation.
func (in *TransitGatewayVPCAttachmentAccepterObservation) DeepCopy() *TransitGatewayVPCAttachmentAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterParameters) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayAttachmentIDRef != nil {
		in, out := &in.TransitGatewayAttachmentIDRef, &out.TransitGatewayAttachmentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayAttachmentIDSelector != nil {
		in, out := &in.TransitGatewayAttachmentIDSelector, &out.TransitGatewayAttachmentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterParameters.
func (in *TransitGatewayVPCAttachmentAccepterParameters) DeepCopy() *TransitGatewayVPCAttachmentAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterSpec) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterSpec.
func (in *TransitGatewayVPCAttachmentAccepterSpec) DeepCopy() *TransitGatewayVPCAttachmentAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentAccepterStatus) DeepCopyInto(out *TransitGatewayVPCAttachmentAccepterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentAccepterStatus.
func (in *TransitGatewayVPCAttachmentAccepterStatus) DeepCopy() *TransitGatewayVPCAttachmentAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentInitParameters) DeepCopyInto(out *TransitGatewayVPCAttachmentInitParameters) {
	*out = *in
	if in.ApplianceModeSupport != nil {
		in, out := &in.ApplianceModeSupport, &out.ApplianceModeSupport
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.IPv6Support != nil {
		in, out := &in.IPv6Support, &out.IPv6Support
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentInitParameters.
func (in *TransitGatewayVPCAttachmentInitParameters) DeepCopy() *TransitGatewayVPCAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentList) DeepCopyInto(out *TransitGatewayVPCAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TransitGatewayVPCAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentList.
func (in *TransitGatewayVPCAttachmentList) DeepCopy() *TransitGatewayVPCAttachmentList {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransitGatewayVPCAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentObservation) DeepCopyInto(out *TransitGatewayVPCAttachmentObservation) {
	*out = *in
	if in.ApplianceModeSupport != nil {
		in, out := &in.ApplianceModeSupport, &out.ApplianceModeSupport
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Support != nil {
		in, out := &in.IPv6Support, &out.IPv6Support
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCOwnerID != nil {
		in, out := &in.VPCOwnerID, &out.VPCOwnerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentObservation.
func (in *TransitGatewayVPCAttachmentObservation) DeepCopy() *TransitGatewayVPCAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentParameters) DeepCopyInto(out *TransitGatewayVPCAttachmentParameters) {
	*out = *in
	if in.ApplianceModeSupport != nil {
		in, out := &in.ApplianceModeSupport, &out.ApplianceModeSupport
		*out = new(string)
		**out = **in
	}
	if in.DNSSupport != nil {
		in, out := &in.DNSSupport, &out.DNSSupport
		*out = new(string)
		**out = **in
	}
	if in.IPv6Support != nil {
		in, out := &in.IPv6Support, &out.IPv6Support
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayDefaultRouteTableAssociation != nil {
		in, out := &in.TransitGatewayDefaultRouteTableAssociation, &out.TransitGatewayDefaultRouteTableAssociation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayDefaultRouteTablePropagation != nil {
		in, out := &in.TransitGatewayDefaultRouteTablePropagation, &out.TransitGatewayDefaultRouteTablePropagation
		*out = new(bool)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentParameters.
func (in *TransitGatewayVPCAttachmentParameters) DeepCopy() *TransitGatewayVPCAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentSpec) DeepCopyInto(out *TransitGatewayVPCAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentSpec.
func (in *TransitGatewayVPCAttachmentSpec) DeepCopy() *TransitGatewayVPCAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransitGatewayVPCAttachmentStatus) DeepCopyInto(out *TransitGatewayVPCAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransitGatewayVPCAttachmentStatus.
func (in *TransitGatewayVPCAttachmentStatus) DeepCopy() *TransitGatewayVPCAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(TransitGatewayVPCAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsInitParameters) DeepCopyInto(out *Tunnel1LogOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]CloudwatchLogOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsInitParameters.
func (in *Tunnel1LogOptionsInitParameters) DeepCopy() *Tunnel1LogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsObservation) DeepCopyInto(out *Tunnel1LogOptionsObservation) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]CloudwatchLogOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsObservation.
func (in *Tunnel1LogOptionsObservation) DeepCopy() *Tunnel1LogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel1LogOptionsParameters) DeepCopyInto(out *Tunnel1LogOptionsParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]CloudwatchLogOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel1LogOptionsParameters.
func (in *Tunnel1LogOptionsParameters) DeepCopy() *Tunnel1LogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel1LogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsInitParameters.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsObservation) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsObservation) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsObservation.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsObservation) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsParameters) DeepCopyInto(out *Tunnel2LogOptionsCloudwatchLogOptionsParameters) {
	*out = *in
	if in.LogEnabled != nil {
		in, out := &in.LogEnabled, &out.LogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupArn != nil {
		in, out := &in.LogGroupArn, &out.LogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.LogOutputFormat != nil {
		in, out := &in.LogOutputFormat, &out.LogOutputFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsCloudwatchLogOptionsParameters.
func (in *Tunnel2LogOptionsCloudwatchLogOptionsParameters) DeepCopy() *Tunnel2LogOptionsCloudwatchLogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsCloudwatchLogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsInitParameters) DeepCopyInto(out *Tunnel2LogOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]Tunnel2LogOptionsCloudwatchLogOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsInitParameters.
func (in *Tunnel2LogOptionsInitParameters) DeepCopy() *Tunnel2LogOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsObservation) DeepCopyInto(out *Tunnel2LogOptionsObservation) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]Tunnel2LogOptionsCloudwatchLogOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsObservation.
func (in *Tunnel2LogOptionsObservation) DeepCopy() *Tunnel2LogOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tunnel2LogOptionsParameters) DeepCopyInto(out *Tunnel2LogOptionsParameters) {
	*out = *in
	if in.CloudwatchLogOptions != nil {
		in, out := &in.CloudwatchLogOptions, &out.CloudwatchLogOptions
		*out = make([]Tunnel2LogOptionsCloudwatchLogOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tunnel2LogOptionsParameters.
func (in *Tunnel2LogOptionsParameters) DeepCopy() *Tunnel2LogOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(Tunnel2LogOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketInitParameters) DeepCopyInto(out *UserBucketInitParameters) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketInitParameters.
func (in *UserBucketInitParameters) DeepCopy() *UserBucketInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserBucketInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketObservation) DeepCopyInto(out *UserBucketObservation) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketObservation.
func (in *UserBucketObservation) DeepCopy() *UserBucketObservation {
	if in == nil {
		return nil
	}
	out := new(UserBucketObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserBucketParameters) DeepCopyInto(out *UserBucketParameters) {
	*out = *in
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserBucketParameters.
func (in *UserBucketParameters) DeepCopy() *UserBucketParameters {
	if in == nil {
		return nil
	}
	out := new(UserBucketParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPC) DeepCopyInto(out *VPC) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPC.
func (in *VPC) DeepCopy() *VPC {
	if in == nil {
		return nil
	}
	out := new(VPC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPC) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptions) DeepCopyInto(out *VPCDHCPOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptions.
func (in *VPCDHCPOptions) DeepCopy() *VPCDHCPOptions {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCDHCPOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociation) DeepCopyInto(out *VPCDHCPOptionsAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociation.
func (in *VPCDHCPOptionsAssociation) DeepCopy() *VPCDHCPOptionsAssociation {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCDHCPOptionsAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationInitParameters) DeepCopyInto(out *VPCDHCPOptionsAssociationInitParameters) {
	*out = *in
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsIDRef != nil {
		in, out := &in.DHCPOptionsIDRef, &out.DHCPOptionsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DHCPOptionsIDSelector != nil {
		in, out := &in.DHCPOptionsIDSelector, &out.DHCPOptionsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationInitParameters.
func (in *VPCDHCPOptionsAssociationInitParameters) DeepCopy() *VPCDHCPOptionsAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationList) DeepCopyInto(out *VPCDHCPOptionsAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCDHCPOptionsAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationList.
func (in *VPCDHCPOptionsAssociationList) DeepCopy() *VPCDHCPOptionsAssociationList {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCDHCPOptionsAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationObservation) DeepCopyInto(out *VPCDHCPOptionsAssociationObservation) {
	*out = *in
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationObservation.
func (in *VPCDHCPOptionsAssociationObservation) DeepCopy() *VPCDHCPOptionsAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationParameters) DeepCopyInto(out *VPCDHCPOptionsAssociationParameters) {
	*out = *in
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsIDRef != nil {
		in, out := &in.DHCPOptionsIDRef, &out.DHCPOptionsIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DHCPOptionsIDSelector != nil {
		in, out := &in.DHCPOptionsIDSelector, &out.DHCPOptionsIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationParameters.
func (in *VPCDHCPOptionsAssociationParameters) DeepCopy() *VPCDHCPOptionsAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationSpec) DeepCopyInto(out *VPCDHCPOptionsAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationSpec.
func (in *VPCDHCPOptionsAssociationSpec) DeepCopy() *VPCDHCPOptionsAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsAssociationStatus) DeepCopyInto(out *VPCDHCPOptionsAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsAssociationStatus.
func (in *VPCDHCPOptionsAssociationStatus) DeepCopy() *VPCDHCPOptionsAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsInitParameters) DeepCopyInto(out *VPCDHCPOptionsInitParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameServers != nil {
		in, out := &in.DomainNameServers, &out.DomainNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetbiosNameServers != nil {
		in, out := &in.NetbiosNameServers, &out.NetbiosNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetbiosNodeType != nil {
		in, out := &in.NetbiosNodeType, &out.NetbiosNodeType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsInitParameters.
func (in *VPCDHCPOptionsInitParameters) DeepCopy() *VPCDHCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsList) DeepCopyInto(out *VPCDHCPOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCDHCPOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsList.
func (in *VPCDHCPOptionsList) DeepCopy() *VPCDHCPOptionsList {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCDHCPOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsObservation) DeepCopyInto(out *VPCDHCPOptionsObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameServers != nil {
		in, out := &in.DomainNameServers, &out.DomainNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NetbiosNameServers != nil {
		in, out := &in.NetbiosNameServers, &out.NetbiosNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetbiosNodeType != nil {
		in, out := &in.NetbiosNodeType, &out.NetbiosNodeType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsObservation.
func (in *VPCDHCPOptionsObservation) DeepCopy() *VPCDHCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsParameters) DeepCopyInto(out *VPCDHCPOptionsParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameServers != nil {
		in, out := &in.DomainNameServers, &out.DomainNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetbiosNameServers != nil {
		in, out := &in.NetbiosNameServers, &out.NetbiosNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetbiosNodeType != nil {
		in, out := &in.NetbiosNodeType, &out.NetbiosNodeType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsParameters.
func (in *VPCDHCPOptionsParameters) DeepCopy() *VPCDHCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsSpec) DeepCopyInto(out *VPCDHCPOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsSpec.
func (in *VPCDHCPOptionsSpec) DeepCopy() *VPCDHCPOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCDHCPOptionsStatus) DeepCopyInto(out *VPCDHCPOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCDHCPOptionsStatus.
func (in *VPCDHCPOptionsStatus) DeepCopy() *VPCDHCPOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(VPCDHCPOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpoint) DeepCopyInto(out *VPCEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpoint.
func (in *VPCEndpoint) DeepCopy() *VPCEndpoint {
	if in == nil {
		return nil
	}
	out := new(VPCEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotification) DeepCopyInto(out *VPCEndpointConnectionNotification) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotification.
func (in *VPCEndpointConnectionNotification) DeepCopy() *VPCEndpointConnectionNotification {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointConnectionNotification) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationInitParameters) DeepCopyInto(out *VPCEndpointConnectionNotificationInitParameters) {
	*out = *in
	if in.ConnectionEvents != nil {
		in, out := &in.ConnectionEvents, &out.ConnectionEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionNotificationArn != nil {
		in, out := &in.ConnectionNotificationArn, &out.ConnectionNotificationArn
		*out = new(string)
		**out = **in
	}
	if in.ConnectionNotificationArnRef != nil {
		in, out := &in.ConnectionNotificationArnRef, &out.ConnectionNotificationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionNotificationArnSelector != nil {
		in, out := &in.ConnectionNotificationArnSelector, &out.ConnectionNotificationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceIDRef != nil {
		in, out := &in.VPCEndpointServiceIDRef, &out.VPCEndpointServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointServiceIDSelector != nil {
		in, out := &in.VPCEndpointServiceIDSelector, &out.VPCEndpointServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationInitParameters.
func (in *VPCEndpointConnectionNotificationInitParameters) DeepCopy() *VPCEndpointConnectionNotificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationList) DeepCopyInto(out *VPCEndpointConnectionNotificationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointConnectionNotification, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationList.
func (in *VPCEndpointConnectionNotificationList) DeepCopy() *VPCEndpointConnectionNotificationList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointConnectionNotificationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationObservation) DeepCopyInto(out *VPCEndpointConnectionNotificationObservation) {
	*out = *in
	if in.ConnectionEvents != nil {
		in, out := &in.ConnectionEvents, &out.ConnectionEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionNotificationArn != nil {
		in, out := &in.ConnectionNotificationArn, &out.ConnectionNotificationArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationObservation.
func (in *VPCEndpointConnectionNotificationObservation) DeepCopy() *VPCEndpointConnectionNotificationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationParameters) DeepCopyInto(out *VPCEndpointConnectionNotificationParameters) {
	*out = *in
	if in.ConnectionEvents != nil {
		in, out := &in.ConnectionEvents, &out.ConnectionEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConnectionNotificationArn != nil {
		in, out := &in.ConnectionNotificationArn, &out.ConnectionNotificationArn
		*out = new(string)
		**out = **in
	}
	if in.ConnectionNotificationArnRef != nil {
		in, out := &in.ConnectionNotificationArnRef, &out.ConnectionNotificationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionNotificationArnSelector != nil {
		in, out := &in.ConnectionNotificationArnSelector, &out.ConnectionNotificationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceIDRef != nil {
		in, out := &in.VPCEndpointServiceIDRef, &out.VPCEndpointServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointServiceIDSelector != nil {
		in, out := &in.VPCEndpointServiceIDSelector, &out.VPCEndpointServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationParameters.
func (in *VPCEndpointConnectionNotificationParameters) DeepCopy() *VPCEndpointConnectionNotificationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationSpec) DeepCopyInto(out *VPCEndpointConnectionNotificationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationSpec.
func (in *VPCEndpointConnectionNotificationSpec) DeepCopy() *VPCEndpointConnectionNotificationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointConnectionNotificationStatus) DeepCopyInto(out *VPCEndpointConnectionNotificationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointConnectionNotificationStatus.
func (in *VPCEndpointConnectionNotificationStatus) DeepCopy() *VPCEndpointConnectionNotificationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointConnectionNotificationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointInitParameters) DeepCopyInto(out *VPCEndpointInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointInitParameters.
func (in *VPCEndpointInitParameters) DeepCopy() *VPCEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointInitParameters_2) DeepCopyInto(out *VPCEndpointInitParameters_2) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = make([]DNSOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointInitParameters_2.
func (in *VPCEndpointInitParameters_2) DeepCopy() *VPCEndpointInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointList) DeepCopyInto(out *VPCEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointList.
func (in *VPCEndpointList) DeepCopy() *VPCEndpointList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointObservation) DeepCopyInto(out *VPCEndpointObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointObservation.
func (in *VPCEndpointObservation) DeepCopy() *VPCEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointObservation_2) DeepCopyInto(out *VPCEndpointObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSEntry != nil {
		in, out := &in.DNSEntry, &out.DNSEntry
		*out = make([]DNSEntryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = make([]DNSOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterfaceIds != nil {
		in, out := &in.NetworkInterfaceIds, &out.NetworkInterfaceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrefixListID != nil {
		in, out := &in.PrefixListID, &out.PrefixListID
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequesterManaged != nil {
		in, out := &in.RequesterManaged, &out.RequesterManaged
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableIds != nil {
		in, out := &in.RouteTableIds, &out.RouteTableIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointObservation_2.
func (in *VPCEndpointObservation_2) DeepCopy() *VPCEndpointObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointParameters) DeepCopyInto(out *VPCEndpointParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointParameters.
func (in *VPCEndpointParameters) DeepCopy() *VPCEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointParameters_2) DeepCopyInto(out *VPCEndpointParameters_2) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.DNSOptions != nil {
		in, out := &in.DNSOptions, &out.DNSOptions
		*out = make([]DNSOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPAddressType != nil {
		in, out := &in.IPAddressType, &out.IPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSEnabled != nil {
		in, out := &in.PrivateDNSEnabled, &out.PrivateDNSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceNameRef != nil {
		in, out := &in.ServiceNameRef, &out.ServiceNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceNameSelector != nil {
		in, out := &in.ServiceNameSelector, &out.ServiceNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCEndpointType != nil {
		in, out := &in.VPCEndpointType, &out.VPCEndpointType
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointParameters_2.
func (in *VPCEndpointParameters_2) DeepCopy() *VPCEndpointParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociation) DeepCopyInto(out *VPCEndpointRouteTableAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociation.
func (in *VPCEndpointRouteTableAssociation) DeepCopy() *VPCEndpointRouteTableAssociation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointRouteTableAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationInitParameters) DeepCopyInto(out *VPCEndpointRouteTableAssociationInitParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationInitParameters.
func (in *VPCEndpointRouteTableAssociationInitParameters) DeepCopy() *VPCEndpointRouteTableAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationList) DeepCopyInto(out *VPCEndpointRouteTableAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointRouteTableAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationList.
func (in *VPCEndpointRouteTableAssociationList) DeepCopy() *VPCEndpointRouteTableAssociationList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointRouteTableAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationObservation) DeepCopyInto(out *VPCEndpointRouteTableAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationObservation.
func (in *VPCEndpointRouteTableAssociationObservation) DeepCopy() *VPCEndpointRouteTableAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationParameters) DeepCopyInto(out *VPCEndpointRouteTableAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationParameters.
func (in *VPCEndpointRouteTableAssociationParameters) DeepCopy() *VPCEndpointRouteTableAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationSpec) DeepCopyInto(out *VPCEndpointRouteTableAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationSpec.
func (in *VPCEndpointRouteTableAssociationSpec) DeepCopy() *VPCEndpointRouteTableAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointRouteTableAssociationStatus) DeepCopyInto(out *VPCEndpointRouteTableAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointRouteTableAssociationStatus.
func (in *VPCEndpointRouteTableAssociationStatus) DeepCopy() *VPCEndpointRouteTableAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointRouteTableAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociation) DeepCopyInto(out *VPCEndpointSecurityGroupAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociation.
func (in *VPCEndpointSecurityGroupAssociation) DeepCopy() *VPCEndpointSecurityGroupAssociation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointSecurityGroupAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationInitParameters) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationInitParameters) {
	*out = *in
	if in.ReplaceDefaultAssociation != nil {
		in, out := &in.ReplaceDefaultAssociation, &out.ReplaceDefaultAssociation
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationInitParameters.
func (in *VPCEndpointSecurityGroupAssociationInitParameters) DeepCopy() *VPCEndpointSecurityGroupAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationList) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointSecurityGroupAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationList.
func (in *VPCEndpointSecurityGroupAssociationList) DeepCopy() *VPCEndpointSecurityGroupAssociationList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointSecurityGroupAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationObservation) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ReplaceDefaultAssociation != nil {
		in, out := &in.ReplaceDefaultAssociation, &out.ReplaceDefaultAssociation
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationObservation.
func (in *VPCEndpointSecurityGroupAssociationObservation) DeepCopy() *VPCEndpointSecurityGroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationParameters) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplaceDefaultAssociation != nil {
		in, out := &in.ReplaceDefaultAssociation, &out.ReplaceDefaultAssociation
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationParameters.
func (in *VPCEndpointSecurityGroupAssociationParameters) DeepCopy() *VPCEndpointSecurityGroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationSpec) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationSpec.
func (in *VPCEndpointSecurityGroupAssociationSpec) DeepCopy() *VPCEndpointSecurityGroupAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSecurityGroupAssociationStatus) DeepCopyInto(out *VPCEndpointSecurityGroupAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSecurityGroupAssociationStatus.
func (in *VPCEndpointSecurityGroupAssociationStatus) DeepCopy() *VPCEndpointSecurityGroupAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSecurityGroupAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointService) DeepCopyInto(out *VPCEndpointService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointService.
func (in *VPCEndpointService) DeepCopy() *VPCEndpointService {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipal) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipal.
func (in *VPCEndpointServiceAllowedPrincipal) DeepCopy() *VPCEndpointServiceAllowedPrincipal {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointServiceAllowedPrincipal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalInitParameters) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalInitParameters) {
	*out = *in
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceIDRef != nil {
		in, out := &in.VPCEndpointServiceIDRef, &out.VPCEndpointServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointServiceIDSelector != nil {
		in, out := &in.VPCEndpointServiceIDSelector, &out.VPCEndpointServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalInitParameters.
func (in *VPCEndpointServiceAllowedPrincipalInitParameters) DeepCopy() *VPCEndpointServiceAllowedPrincipalInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalList) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointServiceAllowedPrincipal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalList.
func (in *VPCEndpointServiceAllowedPrincipalList) DeepCopy() *VPCEndpointServiceAllowedPrincipalList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointServiceAllowedPrincipalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalObservation) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalObservation.
func (in *VPCEndpointServiceAllowedPrincipalObservation) DeepCopy() *VPCEndpointServiceAllowedPrincipalObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalParameters) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalParameters) {
	*out = *in
	if in.PrincipalArn != nil {
		in, out := &in.PrincipalArn, &out.PrincipalArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceID != nil {
		in, out := &in.VPCEndpointServiceID, &out.VPCEndpointServiceID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointServiceIDRef != nil {
		in, out := &in.VPCEndpointServiceIDRef, &out.VPCEndpointServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointServiceIDSelector != nil {
		in, out := &in.VPCEndpointServiceIDSelector, &out.VPCEndpointServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalParameters.
func (in *VPCEndpointServiceAllowedPrincipalParameters) DeepCopy() *VPCEndpointServiceAllowedPrincipalParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalSpec) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalSpec.
func (in *VPCEndpointServiceAllowedPrincipalSpec) DeepCopy() *VPCEndpointServiceAllowedPrincipalSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceAllowedPrincipalStatus) DeepCopyInto(out *VPCEndpointServiceAllowedPrincipalStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceAllowedPrincipalStatus.
func (in *VPCEndpointServiceAllowedPrincipalStatus) DeepCopy() *VPCEndpointServiceAllowedPrincipalStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceAllowedPrincipalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceInitParameters) DeepCopyInto(out *VPCEndpointServiceInitParameters) {
	*out = *in
	if in.AcceptanceRequired != nil {
		in, out := &in.AcceptanceRequired, &out.AcceptanceRequired
		*out = new(bool)
		**out = **in
	}
	if in.GatewayLoadBalancerArns != nil {
		in, out := &in.GatewayLoadBalancerArns, &out.GatewayLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkLoadBalancerArns != nil {
		in, out := &in.NetworkLoadBalancerArns, &out.NetworkLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateDNSName != nil {
		in, out := &in.PrivateDNSName, &out.PrivateDNSName
		*out = new(string)
		**out = **in
	}
	if in.SupportedIPAddressTypes != nil {
		in, out := &in.SupportedIPAddressTypes, &out.SupportedIPAddressTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceInitParameters.
func (in *VPCEndpointServiceInitParameters) DeepCopy() *VPCEndpointServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceList) DeepCopyInto(out *VPCEndpointServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceList.
func (in *VPCEndpointServiceList) DeepCopy() *VPCEndpointServiceList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceObservation) DeepCopyInto(out *VPCEndpointServiceObservation) {
	*out = *in
	if in.AcceptanceRequired != nil {
		in, out := &in.AcceptanceRequired, &out.AcceptanceRequired
		*out = new(bool)
		**out = **in
	}
	if in.AllowedPrincipals != nil {
		in, out := &in.AllowedPrincipals, &out.AllowedPrincipals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BaseEndpointDNSNames != nil {
		in, out := &in.BaseEndpointDNSNames, &out.BaseEndpointDNSNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GatewayLoadBalancerArns != nil {
		in, out := &in.GatewayLoadBalancerArns, &out.GatewayLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagesVPCEndpoints != nil {
		in, out := &in.ManagesVPCEndpoints, &out.ManagesVPCEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.NetworkLoadBalancerArns != nil {
		in, out := &in.NetworkLoadBalancerArns, &out.NetworkLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateDNSName != nil {
		in, out := &in.PrivateDNSName, &out.PrivateDNSName
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSNameConfiguration != nil {
		in, out := &in.PrivateDNSNameConfiguration, &out.PrivateDNSNameConfiguration
		*out = make([]PrivateDNSNameConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SupportedIPAddressTypes != nil {
		in, out := &in.SupportedIPAddressTypes, &out.SupportedIPAddressTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceObservation.
func (in *VPCEndpointServiceObservation) DeepCopy() *VPCEndpointServiceObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceParameters) DeepCopyInto(out *VPCEndpointServiceParameters) {
	*out = *in
	if in.AcceptanceRequired != nil {
		in, out := &in.AcceptanceRequired, &out.AcceptanceRequired
		*out = new(bool)
		**out = **in
	}
	if in.GatewayLoadBalancerArns != nil {
		in, out := &in.GatewayLoadBalancerArns, &out.GatewayLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkLoadBalancerArns != nil {
		in, out := &in.NetworkLoadBalancerArns, &out.NetworkLoadBalancerArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateDNSName != nil {
		in, out := &in.PrivateDNSName, &out.PrivateDNSName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SupportedIPAddressTypes != nil {
		in, out := &in.SupportedIPAddressTypes, &out.SupportedIPAddressTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceParameters.
func (in *VPCEndpointServiceParameters) DeepCopy() *VPCEndpointServiceParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceSpec) DeepCopyInto(out *VPCEndpointServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceSpec.
func (in *VPCEndpointServiceSpec) DeepCopy() *VPCEndpointServiceSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointServiceStatus) DeepCopyInto(out *VPCEndpointServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointServiceStatus.
func (in *VPCEndpointServiceStatus) DeepCopy() *VPCEndpointServiceStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSpec) DeepCopyInto(out *VPCEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSpec.
func (in *VPCEndpointSpec) DeepCopy() *VPCEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointStatus) DeepCopyInto(out *VPCEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointStatus.
func (in *VPCEndpointStatus) DeepCopy() *VPCEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociation) DeepCopyInto(out *VPCEndpointSubnetAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociation.
func (in *VPCEndpointSubnetAssociation) DeepCopy() *VPCEndpointSubnetAssociation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointSubnetAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationInitParameters) DeepCopyInto(out *VPCEndpointSubnetAssociationInitParameters) {
	*out = *in
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationInitParameters.
func (in *VPCEndpointSubnetAssociationInitParameters) DeepCopy() *VPCEndpointSubnetAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationList) DeepCopyInto(out *VPCEndpointSubnetAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCEndpointSubnetAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationList.
func (in *VPCEndpointSubnetAssociationList) DeepCopy() *VPCEndpointSubnetAssociationList {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCEndpointSubnetAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationObservation) DeepCopyInto(out *VPCEndpointSubnetAssociationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationObservation.
func (in *VPCEndpointSubnetAssociationObservation) DeepCopy() *VPCEndpointSubnetAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationParameters) DeepCopyInto(out *VPCEndpointSubnetAssociationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointID != nil {
		in, out := &in.VPCEndpointID, &out.VPCEndpointID
		*out = new(string)
		**out = **in
	}
	if in.VPCEndpointIDRef != nil {
		in, out := &in.VPCEndpointIDRef, &out.VPCEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCEndpointIDSelector != nil {
		in, out := &in.VPCEndpointIDSelector, &out.VPCEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationParameters.
func (in *VPCEndpointSubnetAssociationParameters) DeepCopy() *VPCEndpointSubnetAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationSpec) DeepCopyInto(out *VPCEndpointSubnetAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationSpec.
func (in *VPCEndpointSubnetAssociationSpec) DeepCopy() *VPCEndpointSubnetAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCEndpointSubnetAssociationStatus) DeepCopyInto(out *VPCEndpointSubnetAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCEndpointSubnetAssociationStatus.
func (in *VPCEndpointSubnetAssociationStatus) DeepCopy() *VPCEndpointSubnetAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCEndpointSubnetAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociation) DeepCopyInto(out *VPCIPv4CidrBlockAssociation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociation.
func (in *VPCIPv4CidrBlockAssociation) DeepCopy() *VPCIPv4CidrBlockAssociation {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIPv4CidrBlockAssociation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationInitParameters) DeepCopyInto(out *VPCIPv4CidrBlockAssociationInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationInitParameters.
func (in *VPCIPv4CidrBlockAssociationInitParameters) DeepCopy() *VPCIPv4CidrBlockAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationList) DeepCopyInto(out *VPCIPv4CidrBlockAssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIPv4CidrBlockAssociation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationList.
func (in *VPCIPv4CidrBlockAssociationList) DeepCopy() *VPCIPv4CidrBlockAssociationList {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIPv4CidrBlockAssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationObservation) DeepCopyInto(out *VPCIPv4CidrBlockAssociationObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationObservation.
func (in *VPCIPv4CidrBlockAssociationObservation) DeepCopy() *VPCIPv4CidrBlockAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationParameters) DeepCopyInto(out *VPCIPv4CidrBlockAssociationParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationParameters.
func (in *VPCIPv4CidrBlockAssociationParameters) DeepCopy() *VPCIPv4CidrBlockAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationSpec) DeepCopyInto(out *VPCIPv4CidrBlockAssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationSpec.
func (in *VPCIPv4CidrBlockAssociationSpec) DeepCopy() *VPCIPv4CidrBlockAssociationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIPv4CidrBlockAssociationStatus) DeepCopyInto(out *VPCIPv4CidrBlockAssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIPv4CidrBlockAssociationStatus.
func (in *VPCIPv4CidrBlockAssociationStatus) DeepCopy() *VPCIPv4CidrBlockAssociationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIPv4CidrBlockAssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCInitParameters) DeepCopyInto(out *VPCInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCInitParameters.
func (in *VPCInitParameters) DeepCopy() *VPCInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCInitParameters_2) DeepCopyInto(out *VPCInitParameters_2) {
	*out = *in
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolIDRef != nil {
		in, out := &in.IPv4IpamPoolIDRef, &out.IPv4IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv4IpamPoolIDSelector != nil {
		in, out := &in.IPv4IpamPoolIDSelector, &out.IPv4IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.InstanceTenancy != nil {
		in, out := &in.InstanceTenancy, &out.InstanceTenancy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCInitParameters_2.
func (in *VPCInitParameters_2) DeepCopy() *VPCInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpam) DeepCopyInto(out *VPCIpam) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpam.
func (in *VPCIpam) DeepCopy() *VPCIpam {
	if in == nil {
		return nil
	}
	out := new(VPCIpam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpam) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamInitParameters) DeepCopyInto(out *VPCIpamInitParameters) {
	*out = *in
	if in.Cascade != nil {
		in, out := &in.Cascade, &out.Cascade
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OperatingRegions != nil {
		in, out := &in.OperatingRegions, &out.OperatingRegions
		*out = make([]OperatingRegionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamInitParameters.
func (in *VPCIpamInitParameters) DeepCopy() *VPCIpamInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamList) DeepCopyInto(out *VPCIpamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpam, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamList.
func (in *VPCIpamList) DeepCopy() *VPCIpamList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamObservation) DeepCopyInto(out *VPCIpamObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Cascade != nil {
		in, out := &in.Cascade, &out.Cascade
		*out = new(bool)
		**out = **in
	}
	if in.DefaultResourceDiscoveryAssociationID != nil {
		in, out := &in.DefaultResourceDiscoveryAssociationID, &out.DefaultResourceDiscoveryAssociationID
		*out = new(string)
		**out = **in
	}
	if in.DefaultResourceDiscoveryID != nil {
		in, out := &in.DefaultResourceDiscoveryID, &out.DefaultResourceDiscoveryID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OperatingRegions != nil {
		in, out := &in.OperatingRegions, &out.OperatingRegions
		*out = make([]OperatingRegionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDefaultScopeID != nil {
		in, out := &in.PrivateDefaultScopeID, &out.PrivateDefaultScopeID
		*out = new(string)
		**out = **in
	}
	if in.PublicDefaultScopeID != nil {
		in, out := &in.PublicDefaultScopeID, &out.PublicDefaultScopeID
		*out = new(string)
		**out = **in
	}
	if in.ScopeCount != nil {
		in, out := &in.ScopeCount, &out.ScopeCount
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamObservation.
func (in *VPCIpamObservation) DeepCopy() *VPCIpamObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamParameters) DeepCopyInto(out *VPCIpamParameters) {
	*out = *in
	if in.Cascade != nil {
		in, out := &in.Cascade, &out.Cascade
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.OperatingRegions != nil {
		in, out := &in.OperatingRegions, &out.OperatingRegions
		*out = make([]OperatingRegionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamParameters.
func (in *VPCIpamParameters) DeepCopy() *VPCIpamParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPool) DeepCopyInto(out *VPCIpamPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPool.
func (in *VPCIpamPool) DeepCopy() *VPCIpamPool {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidr) DeepCopyInto(out *VPCIpamPoolCidr) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidr.
func (in *VPCIpamPoolCidr) DeepCopy() *VPCIpamPoolCidr {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidr)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidr) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocation) DeepCopyInto(out *VPCIpamPoolCidrAllocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocation.
func (in *VPCIpamPoolCidrAllocation) DeepCopy() *VPCIpamPoolCidrAllocation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidrAllocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationInitParameters) DeepCopyInto(out *VPCIpamPoolCidrAllocationInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisallowedCidrs != nil {
		in, out := &in.DisallowedCidrs, &out.DisallowedCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationInitParameters.
func (in *VPCIpamPoolCidrAllocationInitParameters) DeepCopy() *VPCIpamPoolCidrAllocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationList) DeepCopyInto(out *VPCIpamPoolCidrAllocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpamPoolCidrAllocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationList.
func (in *VPCIpamPoolCidrAllocationList) DeepCopy() *VPCIpamPoolCidrAllocationList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidrAllocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationObservation) DeepCopyInto(out *VPCIpamPoolCidrAllocationObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisallowedCidrs != nil {
		in, out := &in.DisallowedCidrs, &out.DisallowedCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolAllocationID != nil {
		in, out := &in.IpamPoolAllocationID, &out.IpamPoolAllocationID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceOwner != nil {
		in, out := &in.ResourceOwner, &out.ResourceOwner
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationObservation.
func (in *VPCIpamPoolCidrAllocationObservation) DeepCopy() *VPCIpamPoolCidrAllocationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationParameters) DeepCopyInto(out *VPCIpamPoolCidrAllocationParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisallowedCidrs != nil {
		in, out := &in.DisallowedCidrs, &out.DisallowedCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationParameters.
func (in *VPCIpamPoolCidrAllocationParameters) DeepCopy() *VPCIpamPoolCidrAllocationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationSpec) DeepCopyInto(out *VPCIpamPoolCidrAllocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationSpec.
func (in *VPCIpamPoolCidrAllocationSpec) DeepCopy() *VPCIpamPoolCidrAllocationSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrAllocationStatus) DeepCopyInto(out *VPCIpamPoolCidrAllocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrAllocationStatus.
func (in *VPCIpamPoolCidrAllocationStatus) DeepCopy() *VPCIpamPoolCidrAllocationStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrAllocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrInitParameters) DeepCopyInto(out *VPCIpamPoolCidrInitParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = make([]CidrAuthorizationContextInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrInitParameters.
func (in *VPCIpamPoolCidrInitParameters) DeepCopy() *VPCIpamPoolCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrList) DeepCopyInto(out *VPCIpamPoolCidrList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpamPoolCidr, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrList.
func (in *VPCIpamPoolCidrList) DeepCopy() *VPCIpamPoolCidrList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolCidrList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrObservation) DeepCopyInto(out *VPCIpamPoolCidrObservation) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = make([]CidrAuthorizationContextObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolCidrID != nil {
		in, out := &in.IpamPoolCidrID, &out.IpamPoolCidrID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrObservation.
func (in *VPCIpamPoolCidrObservation) DeepCopy() *VPCIpamPoolCidrObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrParameters) DeepCopyInto(out *VPCIpamPoolCidrParameters) {
	*out = *in
	if in.Cidr != nil {
		in, out := &in.Cidr, &out.Cidr
		*out = new(string)
		**out = **in
	}
	if in.CidrAuthorizationContext != nil {
		in, out := &in.CidrAuthorizationContext, &out.CidrAuthorizationContext
		*out = make([]CidrAuthorizationContextParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamPoolID != nil {
		in, out := &in.IpamPoolID, &out.IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IpamPoolIDRef != nil {
		in, out := &in.IpamPoolIDRef, &out.IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamPoolIDSelector != nil {
		in, out := &in.IpamPoolIDSelector, &out.IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetmaskLength != nil {
		in, out := &in.NetmaskLength, &out.NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrParameters.
func (in *VPCIpamPoolCidrParameters) DeepCopy() *VPCIpamPoolCidrParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrSpec) DeepCopyInto(out *VPCIpamPoolCidrSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrSpec.
func (in *VPCIpamPoolCidrSpec) DeepCopy() *VPCIpamPoolCidrSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolCidrStatus) DeepCopyInto(out *VPCIpamPoolCidrStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolCidrStatus.
func (in *VPCIpamPoolCidrStatus) DeepCopy() *VPCIpamPoolCidrStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolCidrStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolInitParameters) DeepCopyInto(out *VPCIpamPoolInitParameters) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.AllocationDefaultNetmaskLength != nil {
		in, out := &in.AllocationDefaultNetmaskLength, &out.AllocationDefaultNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMaxNetmaskLength != nil {
		in, out := &in.AllocationMaxNetmaskLength, &out.AllocationMaxNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMinNetmaskLength != nil {
		in, out := &in.AllocationMinNetmaskLength, &out.AllocationMinNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationResourceTags != nil {
		in, out := &in.AllocationResourceTags, &out.AllocationResourceTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AutoImport != nil {
		in, out := &in.AutoImport, &out.AutoImport
		*out = new(bool)
		**out = **in
	}
	if in.AwsService != nil {
		in, out := &in.AwsService, &out.AwsService
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeID != nil {
		in, out := &in.IpamScopeID, &out.IpamScopeID
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeIDRef != nil {
		in, out := &in.IpamScopeIDRef, &out.IpamScopeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamScopeIDSelector != nil {
		in, out := &in.IpamScopeIDSelector, &out.IpamScopeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Locale != nil {
		in, out := &in.Locale, &out.Locale
		*out = new(string)
		**out = **in
	}
	if in.PublicIPSource != nil {
		in, out := &in.PublicIPSource, &out.PublicIPSource
		*out = new(string)
		**out = **in
	}
	if in.PubliclyAdvertisable != nil {
		in, out := &in.PubliclyAdvertisable, &out.PubliclyAdvertisable
		*out = new(bool)
		**out = **in
	}
	if in.SourceIpamPoolID != nil {
		in, out := &in.SourceIpamPoolID, &out.SourceIpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.SourceIpamPoolIDRef != nil {
		in, out := &in.SourceIpamPoolIDRef, &out.SourceIpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIpamPoolIDSelector != nil {
		in, out := &in.SourceIpamPoolIDSelector, &out.SourceIpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolInitParameters.
func (in *VPCIpamPoolInitParameters) DeepCopy() *VPCIpamPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolList) DeepCopyInto(out *VPCIpamPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpamPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolList.
func (in *VPCIpamPoolList) DeepCopy() *VPCIpamPoolList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolObservation) DeepCopyInto(out *VPCIpamPoolObservation) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.AllocationDefaultNetmaskLength != nil {
		in, out := &in.AllocationDefaultNetmaskLength, &out.AllocationDefaultNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMaxNetmaskLength != nil {
		in, out := &in.AllocationMaxNetmaskLength, &out.AllocationMaxNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMinNetmaskLength != nil {
		in, out := &in.AllocationMinNetmaskLength, &out.AllocationMinNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationResourceTags != nil {
		in, out := &in.AllocationResourceTags, &out.AllocationResourceTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoImport != nil {
		in, out := &in.AutoImport, &out.AutoImport
		*out = new(bool)
		**out = **in
	}
	if in.AwsService != nil {
		in, out := &in.AwsService, &out.AwsService
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeID != nil {
		in, out := &in.IpamScopeID, &out.IpamScopeID
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeType != nil {
		in, out := &in.IpamScopeType, &out.IpamScopeType
		*out = new(string)
		**out = **in
	}
	if in.Locale != nil {
		in, out := &in.Locale, &out.Locale
		*out = new(string)
		**out = **in
	}
	if in.PoolDepth != nil {
		in, out := &in.PoolDepth, &out.PoolDepth
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPSource != nil {
		in, out := &in.PublicIPSource, &out.PublicIPSource
		*out = new(string)
		**out = **in
	}
	if in.PubliclyAdvertisable != nil {
		in, out := &in.PubliclyAdvertisable, &out.PubliclyAdvertisable
		*out = new(bool)
		**out = **in
	}
	if in.SourceIpamPoolID != nil {
		in, out := &in.SourceIpamPoolID, &out.SourceIpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolObservation.
func (in *VPCIpamPoolObservation) DeepCopy() *VPCIpamPoolObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolParameters) DeepCopyInto(out *VPCIpamPoolParameters) {
	*out = *in
	if in.AddressFamily != nil {
		in, out := &in.AddressFamily, &out.AddressFamily
		*out = new(string)
		**out = **in
	}
	if in.AllocationDefaultNetmaskLength != nil {
		in, out := &in.AllocationDefaultNetmaskLength, &out.AllocationDefaultNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMaxNetmaskLength != nil {
		in, out := &in.AllocationMaxNetmaskLength, &out.AllocationMaxNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationMinNetmaskLength != nil {
		in, out := &in.AllocationMinNetmaskLength, &out.AllocationMinNetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.AllocationResourceTags != nil {
		in, out := &in.AllocationResourceTags, &out.AllocationResourceTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AutoImport != nil {
		in, out := &in.AutoImport, &out.AutoImport
		*out = new(bool)
		**out = **in
	}
	if in.AwsService != nil {
		in, out := &in.AwsService, &out.AwsService
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeID != nil {
		in, out := &in.IpamScopeID, &out.IpamScopeID
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeIDRef != nil {
		in, out := &in.IpamScopeIDRef, &out.IpamScopeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamScopeIDSelector != nil {
		in, out := &in.IpamScopeIDSelector, &out.IpamScopeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Locale != nil {
		in, out := &in.Locale, &out.Locale
		*out = new(string)
		**out = **in
	}
	if in.PublicIPSource != nil {
		in, out := &in.PublicIPSource, &out.PublicIPSource
		*out = new(string)
		**out = **in
	}
	if in.PubliclyAdvertisable != nil {
		in, out := &in.PubliclyAdvertisable, &out.PubliclyAdvertisable
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SourceIpamPoolID != nil {
		in, out := &in.SourceIpamPoolID, &out.SourceIpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.SourceIpamPoolIDRef != nil {
		in, out := &in.SourceIpamPoolIDRef, &out.SourceIpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIpamPoolIDSelector != nil {
		in, out := &in.SourceIpamPoolIDSelector, &out.SourceIpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolParameters.
func (in *VPCIpamPoolParameters) DeepCopy() *VPCIpamPoolParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolSpec) DeepCopyInto(out *VPCIpamPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolSpec.
func (in *VPCIpamPoolSpec) DeepCopy() *VPCIpamPoolSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamPoolStatus) DeepCopyInto(out *VPCIpamPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamPoolStatus.
func (in *VPCIpamPoolStatus) DeepCopy() *VPCIpamPoolStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScope) DeepCopyInto(out *VPCIpamScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScope.
func (in *VPCIpamScope) DeepCopy() *VPCIpamScope {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeInitParameters) DeepCopyInto(out *VPCIpamScopeInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpamID != nil {
		in, out := &in.IpamID, &out.IpamID
		*out = new(string)
		**out = **in
	}
	if in.IpamIDRef != nil {
		in, out := &in.IpamIDRef, &out.IpamIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamIDSelector != nil {
		in, out := &in.IpamIDSelector, &out.IpamIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeInitParameters.
func (in *VPCIpamScopeInitParameters) DeepCopy() *VPCIpamScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeList) DeepCopyInto(out *VPCIpamScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCIpamScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeList.
func (in *VPCIpamScopeList) DeepCopy() *VPCIpamScopeList {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCIpamScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeObservation) DeepCopyInto(out *VPCIpamScopeObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpamArn != nil {
		in, out := &in.IpamArn, &out.IpamArn
		*out = new(string)
		**out = **in
	}
	if in.IpamID != nil {
		in, out := &in.IpamID, &out.IpamID
		*out = new(string)
		**out = **in
	}
	if in.IpamScopeType != nil {
		in, out := &in.IpamScopeType, &out.IpamScopeType
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.PoolCount != nil {
		in, out := &in.PoolCount, &out.PoolCount
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeObservation.
func (in *VPCIpamScopeObservation) DeepCopy() *VPCIpamScopeObservation {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeParameters) DeepCopyInto(out *VPCIpamScopeParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IpamID != nil {
		in, out := &in.IpamID, &out.IpamID
		*out = new(string)
		**out = **in
	}
	if in.IpamIDRef != nil {
		in, out := &in.IpamIDRef, &out.IpamIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IpamIDSelector != nil {
		in, out := &in.IpamIDSelector, &out.IpamIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeParameters.
func (in *VPCIpamScopeParameters) DeepCopy() *VPCIpamScopeParameters {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeSpec) DeepCopyInto(out *VPCIpamScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeSpec.
func (in *VPCIpamScopeSpec) DeepCopy() *VPCIpamScopeSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamScopeStatus) DeepCopyInto(out *VPCIpamScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamScopeStatus.
func (in *VPCIpamScopeStatus) DeepCopy() *VPCIpamScopeStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamSpec) DeepCopyInto(out *VPCIpamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamSpec.
func (in *VPCIpamSpec) DeepCopy() *VPCIpamSpec {
	if in == nil {
		return nil
	}
	out := new(VPCIpamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCIpamStatus) DeepCopyInto(out *VPCIpamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCIpamStatus.
func (in *VPCIpamStatus) DeepCopy() *VPCIpamStatus {
	if in == nil {
		return nil
	}
	out := new(VPCIpamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCList) DeepCopyInto(out *VPCList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCList.
func (in *VPCList) DeepCopy() *VPCList {
	if in == nil {
		return nil
	}
	out := new(VPCList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCObservation) DeepCopyInto(out *VPCObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCObservation.
func (in *VPCObservation) DeepCopy() *VPCObservation {
	if in == nil {
		return nil
	}
	out := new(VPCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCObservation_2) DeepCopyInto(out *VPCObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DefaultNetworkACLID != nil {
		in, out := &in.DefaultNetworkACLID, &out.DefaultNetworkACLID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DefaultSecurityGroupID != nil {
		in, out := &in.DefaultSecurityGroupID, &out.DefaultSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.IPv6AssociationID != nil {
		in, out := &in.IPv6AssociationID, &out.IPv6AssociationID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.InstanceTenancy != nil {
		in, out := &in.InstanceTenancy, &out.InstanceTenancy
		*out = new(string)
		**out = **in
	}
	if in.MainRouteTableID != nil {
		in, out := &in.MainRouteTableID, &out.MainRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.OwnerID != nil {
		in, out := &in.OwnerID, &out.OwnerID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCObservation_2.
func (in *VPCObservation_2) DeepCopy() *VPCObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VPCObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCParameters) DeepCopyInto(out *VPCParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCParameters.
func (in *VPCParameters) DeepCopy() *VPCParameters {
	if in == nil {
		return nil
	}
	out := new(VPCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCParameters_2) DeepCopyInto(out *VPCParameters_2) {
	*out = *in
	if in.AssignGeneratedIPv6CidrBlock != nil {
		in, out := &in.AssignGeneratedIPv6CidrBlock, &out.AssignGeneratedIPv6CidrBlock
		*out = new(bool)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.EnableDNSHostnames != nil {
		in, out := &in.EnableDNSHostnames, &out.EnableDNSHostnames
		*out = new(bool)
		**out = **in
	}
	if in.EnableDNSSupport != nil {
		in, out := &in.EnableDNSSupport, &out.EnableDNSSupport
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkAddressUsageMetrics != nil {
		in, out := &in.EnableNetworkAddressUsageMetrics, &out.EnableNetworkAddressUsageMetrics
		*out = new(bool)
		**out = **in
	}
	if in.IPv4IpamPoolID != nil {
		in, out := &in.IPv4IpamPoolID, &out.IPv4IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv4IpamPoolIDRef != nil {
		in, out := &in.IPv4IpamPoolIDRef, &out.IPv4IpamPoolIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv4IpamPoolIDSelector != nil {
		in, out := &in.IPv4IpamPoolIDSelector, &out.IPv4IpamPoolIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPv4NetmaskLength != nil {
		in, out := &in.IPv4NetmaskLength, &out.IPv4NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlockNetworkBorderGroup != nil {
		in, out := &in.IPv6CidrBlockNetworkBorderGroup, &out.IPv6CidrBlockNetworkBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.IPv6IpamPoolID != nil {
		in, out := &in.IPv6IpamPoolID, &out.IPv6IpamPoolID
		*out = new(string)
		**out = **in
	}
	if in.IPv6NetmaskLength != nil {
		in, out := &in.IPv6NetmaskLength, &out.IPv6NetmaskLength
		*out = new(float64)
		**out = **in
	}
	if in.InstanceTenancy != nil {
		in, out := &in.InstanceTenancy, &out.InstanceTenancy
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCParameters_2.
func (in *VPCParameters_2) DeepCopy() *VPCParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnection) DeepCopyInto(out *VPCPeeringConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnection.
func (in *VPCPeeringConnection) DeepCopy() *VPCPeeringConnection {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepter) DeepCopyInto(out *VPCPeeringConnectionAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepter.
func (in *VPCPeeringConnectionAccepter) DeepCopy() *VPCPeeringConnectionAccepter {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterInitParameters.
func (in *VPCPeeringConnectionAccepterAccepterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterObservation.
func (in *VPCPeeringConnectionAccepterAccepterObservation) DeepCopy() *VPCPeeringConnectionAccepterAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterAccepterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterAccepterParameters.
func (in *VPCPeeringConnectionAccepterAccepterParameters) DeepCopy() *VPCPeeringConnectionAccepterAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterInitParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionAccepterAccepterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionAccepterRequesterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterInitParameters.
func (in *VPCPeeringConnectionAccepterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterList) DeepCopyInto(out *VPCPeeringConnectionAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnectionAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterList.
func (in *VPCPeeringConnectionAccepterList) DeepCopy() *VPCPeeringConnectionAccepterList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterObservation) {
	*out = *in
	if in.AcceptStatus != nil {
		in, out := &in.AcceptStatus, &out.AcceptStatus
		*out = new(string)
		**out = **in
	}
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionAccepterAccepterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionAccepterRequesterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterObservation.
func (in *VPCPeeringConnectionAccepterObservation) DeepCopy() *VPCPeeringConnectionAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionAccepterAccepterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionAccepterRequesterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterParameters.
func (in *VPCPeeringConnectionAccepterParameters) DeepCopy() *VPCPeeringConnectionAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterInitParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterInitParameters.
func (in *VPCPeeringConnectionAccepterRequesterInitParameters) DeepCopy() *VPCPeeringConnectionAccepterRequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterObservation) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterObservation.
func (in *VPCPeeringConnectionAccepterRequesterObservation) DeepCopy() *VPCPeeringConnectionAccepterRequesterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterRequesterParameters) DeepCopyInto(out *VPCPeeringConnectionAccepterRequesterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterRequesterParameters.
func (in *VPCPeeringConnectionAccepterRequesterParameters) DeepCopy() *VPCPeeringConnectionAccepterRequesterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterRequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterSpec) DeepCopyInto(out *VPCPeeringConnectionAccepterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterSpec.
func (in *VPCPeeringConnectionAccepterSpec) DeepCopy() *VPCPeeringConnectionAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionAccepterStatus) DeepCopyInto(out *VPCPeeringConnectionAccepterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionAccepterStatus.
func (in *VPCPeeringConnectionAccepterStatus) DeepCopy() *VPCPeeringConnectionAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionInitParameters) DeepCopyInto(out *VPCPeeringConnectionInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionInitParameters.
func (in *VPCPeeringConnectionInitParameters) DeepCopy() *VPCPeeringConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionInitParameters_2) DeepCopyInto(out *VPCPeeringConnectionInitParameters_2) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCIDRef != nil {
		in, out := &in.PeerVPCIDRef, &out.PeerVPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerVPCIDSelector != nil {
		in, out := &in.PeerVPCIDSelector, &out.PeerVPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionInitParameters_2.
func (in *VPCPeeringConnectionInitParameters_2) DeepCopy() *VPCPeeringConnectionInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionList) DeepCopyInto(out *VPCPeeringConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionList.
func (in *VPCPeeringConnectionList) DeepCopy() *VPCPeeringConnectionList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionObservation) DeepCopyInto(out *VPCPeeringConnectionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionObservation.
func (in *VPCPeeringConnectionObservation) DeepCopy() *VPCPeeringConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionObservation_2) DeepCopyInto(out *VPCPeeringConnectionObservation_2) {
	*out = *in
	if in.AcceptStatus != nil {
		in, out := &in.AcceptStatus, &out.AcceptStatus
		*out = new(string)
		**out = **in
	}
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]AccepterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]RequesterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionObservation_2.
func (in *VPCPeeringConnectionObservation_2) DeepCopy() *VPCPeeringConnectionObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptions) DeepCopyInto(out *VPCPeeringConnectionOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptions.
func (in *VPCPeeringConnectionOptions) DeepCopy() *VPCPeeringConnectionOptions {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterInitParameters.
func (in *VPCPeeringConnectionOptionsAccepterInitParameters) DeepCopy() *VPCPeeringConnectionOptionsAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterObservation.
func (in *VPCPeeringConnectionOptionsAccepterObservation) DeepCopy() *VPCPeeringConnectionOptionsAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsAccepterParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsAccepterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsAccepterParameters.
func (in *VPCPeeringConnectionOptionsAccepterParameters) DeepCopy() *VPCPeeringConnectionOptionsAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsInitParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionOptionsAccepterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionOptionsRequesterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsInitParameters.
func (in *VPCPeeringConnectionOptionsInitParameters) DeepCopy() *VPCPeeringConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsList) DeepCopyInto(out *VPCPeeringConnectionOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCPeeringConnectionOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsList.
func (in *VPCPeeringConnectionOptionsList) DeepCopy() *VPCPeeringConnectionOptionsList {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCPeeringConnectionOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsObservation) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionOptionsAccepterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionOptionsRequesterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsObservation.
func (in *VPCPeeringConnectionOptionsObservation) DeepCopy() *VPCPeeringConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsParameters) {
	*out = *in
	if in.Accepter != nil {
		in, out := &in.Accepter, &out.Accepter
		*out = make([]VPCPeeringConnectionOptionsAccepterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Requester != nil {
		in, out := &in.Requester, &out.Requester
		*out = make([]VPCPeeringConnectionOptionsRequesterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCPeeringConnectionID != nil {
		in, out := &in.VPCPeeringConnectionID, &out.VPCPeeringConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPCPeeringConnectionIDRef != nil {
		in, out := &in.VPCPeeringConnectionIDRef, &out.VPCPeeringConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCPeeringConnectionIDSelector != nil {
		in, out := &in.VPCPeeringConnectionIDSelector, &out.VPCPeeringConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsParameters.
func (in *VPCPeeringConnectionOptionsParameters) DeepCopy() *VPCPeeringConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterInitParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterInitParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterInitParameters.
func (in *VPCPeeringConnectionOptionsRequesterInitParameters) DeepCopy() *VPCPeeringConnectionOptionsRequesterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterObservation) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterObservation) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterObservation.
func (in *VPCPeeringConnectionOptionsRequesterObservation) DeepCopy() *VPCPeeringConnectionOptionsRequesterObservation {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsRequesterParameters) DeepCopyInto(out *VPCPeeringConnectionOptionsRequesterParameters) {
	*out = *in
	if in.AllowRemoteVPCDNSResolution != nil {
		in, out := &in.AllowRemoteVPCDNSResolution, &out.AllowRemoteVPCDNSResolution
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsRequesterParameters.
func (in *VPCPeeringConnectionOptionsRequesterParameters) DeepCopy() *VPCPeeringConnectionOptionsRequesterParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsRequesterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsSpec) DeepCopyInto(out *VPCPeeringConnectionOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsSpec.
func (in *VPCPeeringConnectionOptionsSpec) DeepCopy() *VPCPeeringConnectionOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionOptionsStatus) DeepCopyInto(out *VPCPeeringConnectionOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionOptionsStatus.
func (in *VPCPeeringConnectionOptionsStatus) DeepCopy() *VPCPeeringConnectionOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionParameters) DeepCopyInto(out *VPCPeeringConnectionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionParameters.
func (in *VPCPeeringConnectionParameters) DeepCopy() *VPCPeeringConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionParameters_2) DeepCopyInto(out *VPCPeeringConnectionParameters_2) {
	*out = *in
	if in.AutoAccept != nil {
		in, out := &in.AutoAccept, &out.AutoAccept
		*out = new(bool)
		**out = **in
	}
	if in.PeerOwnerID != nil {
		in, out := &in.PeerOwnerID, &out.PeerOwnerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegion != nil {
		in, out := &in.PeerRegion, &out.PeerRegion
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCID != nil {
		in, out := &in.PeerVPCID, &out.PeerVPCID
		*out = new(string)
		**out = **in
	}
	if in.PeerVPCIDRef != nil {
		in, out := &in.PeerVPCIDRef, &out.PeerVPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerVPCIDSelector != nil {
		in, out := &in.PeerVPCIDSelector, &out.PeerVPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionParameters_2.
func (in *VPCPeeringConnectionParameters_2) DeepCopy() *VPCPeeringConnectionParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionSpec) DeepCopyInto(out *VPCPeeringConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionSpec.
func (in *VPCPeeringConnectionSpec) DeepCopy() *VPCPeeringConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCPeeringConnectionStatus) DeepCopyInto(out *VPCPeeringConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCPeeringConnectionStatus.
func (in *VPCPeeringConnectionStatus) DeepCopy() *VPCPeeringConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(VPCPeeringConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCSpec) DeepCopyInto(out *VPCSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCSpec.
func (in *VPCSpec) DeepCopy() *VPCSpec {
	if in == nil {
		return nil
	}
	out := new(VPCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCStatus) DeepCopyInto(out *VPCStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCStatus.
func (in *VPCStatus) DeepCopy() *VPCStatus {
	if in == nil {
		return nil
	}
	out := new(VPCStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnection) DeepCopyInto(out *VPNConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnection.
func (in *VPNConnection) DeepCopy() *VPNConnection {
	if in == nil {
		return nil
	}
	out := new(VPNConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionInitParameters) DeepCopyInto(out *VPNConnectionInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionInitParameters.
func (in *VPNConnectionInitParameters) DeepCopy() *VPNConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionInitParameters_2) DeepCopyInto(out *VPNConnectionInitParameters_2) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayIDRef != nil {
		in, out := &in.CustomerGatewayIDRef, &out.CustomerGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomerGatewayIDSelector != nil {
		in, out := &in.CustomerGatewayIDSelector, &out.CustomerGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = make([]Tunnel1LogOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = make([]Tunnel2LogOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeRef != nil {
		in, out := &in.TypeRef, &out.TypeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeSelector != nil {
		in, out := &in.TypeSelector, &out.TypeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionInitParameters_2.
func (in *VPNConnectionInitParameters_2) DeepCopy() *VPNConnectionInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionList) DeepCopyInto(out *VPNConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionList.
func (in *VPNConnectionList) DeepCopy() *VPNConnectionList {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionObservation) DeepCopyInto(out *VPNConnectionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionObservation.
func (in *VPNConnectionObservation) DeepCopy() *VPNConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionObservation_2) DeepCopyInto(out *VPNConnectionObservation_2) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkArn != nil {
		in, out := &in.CoreNetworkArn, &out.CoreNetworkArn
		*out = new(string)
		**out = **in
	}
	if in.CoreNetworkAttachmentArn != nil {
		in, out := &in.CoreNetworkAttachmentArn, &out.CoreNetworkAttachmentArn
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]RoutesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayAttachmentID != nil {
		in, out := &in.TransitGatewayAttachmentID, &out.TransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1Address != nil {
		in, out := &in.Tunnel1Address, &out.Tunnel1Address
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1BGPAsn != nil {
		in, out := &in.Tunnel1BGPAsn, &out.Tunnel1BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1BGPHoldtime != nil {
		in, out := &in.Tunnel1BGPHoldtime, &out.Tunnel1BGPHoldtime
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1CgwInsideAddress != nil {
		in, out := &in.Tunnel1CgwInsideAddress, &out.Tunnel1CgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = make([]Tunnel1LogOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1VgwInsideAddress != nil {
		in, out := &in.Tunnel1VgwInsideAddress, &out.Tunnel1VgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2Address != nil {
		in, out := &in.Tunnel2Address, &out.Tunnel2Address
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2BGPAsn != nil {
		in, out := &in.Tunnel2BGPAsn, &out.Tunnel2BGPAsn
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2BGPHoldtime != nil {
		in, out := &in.Tunnel2BGPHoldtime, &out.Tunnel2BGPHoldtime
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2CgwInsideAddress != nil {
		in, out := &in.Tunnel2CgwInsideAddress, &out.Tunnel2CgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = make([]Tunnel2LogOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2VgwInsideAddress != nil {
		in, out := &in.Tunnel2VgwInsideAddress, &out.Tunnel2VgwInsideAddress
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VgwTelemetry != nil {
		in, out := &in.VgwTelemetry, &out.VgwTelemetry
		*out = make([]VgwTelemetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionObservation_2.
func (in *VPNConnectionObservation_2) DeepCopy() *VPNConnectionObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionParameters) DeepCopyInto(out *VPNConnectionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionParameters.
func (in *VPNConnectionParameters) DeepCopy() *VPNConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionParameters_2) DeepCopyInto(out *VPNConnectionParameters_2) {
	*out = *in
	if in.CustomerGatewayID != nil {
		in, out := &in.CustomerGatewayID, &out.CustomerGatewayID
		*out = new(string)
		**out = **in
	}
	if in.CustomerGatewayIDRef != nil {
		in, out := &in.CustomerGatewayIDRef, &out.CustomerGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomerGatewayIDSelector != nil {
		in, out := &in.CustomerGatewayIDSelector, &out.CustomerGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAcceleration != nil {
		in, out := &in.EnableAcceleration, &out.EnableAcceleration
		*out = new(bool)
		**out = **in
	}
	if in.LocalIPv4NetworkCidr != nil {
		in, out := &in.LocalIPv4NetworkCidr, &out.LocalIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.LocalIPv6NetworkCidr != nil {
		in, out := &in.LocalIPv6NetworkCidr, &out.LocalIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddressType != nil {
		in, out := &in.OutsideIPAddressType, &out.OutsideIPAddressType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv4NetworkCidr != nil {
		in, out := &in.RemoteIPv4NetworkCidr, &out.RemoteIPv4NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.RemoteIPv6NetworkCidr != nil {
		in, out := &in.RemoteIPv6NetworkCidr, &out.RemoteIPv6NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutesOnly != nil {
		in, out := &in.StaticRoutesOnly, &out.StaticRoutesOnly
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TransitGatewayID != nil {
		in, out := &in.TransitGatewayID, &out.TransitGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TransitGatewayIDRef != nil {
		in, out := &in.TransitGatewayIDRef, &out.TransitGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TransitGatewayIDSelector != nil {
		in, out := &in.TransitGatewayIDSelector, &out.TransitGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TransportTransitGatewayAttachmentID != nil {
		in, out := &in.TransportTransitGatewayAttachmentID, &out.TransportTransitGatewayAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutAction != nil {
		in, out := &in.Tunnel1DpdTimeoutAction, &out.Tunnel1DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel1DpdTimeoutSeconds, &out.Tunnel1DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel1EnableTunnelLifecycleControl, &out.Tunnel1EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel1IkeVersions != nil {
		in, out := &in.Tunnel1IkeVersions, &out.Tunnel1IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1InsideCidr != nil {
		in, out := &in.Tunnel1InsideCidr, &out.Tunnel1InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1InsideIPv6Cidr != nil {
		in, out := &in.Tunnel1InsideIPv6Cidr, &out.Tunnel1InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel1LogOptions != nil {
		in, out := &in.Tunnel1LogOptions, &out.Tunnel1LogOptions
		*out = make([]Tunnel1LogOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel1Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase1DhGroupNumbers, &out.Tunnel1Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase1EncryptionAlgorithms, &out.Tunnel1Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase1IntegrityAlgorithms, &out.Tunnel1Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase1LifetimeSeconds, &out.Tunnel1Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel1Phase2DhGroupNumbers, &out.Tunnel1Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel1Phase2EncryptionAlgorithms, &out.Tunnel1Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel1Phase2IntegrityAlgorithms, &out.Tunnel1Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel1Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel1Phase2LifetimeSeconds, &out.Tunnel1Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1PresharedKeySecretRef != nil {
		in, out := &in.Tunnel1PresharedKeySecretRef, &out.Tunnel1PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel1RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel1RekeyFuzzPercentage, &out.Tunnel1RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel1RekeyMarginTimeSeconds, &out.Tunnel1RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1ReplayWindowSize != nil {
		in, out := &in.Tunnel1ReplayWindowSize, &out.Tunnel1ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel1StartupAction != nil {
		in, out := &in.Tunnel1StartupAction, &out.Tunnel1StartupAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutAction != nil {
		in, out := &in.Tunnel2DpdTimeoutAction, &out.Tunnel2DpdTimeoutAction
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2DpdTimeoutSeconds != nil {
		in, out := &in.Tunnel2DpdTimeoutSeconds, &out.Tunnel2DpdTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2EnableTunnelLifecycleControl != nil {
		in, out := &in.Tunnel2EnableTunnelLifecycleControl, &out.Tunnel2EnableTunnelLifecycleControl
		*out = new(bool)
		**out = **in
	}
	if in.Tunnel2IkeVersions != nil {
		in, out := &in.Tunnel2IkeVersions, &out.Tunnel2IkeVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2InsideCidr != nil {
		in, out := &in.Tunnel2InsideCidr, &out.Tunnel2InsideCidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2InsideIPv6Cidr != nil {
		in, out := &in.Tunnel2InsideIPv6Cidr, &out.Tunnel2InsideIPv6Cidr
		*out = new(string)
		**out = **in
	}
	if in.Tunnel2LogOptions != nil {
		in, out := &in.Tunnel2LogOptions, &out.Tunnel2LogOptions
		*out = make([]Tunnel2LogOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tunnel2Phase1DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase1DhGroupNumbers, &out.Tunnel2Phase1DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase1EncryptionAlgorithms, &out.Tunnel2Phase1EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase1IntegrityAlgorithms, &out.Tunnel2Phase1IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase1LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase1LifetimeSeconds, &out.Tunnel2Phase1LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2Phase2DhGroupNumbers != nil {
		in, out := &in.Tunnel2Phase2DhGroupNumbers, &out.Tunnel2Phase2DhGroupNumbers
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2EncryptionAlgorithms != nil {
		in, out := &in.Tunnel2Phase2EncryptionAlgorithms, &out.Tunnel2Phase2EncryptionAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2IntegrityAlgorithms != nil {
		in, out := &in.Tunnel2Phase2IntegrityAlgorithms, &out.Tunnel2Phase2IntegrityAlgorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tunnel2Phase2LifetimeSeconds != nil {
		in, out := &in.Tunnel2Phase2LifetimeSeconds, &out.Tunnel2Phase2LifetimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2PresharedKeySecretRef != nil {
		in, out := &in.Tunnel2PresharedKeySecretRef, &out.Tunnel2PresharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Tunnel2RekeyFuzzPercentage != nil {
		in, out := &in.Tunnel2RekeyFuzzPercentage, &out.Tunnel2RekeyFuzzPercentage
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2RekeyMarginTimeSeconds != nil {
		in, out := &in.Tunnel2RekeyMarginTimeSeconds, &out.Tunnel2RekeyMarginTimeSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2ReplayWindowSize != nil {
		in, out := &in.Tunnel2ReplayWindowSize, &out.Tunnel2ReplayWindowSize
		*out = new(float64)
		**out = **in
	}
	if in.Tunnel2StartupAction != nil {
		in, out := &in.Tunnel2StartupAction, &out.Tunnel2StartupAction
		*out = new(string)
		**out = **in
	}
	if in.TunnelInsideIPVersion != nil {
		in, out := &in.TunnelInsideIPVersion, &out.TunnelInsideIPVersion
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeRef != nil {
		in, out := &in.TypeRef, &out.TypeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TypeSelector != nil {
		in, out := &in.TypeSelector, &out.TypeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionParameters_2.
func (in *VPNConnectionParameters_2) DeepCopy() *VPNConnectionParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRoute) DeepCopyInto(out *VPNConnectionRoute) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRoute.
func (in *VPNConnectionRoute) DeepCopy() *VPNConnectionRoute {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionRoute) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteInitParameters) DeepCopyInto(out *VPNConnectionRouteInitParameters) {
	*out = *in
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VPNConnectionID != nil {
		in, out := &in.VPNConnectionID, &out.VPNConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPNConnectionIDRef != nil {
		in, out := &in.VPNConnectionIDRef, &out.VPNConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNConnectionIDSelector != nil {
		in, out := &in.VPNConnectionIDSelector, &out.VPNConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteInitParameters.
func (in *VPNConnectionRouteInitParameters) DeepCopy() *VPNConnectionRouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteList) DeepCopyInto(out *VPNConnectionRouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNConnectionRoute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteList.
func (in *VPNConnectionRouteList) DeepCopy() *VPNConnectionRouteList {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNConnectionRouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteObservation) DeepCopyInto(out *VPNConnectionRouteObservation) {
	*out = *in
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VPNConnectionID != nil {
		in, out := &in.VPNConnectionID, &out.VPNConnectionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteObservation.
func (in *VPNConnectionRouteObservation) DeepCopy() *VPNConnectionRouteObservation {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteParameters) DeepCopyInto(out *VPNConnectionRouteParameters) {
	*out = *in
	if in.DestinationCidrBlock != nil {
		in, out := &in.DestinationCidrBlock, &out.DestinationCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPNConnectionID != nil {
		in, out := &in.VPNConnectionID, &out.VPNConnectionID
		*out = new(string)
		**out = **in
	}
	if in.VPNConnectionIDRef != nil {
		in, out := &in.VPNConnectionIDRef, &out.VPNConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNConnectionIDSelector != nil {
		in, out := &in.VPNConnectionIDSelector, &out.VPNConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteParameters.
func (in *VPNConnectionRouteParameters) DeepCopy() *VPNConnectionRouteParameters {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteSpec) DeepCopyInto(out *VPNConnectionRouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteSpec.
func (in *VPNConnectionRouteSpec) DeepCopy() *VPNConnectionRouteSpec {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionRouteStatus) DeepCopyInto(out *VPNConnectionRouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionRouteStatus.
func (in *VPNConnectionRouteStatus) DeepCopy() *VPNConnectionRouteStatus {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionRouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionSpec) DeepCopyInto(out *VPNConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionSpec.
func (in *VPNConnectionSpec) DeepCopy() *VPNConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNConnectionStatus) DeepCopyInto(out *VPNConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNConnectionStatus.
func (in *VPNConnectionStatus) DeepCopy() *VPNConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(VPNConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGateway) DeepCopyInto(out *VPNGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGateway.
func (in *VPNGateway) DeepCopy() *VPNGateway {
	if in == nil {
		return nil
	}
	out := new(VPNGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachment) DeepCopyInto(out *VPNGatewayAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachment.
func (in *VPNGatewayAttachment) DeepCopy() *VPNGatewayAttachment {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentInitParameters) DeepCopyInto(out *VPNGatewayAttachmentInitParameters) {
	*out = *in
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentInitParameters.
func (in *VPNGatewayAttachmentInitParameters) DeepCopy() *VPNGatewayAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentList) DeepCopyInto(out *VPNGatewayAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNGatewayAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentList.
func (in *VPNGatewayAttachmentList) DeepCopy() *VPNGatewayAttachmentList {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentObservation) DeepCopyInto(out *VPNGatewayAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentObservation.
func (in *VPNGatewayAttachmentObservation) DeepCopy() *VPNGatewayAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentParameters) DeepCopyInto(out *VPNGatewayAttachmentParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentParameters.
func (in *VPNGatewayAttachmentParameters) DeepCopy() *VPNGatewayAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentSpec) DeepCopyInto(out *VPNGatewayAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentSpec.
func (in *VPNGatewayAttachmentSpec) DeepCopy() *VPNGatewayAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayAttachmentStatus) DeepCopyInto(out *VPNGatewayAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayAttachmentStatus.
func (in *VPNGatewayAttachmentStatus) DeepCopy() *VPNGatewayAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayInitParameters) DeepCopyInto(out *VPNGatewayInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayInitParameters.
func (in *VPNGatewayInitParameters) DeepCopy() *VPNGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayInitParameters_2) DeepCopyInto(out *VPNGatewayInitParameters_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayInitParameters_2.
func (in *VPNGatewayInitParameters_2) DeepCopy() *VPNGatewayInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayList) DeepCopyInto(out *VPNGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayList.
func (in *VPNGatewayList) DeepCopy() *VPNGatewayList {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayObservation) DeepCopyInto(out *VPNGatewayObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayObservation.
func (in *VPNGatewayObservation) DeepCopy() *VPNGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayObservation_2) DeepCopyInto(out *VPNGatewayObservation_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayObservation_2.
func (in *VPNGatewayObservation_2) DeepCopy() *VPNGatewayObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayParameters) DeepCopyInto(out *VPNGatewayParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayParameters.
func (in *VPNGatewayParameters) DeepCopy() *VPNGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayParameters_2) DeepCopyInto(out *VPNGatewayParameters_2) {
	*out = *in
	if in.AmazonSideAsn != nil {
		in, out := &in.AmazonSideAsn, &out.AmazonSideAsn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayParameters_2.
func (in *VPNGatewayParameters_2) DeepCopy() *VPNGatewayParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagation) DeepCopyInto(out *VPNGatewayRoutePropagation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagation.
func (in *VPNGatewayRoutePropagation) DeepCopy() *VPNGatewayRoutePropagation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayRoutePropagation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationInitParameters) DeepCopyInto(out *VPNGatewayRoutePropagationInitParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationInitParameters.
func (in *VPNGatewayRoutePropagationInitParameters) DeepCopy() *VPNGatewayRoutePropagationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationList) DeepCopyInto(out *VPNGatewayRoutePropagationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPNGatewayRoutePropagation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationList.
func (in *VPNGatewayRoutePropagationList) DeepCopy() *VPNGatewayRoutePropagationList {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPNGatewayRoutePropagationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationObservation) DeepCopyInto(out *VPNGatewayRoutePropagationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationObservation.
func (in *VPNGatewayRoutePropagationObservation) DeepCopy() *VPNGatewayRoutePropagationObservation {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationParameters) DeepCopyInto(out *VPNGatewayRoutePropagationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableIDRef != nil {
		in, out := &in.RouteTableIDRef, &out.RouteTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteTableIDSelector != nil {
		in, out := &in.RouteTableIDSelector, &out.RouteTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayID != nil {
		in, out := &in.VPNGatewayID, &out.VPNGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VPNGatewayIDRef != nil {
		in, out := &in.VPNGatewayIDRef, &out.VPNGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPNGatewayIDSelector != nil {
		in, out := &in.VPNGatewayIDSelector, &out.VPNGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationParameters.
func (in *VPNGatewayRoutePropagationParameters) DeepCopy() *VPNGatewayRoutePropagationParameters {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationSpec) DeepCopyInto(out *VPNGatewayRoutePropagationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationSpec.
func (in *VPNGatewayRoutePropagationSpec) DeepCopy() *VPNGatewayRoutePropagationSpec {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayRoutePropagationStatus) DeepCopyInto(out *VPNGatewayRoutePropagationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayRoutePropagationStatus.
func (in *VPNGatewayRoutePropagationStatus) DeepCopy() *VPNGatewayRoutePropagationStatus {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayRoutePropagationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewaySpec) DeepCopyInto(out *VPNGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewaySpec.
func (in *VPNGatewaySpec) DeepCopy() *VPNGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(VPNGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPNGatewayStatus) DeepCopyInto(out *VPNGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPNGatewayStatus.
func (in *VPNGatewayStatus) DeepCopy() *VPNGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(VPNGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountInitParameters) DeepCopyInto(out *VcpuCountInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountInitParameters.
func (in *VcpuCountInitParameters) DeepCopy() *VcpuCountInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountObservation) DeepCopyInto(out *VcpuCountObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountObservation.
func (in *VcpuCountObservation) DeepCopy() *VcpuCountObservation {
	if in == nil {
		return nil
	}
	out := new(VcpuCountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcpuCountParameters) DeepCopyInto(out *VcpuCountParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcpuCountParameters.
func (in *VcpuCountParameters) DeepCopy() *VcpuCountParameters {
	if in == nil {
		return nil
	}
	out := new(VcpuCountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryInitParameters) DeepCopyInto(out *VgwTelemetryInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryInitParameters.
func (in *VgwTelemetryInitParameters) DeepCopy() *VgwTelemetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryObservation) DeepCopyInto(out *VgwTelemetryObservation) {
	*out = *in
	if in.AcceptedRouteCount != nil {
		in, out := &in.AcceptedRouteCount, &out.AcceptedRouteCount
		*out = new(float64)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.LastStatusChange != nil {
		in, out := &in.LastStatusChange, &out.LastStatusChange
		*out = new(string)
		**out = **in
	}
	if in.OutsideIPAddress != nil {
		in, out := &in.OutsideIPAddress, &out.OutsideIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryObservation.
func (in *VgwTelemetryObservation) DeepCopy() *VgwTelemetryObservation {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgwTelemetryParameters) DeepCopyInto(out *VgwTelemetryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgwTelemetryParameters.
func (in *VgwTelemetryParameters) DeepCopy() *VgwTelemetryParameters {
	if in == nil {
		return nil
	}
	out := new(VgwTelemetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachment) DeepCopyInto(out *VolumeAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachment.
func (in *VolumeAttachment) DeepCopy() *VolumeAttachment {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentInitParameters) DeepCopyInto(out *VolumeAttachmentInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.ForceDetach != nil {
		in, out := &in.ForceDetach, &out.ForceDetach
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StopInstanceBeforeDetaching != nil {
		in, out := &in.StopInstanceBeforeDetaching, &out.StopInstanceBeforeDetaching
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentInitParameters.
func (in *VolumeAttachmentInitParameters) DeepCopy() *VolumeAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentList) DeepCopyInto(out *VolumeAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentList.
func (in *VolumeAttachmentList) DeepCopy() *VolumeAttachmentList {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentObservation) DeepCopyInto(out *VolumeAttachmentObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.ForceDetach != nil {
		in, out := &in.ForceDetach, &out.ForceDetach
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StopInstanceBeforeDetaching != nil {
		in, out := &in.StopInstanceBeforeDetaching, &out.StopInstanceBeforeDetaching
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentObservation.
func (in *VolumeAttachmentObservation) DeepCopy() *VolumeAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentParameters) DeepCopyInto(out *VolumeAttachmentParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.ForceDetach != nil {
		in, out := &in.ForceDetach, &out.ForceDetach
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StopInstanceBeforeDetaching != nil {
		in, out := &in.StopInstanceBeforeDetaching, &out.StopInstanceBeforeDetaching
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIDRef != nil {
		in, out := &in.VolumeIDRef, &out.VolumeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeIDSelector != nil {
		in, out := &in.VolumeIDSelector, &out.VolumeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentParameters.
func (in *VolumeAttachmentParameters) DeepCopy() *VolumeAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentSpec) DeepCopyInto(out *VolumeAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentSpec.
func (in *VolumeAttachmentSpec) DeepCopy() *VolumeAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentStatus) DeepCopyInto(out *VolumeAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentStatus.
func (in *VolumeAttachmentStatus) DeepCopy() *VolumeAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

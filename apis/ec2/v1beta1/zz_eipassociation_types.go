// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EIPAssociationInitParameters struct {

	// ID of the associated Elastic IP.
	// This argument is required despite being optional at the resource level due to legacy support for EC2-Classic networking.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.EIP
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Reference to a EIP in ec2 to populate allocationId.
	// +kubebuilder:validation:Optional
	AllocationIDRef *v1.Reference `json:"allocationIdRef,omitempty" tf:"-"`

	// Selector for a EIP in ec2 to populate allocationId.
	// +kubebuilder:validation:Optional
	AllocationIDSelector *v1.Selector `json:"allocationIdSelector,omitempty" tf:"-"`

	// Whether to allow an Elastic IP address to be re-associated.
	// Defaults to true.
	AllowReassociation *bool `json:"allowReassociation,omitempty" tf:"allow_reassociation,omitempty"`

	// ID of the instance.
	// The instance must have exactly one attached network interface.
	// You can specify either the instance ID or the network interface ID, but not both.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// ID of the network interface.
	// If the instance has more than one network interface, you must specify a network interface ID.
	// You can specify either the instance ID or the network interface ID, but not both.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Primary or secondary private IP address to associate with the Elastic IP address.
	// If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// Address of the associated Elastic IP.
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`
}

type EIPAssociationObservation struct {

	// ID of the associated Elastic IP.
	// This argument is required despite being optional at the resource level due to legacy support for EC2-Classic networking.
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Whether to allow an Elastic IP address to be re-associated.
	// Defaults to true.
	AllowReassociation *bool `json:"allowReassociation,omitempty" tf:"allow_reassociation,omitempty"`

	// ID that represents the association of the Elastic IP address with an instance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ID of the instance.
	// The instance must have exactly one attached network interface.
	// You can specify either the instance ID or the network interface ID, but not both.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// ID of the network interface.
	// If the instance has more than one network interface, you must specify a network interface ID.
	// You can specify either the instance ID or the network interface ID, but not both.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Primary or secondary private IP address to associate with the Elastic IP address.
	// If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// Address of the associated Elastic IP.
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type EIPAssociationParameters struct {

	// ID of the associated Elastic IP.
	// This argument is required despite being optional at the resource level due to legacy support for EC2-Classic networking.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.EIP
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Reference to a EIP in ec2 to populate allocationId.
	// +kubebuilder:validation:Optional
	AllocationIDRef *v1.Reference `json:"allocationIdRef,omitempty" tf:"-"`

	// Selector for a EIP in ec2 to populate allocationId.
	// +kubebuilder:validation:Optional
	AllocationIDSelector *v1.Selector `json:"allocationIdSelector,omitempty" tf:"-"`

	// Whether to allow an Elastic IP address to be re-associated.
	// Defaults to true.
	// +kubebuilder:validation:Optional
	AllowReassociation *bool `json:"allowReassociation,omitempty" tf:"allow_reassociation,omitempty"`

	// ID of the instance.
	// The instance must have exactly one attached network interface.
	// You can specify either the instance ID or the network interface ID, but not both.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta2.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// ID of the network interface.
	// If the instance has more than one network interface, you must specify a network interface ID.
	// You can specify either the instance ID or the network interface ID, but not both.
	// +kubebuilder:validation:Optional
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Primary or secondary private IP address to associate with the Elastic IP address.
	// If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	// +kubebuilder:validation:Optional
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// Address of the associated Elastic IP.
	// +kubebuilder:validation:Optional
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`
}

// EIPAssociationSpec defines the desired state of EIPAssociation
type EIPAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EIPAssociationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EIPAssociationInitParameters `json:"initProvider,omitempty"`
}

// EIPAssociationStatus defines the observed state of EIPAssociation.
type EIPAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EIPAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EIPAssociation is the Schema for the EIPAssociations API. Provides an AWS EIP Association
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type EIPAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EIPAssociationSpec   `json:"spec"`
	Status            EIPAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EIPAssociationList contains a list of EIPAssociations
type EIPAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EIPAssociation `json:"items"`
}

// Repository type metadata.
var (
	EIPAssociation_Kind             = "EIPAssociation"
	EIPAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EIPAssociation_Kind}.String()
	EIPAssociation_KindAPIVersion   = EIPAssociation_Kind + "." + CRDGroupVersion.String()
	EIPAssociation_GroupVersionKind = CRDGroupVersion.WithKind(EIPAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&EIPAssociation{}, &EIPAssociationList{})
}

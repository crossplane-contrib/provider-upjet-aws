// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type CatalogTableOptimizerInitParameters struct {

	// A configuration block that defines the table optimizer settings. See Configuration for additional details.
	Configuration []ConfigurationInitParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// The name of the table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CatalogTableOptimizerObservation struct {

	// The Catalog ID of the table.
	CatalogID *string `json:"catalogId,omitempty" tf:"catalog_id,omitempty"`

	// A configuration block that defines the table optimizer settings. See Configuration for additional details.
	Configuration []ConfigurationObservation `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// The name of the database in the catalog in which the table resides.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The name of the table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CatalogTableOptimizerParameters struct {

	// The Catalog ID of the table.
	// +kubebuilder:validation:Required
	CatalogID *string `json:"catalogId" tf:"catalog_id,omitempty"`

	// A configuration block that defines the table optimizer settings. See Configuration for additional details.
	// +kubebuilder:validation:Optional
	Configuration []ConfigurationParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// The name of the database in the catalog in which the table resides.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/glue/v1beta1.CatalogDatabase
	// +kubebuilder:validation:Optional
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a CatalogDatabase in glue to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.NamespacedReference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a CatalogDatabase in glue to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.NamespacedSelector `json:"databaseNameSelector,omitempty" tf:"-"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The name of the table.
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConfigurationInitParameters struct {

	// Indicates whether the table optimizer is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.
	OrphanFileDeletionConfiguration []OrphanFileDeletionConfigurationInitParameters `json:"orphanFileDeletionConfiguration,omitempty" tf:"orphan_file_deletion_configuration,omitempty"`

	// The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.
	RetentionConfiguration []RetentionConfigurationInitParameters `json:"retentionConfiguration,omitempty" tf:"retention_configuration,omitempty"`

	// The ARN of the IAM role to use for the table optimizer.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type ConfigurationObservation struct {

	// Indicates whether the table optimizer is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.
	OrphanFileDeletionConfiguration []OrphanFileDeletionConfigurationObservation `json:"orphanFileDeletionConfiguration,omitempty" tf:"orphan_file_deletion_configuration,omitempty"`

	// The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.
	RetentionConfiguration []RetentionConfigurationObservation `json:"retentionConfiguration,omitempty" tf:"retention_configuration,omitempty"`

	// The ARN of the IAM role to use for the table optimizer.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type ConfigurationParameters struct {

	// Indicates whether the table optimizer is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.
	// +kubebuilder:validation:Optional
	OrphanFileDeletionConfiguration []OrphanFileDeletionConfigurationParameters `json:"orphanFileDeletionConfiguration,omitempty" tf:"orphan_file_deletion_configuration,omitempty"`

	// The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.
	// +kubebuilder:validation:Optional
	RetentionConfiguration []RetentionConfigurationParameters `json:"retentionConfiguration,omitempty" tf:"retention_configuration,omitempty"`

	// The ARN of the IAM role to use for the table optimizer.
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn" tf:"role_arn,omitempty"`
}

type IcebergConfigurationInitParameters struct {

	// Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The number of days that orphan files should be retained before file deletion. Defaults to 3.
	OrphanFileRetentionPeriodInDays *float64 `json:"orphanFileRetentionPeriodInDays,omitempty" tf:"orphan_file_retention_period_in_days,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`
}

type IcebergConfigurationObservation struct {

	// Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The number of days that orphan files should be retained before file deletion. Defaults to 3.
	OrphanFileRetentionPeriodInDays *float64 `json:"orphanFileRetentionPeriodInDays,omitempty" tf:"orphan_file_retention_period_in_days,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`
}

type IcebergConfigurationParameters struct {

	// Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The number of days that orphan files should be retained before file deletion. Defaults to 3.
	// +kubebuilder:validation:Optional
	OrphanFileRetentionPeriodInDays *float64 `json:"orphanFileRetentionPeriodInDays,omitempty" tf:"orphan_file_retention_period_in_days,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	// +kubebuilder:validation:Optional
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`
}

type OrphanFileDeletionConfigurationInitParameters struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	IcebergConfiguration []IcebergConfigurationInitParameters `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

type OrphanFileDeletionConfigurationObservation struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	IcebergConfiguration []IcebergConfigurationObservation `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

type OrphanFileDeletionConfigurationParameters struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	// +kubebuilder:validation:Optional
	IcebergConfiguration []IcebergConfigurationParameters `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

type RetentionConfigurationIcebergConfigurationInitParameters struct {

	// If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.
	CleanExpiredFiles *bool `json:"cleanExpiredFiles,omitempty" tf:"clean_expired_files,omitempty"`

	// The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.
	NumberOfSnapshotsToRetain *float64 `json:"numberOfSnapshotsToRetain,omitempty" tf:"number_of_snapshots_to_retain,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`

	// The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.
	SnapshotRetentionPeriodInDays *float64 `json:"snapshotRetentionPeriodInDays,omitempty" tf:"snapshot_retention_period_in_days,omitempty"`
}

type RetentionConfigurationIcebergConfigurationObservation struct {

	// If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.
	CleanExpiredFiles *bool `json:"cleanExpiredFiles,omitempty" tf:"clean_expired_files,omitempty"`

	// The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.
	NumberOfSnapshotsToRetain *float64 `json:"numberOfSnapshotsToRetain,omitempty" tf:"number_of_snapshots_to_retain,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`

	// The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.
	SnapshotRetentionPeriodInDays *float64 `json:"snapshotRetentionPeriodInDays,omitempty" tf:"snapshot_retention_period_in_days,omitempty"`
}

type RetentionConfigurationIcebergConfigurationParameters struct {

	// If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.
	// +kubebuilder:validation:Optional
	CleanExpiredFiles *bool `json:"cleanExpiredFiles,omitempty" tf:"clean_expired_files,omitempty"`

	// The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.
	// +kubebuilder:validation:Optional
	NumberOfSnapshotsToRetain *float64 `json:"numberOfSnapshotsToRetain,omitempty" tf:"number_of_snapshots_to_retain,omitempty"`

	// interval in hours between orphan file deletion job runs. Defaults to 24.
	// +kubebuilder:validation:Optional
	RunRateInHours *float64 `json:"runRateInHours,omitempty" tf:"run_rate_in_hours,omitempty"`

	// The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.
	// +kubebuilder:validation:Optional
	SnapshotRetentionPeriodInDays *float64 `json:"snapshotRetentionPeriodInDays,omitempty" tf:"snapshot_retention_period_in_days,omitempty"`
}

type RetentionConfigurationInitParameters struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	IcebergConfiguration []RetentionConfigurationIcebergConfigurationInitParameters `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

type RetentionConfigurationObservation struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	IcebergConfiguration []RetentionConfigurationIcebergConfigurationObservation `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

type RetentionConfigurationParameters struct {

	// The configuration for an Iceberg orphan file deletion optimizer.
	// +kubebuilder:validation:Optional
	IcebergConfiguration []RetentionConfigurationIcebergConfigurationParameters `json:"icebergConfiguration,omitempty" tf:"iceberg_configuration,omitempty"`
}

// CatalogTableOptimizerSpec defines the desired state of CatalogTableOptimizer
type CatalogTableOptimizerSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            CatalogTableOptimizerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CatalogTableOptimizerInitParameters `json:"initProvider,omitempty"`
}

// CatalogTableOptimizerStatus defines the observed state of CatalogTableOptimizer.
type CatalogTableOptimizerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CatalogTableOptimizerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CatalogTableOptimizer is the Schema for the CatalogTableOptimizers API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type CatalogTableOptimizer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tableName) || (has(self.initProvider) && has(self.initProvider.tableName))",message="spec.forProvider.tableName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   CatalogTableOptimizerSpec   `json:"spec"`
	Status CatalogTableOptimizerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CatalogTableOptimizerList contains a list of CatalogTableOptimizers
type CatalogTableOptimizerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CatalogTableOptimizer `json:"items"`
}

// Repository type metadata.
var (
	CatalogTableOptimizer_Kind             = "CatalogTableOptimizer"
	CatalogTableOptimizer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CatalogTableOptimizer_Kind}.String()
	CatalogTableOptimizer_KindAPIVersion   = CatalogTableOptimizer_Kind + "." + CRDGroupVersion.String()
	CatalogTableOptimizer_GroupVersionKind = CRDGroupVersion.WithKind(CatalogTableOptimizer_Kind)
)

func init() {
	SchemeBuilder.Register(&CatalogTableOptimizer{}, &CatalogTableOptimizerList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ActionConditionInitParameters struct {

	// Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, COUNT, CAPTCHA, CHALLENGE and EXCLUDED_AS_COUNT.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`
}

type ActionConditionObservation struct {

	// Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, COUNT, CAPTCHA, CHALLENGE and EXCLUDED_AS_COUNT.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`
}

type ActionConditionParameters struct {

	// Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, COUNT, CAPTCHA, CHALLENGE and EXCLUDED_AS_COUNT.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`
}

type ConditionInitParameters struct {

	// Configuration for a single action condition. See Action Condition below for more details.
	ActionCondition *ActionConditionInitParameters `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// Condition for a single label name. See Label Name Condition below for more details.
	LabelNameCondition *LabelNameConditionInitParameters `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type ConditionObservation struct {

	// Configuration for a single action condition. See Action Condition below for more details.
	ActionCondition *ActionConditionObservation `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// Condition for a single label name. See Label Name Condition below for more details.
	LabelNameCondition *LabelNameConditionObservation `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type ConditionParameters struct {

	// Configuration for a single action condition. See Action Condition below for more details.
	// +kubebuilder:validation:Optional
	ActionCondition *ActionConditionParameters `json:"actionCondition,omitempty" tf:"action_condition,omitempty"`

	// Condition for a single label name. See Label Name Condition below for more details.
	// +kubebuilder:validation:Optional
	LabelNameCondition *LabelNameConditionParameters `json:"labelNameCondition,omitempty" tf:"label_name_condition,omitempty"`
}

type FilterInitParameters struct {

	// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
	Behavior *string `json:"behavior,omitempty" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
	Requirement *string `json:"requirement,omitempty" tf:"requirement,omitempty"`
}

type FilterObservation struct {

	// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
	Behavior *string `json:"behavior,omitempty" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
	Requirement *string `json:"requirement,omitempty" tf:"requirement,omitempty"`
}

type FilterParameters struct {

	// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
	// +kubebuilder:validation:Optional
	Behavior *string `json:"behavior" tf:"behavior,omitempty"`

	// Match condition(s) for the filter. See Condition below for more details.
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition" tf:"condition,omitempty"`

	// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
	// +kubebuilder:validation:Optional
	Requirement *string `json:"requirement" tf:"requirement,omitempty"`
}

type LabelNameConditionInitParameters struct {

	// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName *string `json:"labelName,omitempty" tf:"label_name,omitempty"`
}

type LabelNameConditionObservation struct {

	// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName *string `json:"labelName,omitempty" tf:"label_name,omitempty"`
}

type LabelNameConditionParameters struct {

	// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
	// +kubebuilder:validation:Optional
	LabelName *string `json:"labelName" tf:"label_name,omitempty"`
}

type LoggingFilterInitParameters struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
	DefaultBehavior *string `json:"defaultBehavior,omitempty" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`
}

type LoggingFilterObservation struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
	DefaultBehavior *string `json:"defaultBehavior,omitempty" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`
}

type LoggingFilterParameters struct {

	// Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
	// +kubebuilder:validation:Optional
	DefaultBehavior *string `json:"defaultBehavior" tf:"default_behavior,omitempty"`

	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter" tf:"filter,omitempty"`
}

type MethodInitParameters struct {
}

type MethodObservation struct {
}

type MethodParameters struct {
}

type QueryStringInitParameters struct {
}

type QueryStringObservation struct {
}

type QueryStringParameters struct {
}

type RedactedFieldsInitParameters struct {

	// HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	Method *MethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
	QueryString *QueryStringInitParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.
	SingleHeader *SingleHeaderInitParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
	URIPath *URIPathInitParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RedactedFieldsObservation struct {

	// HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	Method *MethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
	QueryString *QueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.
	SingleHeader *SingleHeaderObservation `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
	URIPath *URIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RedactedFieldsParameters struct {

	// HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
	// +kubebuilder:validation:Optional
	Method *MethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
	// +kubebuilder:validation:Optional
	QueryString *QueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.
	// +kubebuilder:validation:Optional
	SingleHeader *SingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
	// +kubebuilder:validation:Optional
	URIPath *URIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type SingleHeaderInitParameters struct {

	// Name of the query header to redact. This setting must be provided in lowercase characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SingleHeaderObservation struct {

	// Name of the query header to redact. This setting must be provided in lowercase characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SingleHeaderParameters struct {

	// Name of the query header to redact. This setting must be provided in lowercase characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type URIPathInitParameters struct {
}

type URIPathObservation struct {
}

type URIPathParameters struct {
}

type WebACLLoggingConfigurationInitParameters struct {

	// Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",false)
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// References to DeliveryStream in firehose to populate logDestinationConfigs.
	// +kubebuilder:validation:Optional
	LogDestinationConfigsRefs []v1.NamespacedReference `json:"logDestinationConfigsRefs,omitempty" tf:"-"`

	// Selector for a list of DeliveryStream in firehose to populate logDestinationConfigs.
	// +kubebuilder:validation:Optional
	LogDestinationConfigsSelector *v1.NamespacedSelector `json:"logDestinationConfigsSelector,omitempty" tf:"-"`

	// Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.
	LoggingFilter *LoggingFilterInitParameters `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	RedactedFields []RedactedFieldsInitParameters `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`
}

type WebACLLoggingConfigurationObservation struct {

	// Amazon Resource Name (ARN) of the WAFv2 Web ACL.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.
	LoggingFilter *LoggingFilterObservation `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	RedactedFields []RedactedFieldsObservation `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
	// AWS WebACL ARN
	ResourceArn *string `json:"resourceArn,omitempty" tf:"resource_arn,omitempty"`
}

type WebACLLoggingConfigurationParameters struct {

	// Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
	// AWS Kinesis Firehose Delivery Stream ARNs
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	// +listType=set
	LogDestinationConfigs []*string `json:"logDestinationConfigs,omitempty" tf:"log_destination_configs,omitempty"`

	// References to DeliveryStream in firehose to populate logDestinationConfigs.
	// +kubebuilder:validation:Optional
	LogDestinationConfigsRefs []v1.NamespacedReference `json:"logDestinationConfigsRefs,omitempty" tf:"-"`

	// Selector for a list of DeliveryStream in firehose to populate logDestinationConfigs.
	// +kubebuilder:validation:Optional
	LogDestinationConfigsSelector *v1.NamespacedSelector `json:"logDestinationConfigsSelector,omitempty" tf:"-"`

	// Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.
	// +kubebuilder:validation:Optional
	LoggingFilter *LoggingFilterParameters `json:"loggingFilter,omitempty" tf:"logging_filter,omitempty"`

	// Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
	// Parts of the request to exclude from logs
	// +kubebuilder:validation:Optional
	RedactedFields []RedactedFieldsParameters `json:"redactedFields,omitempty" tf:"redacted_fields,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
	// AWS WebACL ARN
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/wafv2/v1beta1.WebACL
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	ResourceArn *string `json:"resourceArn,omitempty" tf:"resource_arn,omitempty"`

	// Reference to a WebACL in wafv2 to populate resourceArn.
	// +kubebuilder:validation:Optional
	ResourceArnRef *v1.NamespacedReference `json:"resourceArnRef,omitempty" tf:"-"`

	// Selector for a WebACL in wafv2 to populate resourceArn.
	// +kubebuilder:validation:Optional
	ResourceArnSelector *v1.NamespacedSelector `json:"resourceArnSelector,omitempty" tf:"-"`
}

// WebACLLoggingConfigurationSpec defines the desired state of WebACLLoggingConfiguration
type WebACLLoggingConfigurationSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            WebACLLoggingConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebACLLoggingConfigurationInitParameters `json:"initProvider,omitempty"`
}

// WebACLLoggingConfigurationStatus defines the observed state of WebACLLoggingConfiguration.
type WebACLLoggingConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebACLLoggingConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebACLLoggingConfiguration is the Schema for the WebACLLoggingConfigurations API. Create a resource for WAFv2 Web ACL Logging Configuration.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type WebACLLoggingConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebACLLoggingConfigurationSpec   `json:"spec"`
	Status            WebACLLoggingConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebACLLoggingConfigurationList contains a list of WebACLLoggingConfigurations
type WebACLLoggingConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebACLLoggingConfiguration `json:"items"`
}

// Repository type metadata.
var (
	WebACLLoggingConfiguration_Kind             = "WebACLLoggingConfiguration"
	WebACLLoggingConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebACLLoggingConfiguration_Kind}.String()
	WebACLLoggingConfiguration_KindAPIVersion   = WebACLLoggingConfiguration_Kind + "." + CRDGroupVersion.String()
	WebACLLoggingConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(WebACLLoggingConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&WebACLLoggingConfiguration{}, &WebACLLoggingConfigurationList{})
}

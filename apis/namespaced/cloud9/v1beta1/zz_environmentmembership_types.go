// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type EnvironmentMembershipInitParameters struct {

	// The type of environment member permissions you want to associate with this environment member. Allowed values are read-only and read-write .
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`
}

type EnvironmentMembershipObservation struct {

	// The ID of the environment that contains the environment member you want to add.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// The ID of the environment membership.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The type of environment member permissions you want to associate with this environment member. Allowed values are read-only and read-write .
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn *string `json:"userArn,omitempty" tf:"user_arn,omitempty"`

	// The user ID in AWS Identity and Access Management (AWS IAM) of the environment member.
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type EnvironmentMembershipParameters struct {

	// The ID of the environment that contains the environment member you want to add.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/cloud9/v1beta1.EnvironmentEC2
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Reference to a EnvironmentEC2 in cloud9 to populate environmentId.
	// +kubebuilder:validation:Optional
	EnvironmentIDRef *v1.NamespacedReference `json:"environmentIdRef,omitempty" tf:"-"`

	// Selector for a EnvironmentEC2 in cloud9 to populate environmentId.
	// +kubebuilder:validation:Optional
	EnvironmentIDSelector *v1.NamespacedSelector `json:"environmentIdSelector,omitempty" tf:"-"`

	// The type of environment member permissions you want to associate with this environment member. Allowed values are read-only and read-write .
	// +kubebuilder:validation:Optional
	Permissions *string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The Amazon Resource Name (ARN) of the environment member you want to add.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/iam/v1beta1.User
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	UserArn *string `json:"userArn,omitempty" tf:"user_arn,omitempty"`

	// Reference to a User in iam to populate userArn.
	// +kubebuilder:validation:Optional
	UserArnRef *v1.NamespacedReference `json:"userArnRef,omitempty" tf:"-"`

	// Selector for a User in iam to populate userArn.
	// +kubebuilder:validation:Optional
	UserArnSelector *v1.NamespacedSelector `json:"userArnSelector,omitempty" tf:"-"`
}

// EnvironmentMembershipSpec defines the desired state of EnvironmentMembership
type EnvironmentMembershipSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            EnvironmentMembershipParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentMembershipInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentMembershipStatus defines the observed state of EnvironmentMembership.
type EnvironmentMembershipStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentMembershipObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentMembership is the Schema for the EnvironmentMemberships API. Provides an environment member to an AWS Cloud9 development environment.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type EnvironmentMembership struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.permissions) || (has(self.initProvider) && has(self.initProvider.permissions))",message="spec.forProvider.permissions is a required parameter"
	Spec   EnvironmentMembershipSpec   `json:"spec"`
	Status EnvironmentMembershipStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentMembershipList contains a list of EnvironmentMemberships
type EnvironmentMembershipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentMembership `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentMembership_Kind             = "EnvironmentMembership"
	EnvironmentMembership_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentMembership_Kind}.String()
	EnvironmentMembership_KindAPIVersion   = EnvironmentMembership_Kind + "." + CRDGroupVersion.String()
	EnvironmentMembership_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentMembership_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentMembership{}, &EnvironmentMembershipList{})
}

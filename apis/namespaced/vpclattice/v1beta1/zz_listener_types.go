// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type DefaultActionInitParameters struct {
	FixedResponse *FixedResponseInitParameters `json:"fixedResponse,omitempty" tf:"fixed_response,omitempty"`

	// Route requests to one or more target groups. See Forward blocks below.
	Forward []ForwardInitParameters `json:"forward,omitempty" tf:"forward,omitempty"`
}

type DefaultActionObservation struct {
	FixedResponse *FixedResponseObservation `json:"fixedResponse,omitempty" tf:"fixed_response,omitempty"`

	// Route requests to one or more target groups. See Forward blocks below.
	Forward []ForwardObservation `json:"forward,omitempty" tf:"forward,omitempty"`
}

type DefaultActionParameters struct {

	// +kubebuilder:validation:Optional
	FixedResponse *FixedResponseParameters `json:"fixedResponse,omitempty" tf:"fixed_response,omitempty"`

	// Route requests to one or more target groups. See Forward blocks below.
	// +kubebuilder:validation:Optional
	Forward []ForwardParameters `json:"forward,omitempty" tf:"forward,omitempty"`
}

type FixedResponseInitParameters struct {

	// Custom HTTP status code to return, e.g. a 404 response code. See Listeners in the AWS documentation for a list of supported codes.
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FixedResponseObservation struct {

	// Custom HTTP status code to return, e.g. a 404 response code. See Listeners in the AWS documentation for a list of supported codes.
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type FixedResponseParameters struct {

	// Custom HTTP status code to return, e.g. a 404 response code. See Listeners in the AWS documentation for a list of supported codes.
	// +kubebuilder:validation:Optional
	StatusCode *float64 `json:"statusCode" tf:"status_code,omitempty"`
}

type ForwardInitParameters struct {

	// One or more target group blocks.
	TargetGroups []TargetGroupsInitParameters `json:"targetGroups,omitempty" tf:"target_groups,omitempty"`
}

type ForwardObservation struct {

	// One or more target group blocks.
	TargetGroups []TargetGroupsObservation `json:"targetGroups,omitempty" tf:"target_groups,omitempty"`
}

type ForwardParameters struct {

	// One or more target group blocks.
	// +kubebuilder:validation:Optional
	TargetGroups []TargetGroupsParameters `json:"targetGroups,omitempty" tf:"target_groups,omitempty"`
}

type ListenerInitParameters struct {

	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction *DefaultActionInitParameters `json:"defaultAction,omitempty" tf:"default_action,omitempty"`

	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Listener port. You can specify a value from 1 to 65535. If port is not specified and protocol is HTTP, the value will default to 80. If port is not specified and protocol is HTTPS, the value will default to 443.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol for the listener. Supported values are HTTP, HTTPS or TLS_PASSTHROUGH
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	ServiceArn *string `json:"serviceArn,omitempty" tf:"service_arn,omitempty"`

	// ID of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	// -> NOTE: You must specify one of the following arguments: service_arn or service_identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.Service
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// Reference to a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierRef *v1.NamespacedReference `json:"serviceIdentifierRef,omitempty" tf:"-"`

	// Selector for a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierSelector *v1.NamespacedSelector `json:"serviceIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ListenerObservation struct {

	// ARN of the listener.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Date and time that the listener was created, specified in ISO-8601 format.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction *DefaultActionObservation `json:"defaultAction,omitempty" tf:"default_action,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Date and time that the listener was last updated, specified in ISO-8601 format.
	LastUpdatedAt *string `json:"lastUpdatedAt,omitempty" tf:"last_updated_at,omitempty"`

	// Standalone ID of the listener, e.g. listener-0a1b2c3d4e5f6g.
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Listener port. You can specify a value from 1 to 65535. If port is not specified and protocol is HTTP, the value will default to 80. If port is not specified and protocol is HTTPS, the value will default to 443.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol for the listener. Supported values are HTTP, HTTPS or TLS_PASSTHROUGH
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	ServiceArn *string `json:"serviceArn,omitempty" tf:"service_arn,omitempty"`

	// ID of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	// -> NOTE: You must specify one of the following arguments: service_arn or service_identifier.
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type ListenerParameters struct {

	// Default action block for the default listener rule. Default action blocks are defined below.
	// +kubebuilder:validation:Optional
	DefaultAction *DefaultActionParameters `json:"defaultAction,omitempty" tf:"default_action,omitempty"`

	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Listener port. You can specify a value from 1 to 65535. If port is not specified and protocol is HTTP, the value will default to 80. If port is not specified and protocol is HTTPS, the value will default to 443.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Protocol for the listener. Supported values are HTTP, HTTPS or TLS_PASSTHROUGH
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	// +kubebuilder:validation:Optional
	ServiceArn *string `json:"serviceArn,omitempty" tf:"service_arn,omitempty"`

	// ID of the VPC Lattice service. You must include either the service_arn or service_identifier arguments.
	// -> NOTE: You must specify one of the following arguments: service_arn or service_identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.Service
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// Reference to a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierRef *v1.NamespacedReference `json:"serviceIdentifierRef,omitempty" tf:"-"`

	// Selector for a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierSelector *v1.NamespacedSelector `json:"serviceIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type TargetGroupsInitParameters struct {

	// ID or Amazon Resource Name (ARN) of the target group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.TargetGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	TargetGroupIdentifier *string `json:"targetGroupIdentifier,omitempty" tf:"target_group_identifier,omitempty"`

	// Reference to a TargetGroup in vpclattice to populate targetGroupIdentifier.
	// +kubebuilder:validation:Optional
	TargetGroupIdentifierRef *v1.NamespacedReference `json:"targetGroupIdentifierRef,omitempty" tf:"-"`

	// Selector for a TargetGroup in vpclattice to populate targetGroupIdentifier.
	// +kubebuilder:validation:Optional
	TargetGroupIdentifierSelector *v1.NamespacedSelector `json:"targetGroupIdentifierSelector,omitempty" tf:"-"`

	// Determines how requests are distributed to the target group. Only required if you specify multiple target groups for a forward action. For example, if you specify two target groups, one with a
	// weight of 10 and the other with a weight of 20, the target group with a weight of 20 receives twice as many requests as the other target group. See Listener rules in the AWS documentation for additional examples. Default: 100.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetGroupsObservation struct {

	// ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier *string `json:"targetGroupIdentifier,omitempty" tf:"target_group_identifier,omitempty"`

	// Determines how requests are distributed to the target group. Only required if you specify multiple target groups for a forward action. For example, if you specify two target groups, one with a
	// weight of 10 and the other with a weight of 20, the target group with a weight of 20 receives twice as many requests as the other target group. See Listener rules in the AWS documentation for additional examples. Default: 100.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetGroupsParameters struct {

	// ID or Amazon Resource Name (ARN) of the target group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.TargetGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TargetGroupIdentifier *string `json:"targetGroupIdentifier,omitempty" tf:"target_group_identifier,omitempty"`

	// Reference to a TargetGroup in vpclattice to populate targetGroupIdentifier.
	// +kubebuilder:validation:Optional
	TargetGroupIdentifierRef *v1.NamespacedReference `json:"targetGroupIdentifierRef,omitempty" tf:"-"`

	// Selector for a TargetGroup in vpclattice to populate targetGroupIdentifier.
	// +kubebuilder:validation:Optional
	TargetGroupIdentifierSelector *v1.NamespacedSelector `json:"targetGroupIdentifierSelector,omitempty" tf:"-"`

	// Determines how requests are distributed to the target group. Only required if you specify multiple target groups for a forward action. For example, if you specify two target groups, one with a
	// weight of 10 and the other with a weight of 20, the target group with a weight of 20 receives twice as many requests as the other target group. See Listener rules in the AWS documentation for additional examples. Default: 100.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

// ListenerSpec defines the desired state of Listener
type ListenerSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ListenerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ListenerInitParameters `json:"initProvider,omitempty"`
}

// ListenerStatus defines the observed state of Listener.
type ListenerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ListenerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Listener is the Schema for the Listeners API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type Listener struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultAction) || (has(self.initProvider) && has(self.initProvider.defaultAction))",message="spec.forProvider.defaultAction is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	Spec   ListenerSpec   `json:"spec"`
	Status ListenerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ListenerList contains a list of Listeners
type ListenerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Listener `json:"items"`
}

// Repository type metadata.
var (
	Listener_Kind             = "Listener"
	Listener_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Listener_Kind}.String()
	Listener_KindAPIVersion   = Listener_Kind + "." + CRDGroupVersion.String()
	Listener_GroupVersionKind = CRDGroupVersion.WithKind(Listener_Kind)
)

func init() {
	SchemeBuilder.Register(&Listener{}, &ListenerList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ServiceNetworkServiceAssociationDNSEntryInitParameters struct {
}

type ServiceNetworkServiceAssociationDNSEntryObservation struct {

	// The domain name of the service.
	DomainName *string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	// The ID of the hosted zone.
	HostedZoneID *string `json:"hostedZoneId,omitempty" tf:"hosted_zone_id,omitempty"`
}

type ServiceNetworkServiceAssociationDNSEntryParameters struct {
}

type ServiceNetworkServiceAssociationInitParameters struct {

	// The ID or Amazon Resource Identifier (ARN) of the service.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.Service
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// Reference to a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierRef *v1.NamespacedReference `json:"serviceIdentifierRef,omitempty" tf:"-"`

	// Selector for a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierSelector *v1.NamespacedSelector `json:"serviceIdentifierSelector,omitempty" tf:"-"`

	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.ServiceNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceNetworkIdentifier *string `json:"serviceNetworkIdentifier,omitempty" tf:"service_network_identifier,omitempty"`

	// Reference to a ServiceNetwork in vpclattice to populate serviceNetworkIdentifier.
	// +kubebuilder:validation:Optional
	ServiceNetworkIdentifierRef *v1.NamespacedReference `json:"serviceNetworkIdentifierRef,omitempty" tf:"-"`

	// Selector for a ServiceNetwork in vpclattice to populate serviceNetworkIdentifier.
	// +kubebuilder:validation:Optional
	ServiceNetworkIdentifierSelector *v1.NamespacedSelector `json:"serviceNetworkIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ServiceNetworkServiceAssociationObservation struct {

	// The ARN of the Association.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The account that created the association.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// The custom domain name of the service.
	CustomDomainName *string `json:"customDomainName,omitempty" tf:"custom_domain_name,omitempty"`

	// The DNS name of the service.
	DNSEntry []ServiceNetworkServiceAssociationDNSEntryObservation `json:"dnsEntry,omitempty" tf:"dns_entry,omitempty"`

	// The ID of the association.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service.
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	ServiceNetworkIdentifier *string `json:"serviceNetworkIdentifier,omitempty" tf:"service_network_identifier,omitempty"`

	// The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type ServiceNetworkServiceAssociationParameters struct {

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// The ID or Amazon Resource Identifier (ARN) of the service.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.Service
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty" tf:"service_identifier,omitempty"`

	// Reference to a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierRef *v1.NamespacedReference `json:"serviceIdentifierRef,omitempty" tf:"-"`

	// Selector for a Service in vpclattice to populate serviceIdentifier.
	// +kubebuilder:validation:Optional
	ServiceIdentifierSelector *v1.NamespacedSelector `json:"serviceIdentifierSelector,omitempty" tf:"-"`

	// The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.ServiceNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceNetworkIdentifier *string `json:"serviceNetworkIdentifier,omitempty" tf:"service_network_identifier,omitempty"`

	// Reference to a ServiceNetwork in vpclattice to populate serviceNetworkIdentifier.
	// +kubebuilder:validation:Optional
	ServiceNetworkIdentifierRef *v1.NamespacedReference `json:"serviceNetworkIdentifierRef,omitempty" tf:"-"`

	// Selector for a ServiceNetwork in vpclattice to populate serviceNetworkIdentifier.
	// +kubebuilder:validation:Optional
	ServiceNetworkIdentifierSelector *v1.NamespacedSelector `json:"serviceNetworkIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// ServiceNetworkServiceAssociationSpec defines the desired state of ServiceNetworkServiceAssociation
type ServiceNetworkServiceAssociationSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ServiceNetworkServiceAssociationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceNetworkServiceAssociationInitParameters `json:"initProvider,omitempty"`
}

// ServiceNetworkServiceAssociationStatus defines the observed state of ServiceNetworkServiceAssociation.
type ServiceNetworkServiceAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceNetworkServiceAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceNetworkServiceAssociation is the Schema for the ServiceNetworkServiceAssociations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type ServiceNetworkServiceAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceNetworkServiceAssociationSpec   `json:"spec"`
	Status            ServiceNetworkServiceAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceNetworkServiceAssociationList contains a list of ServiceNetworkServiceAssociations
type ServiceNetworkServiceAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceNetworkServiceAssociation `json:"items"`
}

// Repository type metadata.
var (
	ServiceNetworkServiceAssociation_Kind             = "ServiceNetworkServiceAssociation"
	ServiceNetworkServiceAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceNetworkServiceAssociation_Kind}.String()
	ServiceNetworkServiceAssociation_KindAPIVersion   = ServiceNetworkServiceAssociation_Kind + "." + CRDGroupVersion.String()
	ServiceNetworkServiceAssociation_GroupVersionKind = CRDGroupVersion.WithKind(ServiceNetworkServiceAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceNetworkServiceAssociation{}, &ServiceNetworkServiceAssociationList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ArnResourceInitParameters struct {

	// The ARN of the Resource for this configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/rds/v1beta1.ClusterInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",true)
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a ClusterInstance in rds to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.NamespacedReference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a ClusterInstance in rds to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.NamespacedSelector `json:"arnSelector,omitempty" tf:"-"`
}

type ArnResourceObservation struct {

	// The ARN of the Resource for this configuration.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`
}

type ArnResourceParameters struct {

	// The ARN of the Resource for this configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/rds/v1beta1.ClusterInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Reference to a ClusterInstance in rds to populate arn.
	// +kubebuilder:validation:Optional
	ArnRef *v1.NamespacedReference `json:"arnRef,omitempty" tf:"-"`

	// Selector for a ClusterInstance in rds to populate arn.
	// +kubebuilder:validation:Optional
	ArnSelector *v1.NamespacedSelector `json:"arnSelector,omitempty" tf:"-"`
}

type DNSResourceInitParameters struct {

	// The hostname of the Resource for this configuration.
	DomainName *string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	// The IP Address type either IPV4 or IPV6
	IPAddressType *string `json:"ipAddressType,omitempty" tf:"ip_address_type,omitempty"`
}

type DNSResourceObservation struct {

	// The hostname of the Resource for this configuration.
	DomainName *string `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	// The IP Address type either IPV4 or IPV6
	IPAddressType *string `json:"ipAddressType,omitempty" tf:"ip_address_type,omitempty"`
}

type DNSResourceParameters struct {

	// The hostname of the Resource for this configuration.
	// +kubebuilder:validation:Optional
	DomainName *string `json:"domainName" tf:"domain_name,omitempty"`

	// The IP Address type either IPV4 or IPV6
	// +kubebuilder:validation:Optional
	IPAddressType *string `json:"ipAddressType" tf:"ip_address_type,omitempty"`
}

type IPResourceInitParameters struct {

	// The IP Address of the Resource for this configuration.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPResourceObservation struct {

	// The IP Address of the Resource for this configuration.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPResourceParameters struct {

	// The IP Address of the Resource for this configuration.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress" tf:"ip_address,omitempty"`
}

type ResourceConfigurationDefinitionInitParameters struct {

	// Resource DNS Configuration. See arn_resource Block for details.
	ArnResource []ArnResourceInitParameters `json:"arnResource,omitempty" tf:"arn_resource,omitempty"`

	// Resource DNS Configuration. See dns_resource Block for details.
	DNSResource []DNSResourceInitParameters `json:"dnsResource,omitempty" tf:"dns_resource,omitempty"`

	// Resource DNS Configuration. See ip_resource Block for details.
	IPResource []IPResourceInitParameters `json:"ipResource,omitempty" tf:"ip_resource,omitempty"`
}

type ResourceConfigurationDefinitionObservation struct {

	// Resource DNS Configuration. See arn_resource Block for details.
	ArnResource []ArnResourceObservation `json:"arnResource,omitempty" tf:"arn_resource,omitempty"`

	// Resource DNS Configuration. See dns_resource Block for details.
	DNSResource []DNSResourceObservation `json:"dnsResource,omitempty" tf:"dns_resource,omitempty"`

	// Resource DNS Configuration. See ip_resource Block for details.
	IPResource []IPResourceObservation `json:"ipResource,omitempty" tf:"ip_resource,omitempty"`
}

type ResourceConfigurationDefinitionParameters struct {

	// Resource DNS Configuration. See arn_resource Block for details.
	// +kubebuilder:validation:Optional
	ArnResource []ArnResourceParameters `json:"arnResource,omitempty" tf:"arn_resource,omitempty"`

	// Resource DNS Configuration. See dns_resource Block for details.
	// +kubebuilder:validation:Optional
	DNSResource []DNSResourceParameters `json:"dnsResource,omitempty" tf:"dns_resource,omitempty"`

	// Resource DNS Configuration. See ip_resource Block for details.
	// +kubebuilder:validation:Optional
	IPResource []IPResourceParameters `json:"ipResource,omitempty" tf:"ip_resource,omitempty"`
}

type ResourceConfigurationInitParameters struct {

	// Allow or Deny the association of this resource to a shareable service network.
	AllowAssociationToShareableServiceNetwork *bool `json:"allowAssociationToShareableServiceNetwork,omitempty" tf:"allow_association_to_shareable_service_network,omitempty"`

	// Name for the Resource Configuration.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Port ranges to access the Resource either single port 80 or range 80-81 range.
	// +listType=set
	PortRanges []*string `json:"portRanges,omitempty" tf:"port_ranges,omitempty"`

	// Protocol for the Resource TCP is currently the only supported value.  MUST be specified if resource_configuration_group_id is not.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Details of the Resource Configuration. See resource_configuration_definition Block for details.
	ResourceConfigurationDefinition []ResourceConfigurationDefinitionInitParameters `json:"resourceConfigurationDefinition,omitempty" tf:"resource_configuration_definition,omitempty"`

	// ID of Resource Configuration where type is CHILD.
	ResourceConfigurationGroupID *string `json:"resourceConfigurationGroupId,omitempty" tf:"resource_configuration_group_id,omitempty"`

	// ID of the Resource Gateway used to access the resource. MUST be specified if resource_configuration_group_id is not.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.ResourceGateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ResourceGatewayIdentifier *string `json:"resourceGatewayIdentifier,omitempty" tf:"resource_gateway_identifier,omitempty"`

	// Reference to a ResourceGateway in vpclattice to populate resourceGatewayIdentifier.
	// +kubebuilder:validation:Optional
	ResourceGatewayIdentifierRef *v1.NamespacedReference `json:"resourceGatewayIdentifierRef,omitempty" tf:"-"`

	// Selector for a ResourceGateway in vpclattice to populate resourceGatewayIdentifier.
	// +kubebuilder:validation:Optional
	ResourceGatewayIdentifierSelector *v1.NamespacedSelector `json:"resourceGatewayIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Type of Resource Configuration. Must be one of GROUP, CHILD, SINGLE, ARN.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceConfigurationObservation struct {

	// Allow or Deny the association of this resource to a shareable service network.
	AllowAssociationToShareableServiceNetwork *bool `json:"allowAssociationToShareableServiceNetwork,omitempty" tf:"allow_association_to_shareable_service_network,omitempty"`

	// The ARN of the Resource for this configuration.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// ID of the resource gateway.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name for the Resource Configuration.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Port ranges to access the Resource either single port 80 or range 80-81 range.
	// +listType=set
	PortRanges []*string `json:"portRanges,omitempty" tf:"port_ranges,omitempty"`

	// Protocol for the Resource TCP is currently the only supported value.  MUST be specified if resource_configuration_group_id is not.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Details of the Resource Configuration. See resource_configuration_definition Block for details.
	ResourceConfigurationDefinition []ResourceConfigurationDefinitionObservation `json:"resourceConfigurationDefinition,omitempty" tf:"resource_configuration_definition,omitempty"`

	// ID of Resource Configuration where type is CHILD.
	ResourceConfigurationGroupID *string `json:"resourceConfigurationGroupId,omitempty" tf:"resource_configuration_group_id,omitempty"`

	// ID of the Resource Gateway used to access the resource. MUST be specified if resource_configuration_group_id is not.
	ResourceGatewayIdentifier *string `json:"resourceGatewayIdentifier,omitempty" tf:"resource_gateway_identifier,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// Type of Resource Configuration. Must be one of GROUP, CHILD, SINGLE, ARN.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceConfigurationParameters struct {

	// Allow or Deny the association of this resource to a shareable service network.
	// +kubebuilder:validation:Optional
	AllowAssociationToShareableServiceNetwork *bool `json:"allowAssociationToShareableServiceNetwork,omitempty" tf:"allow_association_to_shareable_service_network,omitempty"`

	// Name for the Resource Configuration.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Port ranges to access the Resource either single port 80 or range 80-81 range.
	// +kubebuilder:validation:Optional
	// +listType=set
	PortRanges []*string `json:"portRanges,omitempty" tf:"port_ranges,omitempty"`

	// Protocol for the Resource TCP is currently the only supported value.  MUST be specified if resource_configuration_group_id is not.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// Details of the Resource Configuration. See resource_configuration_definition Block for details.
	// +kubebuilder:validation:Optional
	ResourceConfigurationDefinition []ResourceConfigurationDefinitionParameters `json:"resourceConfigurationDefinition,omitempty" tf:"resource_configuration_definition,omitempty"`

	// ID of Resource Configuration where type is CHILD.
	// +kubebuilder:validation:Optional
	ResourceConfigurationGroupID *string `json:"resourceConfigurationGroupId,omitempty" tf:"resource_configuration_group_id,omitempty"`

	// ID of the Resource Gateway used to access the resource. MUST be specified if resource_configuration_group_id is not.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/namespaced/vpclattice/v1beta1.ResourceGateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ResourceGatewayIdentifier *string `json:"resourceGatewayIdentifier,omitempty" tf:"resource_gateway_identifier,omitempty"`

	// Reference to a ResourceGateway in vpclattice to populate resourceGatewayIdentifier.
	// +kubebuilder:validation:Optional
	ResourceGatewayIdentifierRef *v1.NamespacedReference `json:"resourceGatewayIdentifierRef,omitempty" tf:"-"`

	// Selector for a ResourceGateway in vpclattice to populate resourceGatewayIdentifier.
	// +kubebuilder:validation:Optional
	ResourceGatewayIdentifierSelector *v1.NamespacedSelector `json:"resourceGatewayIdentifierSelector,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Type of Resource Configuration. Must be one of GROUP, CHILD, SINGLE, ARN.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// ResourceConfigurationSpec defines the desired state of ResourceConfiguration
type ResourceConfigurationSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ResourceConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourceConfigurationInitParameters `json:"initProvider,omitempty"`
}

// ResourceConfigurationStatus defines the observed state of ResourceConfiguration.
type ResourceConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResourceConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ResourceConfiguration is the Schema for the ResourceConfigurations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,aws}
type ResourceConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ResourceConfigurationSpec   `json:"spec"`
	Status ResourceConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceConfigurationList contains a list of ResourceConfigurations
type ResourceConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ResourceConfiguration `json:"items"`
}

// Repository type metadata.
var (
	ResourceConfiguration_Kind             = "ResourceConfiguration"
	ResourceConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ResourceConfiguration_Kind}.String()
	ResourceConfiguration_KindAPIVersion   = ResourceConfiguration_Kind + "." + CRDGroupVersion.String()
	ResourceConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(ResourceConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&ResourceConfiguration{}, &ResourceConfigurationList{})
}

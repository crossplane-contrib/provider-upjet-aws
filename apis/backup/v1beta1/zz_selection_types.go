// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConditionInitParameters struct {

	// Filters the values of your tagged resources for only those resources that you tagged with the same value. Also called "exact matching". See below for details.
	StringEquals []StringEqualsInitParameters `json:"stringEquals,omitempty" tf:"string_equals,omitempty"`

	// Filters the values of your tagged resources for matching tag values with the use of a wildcard character (*) anywhere in the string. For example, prod* or *rod* matches the tag value production. See below for details.
	StringLike []StringLikeInitParameters `json:"stringLike,omitempty" tf:"string_like,omitempty"`

	// Filters the values of your tagged resources for only those resources that you tagged that do not have the same value. Also called "negated matching". See below for details.
	StringNotEquals []StringNotEqualsInitParameters `json:"stringNotEquals,omitempty" tf:"string_not_equals,omitempty"`

	// Filters the values of your tagged resources for non-matching tag values with the use of a wildcard character (*) anywhere in the string. See below for details.
	StringNotLike []StringNotLikeInitParameters `json:"stringNotLike,omitempty" tf:"string_not_like,omitempty"`
}

type ConditionObservation struct {

	// Filters the values of your tagged resources for only those resources that you tagged with the same value. Also called "exact matching". See below for details.
	StringEquals []StringEqualsObservation `json:"stringEquals,omitempty" tf:"string_equals,omitempty"`

	// Filters the values of your tagged resources for matching tag values with the use of a wildcard character (*) anywhere in the string. For example, prod* or *rod* matches the tag value production. See below for details.
	StringLike []StringLikeObservation `json:"stringLike,omitempty" tf:"string_like,omitempty"`

	// Filters the values of your tagged resources for only those resources that you tagged that do not have the same value. Also called "negated matching". See below for details.
	StringNotEquals []StringNotEqualsObservation `json:"stringNotEquals,omitempty" tf:"string_not_equals,omitempty"`

	// Filters the values of your tagged resources for non-matching tag values with the use of a wildcard character (*) anywhere in the string. See below for details.
	StringNotLike []StringNotLikeObservation `json:"stringNotLike,omitempty" tf:"string_not_like,omitempty"`
}

type ConditionParameters struct {

	// Filters the values of your tagged resources for only those resources that you tagged with the same value. Also called "exact matching". See below for details.
	// +kubebuilder:validation:Optional
	StringEquals []StringEqualsParameters `json:"stringEquals,omitempty" tf:"string_equals,omitempty"`

	// Filters the values of your tagged resources for matching tag values with the use of a wildcard character (*) anywhere in the string. For example, prod* or *rod* matches the tag value production. See below for details.
	// +kubebuilder:validation:Optional
	StringLike []StringLikeParameters `json:"stringLike,omitempty" tf:"string_like,omitempty"`

	// Filters the values of your tagged resources for only those resources that you tagged that do not have the same value. Also called "negated matching". See below for details.
	// +kubebuilder:validation:Optional
	StringNotEquals []StringNotEqualsParameters `json:"stringNotEquals,omitempty" tf:"string_not_equals,omitempty"`

	// Filters the values of your tagged resources for non-matching tag values with the use of a wildcard character (*) anywhere in the string. See below for details.
	// +kubebuilder:validation:Optional
	StringNotLike []StringNotLikeParameters `json:"stringNotLike,omitempty" tf:"string_not_like,omitempty"`
}

type SelectionInitParameters struct {

	// Condition-based filters used to specify sets of resources for a backup plan. See below for details.
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	IAMRoleArn *string `json:"iamRoleArn,omitempty" tf:"iam_role_arn,omitempty"`

	// Reference to a Role in iam to populate iamRoleArn.
	// +kubebuilder:validation:Optional
	IAMRoleArnRef *v1.Reference `json:"iamRoleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate iamRoleArn.
	// +kubebuilder:validation:Optional
	IAMRoleArnSelector *v1.Selector `json:"iamRoleArnSelector,omitempty" tf:"-"`

	// The display name of a resource selection document.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta3.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +listType=set
	NotResources []*string `json:"notResources,omitempty" tf:"not_resources,omitempty"`

	// References to Instance in rds to populate notResources.
	// +kubebuilder:validation:Optional
	NotResourcesRefs []v1.Reference `json:"notResourcesRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in rds to populate notResources.
	// +kubebuilder:validation:Optional
	NotResourcesSelector *v1.Selector `json:"notResourcesSelector,omitempty" tf:"-"`

	// The backup plan ID to be associated with the selection of resources.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/backup/v1beta2.Plan
	PlanID *string `json:"planId,omitempty" tf:"plan_id,omitempty"`

	// Reference to a Plan in backup to populate planId.
	// +kubebuilder:validation:Optional
	PlanIDRef *v1.Reference `json:"planIdRef,omitempty" tf:"-"`

	// Selector for a Plan in backup to populate planId.
	// +kubebuilder:validation:Optional
	PlanIDSelector *v1.Selector `json:"planIdSelector,omitempty" tf:"-"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta3.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +listType=set
	Resources []*string `json:"resources,omitempty" tf:"resources,omitempty"`

	// References to Instance in rds to populate resources.
	// +kubebuilder:validation:Optional
	ResourcesRefs []v1.Reference `json:"resourcesRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in rds to populate resources.
	// +kubebuilder:validation:Optional
	ResourcesSelector *v1.Selector `json:"resourcesSelector,omitempty" tf:"-"`

	// Tag-based conditions used to specify a set of resources to assign to a backup plan. See below for details.
	SelectionTag []SelectionTagInitParameters `json:"selectionTag,omitempty" tf:"selection_tag,omitempty"`
}

type SelectionObservation struct {

	// Condition-based filters used to specify sets of resources for a backup plan. See below for details.
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IAMRoleArn *string `json:"iamRoleArn,omitempty" tf:"iam_role_arn,omitempty"`

	// Backup Selection identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The display name of a resource selection document.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	// +listType=set
	NotResources []*string `json:"notResources,omitempty" tf:"not_resources,omitempty"`

	// The backup plan ID to be associated with the selection of resources.
	PlanID *string `json:"planId,omitempty" tf:"plan_id,omitempty"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	// +listType=set
	Resources []*string `json:"resources,omitempty" tf:"resources,omitempty"`

	// Tag-based conditions used to specify a set of resources to assign to a backup plan. See below for details.
	SelectionTag []SelectionTagObservation `json:"selectionTag,omitempty" tf:"selection_tag,omitempty"`
}

type SelectionParameters struct {

	// Condition-based filters used to specify sets of resources for a backup plan. See below for details.
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	IAMRoleArn *string `json:"iamRoleArn,omitempty" tf:"iam_role_arn,omitempty"`

	// Reference to a Role in iam to populate iamRoleArn.
	// +kubebuilder:validation:Optional
	IAMRoleArnRef *v1.Reference `json:"iamRoleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate iamRoleArn.
	// +kubebuilder:validation:Optional
	IAMRoleArnSelector *v1.Selector `json:"iamRoleArnSelector,omitempty" tf:"-"`

	// The display name of a resource selection document.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta3.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	// +listType=set
	NotResources []*string `json:"notResources,omitempty" tf:"not_resources,omitempty"`

	// References to Instance in rds to populate notResources.
	// +kubebuilder:validation:Optional
	NotResourcesRefs []v1.Reference `json:"notResourcesRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in rds to populate notResources.
	// +kubebuilder:validation:Optional
	NotResourcesSelector *v1.Selector `json:"notResourcesSelector,omitempty" tf:"-"`

	// The backup plan ID to be associated with the selection of resources.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/backup/v1beta2.Plan
	// +kubebuilder:validation:Optional
	PlanID *string `json:"planId,omitempty" tf:"plan_id,omitempty"`

	// Reference to a Plan in backup to populate planId.
	// +kubebuilder:validation:Optional
	PlanIDRef *v1.Reference `json:"planIdRef,omitempty" tf:"-"`

	// Selector for a Plan in backup to populate planId.
	// +kubebuilder:validation:Optional
	PlanIDSelector *v1.Selector `json:"planIdSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta3.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	// +listType=set
	Resources []*string `json:"resources,omitempty" tf:"resources,omitempty"`

	// References to Instance in rds to populate resources.
	// +kubebuilder:validation:Optional
	ResourcesRefs []v1.Reference `json:"resourcesRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in rds to populate resources.
	// +kubebuilder:validation:Optional
	ResourcesSelector *v1.Selector `json:"resourcesSelector,omitempty" tf:"-"`

	// Tag-based conditions used to specify a set of resources to assign to a backup plan. See below for details.
	// +kubebuilder:validation:Optional
	SelectionTag []SelectionTagParameters `json:"selectionTag,omitempty" tf:"selection_tag,omitempty"`
}

type SelectionTagInitParameters struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// An operation, such as STRINGEQUALS, that is applied to the key-value pair used to filter resources in a selection.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SelectionTagObservation struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// An operation, such as STRINGEQUALS, that is applied to the key-value pair used to filter resources in a selection.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SelectionTagParameters struct {

	// Key for the filter.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// An operation, such as STRINGEQUALS, that is applied to the key-value pair used to filter resources in a selection.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Value for the filter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type StringEqualsInitParameters struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringEqualsObservation struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringEqualsParameters struct {

	// Key for the filter.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value for the filter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type StringLikeInitParameters struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringLikeObservation struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringLikeParameters struct {

	// Key for the filter.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value for the filter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type StringNotEqualsInitParameters struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringNotEqualsObservation struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringNotEqualsParameters struct {

	// Key for the filter.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value for the filter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type StringNotLikeInitParameters struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringNotLikeObservation struct {

	// Key for the filter.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Value for the filter.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringNotLikeParameters struct {

	// Key for the filter.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Value for the filter.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// SelectionSpec defines the desired state of Selection
type SelectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SelectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SelectionInitParameters `json:"initProvider,omitempty"`
}

// SelectionStatus defines the observed state of Selection.
type SelectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SelectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Selection is the Schema for the Selections API. Manages selection conditions for AWS Backup plan resources.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type Selection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   SelectionSpec   `json:"spec"`
	Status SelectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SelectionList contains a list of Selections
type SelectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Selection `json:"items"`
}

// Repository type metadata.
var (
	Selection_Kind             = "Selection"
	Selection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Selection_Kind}.String()
	Selection_KindAPIVersion   = Selection_Kind + "." + CRDGroupVersion.String()
	Selection_GroupVersionKind = CRDGroupVersion.WithKind(Selection_Kind)
)

func init() {
	SchemeBuilder.Register(&Selection{}, &SelectionList{})
}

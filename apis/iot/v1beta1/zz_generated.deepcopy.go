//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributePayloadInitParameters) DeepCopyInto(out *AttributePayloadInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributePayloadInitParameters.
func (in *AttributePayloadInitParameters) DeepCopy() *AttributePayloadInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttributePayloadInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributePayloadObservation) DeepCopyInto(out *AttributePayloadObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributePayloadObservation.
func (in *AttributePayloadObservation) DeepCopy() *AttributePayloadObservation {
	if in == nil {
		return nil
	}
	out := new(AttributePayloadObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributePayloadParameters) DeepCopyInto(out *AttributePayloadParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributePayloadParameters.
func (in *AttributePayloadParameters) DeepCopy() *AttributePayloadParameters {
	if in == nil {
		return nil
	}
	out := new(AttributePayloadParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Certificate) DeepCopyInto(out *Certificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Certificate.
func (in *Certificate) DeepCopy() *Certificate {
	if in == nil {
		return nil
	}
	out := new(Certificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Certificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateInitParameters) DeepCopyInto(out *CertificateInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Csr != nil {
		in, out := &in.Csr, &out.Csr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateInitParameters.
func (in *CertificateInitParameters) DeepCopy() *CertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateList) DeepCopyInto(out *CertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Certificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateList.
func (in *CertificateList) DeepCopy() *CertificateList {
	if in == nil {
		return nil
	}
	out := new(CertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CACertificateID != nil {
		in, out := &in.CACertificateID, &out.CACertificateID
		*out = new(string)
		**out = **in
	}
	if in.Csr != nil {
		in, out := &in.Csr, &out.Csr
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.CAPemSecretRef != nil {
		in, out := &in.CAPemSecretRef, &out.CAPemSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertificatePemSecretRef != nil {
		in, out := &in.CertificatePemSecretRef, &out.CertificatePemSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Csr != nil {
		in, out := &in.Csr, &out.Csr
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateSpec) DeepCopyInto(out *CertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateSpec.
func (in *CertificateSpec) DeepCopy() *CertificateSpec {
	if in == nil {
		return nil
	}
	out := new(CertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateStatus) DeepCopyInto(out *CertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateStatus.
func (in *CertificateStatus) DeepCopy() *CertificateStatus {
	if in == nil {
		return nil
	}
	out := new(CertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchAlarmInitParameters) DeepCopyInto(out *CloudwatchAlarmInitParameters) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchAlarmInitParameters.
func (in *CloudwatchAlarmInitParameters) DeepCopy() *CloudwatchAlarmInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchAlarmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchAlarmObservation) DeepCopyInto(out *CloudwatchAlarmObservation) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchAlarmObservation.
func (in *CloudwatchAlarmObservation) DeepCopy() *CloudwatchAlarmObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchAlarmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchAlarmParameters) DeepCopyInto(out *CloudwatchAlarmParameters) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchAlarmParameters.
func (in *CloudwatchAlarmParameters) DeepCopy() *CloudwatchAlarmParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchAlarmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsInitParameters) DeepCopyInto(out *CloudwatchLogsInitParameters) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogGroupNameRef != nil {
		in, out := &in.LogGroupNameRef, &out.LogGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupNameSelector != nil {
		in, out := &in.LogGroupNameSelector, &out.LogGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsInitParameters.
func (in *CloudwatchLogsInitParameters) DeepCopy() *CloudwatchLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsObservation) DeepCopyInto(out *CloudwatchLogsObservation) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsObservation.
func (in *CloudwatchLogsObservation) DeepCopy() *CloudwatchLogsObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchLogsParameters) DeepCopyInto(out *CloudwatchLogsParameters) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogGroupNameRef != nil {
		in, out := &in.LogGroupNameRef, &out.LogGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupNameSelector != nil {
		in, out := &in.LogGroupNameSelector, &out.LogGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchLogsParameters.
func (in *CloudwatchLogsParameters) DeepCopy() *CloudwatchLogsParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchMetricInitParameters) DeepCopyInto(out *CloudwatchMetricInitParameters) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchMetricInitParameters.
func (in *CloudwatchMetricInitParameters) DeepCopy() *CloudwatchMetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchMetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchMetricObservation) DeepCopyInto(out *CloudwatchMetricObservation) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchMetricObservation.
func (in *CloudwatchMetricObservation) DeepCopy() *CloudwatchMetricObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchMetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchMetricParameters) DeepCopyInto(out *CloudwatchMetricParameters) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchMetricParameters.
func (in *CloudwatchMetricParameters) DeepCopy() *CloudwatchMetricParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchMetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomFieldInitParameters) DeepCopyInto(out *CustomFieldInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomFieldInitParameters.
func (in *CustomFieldInitParameters) DeepCopy() *CustomFieldInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomFieldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomFieldObservation) DeepCopyInto(out *CustomFieldObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomFieldObservation.
func (in *CustomFieldObservation) DeepCopy() *CustomFieldObservation {
	if in == nil {
		return nil
	}
	out := new(CustomFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomFieldParameters) DeepCopyInto(out *CustomFieldParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomFieldParameters.
func (in *CustomFieldParameters) DeepCopy() *CustomFieldParameters {
	if in == nil {
		return nil
	}
	out := new(CustomFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionInitParameters) DeepCopyInto(out *DimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionInitParameters.
func (in *DimensionInitParameters) DeepCopy() *DimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionObservation) DeepCopyInto(out *DimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionObservation.
func (in *DimensionObservation) DeepCopy() *DimensionObservation {
	if in == nil {
		return nil
	}
	out := new(DimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionParameters) DeepCopyInto(out *DimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionParameters.
func (in *DimensionParameters) DeepCopy() *DimensionParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamodbInitParameters) DeepCopyInto(out *DynamodbInitParameters) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamodbInitParameters.
func (in *DynamodbInitParameters) DeepCopy() *DynamodbInitParameters {
	if in == nil {
		return nil
	}
	out := new(DynamodbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamodbObservation) DeepCopyInto(out *DynamodbObservation) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamodbObservation.
func (in *DynamodbObservation) DeepCopy() *DynamodbObservation {
	if in == nil {
		return nil
	}
	out := new(DynamodbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DynamodbParameters) DeepCopyInto(out *DynamodbParameters) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DynamodbParameters.
func (in *DynamodbParameters) DeepCopy() *DynamodbParameters {
	if in == nil {
		return nil
	}
	out := new(DynamodbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2InitParameters) DeepCopyInto(out *Dynamodbv2InitParameters) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]PutItemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2InitParameters.
func (in *Dynamodbv2InitParameters) DeepCopy() *Dynamodbv2InitParameters {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2Observation) DeepCopyInto(out *Dynamodbv2Observation) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]PutItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2Observation.
func (in *Dynamodbv2Observation) DeepCopy() *Dynamodbv2Observation {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2Parameters) DeepCopyInto(out *Dynamodbv2Parameters) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]PutItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2Parameters.
func (in *Dynamodbv2Parameters) DeepCopy() *Dynamodbv2Parameters {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2PutItemInitParameters) DeepCopyInto(out *Dynamodbv2PutItemInitParameters) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2PutItemInitParameters.
func (in *Dynamodbv2PutItemInitParameters) DeepCopy() *Dynamodbv2PutItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2PutItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2PutItemObservation) DeepCopyInto(out *Dynamodbv2PutItemObservation) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2PutItemObservation.
func (in *Dynamodbv2PutItemObservation) DeepCopy() *Dynamodbv2PutItemObservation {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2PutItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dynamodbv2PutItemParameters) DeepCopyInto(out *Dynamodbv2PutItemParameters) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dynamodbv2PutItemParameters.
func (in *Dynamodbv2PutItemParameters) DeepCopy() *Dynamodbv2PutItemParameters {
	if in == nil {
		return nil
	}
	out := new(Dynamodbv2PutItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchInitParameters) DeepCopyInto(out *ElasticsearchInitParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchInitParameters.
func (in *ElasticsearchInitParameters) DeepCopy() *ElasticsearchInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchObservation) DeepCopyInto(out *ElasticsearchObservation) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchObservation.
func (in *ElasticsearchObservation) DeepCopy() *ElasticsearchObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchParameters) DeepCopyInto(out *ElasticsearchParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchParameters.
func (in *ElasticsearchParameters) DeepCopy() *ElasticsearchParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchAlarmInitParameters) DeepCopyInto(out *ErrorActionCloudwatchAlarmInitParameters) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchAlarmInitParameters.
func (in *ErrorActionCloudwatchAlarmInitParameters) DeepCopy() *ErrorActionCloudwatchAlarmInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchAlarmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchAlarmObservation) DeepCopyInto(out *ErrorActionCloudwatchAlarmObservation) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchAlarmObservation.
func (in *ErrorActionCloudwatchAlarmObservation) DeepCopy() *ErrorActionCloudwatchAlarmObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchAlarmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchAlarmParameters) DeepCopyInto(out *ErrorActionCloudwatchAlarmParameters) {
	*out = *in
	if in.AlarmName != nil {
		in, out := &in.AlarmName, &out.AlarmName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateReason != nil {
		in, out := &in.StateReason, &out.StateReason
		*out = new(string)
		**out = **in
	}
	if in.StateValue != nil {
		in, out := &in.StateValue, &out.StateValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchAlarmParameters.
func (in *ErrorActionCloudwatchAlarmParameters) DeepCopy() *ErrorActionCloudwatchAlarmParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchAlarmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchLogsInitParameters) DeepCopyInto(out *ErrorActionCloudwatchLogsInitParameters) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogGroupNameRef != nil {
		in, out := &in.LogGroupNameRef, &out.LogGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupNameSelector != nil {
		in, out := &in.LogGroupNameSelector, &out.LogGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchLogsInitParameters.
func (in *ErrorActionCloudwatchLogsInitParameters) DeepCopy() *ErrorActionCloudwatchLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchLogsObservation) DeepCopyInto(out *ErrorActionCloudwatchLogsObservation) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchLogsObservation.
func (in *ErrorActionCloudwatchLogsObservation) DeepCopy() *ErrorActionCloudwatchLogsObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchLogsParameters) DeepCopyInto(out *ErrorActionCloudwatchLogsParameters) {
	*out = *in
	if in.LogGroupName != nil {
		in, out := &in.LogGroupName, &out.LogGroupName
		*out = new(string)
		**out = **in
	}
	if in.LogGroupNameRef != nil {
		in, out := &in.LogGroupNameRef, &out.LogGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LogGroupNameSelector != nil {
		in, out := &in.LogGroupNameSelector, &out.LogGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchLogsParameters.
func (in *ErrorActionCloudwatchLogsParameters) DeepCopy() *ErrorActionCloudwatchLogsParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchMetricInitParameters) DeepCopyInto(out *ErrorActionCloudwatchMetricInitParameters) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchMetricInitParameters.
func (in *ErrorActionCloudwatchMetricInitParameters) DeepCopy() *ErrorActionCloudwatchMetricInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchMetricInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchMetricObservation) DeepCopyInto(out *ErrorActionCloudwatchMetricObservation) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchMetricObservation.
func (in *ErrorActionCloudwatchMetricObservation) DeepCopy() *ErrorActionCloudwatchMetricObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchMetricObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionCloudwatchMetricParameters) DeepCopyInto(out *ErrorActionCloudwatchMetricParameters) {
	*out = *in
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MetricNamespace != nil {
		in, out := &in.MetricNamespace, &out.MetricNamespace
		*out = new(string)
		**out = **in
	}
	if in.MetricTimestamp != nil {
		in, out := &in.MetricTimestamp, &out.MetricTimestamp
		*out = new(string)
		**out = **in
	}
	if in.MetricUnit != nil {
		in, out := &in.MetricUnit, &out.MetricUnit
		*out = new(string)
		**out = **in
	}
	if in.MetricValue != nil {
		in, out := &in.MetricValue, &out.MetricValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionCloudwatchMetricParameters.
func (in *ErrorActionCloudwatchMetricParameters) DeepCopy() *ErrorActionCloudwatchMetricParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionCloudwatchMetricParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbInitParameters) DeepCopyInto(out *ErrorActionDynamodbInitParameters) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbInitParameters.
func (in *ErrorActionDynamodbInitParameters) DeepCopy() *ErrorActionDynamodbInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbObservation) DeepCopyInto(out *ErrorActionDynamodbObservation) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbObservation.
func (in *ErrorActionDynamodbObservation) DeepCopy() *ErrorActionDynamodbObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbParameters) DeepCopyInto(out *ErrorActionDynamodbParameters) {
	*out = *in
	if in.HashKeyField != nil {
		in, out := &in.HashKeyField, &out.HashKeyField
		*out = new(string)
		**out = **in
	}
	if in.HashKeyType != nil {
		in, out := &in.HashKeyType, &out.HashKeyType
		*out = new(string)
		**out = **in
	}
	if in.HashKeyValue != nil {
		in, out := &in.HashKeyValue, &out.HashKeyValue
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.PayloadField != nil {
		in, out := &in.PayloadField, &out.PayloadField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyField != nil {
		in, out := &in.RangeKeyField, &out.RangeKeyField
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyType != nil {
		in, out := &in.RangeKeyType, &out.RangeKeyType
		*out = new(string)
		**out = **in
	}
	if in.RangeKeyValue != nil {
		in, out := &in.RangeKeyValue, &out.RangeKeyValue
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbParameters.
func (in *ErrorActionDynamodbParameters) DeepCopy() *ErrorActionDynamodbParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbv2InitParameters) DeepCopyInto(out *ErrorActionDynamodbv2InitParameters) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]Dynamodbv2PutItemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbv2InitParameters.
func (in *ErrorActionDynamodbv2InitParameters) DeepCopy() *ErrorActionDynamodbv2InitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbv2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbv2Observation) DeepCopyInto(out *ErrorActionDynamodbv2Observation) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]Dynamodbv2PutItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbv2Observation.
func (in *ErrorActionDynamodbv2Observation) DeepCopy() *ErrorActionDynamodbv2Observation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbv2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionDynamodbv2Parameters) DeepCopyInto(out *ErrorActionDynamodbv2Parameters) {
	*out = *in
	if in.PutItem != nil {
		in, out := &in.PutItem, &out.PutItem
		*out = make([]Dynamodbv2PutItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionDynamodbv2Parameters.
func (in *ErrorActionDynamodbv2Parameters) DeepCopy() *ErrorActionDynamodbv2Parameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionDynamodbv2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionElasticsearchInitParameters) DeepCopyInto(out *ErrorActionElasticsearchInitParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionElasticsearchInitParameters.
func (in *ErrorActionElasticsearchInitParameters) DeepCopy() *ErrorActionElasticsearchInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionElasticsearchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionElasticsearchObservation) DeepCopyInto(out *ErrorActionElasticsearchObservation) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionElasticsearchObservation.
func (in *ErrorActionElasticsearchObservation) DeepCopy() *ErrorActionElasticsearchObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionElasticsearchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionElasticsearchParameters) DeepCopyInto(out *ErrorActionElasticsearchParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionElasticsearchParameters.
func (in *ErrorActionElasticsearchParameters) DeepCopy() *ErrorActionElasticsearchParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionElasticsearchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionInitParameters) DeepCopyInto(out *ErrorActionInitParameters) {
	*out = *in
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]ErrorActionCloudwatchAlarmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]ErrorActionCloudwatchLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]ErrorActionCloudwatchMetricInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]ErrorActionDynamodbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]ErrorActionDynamodbv2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ErrorActionElasticsearchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]HTTPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]IotAnalyticsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]IotEventsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]KafkaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]KinesisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]LambdaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]RepublishInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]SnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]SqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]StepFunctionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TimestreamInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionInitParameters.
func (in *ErrorActionInitParameters) DeepCopy() *ErrorActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionObservation) DeepCopyInto(out *ErrorActionObservation) {
	*out = *in
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]ErrorActionCloudwatchAlarmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]ErrorActionCloudwatchLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]ErrorActionCloudwatchMetricObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]ErrorActionDynamodbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]ErrorActionDynamodbv2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ErrorActionElasticsearchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]HTTPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]IotAnalyticsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]IotEventsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]KafkaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]KinesisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]LambdaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]RepublishObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]SnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]SqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]StepFunctionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TimestreamObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionObservation.
func (in *ErrorActionObservation) DeepCopy() *ErrorActionObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorActionParameters) DeepCopyInto(out *ErrorActionParameters) {
	*out = *in
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]ErrorActionCloudwatchAlarmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]ErrorActionCloudwatchLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]ErrorActionCloudwatchMetricParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]ErrorActionDynamodbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]ErrorActionDynamodbv2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ErrorActionElasticsearchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]FirehoseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]HTTPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]IotAnalyticsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]IotEventsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]KafkaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]KinesisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]LambdaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]RepublishParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]SnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]SqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]StepFunctionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TimestreamParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorActionParameters.
func (in *ErrorActionParameters) DeepCopy() *ErrorActionParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.NamedShadowNames != nil {
		in, out := &in.NamedShadowNames, &out.NamedShadowNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.NamedShadowNames != nil {
		in, out := &in.NamedShadowNames, &out.NamedShadowNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.NamedShadowNames != nil {
		in, out := &in.NamedShadowNames, &out.NamedShadowNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseInitParameters) DeepCopyInto(out *FirehoseInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamNameRef != nil {
		in, out := &in.DeliveryStreamNameRef, &out.DeliveryStreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamNameSelector != nil {
		in, out := &in.DeliveryStreamNameSelector, &out.DeliveryStreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseInitParameters.
func (in *FirehoseInitParameters) DeepCopy() *FirehoseInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirehoseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseObservation) DeepCopyInto(out *FirehoseObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseObservation.
func (in *FirehoseObservation) DeepCopy() *FirehoseObservation {
	if in == nil {
		return nil
	}
	out := new(FirehoseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirehoseParameters) DeepCopyInto(out *FirehoseParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamNameRef != nil {
		in, out := &in.DeliveryStreamNameRef, &out.DeliveryStreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamNameSelector != nil {
		in, out := &in.DeliveryStreamNameSelector, &out.DeliveryStreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirehoseParameters.
func (in *FirehoseParameters) DeepCopy() *FirehoseParameters {
	if in == nil {
		return nil
	}
	out := new(FirehoseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHTTPHeaderInitParameters) DeepCopyInto(out *HTTPHTTPHeaderInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHTTPHeaderInitParameters.
func (in *HTTPHTTPHeaderInitParameters) DeepCopy() *HTTPHTTPHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHTTPHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHTTPHeaderObservation) DeepCopyInto(out *HTTPHTTPHeaderObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHTTPHeaderObservation.
func (in *HTTPHTTPHeaderObservation) DeepCopy() *HTTPHTTPHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPHTTPHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHTTPHeaderParameters) DeepCopyInto(out *HTTPHTTPHeaderParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHTTPHeaderParameters.
func (in *HTTPHTTPHeaderParameters) DeepCopy() *HTTPHTTPHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHTTPHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderInitParameters) DeepCopyInto(out *HTTPHeaderInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderInitParameters.
func (in *HTTPHeaderInitParameters) DeepCopy() *HTTPHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderObservation) DeepCopyInto(out *HTTPHeaderObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderObservation.
func (in *HTTPHeaderObservation) DeepCopy() *HTTPHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderParameters) DeepCopyInto(out *HTTPHeaderParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderParameters.
func (in *HTTPHeaderParameters) DeepCopy() *HTTPHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPInitParameters) DeepCopyInto(out *HTTPInitParameters) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPInitParameters.
func (in *HTTPInitParameters) DeepCopy() *HTTPInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPObservation) DeepCopyInto(out *HTTPObservation) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPObservation.
func (in *HTTPObservation) DeepCopy() *HTTPObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPParameters) DeepCopyInto(out *HTTPParameters) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPParameters.
func (in *HTTPParameters) DeepCopy() *HTTPParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderInitParameters) DeepCopyInto(out *HeaderInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderInitParameters.
func (in *HeaderInitParameters) DeepCopy() *HeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderObservation) DeepCopyInto(out *HeaderObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderObservation.
func (in *HeaderObservation) DeepCopy() *HeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderParameters) DeepCopyInto(out *HeaderParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderParameters.
func (in *HeaderParameters) DeepCopy() *HeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfiguration) DeepCopyInto(out *IndexingConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfiguration.
func (in *IndexingConfiguration) DeepCopy() *IndexingConfiguration {
	if in == nil {
		return nil
	}
	out := new(IndexingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexingConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationInitParameters) DeepCopyInto(out *IndexingConfigurationInitParameters) {
	*out = *in
	if in.ThingGroupIndexingConfiguration != nil {
		in, out := &in.ThingGroupIndexingConfiguration, &out.ThingGroupIndexingConfiguration
		*out = make([]ThingGroupIndexingConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingIndexingConfiguration != nil {
		in, out := &in.ThingIndexingConfiguration, &out.ThingIndexingConfiguration
		*out = make([]ThingIndexingConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationInitParameters.
func (in *IndexingConfigurationInitParameters) DeepCopy() *IndexingConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationList) DeepCopyInto(out *IndexingConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IndexingConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationList.
func (in *IndexingConfigurationList) DeepCopy() *IndexingConfigurationList {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexingConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationObservation) DeepCopyInto(out *IndexingConfigurationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ThingGroupIndexingConfiguration != nil {
		in, out := &in.ThingGroupIndexingConfiguration, &out.ThingGroupIndexingConfiguration
		*out = make([]ThingGroupIndexingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingIndexingConfiguration != nil {
		in, out := &in.ThingIndexingConfiguration, &out.ThingIndexingConfiguration
		*out = make([]ThingIndexingConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationObservation.
func (in *IndexingConfigurationObservation) DeepCopy() *IndexingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationParameters) DeepCopyInto(out *IndexingConfigurationParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ThingGroupIndexingConfiguration != nil {
		in, out := &in.ThingGroupIndexingConfiguration, &out.ThingGroupIndexingConfiguration
		*out = make([]ThingGroupIndexingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingIndexingConfiguration != nil {
		in, out := &in.ThingIndexingConfiguration, &out.ThingIndexingConfiguration
		*out = make([]ThingIndexingConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationParameters.
func (in *IndexingConfigurationParameters) DeepCopy() *IndexingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationSpec) DeepCopyInto(out *IndexingConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationSpec.
func (in *IndexingConfigurationSpec) DeepCopy() *IndexingConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexingConfigurationStatus) DeepCopyInto(out *IndexingConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexingConfigurationStatus.
func (in *IndexingConfigurationStatus) DeepCopy() *IndexingConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(IndexingConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotAnalyticsInitParameters) DeepCopyInto(out *IotAnalyticsInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotAnalyticsInitParameters.
func (in *IotAnalyticsInitParameters) DeepCopy() *IotAnalyticsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IotAnalyticsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotAnalyticsObservation) DeepCopyInto(out *IotAnalyticsObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotAnalyticsObservation.
func (in *IotAnalyticsObservation) DeepCopy() *IotAnalyticsObservation {
	if in == nil {
		return nil
	}
	out := new(IotAnalyticsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotAnalyticsParameters) DeepCopyInto(out *IotAnalyticsParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotAnalyticsParameters.
func (in *IotAnalyticsParameters) DeepCopy() *IotAnalyticsParameters {
	if in == nil {
		return nil
	}
	out := new(IotAnalyticsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotEventsInitParameters) DeepCopyInto(out *IotEventsInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotEventsInitParameters.
func (in *IotEventsInitParameters) DeepCopy() *IotEventsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IotEventsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotEventsObservation) DeepCopyInto(out *IotEventsObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotEventsObservation.
func (in *IotEventsObservation) DeepCopy() *IotEventsObservation {
	if in == nil {
		return nil
	}
	out := new(IotEventsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IotEventsParameters) DeepCopyInto(out *IotEventsParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IotEventsParameters.
func (in *IotEventsParameters) DeepCopy() *IotEventsParameters {
	if in == nil {
		return nil
	}
	out := new(IotEventsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaHeaderInitParameters) DeepCopyInto(out *KafkaHeaderInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaHeaderInitParameters.
func (in *KafkaHeaderInitParameters) DeepCopy() *KafkaHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaHeaderObservation) DeepCopyInto(out *KafkaHeaderObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaHeaderObservation.
func (in *KafkaHeaderObservation) DeepCopy() *KafkaHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaHeaderParameters) DeepCopyInto(out *KafkaHeaderParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaHeaderParameters.
func (in *KafkaHeaderParameters) DeepCopy() *KafkaHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaInitParameters) DeepCopyInto(out *KafkaInitParameters) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationArnRef != nil {
		in, out := &in.DestinationArnRef, &out.DestinationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationArnSelector != nil {
		in, out := &in.DestinationArnSelector, &out.DestinationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaInitParameters.
func (in *KafkaInitParameters) DeepCopy() *KafkaInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaObservation) DeepCopyInto(out *KafkaObservation) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaObservation.
func (in *KafkaObservation) DeepCopy() *KafkaObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaParameters) DeepCopyInto(out *KafkaParameters) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationArnRef != nil {
		in, out := &in.DestinationArnRef, &out.DestinationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationArnSelector != nil {
		in, out := &in.DestinationArnSelector, &out.DestinationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaParameters.
func (in *KafkaParameters) DeepCopy() *KafkaParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisInitParameters) DeepCopyInto(out *KinesisInitParameters) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisInitParameters.
func (in *KinesisInitParameters) DeepCopy() *KinesisInitParameters {
	if in == nil {
		return nil
	}
	out := new(KinesisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisObservation) DeepCopyInto(out *KinesisObservation) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisObservation.
func (in *KinesisObservation) DeepCopy() *KinesisObservation {
	if in == nil {
		return nil
	}
	out := new(KinesisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KinesisParameters) DeepCopyInto(out *KinesisParameters) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KinesisParameters.
func (in *KinesisParameters) DeepCopy() *KinesisParameters {
	if in == nil {
		return nil
	}
	out := new(KinesisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaInitParameters) DeepCopyInto(out *LambdaInitParameters) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionArnRef != nil {
		in, out := &in.FunctionArnRef, &out.FunctionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionArnSelector != nil {
		in, out := &in.FunctionArnSelector, &out.FunctionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaInitParameters.
func (in *LambdaInitParameters) DeepCopy() *LambdaInitParameters {
	if in == nil {
		return nil
	}
	out := new(LambdaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaObservation) DeepCopyInto(out *LambdaObservation) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaObservation.
func (in *LambdaObservation) DeepCopy() *LambdaObservation {
	if in == nil {
		return nil
	}
	out := new(LambdaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaParameters) DeepCopyInto(out *LambdaParameters) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionArnRef != nil {
		in, out := &in.FunctionArnRef, &out.FunctionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionArnSelector != nil {
		in, out := &in.FunctionArnSelector, &out.FunctionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaParameters.
func (in *LambdaParameters) DeepCopy() *LambdaParameters {
	if in == nil {
		return nil
	}
	out := new(LambdaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptions) DeepCopyInto(out *LoggingOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptions.
func (in *LoggingOptions) DeepCopy() *LoggingOptions {
	if in == nil {
		return nil
	}
	out := new(LoggingOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsInitParameters) DeepCopyInto(out *LoggingOptionsInitParameters) {
	*out = *in
	if in.DefaultLogLevel != nil {
		in, out := &in.DefaultLogLevel, &out.DefaultLogLevel
		*out = new(string)
		**out = **in
	}
	if in.DisableAllLogs != nil {
		in, out := &in.DisableAllLogs, &out.DisableAllLogs
		*out = new(bool)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsInitParameters.
func (in *LoggingOptionsInitParameters) DeepCopy() *LoggingOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsList) DeepCopyInto(out *LoggingOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoggingOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsList.
func (in *LoggingOptionsList) DeepCopy() *LoggingOptionsList {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsObservation) DeepCopyInto(out *LoggingOptionsObservation) {
	*out = *in
	if in.DefaultLogLevel != nil {
		in, out := &in.DefaultLogLevel, &out.DefaultLogLevel
		*out = new(string)
		**out = **in
	}
	if in.DisableAllLogs != nil {
		in, out := &in.DisableAllLogs, &out.DisableAllLogs
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsObservation.
func (in *LoggingOptionsObservation) DeepCopy() *LoggingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsParameters) DeepCopyInto(out *LoggingOptionsParameters) {
	*out = *in
	if in.DefaultLogLevel != nil {
		in, out := &in.DefaultLogLevel, &out.DefaultLogLevel
		*out = new(string)
		**out = **in
	}
	if in.DisableAllLogs != nil {
		in, out := &in.DisableAllLogs, &out.DisableAllLogs
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsParameters.
func (in *LoggingOptionsParameters) DeepCopy() *LoggingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsSpec) DeepCopyInto(out *LoggingOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsSpec.
func (in *LoggingOptionsSpec) DeepCopy() *LoggingOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingOptionsStatus) DeepCopyInto(out *LoggingOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingOptionsStatus.
func (in *LoggingOptionsStatus) DeepCopy() *LoggingOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedFieldInitParameters) DeepCopyInto(out *ManagedFieldInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedFieldInitParameters.
func (in *ManagedFieldInitParameters) DeepCopy() *ManagedFieldInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedFieldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedFieldObservation) DeepCopyInto(out *ManagedFieldObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedFieldObservation.
func (in *ManagedFieldObservation) DeepCopy() *ManagedFieldObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedFieldParameters) DeepCopyInto(out *ManagedFieldParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedFieldParameters.
func (in *ManagedFieldParameters) DeepCopy() *ManagedFieldParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.CreationDate != nil {
		in, out := &in.CreationDate, &out.CreationDate
		*out = new(string)
		**out = **in
	}
	if in.ParentGroupName != nil {
		in, out := &in.ParentGroupName, &out.ParentGroupName
		*out = new(string)
		**out = **in
	}
	if in.RootToParentGroups != nil {
		in, out := &in.RootToParentGroups, &out.RootToParentGroups
		*out = make([]RootToParentGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachment) DeepCopyInto(out *PolicyAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachment.
func (in *PolicyAttachment) DeepCopy() *PolicyAttachment {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentInitParameters) DeepCopyInto(out *PolicyAttachmentInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PolicyRef != nil {
		in, out := &in.PolicyRef, &out.PolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicySelector != nil {
		in, out := &in.PolicySelector, &out.PolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentInitParameters.
func (in *PolicyAttachmentInitParameters) DeepCopy() *PolicyAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentList) DeepCopyInto(out *PolicyAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentList.
func (in *PolicyAttachmentList) DeepCopy() *PolicyAttachmentList {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentObservation) DeepCopyInto(out *PolicyAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentObservation.
func (in *PolicyAttachmentObservation) DeepCopy() *PolicyAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentParameters) DeepCopyInto(out *PolicyAttachmentParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PolicyRef != nil {
		in, out := &in.PolicyRef, &out.PolicyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PolicySelector != nil {
		in, out := &in.PolicySelector, &out.PolicySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentParameters.
func (in *PolicyAttachmentParameters) DeepCopy() *PolicyAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentSpec) DeepCopyInto(out *PolicyAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentSpec.
func (in *PolicyAttachmentSpec) DeepCopy() *PolicyAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAttachmentStatus) DeepCopyInto(out *PolicyAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAttachmentStatus.
func (in *PolicyAttachmentStatus) DeepCopy() *PolicyAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultVersionID != nil {
		in, out := &in.DefaultVersionID, &out.DefaultVersionID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyStatus) DeepCopyInto(out *PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyStatus.
func (in *PolicyStatus) DeepCopy() *PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreProvisioningHookInitParameters) DeepCopyInto(out *PreProvisioningHookInitParameters) {
	*out = *in
	if in.PayloadVersion != nil {
		in, out := &in.PayloadVersion, &out.PayloadVersion
		*out = new(string)
		**out = **in
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreProvisioningHookInitParameters.
func (in *PreProvisioningHookInitParameters) DeepCopy() *PreProvisioningHookInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreProvisioningHookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreProvisioningHookObservation) DeepCopyInto(out *PreProvisioningHookObservation) {
	*out = *in
	if in.PayloadVersion != nil {
		in, out := &in.PayloadVersion, &out.PayloadVersion
		*out = new(string)
		**out = **in
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreProvisioningHookObservation.
func (in *PreProvisioningHookObservation) DeepCopy() *PreProvisioningHookObservation {
	if in == nil {
		return nil
	}
	out := new(PreProvisioningHookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreProvisioningHookParameters) DeepCopyInto(out *PreProvisioningHookParameters) {
	*out = *in
	if in.PayloadVersion != nil {
		in, out := &in.PayloadVersion, &out.PayloadVersion
		*out = new(string)
		**out = **in
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreProvisioningHookParameters.
func (in *PreProvisioningHookParameters) DeepCopy() *PreProvisioningHookParameters {
	if in == nil {
		return nil
	}
	out := new(PreProvisioningHookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesInitParameters) DeepCopyInto(out *PropertiesInitParameters) {
	*out = *in
	if in.AttributePayload != nil {
		in, out := &in.AttributePayload, &out.AttributePayload
		*out = make([]AttributePayloadInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesInitParameters.
func (in *PropertiesInitParameters) DeepCopy() *PropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesObservation) DeepCopyInto(out *PropertiesObservation) {
	*out = *in
	if in.AttributePayload != nil {
		in, out := &in.AttributePayload, &out.AttributePayload
		*out = make([]AttributePayloadObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesObservation.
func (in *PropertiesObservation) DeepCopy() *PropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(PropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesParameters) DeepCopyInto(out *PropertiesParameters) {
	*out = *in
	if in.AttributePayload != nil {
		in, out := &in.AttributePayload, &out.AttributePayload
		*out = make([]AttributePayloadParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesParameters.
func (in *PropertiesParameters) DeepCopy() *PropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(PropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplate) DeepCopyInto(out *ProvisioningTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplate.
func (in *ProvisioningTemplate) DeepCopy() *ProvisioningTemplate {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisioningTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateInitParameters) DeepCopyInto(out *ProvisioningTemplateInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PreProvisioningHook != nil {
		in, out := &in.PreProvisioningHook, &out.PreProvisioningHook
		*out = make([]PreProvisioningHookInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisioningRoleArn != nil {
		in, out := &in.ProvisioningRoleArn, &out.ProvisioningRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningRoleArnRef != nil {
		in, out := &in.ProvisioningRoleArnRef, &out.ProvisioningRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningRoleArnSelector != nil {
		in, out := &in.ProvisioningRoleArnSelector, &out.ProvisioningRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateBody != nil {
		in, out := &in.TemplateBody, &out.TemplateBody
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateInitParameters.
func (in *ProvisioningTemplateInitParameters) DeepCopy() *ProvisioningTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateList) DeepCopyInto(out *ProvisioningTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProvisioningTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateList.
func (in *ProvisioningTemplateList) DeepCopy() *ProvisioningTemplateList {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisioningTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateObservation) DeepCopyInto(out *ProvisioningTemplateObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultVersionID != nil {
		in, out := &in.DefaultVersionID, &out.DefaultVersionID
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PreProvisioningHook != nil {
		in, out := &in.PreProvisioningHook, &out.PreProvisioningHook
		*out = make([]PreProvisioningHookObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisioningRoleArn != nil {
		in, out := &in.ProvisioningRoleArn, &out.ProvisioningRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateBody != nil {
		in, out := &in.TemplateBody, &out.TemplateBody
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateObservation.
func (in *ProvisioningTemplateObservation) DeepCopy() *ProvisioningTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateParameters) DeepCopyInto(out *ProvisioningTemplateParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PreProvisioningHook != nil {
		in, out := &in.PreProvisioningHook, &out.PreProvisioningHook
		*out = make([]PreProvisioningHookParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProvisioningRoleArn != nil {
		in, out := &in.ProvisioningRoleArn, &out.ProvisioningRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningRoleArnRef != nil {
		in, out := &in.ProvisioningRoleArnRef, &out.ProvisioningRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProvisioningRoleArnSelector != nil {
		in, out := &in.ProvisioningRoleArnSelector, &out.ProvisioningRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateBody != nil {
		in, out := &in.TemplateBody, &out.TemplateBody
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateParameters.
func (in *ProvisioningTemplateParameters) DeepCopy() *ProvisioningTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateSpec) DeepCopyInto(out *ProvisioningTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateSpec.
func (in *ProvisioningTemplateSpec) DeepCopy() *ProvisioningTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTemplateStatus) DeepCopyInto(out *ProvisioningTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTemplateStatus.
func (in *ProvisioningTemplateStatus) DeepCopy() *ProvisioningTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PutItemInitParameters) DeepCopyInto(out *PutItemInitParameters) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PutItemInitParameters.
func (in *PutItemInitParameters) DeepCopy() *PutItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(PutItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PutItemObservation) DeepCopyInto(out *PutItemObservation) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PutItemObservation.
func (in *PutItemObservation) DeepCopy() *PutItemObservation {
	if in == nil {
		return nil
	}
	out := new(PutItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PutItemParameters) DeepCopyInto(out *PutItemParameters) {
	*out = *in
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PutItemParameters.
func (in *PutItemParameters) DeepCopy() *PutItemParameters {
	if in == nil {
		return nil
	}
	out := new(PutItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepublishInitParameters) DeepCopyInto(out *RepublishInitParameters) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepublishInitParameters.
func (in *RepublishInitParameters) DeepCopy() *RepublishInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepublishInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepublishObservation) DeepCopyInto(out *RepublishObservation) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepublishObservation.
func (in *RepublishObservation) DeepCopy() *RepublishObservation {
	if in == nil {
		return nil
	}
	out := new(RepublishObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepublishParameters) DeepCopyInto(out *RepublishParameters) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepublishParameters.
func (in *RepublishParameters) DeepCopy() *RepublishParameters {
	if in == nil {
		return nil
	}
	out := new(RepublishParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAlias) DeepCopyInto(out *RoleAlias) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAlias.
func (in *RoleAlias) DeepCopy() *RoleAlias {
	if in == nil {
		return nil
	}
	out := new(RoleAlias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleAlias) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasInitParameters) DeepCopyInto(out *RoleAliasInitParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.CredentialDuration != nil {
		in, out := &in.CredentialDuration, &out.CredentialDuration
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasInitParameters.
func (in *RoleAliasInitParameters) DeepCopy() *RoleAliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoleAliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasList) DeepCopyInto(out *RoleAliasList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleAlias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasList.
func (in *RoleAliasList) DeepCopy() *RoleAliasList {
	if in == nil {
		return nil
	}
	out := new(RoleAliasList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleAliasList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasObservation) DeepCopyInto(out *RoleAliasObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialDuration != nil {
		in, out := &in.CredentialDuration, &out.CredentialDuration
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasObservation.
func (in *RoleAliasObservation) DeepCopy() *RoleAliasObservation {
	if in == nil {
		return nil
	}
	out := new(RoleAliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasParameters) DeepCopyInto(out *RoleAliasParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.CredentialDuration != nil {
		in, out := &in.CredentialDuration, &out.CredentialDuration
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasParameters.
func (in *RoleAliasParameters) DeepCopy() *RoleAliasParameters {
	if in == nil {
		return nil
	}
	out := new(RoleAliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasSpec) DeepCopyInto(out *RoleAliasSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasSpec.
func (in *RoleAliasSpec) DeepCopy() *RoleAliasSpec {
	if in == nil {
		return nil
	}
	out := new(RoleAliasSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAliasStatus) DeepCopyInto(out *RoleAliasStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAliasStatus.
func (in *RoleAliasStatus) DeepCopy() *RoleAliasStatus {
	if in == nil {
		return nil
	}
	out := new(RoleAliasStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootToParentGroupsInitParameters) DeepCopyInto(out *RootToParentGroupsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootToParentGroupsInitParameters.
func (in *RootToParentGroupsInitParameters) DeepCopy() *RootToParentGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RootToParentGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootToParentGroupsObservation) DeepCopyInto(out *RootToParentGroupsObservation) {
	*out = *in
	if in.GroupArn != nil {
		in, out := &in.GroupArn, &out.GroupArn
		*out = new(string)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootToParentGroupsObservation.
func (in *RootToParentGroupsObservation) DeepCopy() *RootToParentGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(RootToParentGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootToParentGroupsParameters) DeepCopyInto(out *RootToParentGroupsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootToParentGroupsParameters.
func (in *RootToParentGroupsParameters) DeepCopy() *RootToParentGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(RootToParentGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnsInitParameters) DeepCopyInto(out *SnsInitParameters) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArnRef != nil {
		in, out := &in.TargetArnRef, &out.TargetArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArnSelector != nil {
		in, out := &in.TargetArnSelector, &out.TargetArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnsInitParameters.
func (in *SnsInitParameters) DeepCopy() *SnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnsObservation) DeepCopyInto(out *SnsObservation) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnsObservation.
func (in *SnsObservation) DeepCopy() *SnsObservation {
	if in == nil {
		return nil
	}
	out := new(SnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnsParameters) DeepCopyInto(out *SnsParameters) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArnRef != nil {
		in, out := &in.TargetArnRef, &out.TargetArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArnSelector != nil {
		in, out := &in.TargetArnSelector, &out.TargetArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnsParameters.
func (in *SnsParameters) DeepCopy() *SnsParameters {
	if in == nil {
		return nil
	}
	out := new(SnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsInitParameters) DeepCopyInto(out *SqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.QueueURLRef != nil {
		in, out := &in.QueueURLRef, &out.QueueURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueURLSelector != nil {
		in, out := &in.QueueURLSelector, &out.QueueURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsInitParameters.
func (in *SqsInitParameters) DeepCopy() *SqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsObservation) DeepCopyInto(out *SqsObservation) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsObservation.
func (in *SqsObservation) DeepCopy() *SqsObservation {
	if in == nil {
		return nil
	}
	out := new(SqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqsParameters) DeepCopyInto(out *SqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.QueueURLRef != nil {
		in, out := &in.QueueURLRef, &out.QueueURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueURLSelector != nil {
		in, out := &in.QueueURLSelector, &out.QueueURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqsParameters.
func (in *SqsParameters) DeepCopy() *SqsParameters {
	if in == nil {
		return nil
	}
	out := new(SqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsInitParameters) DeepCopyInto(out *StepFunctionsInitParameters) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
	if in.StateMachineNameRef != nil {
		in, out := &in.StateMachineNameRef, &out.StateMachineNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineNameSelector != nil {
		in, out := &in.StateMachineNameSelector, &out.StateMachineNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsInitParameters.
func (in *StepFunctionsInitParameters) DeepCopy() *StepFunctionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsObservation) DeepCopyInto(out *StepFunctionsObservation) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsObservation.
func (in *StepFunctionsObservation) DeepCopy() *StepFunctionsObservation {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsParameters) DeepCopyInto(out *StepFunctionsParameters) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
	if in.StateMachineNameRef != nil {
		in, out := &in.StateMachineNameRef, &out.StateMachineNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineNameSelector != nil {
		in, out := &in.StateMachineNameSelector, &out.StateMachineNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsParameters.
func (in *StepFunctionsParameters) DeepCopy() *StepFunctionsParameters {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Thing) DeepCopyInto(out *Thing) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Thing.
func (in *Thing) DeepCopy() *Thing {
	if in == nil {
		return nil
	}
	out := new(Thing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Thing) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroup) DeepCopyInto(out *ThingGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroup.
func (in *ThingGroup) DeepCopy() *ThingGroup {
	if in == nil {
		return nil
	}
	out := new(ThingGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupIndexingConfigurationInitParameters) DeepCopyInto(out *ThingGroupIndexingConfigurationInitParameters) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]CustomFieldInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ManagedFieldInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingGroupIndexingMode != nil {
		in, out := &in.ThingGroupIndexingMode, &out.ThingGroupIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupIndexingConfigurationInitParameters.
func (in *ThingGroupIndexingConfigurationInitParameters) DeepCopy() *ThingGroupIndexingConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupIndexingConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupIndexingConfigurationObservation) DeepCopyInto(out *ThingGroupIndexingConfigurationObservation) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]CustomFieldObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ManagedFieldObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingGroupIndexingMode != nil {
		in, out := &in.ThingGroupIndexingMode, &out.ThingGroupIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupIndexingConfigurationObservation.
func (in *ThingGroupIndexingConfigurationObservation) DeepCopy() *ThingGroupIndexingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ThingGroupIndexingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupIndexingConfigurationParameters) DeepCopyInto(out *ThingGroupIndexingConfigurationParameters) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]CustomFieldParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ManagedFieldParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThingGroupIndexingMode != nil {
		in, out := &in.ThingGroupIndexingMode, &out.ThingGroupIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupIndexingConfigurationParameters.
func (in *ThingGroupIndexingConfigurationParameters) DeepCopy() *ThingGroupIndexingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupIndexingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupInitParameters) DeepCopyInto(out *ThingGroupInitParameters) {
	*out = *in
	if in.ParentGroupName != nil {
		in, out := &in.ParentGroupName, &out.ParentGroupName
		*out = new(string)
		**out = **in
	}
	if in.ParentGroupNameRef != nil {
		in, out := &in.ParentGroupNameRef, &out.ParentGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentGroupNameSelector != nil {
		in, out := &in.ParentGroupNameSelector, &out.ParentGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]PropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupInitParameters.
func (in *ThingGroupInitParameters) DeepCopy() *ThingGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupList) DeepCopyInto(out *ThingGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThingGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupList.
func (in *ThingGroupList) DeepCopy() *ThingGroupList {
	if in == nil {
		return nil
	}
	out := new(ThingGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembership) DeepCopyInto(out *ThingGroupMembership) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembership.
func (in *ThingGroupMembership) DeepCopy() *ThingGroupMembership {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembership)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingGroupMembership) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipInitParameters) DeepCopyInto(out *ThingGroupMembershipInitParameters) {
	*out = *in
	if in.OverrideDynamicGroup != nil {
		in, out := &in.OverrideDynamicGroup, &out.OverrideDynamicGroup
		*out = new(bool)
		**out = **in
	}
	if in.ThingGroupName != nil {
		in, out := &in.ThingGroupName, &out.ThingGroupName
		*out = new(string)
		**out = **in
	}
	if in.ThingName != nil {
		in, out := &in.ThingName, &out.ThingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipInitParameters.
func (in *ThingGroupMembershipInitParameters) DeepCopy() *ThingGroupMembershipInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipList) DeepCopyInto(out *ThingGroupMembershipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThingGroupMembership, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipList.
func (in *ThingGroupMembershipList) DeepCopy() *ThingGroupMembershipList {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingGroupMembershipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipObservation) DeepCopyInto(out *ThingGroupMembershipObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OverrideDynamicGroup != nil {
		in, out := &in.OverrideDynamicGroup, &out.OverrideDynamicGroup
		*out = new(bool)
		**out = **in
	}
	if in.ThingGroupName != nil {
		in, out := &in.ThingGroupName, &out.ThingGroupName
		*out = new(string)
		**out = **in
	}
	if in.ThingName != nil {
		in, out := &in.ThingName, &out.ThingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipObservation.
func (in *ThingGroupMembershipObservation) DeepCopy() *ThingGroupMembershipObservation {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipParameters) DeepCopyInto(out *ThingGroupMembershipParameters) {
	*out = *in
	if in.OverrideDynamicGroup != nil {
		in, out := &in.OverrideDynamicGroup, &out.OverrideDynamicGroup
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ThingGroupName != nil {
		in, out := &in.ThingGroupName, &out.ThingGroupName
		*out = new(string)
		**out = **in
	}
	if in.ThingName != nil {
		in, out := &in.ThingName, &out.ThingName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipParameters.
func (in *ThingGroupMembershipParameters) DeepCopy() *ThingGroupMembershipParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipSpec) DeepCopyInto(out *ThingGroupMembershipSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipSpec.
func (in *ThingGroupMembershipSpec) DeepCopy() *ThingGroupMembershipSpec {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupMembershipStatus) DeepCopyInto(out *ThingGroupMembershipStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupMembershipStatus.
func (in *ThingGroupMembershipStatus) DeepCopy() *ThingGroupMembershipStatus {
	if in == nil {
		return nil
	}
	out := new(ThingGroupMembershipStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupObservation) DeepCopyInto(out *ThingGroupObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParentGroupName != nil {
		in, out := &in.ParentGroupName, &out.ParentGroupName
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]PropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupObservation.
func (in *ThingGroupObservation) DeepCopy() *ThingGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ThingGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupParameters) DeepCopyInto(out *ThingGroupParameters) {
	*out = *in
	if in.ParentGroupName != nil {
		in, out := &in.ParentGroupName, &out.ParentGroupName
		*out = new(string)
		**out = **in
	}
	if in.ParentGroupNameRef != nil {
		in, out := &in.ParentGroupNameRef, &out.ParentGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ParentGroupNameSelector != nil {
		in, out := &in.ParentGroupNameSelector, &out.ParentGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]PropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupParameters.
func (in *ThingGroupParameters) DeepCopy() *ThingGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ThingGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupSpec) DeepCopyInto(out *ThingGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupSpec.
func (in *ThingGroupSpec) DeepCopy() *ThingGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ThingGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingGroupStatus) DeepCopyInto(out *ThingGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingGroupStatus.
func (in *ThingGroupStatus) DeepCopy() *ThingGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ThingGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationCustomFieldInitParameters) DeepCopyInto(out *ThingIndexingConfigurationCustomFieldInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationCustomFieldInitParameters.
func (in *ThingIndexingConfigurationCustomFieldInitParameters) DeepCopy() *ThingIndexingConfigurationCustomFieldInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationCustomFieldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationCustomFieldObservation) DeepCopyInto(out *ThingIndexingConfigurationCustomFieldObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationCustomFieldObservation.
func (in *ThingIndexingConfigurationCustomFieldObservation) DeepCopy() *ThingIndexingConfigurationCustomFieldObservation {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationCustomFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationCustomFieldParameters) DeepCopyInto(out *ThingIndexingConfigurationCustomFieldParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationCustomFieldParameters.
func (in *ThingIndexingConfigurationCustomFieldParameters) DeepCopy() *ThingIndexingConfigurationCustomFieldParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationCustomFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationInitParameters) DeepCopyInto(out *ThingIndexingConfigurationInitParameters) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]ThingIndexingConfigurationCustomFieldInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceDefenderIndexingMode != nil {
		in, out := &in.DeviceDefenderIndexingMode, &out.DeviceDefenderIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ThingIndexingConfigurationManagedFieldInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamedShadowIndexingMode != nil {
		in, out := &in.NamedShadowIndexingMode, &out.NamedShadowIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingConnectivityIndexingMode != nil {
		in, out := &in.ThingConnectivityIndexingMode, &out.ThingConnectivityIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingIndexingMode != nil {
		in, out := &in.ThingIndexingMode, &out.ThingIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationInitParameters.
func (in *ThingIndexingConfigurationInitParameters) DeepCopy() *ThingIndexingConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationManagedFieldInitParameters) DeepCopyInto(out *ThingIndexingConfigurationManagedFieldInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationManagedFieldInitParameters.
func (in *ThingIndexingConfigurationManagedFieldInitParameters) DeepCopy() *ThingIndexingConfigurationManagedFieldInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationManagedFieldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationManagedFieldObservation) DeepCopyInto(out *ThingIndexingConfigurationManagedFieldObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationManagedFieldObservation.
func (in *ThingIndexingConfigurationManagedFieldObservation) DeepCopy() *ThingIndexingConfigurationManagedFieldObservation {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationManagedFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationManagedFieldParameters) DeepCopyInto(out *ThingIndexingConfigurationManagedFieldParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationManagedFieldParameters.
func (in *ThingIndexingConfigurationManagedFieldParameters) DeepCopy() *ThingIndexingConfigurationManagedFieldParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationManagedFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationObservation) DeepCopyInto(out *ThingIndexingConfigurationObservation) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]ThingIndexingConfigurationCustomFieldObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceDefenderIndexingMode != nil {
		in, out := &in.DeviceDefenderIndexingMode, &out.DeviceDefenderIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ThingIndexingConfigurationManagedFieldObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamedShadowIndexingMode != nil {
		in, out := &in.NamedShadowIndexingMode, &out.NamedShadowIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingConnectivityIndexingMode != nil {
		in, out := &in.ThingConnectivityIndexingMode, &out.ThingConnectivityIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingIndexingMode != nil {
		in, out := &in.ThingIndexingMode, &out.ThingIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationObservation.
func (in *ThingIndexingConfigurationObservation) DeepCopy() *ThingIndexingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingIndexingConfigurationParameters) DeepCopyInto(out *ThingIndexingConfigurationParameters) {
	*out = *in
	if in.CustomField != nil {
		in, out := &in.CustomField, &out.CustomField
		*out = make([]ThingIndexingConfigurationCustomFieldParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceDefenderIndexingMode != nil {
		in, out := &in.DeviceDefenderIndexingMode, &out.DeviceDefenderIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedField != nil {
		in, out := &in.ManagedField, &out.ManagedField
		*out = make([]ThingIndexingConfigurationManagedFieldParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamedShadowIndexingMode != nil {
		in, out := &in.NamedShadowIndexingMode, &out.NamedShadowIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingConnectivityIndexingMode != nil {
		in, out := &in.ThingConnectivityIndexingMode, &out.ThingConnectivityIndexingMode
		*out = new(string)
		**out = **in
	}
	if in.ThingIndexingMode != nil {
		in, out := &in.ThingIndexingMode, &out.ThingIndexingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingIndexingConfigurationParameters.
func (in *ThingIndexingConfigurationParameters) DeepCopy() *ThingIndexingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ThingIndexingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingInitParameters) DeepCopyInto(out *ThingInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ThingTypeName != nil {
		in, out := &in.ThingTypeName, &out.ThingTypeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingInitParameters.
func (in *ThingInitParameters) DeepCopy() *ThingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingList) DeepCopyInto(out *ThingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Thing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingList.
func (in *ThingList) DeepCopy() *ThingList {
	if in == nil {
		return nil
	}
	out := new(ThingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingObservation) DeepCopyInto(out *ThingObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DefaultClientID != nil {
		in, out := &in.DefaultClientID, &out.DefaultClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ThingTypeName != nil {
		in, out := &in.ThingTypeName, &out.ThingTypeName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingObservation.
func (in *ThingObservation) DeepCopy() *ThingObservation {
	if in == nil {
		return nil
	}
	out := new(ThingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingParameters) DeepCopyInto(out *ThingParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ThingTypeName != nil {
		in, out := &in.ThingTypeName, &out.ThingTypeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingParameters.
func (in *ThingParameters) DeepCopy() *ThingParameters {
	if in == nil {
		return nil
	}
	out := new(ThingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachment) DeepCopyInto(out *ThingPrincipalAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachment.
func (in *ThingPrincipalAttachment) DeepCopy() *ThingPrincipalAttachment {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingPrincipalAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentInitParameters) DeepCopyInto(out *ThingPrincipalAttachmentInitParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Thing != nil {
		in, out := &in.Thing, &out.Thing
		*out = new(string)
		**out = **in
	}
	if in.ThingRef != nil {
		in, out := &in.ThingRef, &out.ThingRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ThingSelector != nil {
		in, out := &in.ThingSelector, &out.ThingSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentInitParameters.
func (in *ThingPrincipalAttachmentInitParameters) DeepCopy() *ThingPrincipalAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentList) DeepCopyInto(out *ThingPrincipalAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThingPrincipalAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentList.
func (in *ThingPrincipalAttachmentList) DeepCopy() *ThingPrincipalAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingPrincipalAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentObservation) DeepCopyInto(out *ThingPrincipalAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Thing != nil {
		in, out := &in.Thing, &out.Thing
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentObservation.
func (in *ThingPrincipalAttachmentObservation) DeepCopy() *ThingPrincipalAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentParameters) DeepCopyInto(out *ThingPrincipalAttachmentParameters) {
	*out = *in
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalRef != nil {
		in, out := &in.PrincipalRef, &out.PrincipalRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PrincipalSelector != nil {
		in, out := &in.PrincipalSelector, &out.PrincipalSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Thing != nil {
		in, out := &in.Thing, &out.Thing
		*out = new(string)
		**out = **in
	}
	if in.ThingRef != nil {
		in, out := &in.ThingRef, &out.ThingRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ThingSelector != nil {
		in, out := &in.ThingSelector, &out.ThingSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentParameters.
func (in *ThingPrincipalAttachmentParameters) DeepCopy() *ThingPrincipalAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentSpec) DeepCopyInto(out *ThingPrincipalAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentSpec.
func (in *ThingPrincipalAttachmentSpec) DeepCopy() *ThingPrincipalAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingPrincipalAttachmentStatus) DeepCopyInto(out *ThingPrincipalAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingPrincipalAttachmentStatus.
func (in *ThingPrincipalAttachmentStatus) DeepCopy() *ThingPrincipalAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ThingPrincipalAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingSpec) DeepCopyInto(out *ThingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingSpec.
func (in *ThingSpec) DeepCopy() *ThingSpec {
	if in == nil {
		return nil
	}
	out := new(ThingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingStatus) DeepCopyInto(out *ThingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingStatus.
func (in *ThingStatus) DeepCopy() *ThingStatus {
	if in == nil {
		return nil
	}
	out := new(ThingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingType) DeepCopyInto(out *ThingType) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingType.
func (in *ThingType) DeepCopy() *ThingType {
	if in == nil {
		return nil
	}
	out := new(ThingType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingType) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeInitParameters) DeepCopyInto(out *ThingTypeInitParameters) {
	*out = *in
	if in.Deprecated != nil {
		in, out := &in.Deprecated, &out.Deprecated
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]ThingTypePropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeInitParameters.
func (in *ThingTypeInitParameters) DeepCopy() *ThingTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeList) DeepCopyInto(out *ThingTypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThingType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeList.
func (in *ThingTypeList) DeepCopy() *ThingTypeList {
	if in == nil {
		return nil
	}
	out := new(ThingTypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThingTypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeObservation) DeepCopyInto(out *ThingTypeObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Deprecated != nil {
		in, out := &in.Deprecated, &out.Deprecated
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]ThingTypePropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeObservation.
func (in *ThingTypeObservation) DeepCopy() *ThingTypeObservation {
	if in == nil {
		return nil
	}
	out := new(ThingTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeParameters) DeepCopyInto(out *ThingTypeParameters) {
	*out = *in
	if in.Deprecated != nil {
		in, out := &in.Deprecated, &out.Deprecated
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]ThingTypePropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeParameters.
func (in *ThingTypeParameters) DeepCopy() *ThingTypeParameters {
	if in == nil {
		return nil
	}
	out := new(ThingTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypePropertiesInitParameters) DeepCopyInto(out *ThingTypePropertiesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SearchableAttributes != nil {
		in, out := &in.SearchableAttributes, &out.SearchableAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypePropertiesInitParameters.
func (in *ThingTypePropertiesInitParameters) DeepCopy() *ThingTypePropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThingTypePropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypePropertiesObservation) DeepCopyInto(out *ThingTypePropertiesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SearchableAttributes != nil {
		in, out := &in.SearchableAttributes, &out.SearchableAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypePropertiesObservation.
func (in *ThingTypePropertiesObservation) DeepCopy() *ThingTypePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(ThingTypePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypePropertiesParameters) DeepCopyInto(out *ThingTypePropertiesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.SearchableAttributes != nil {
		in, out := &in.SearchableAttributes, &out.SearchableAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypePropertiesParameters.
func (in *ThingTypePropertiesParameters) DeepCopy() *ThingTypePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(ThingTypePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeSpec) DeepCopyInto(out *ThingTypeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeSpec.
func (in *ThingTypeSpec) DeepCopy() *ThingTypeSpec {
	if in == nil {
		return nil
	}
	out := new(ThingTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThingTypeStatus) DeepCopyInto(out *ThingTypeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThingTypeStatus.
func (in *ThingTypeStatus) DeepCopy() *ThingTypeStatus {
	if in == nil {
		return nil
	}
	out := new(ThingTypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestampInitParameters) DeepCopyInto(out *TimestampInitParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestampInitParameters.
func (in *TimestampInitParameters) DeepCopy() *TimestampInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimestampInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestampObservation) DeepCopyInto(out *TimestampObservation) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestampObservation.
func (in *TimestampObservation) DeepCopy() *TimestampObservation {
	if in == nil {
		return nil
	}
	out := new(TimestampObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestampParameters) DeepCopyInto(out *TimestampParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestampParameters.
func (in *TimestampParameters) DeepCopy() *TimestampParameters {
	if in == nil {
		return nil
	}
	out := new(TimestampParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamDimensionInitParameters) DeepCopyInto(out *TimestreamDimensionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamDimensionInitParameters.
func (in *TimestreamDimensionInitParameters) DeepCopy() *TimestreamDimensionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamDimensionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamDimensionObservation) DeepCopyInto(out *TimestreamDimensionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamDimensionObservation.
func (in *TimestreamDimensionObservation) DeepCopy() *TimestreamDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(TimestreamDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamDimensionParameters) DeepCopyInto(out *TimestreamDimensionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamDimensionParameters.
func (in *TimestreamDimensionParameters) DeepCopy() *TimestreamDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamInitParameters) DeepCopyInto(out *TimestreamInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestampInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamInitParameters.
func (in *TimestreamInitParameters) DeepCopy() *TimestreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamObservation) DeepCopyInto(out *TimestreamObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestampObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamObservation.
func (in *TimestreamObservation) DeepCopy() *TimestreamObservation {
	if in == nil {
		return nil
	}
	out := new(TimestreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamParameters) DeepCopyInto(out *TimestreamParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestampParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamParameters.
func (in *TimestreamParameters) DeepCopy() *TimestreamParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamTimestampInitParameters) DeepCopyInto(out *TimestreamTimestampInitParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamTimestampInitParameters.
func (in *TimestreamTimestampInitParameters) DeepCopy() *TimestreamTimestampInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamTimestampInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamTimestampObservation) DeepCopyInto(out *TimestreamTimestampObservation) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamTimestampObservation.
func (in *TimestreamTimestampObservation) DeepCopy() *TimestreamTimestampObservation {
	if in == nil {
		return nil
	}
	out := new(TimestreamTimestampObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimestreamTimestampParameters) DeepCopyInto(out *TimestreamTimestampParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimestreamTimestampParameters.
func (in *TimestreamTimestampParameters) DeepCopy() *TimestreamTimestampParameters {
	if in == nil {
		return nil
	}
	out := new(TimestreamTimestampParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRule) DeepCopyInto(out *TopicRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRule.
func (in *TopicRule) DeepCopy() *TopicRule {
	if in == nil {
		return nil
	}
	out := new(TopicRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestination) DeepCopyInto(out *TopicRuleDestination) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestination.
func (in *TopicRuleDestination) DeepCopy() *TopicRuleDestination {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicRuleDestination) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationInitParameters) DeepCopyInto(out *TopicRuleDestinationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = make([]VPCConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationInitParameters.
func (in *TopicRuleDestinationInitParameters) DeepCopy() *TopicRuleDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationList) DeepCopyInto(out *TopicRuleDestinationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicRuleDestination, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationList.
func (in *TopicRuleDestinationList) DeepCopy() *TopicRuleDestinationList {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicRuleDestinationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationObservation) DeepCopyInto(out *TopicRuleDestinationObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = make([]VPCConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationObservation.
func (in *TopicRuleDestinationObservation) DeepCopy() *TopicRuleDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationParameters) DeepCopyInto(out *TopicRuleDestinationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VPCConfiguration != nil {
		in, out := &in.VPCConfiguration, &out.VPCConfiguration
		*out = make([]VPCConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationParameters.
func (in *TopicRuleDestinationParameters) DeepCopy() *TopicRuleDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationSpec) DeepCopyInto(out *TopicRuleDestinationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationSpec.
func (in *TopicRuleDestinationSpec) DeepCopy() *TopicRuleDestinationSpec {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleDestinationStatus) DeepCopyInto(out *TopicRuleDestinationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleDestinationStatus.
func (in *TopicRuleDestinationStatus) DeepCopy() *TopicRuleDestinationStatus {
	if in == nil {
		return nil
	}
	out := new(TopicRuleDestinationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleFirehoseInitParameters) DeepCopyInto(out *TopicRuleFirehoseInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamNameRef != nil {
		in, out := &in.DeliveryStreamNameRef, &out.DeliveryStreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamNameSelector != nil {
		in, out := &in.DeliveryStreamNameSelector, &out.DeliveryStreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleFirehoseInitParameters.
func (in *TopicRuleFirehoseInitParameters) DeepCopy() *TopicRuleFirehoseInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleFirehoseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleFirehoseObservation) DeepCopyInto(out *TopicRuleFirehoseObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleFirehoseObservation.
func (in *TopicRuleFirehoseObservation) DeepCopy() *TopicRuleFirehoseObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleFirehoseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleFirehoseParameters) DeepCopyInto(out *TopicRuleFirehoseParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.DeliveryStreamName != nil {
		in, out := &in.DeliveryStreamName, &out.DeliveryStreamName
		*out = new(string)
		**out = **in
	}
	if in.DeliveryStreamNameRef != nil {
		in, out := &in.DeliveryStreamNameRef, &out.DeliveryStreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeliveryStreamNameSelector != nil {
		in, out := &in.DeliveryStreamNameSelector, &out.DeliveryStreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleFirehoseParameters.
func (in *TopicRuleFirehoseParameters) DeepCopy() *TopicRuleFirehoseParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleFirehoseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleHTTPInitParameters) DeepCopyInto(out *TopicRuleHTTPInitParameters) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHTTPHeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleHTTPInitParameters.
func (in *TopicRuleHTTPInitParameters) DeepCopy() *TopicRuleHTTPInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleHTTPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleHTTPObservation) DeepCopyInto(out *TopicRuleHTTPObservation) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHTTPHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleHTTPObservation.
func (in *TopicRuleHTTPObservation) DeepCopy() *TopicRuleHTTPObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleHTTPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleHTTPParameters) DeepCopyInto(out *TopicRuleHTTPParameters) {
	*out = *in
	if in.ConfirmationURL != nil {
		in, out := &in.ConfirmationURL, &out.ConfirmationURL
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = make([]HTTPHTTPHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleHTTPParameters.
func (in *TopicRuleHTTPParameters) DeepCopy() *TopicRuleHTTPParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleHTTPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleInitParameters) DeepCopyInto(out *TopicRuleInitParameters) {
	*out = *in
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]CloudwatchAlarmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]CloudwatchMetricInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]DynamodbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]Dynamodbv2InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ElasticsearchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorAction != nil {
		in, out := &in.ErrorAction, &out.ErrorAction
		*out = make([]ErrorActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]TopicRuleFirehoseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]TopicRuleHTTPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]TopicRuleIotAnalyticsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]TopicRuleIotEventsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]TopicRuleKafkaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]TopicRuleKinesisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]TopicRuleLambdaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]TopicRuleRepublishInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TopicRuleS3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SQLVersion != nil {
		in, out := &in.SQLVersion, &out.SQLVersion
		*out = new(string)
		**out = **in
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]TopicRuleSnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]TopicRuleSqsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]TopicRuleStepFunctionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TopicRuleTimestreamInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleInitParameters.
func (in *TopicRuleInitParameters) DeepCopy() *TopicRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotAnalyticsInitParameters) DeepCopyInto(out *TopicRuleIotAnalyticsInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotAnalyticsInitParameters.
func (in *TopicRuleIotAnalyticsInitParameters) DeepCopy() *TopicRuleIotAnalyticsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotAnalyticsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotAnalyticsObservation) DeepCopyInto(out *TopicRuleIotAnalyticsObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotAnalyticsObservation.
func (in *TopicRuleIotAnalyticsObservation) DeepCopy() *TopicRuleIotAnalyticsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotAnalyticsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotAnalyticsParameters) DeepCopyInto(out *TopicRuleIotAnalyticsParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.ChannelName != nil {
		in, out := &in.ChannelName, &out.ChannelName
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotAnalyticsParameters.
func (in *TopicRuleIotAnalyticsParameters) DeepCopy() *TopicRuleIotAnalyticsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotAnalyticsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotEventsInitParameters) DeepCopyInto(out *TopicRuleIotEventsInitParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotEventsInitParameters.
func (in *TopicRuleIotEventsInitParameters) DeepCopy() *TopicRuleIotEventsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotEventsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotEventsObservation) DeepCopyInto(out *TopicRuleIotEventsObservation) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotEventsObservation.
func (in *TopicRuleIotEventsObservation) DeepCopy() *TopicRuleIotEventsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotEventsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleIotEventsParameters) DeepCopyInto(out *TopicRuleIotEventsParameters) {
	*out = *in
	if in.BatchMode != nil {
		in, out := &in.BatchMode, &out.BatchMode
		*out = new(bool)
		**out = **in
	}
	if in.InputName != nil {
		in, out := &in.InputName, &out.InputName
		*out = new(string)
		**out = **in
	}
	if in.MessageID != nil {
		in, out := &in.MessageID, &out.MessageID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleIotEventsParameters.
func (in *TopicRuleIotEventsParameters) DeepCopy() *TopicRuleIotEventsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleIotEventsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKafkaInitParameters) DeepCopyInto(out *TopicRuleKafkaInitParameters) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationArnRef != nil {
		in, out := &in.DestinationArnRef, &out.DestinationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationArnSelector != nil {
		in, out := &in.DestinationArnSelector, &out.DestinationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]KafkaHeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKafkaInitParameters.
func (in *TopicRuleKafkaInitParameters) DeepCopy() *TopicRuleKafkaInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKafkaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKafkaObservation) DeepCopyInto(out *TopicRuleKafkaObservation) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]KafkaHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKafkaObservation.
func (in *TopicRuleKafkaObservation) DeepCopy() *TopicRuleKafkaObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKafkaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKafkaParameters) DeepCopyInto(out *TopicRuleKafkaParameters) {
	*out = *in
	if in.ClientProperties != nil {
		in, out := &in.ClientProperties, &out.ClientProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.DestinationArnRef != nil {
		in, out := &in.DestinationArnRef, &out.DestinationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationArnSelector != nil {
		in, out := &in.DestinationArnSelector, &out.DestinationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]KafkaHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKafkaParameters.
func (in *TopicRuleKafkaParameters) DeepCopy() *TopicRuleKafkaParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKafkaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKinesisInitParameters) DeepCopyInto(out *TopicRuleKinesisInitParameters) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKinesisInitParameters.
func (in *TopicRuleKinesisInitParameters) DeepCopy() *TopicRuleKinesisInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKinesisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKinesisObservation) DeepCopyInto(out *TopicRuleKinesisObservation) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKinesisObservation.
func (in *TopicRuleKinesisObservation) DeepCopy() *TopicRuleKinesisObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKinesisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleKinesisParameters) DeepCopyInto(out *TopicRuleKinesisParameters) {
	*out = *in
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamNameRef != nil {
		in, out := &in.StreamNameRef, &out.StreamNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamNameSelector != nil {
		in, out := &in.StreamNameSelector, &out.StreamNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleKinesisParameters.
func (in *TopicRuleKinesisParameters) DeepCopy() *TopicRuleKinesisParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleKinesisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleLambdaInitParameters) DeepCopyInto(out *TopicRuleLambdaInitParameters) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionArnRef != nil {
		in, out := &in.FunctionArnRef, &out.FunctionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionArnSelector != nil {
		in, out := &in.FunctionArnSelector, &out.FunctionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleLambdaInitParameters.
func (in *TopicRuleLambdaInitParameters) DeepCopy() *TopicRuleLambdaInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleLambdaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleLambdaObservation) DeepCopyInto(out *TopicRuleLambdaObservation) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleLambdaObservation.
func (in *TopicRuleLambdaObservation) DeepCopy() *TopicRuleLambdaObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleLambdaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleLambdaParameters) DeepCopyInto(out *TopicRuleLambdaParameters) {
	*out = *in
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionArnRef != nil {
		in, out := &in.FunctionArnRef, &out.FunctionArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionArnSelector != nil {
		in, out := &in.FunctionArnSelector, &out.FunctionArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleLambdaParameters.
func (in *TopicRuleLambdaParameters) DeepCopy() *TopicRuleLambdaParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleLambdaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleList) DeepCopyInto(out *TopicRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleList.
func (in *TopicRuleList) DeepCopy() *TopicRuleList {
	if in == nil {
		return nil
	}
	out := new(TopicRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleObservation) DeepCopyInto(out *TopicRuleObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]CloudwatchAlarmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]CloudwatchMetricObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]DynamodbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]Dynamodbv2Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ElasticsearchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorAction != nil {
		in, out := &in.ErrorAction, &out.ErrorAction
		*out = make([]ErrorActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]TopicRuleFirehoseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]TopicRuleHTTPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]TopicRuleIotAnalyticsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]TopicRuleIotEventsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]TopicRuleKafkaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]TopicRuleKinesisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]TopicRuleLambdaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]TopicRuleRepublishObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TopicRuleS3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SQLVersion != nil {
		in, out := &in.SQLVersion, &out.SQLVersion
		*out = new(string)
		**out = **in
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]TopicRuleSnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]TopicRuleSqsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]TopicRuleStepFunctionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TopicRuleTimestreamObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleObservation.
func (in *TopicRuleObservation) DeepCopy() *TopicRuleObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleParameters) DeepCopyInto(out *TopicRuleParameters) {
	*out = *in
	if in.CloudwatchAlarm != nil {
		in, out := &in.CloudwatchAlarm, &out.CloudwatchAlarm
		*out = make([]CloudwatchAlarmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = make([]CloudwatchLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudwatchMetric != nil {
		in, out := &in.CloudwatchMetric, &out.CloudwatchMetric
		*out = make([]CloudwatchMetricParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dynamodb != nil {
		in, out := &in.Dynamodb, &out.Dynamodb
		*out = make([]DynamodbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Dynamodbv2 != nil {
		in, out := &in.Dynamodbv2, &out.Dynamodbv2
		*out = make([]Dynamodbv2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = make([]ElasticsearchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorAction != nil {
		in, out := &in.ErrorAction, &out.ErrorAction
		*out = make([]ErrorActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Firehose != nil {
		in, out := &in.Firehose, &out.Firehose
		*out = make([]TopicRuleFirehoseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]TopicRuleHTTPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotAnalytics != nil {
		in, out := &in.IotAnalytics, &out.IotAnalytics
		*out = make([]TopicRuleIotAnalyticsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IotEvents != nil {
		in, out := &in.IotEvents, &out.IotEvents
		*out = make([]TopicRuleIotEventsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kafka != nil {
		in, out := &in.Kafka, &out.Kafka
		*out = make([]TopicRuleKafkaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kinesis != nil {
		in, out := &in.Kinesis, &out.Kinesis
		*out = make([]TopicRuleKinesisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lambda != nil {
		in, out := &in.Lambda, &out.Lambda
		*out = make([]TopicRuleLambdaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Republish != nil {
		in, out := &in.Republish, &out.Republish
		*out = make([]TopicRuleRepublishParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]TopicRuleS3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQL != nil {
		in, out := &in.SQL, &out.SQL
		*out = new(string)
		**out = **in
	}
	if in.SQLVersion != nil {
		in, out := &in.SQLVersion, &out.SQLVersion
		*out = new(string)
		**out = **in
	}
	if in.Sns != nil {
		in, out := &in.Sns, &out.Sns
		*out = make([]TopicRuleSnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sqs != nil {
		in, out := &in.Sqs, &out.Sqs
		*out = make([]TopicRuleSqsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctions != nil {
		in, out := &in.StepFunctions, &out.StepFunctions
		*out = make([]TopicRuleStepFunctionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timestream != nil {
		in, out := &in.Timestream, &out.Timestream
		*out = make([]TopicRuleTimestreamParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleParameters.
func (in *TopicRuleParameters) DeepCopy() *TopicRuleParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleRepublishInitParameters) DeepCopyInto(out *TopicRuleRepublishInitParameters) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleRepublishInitParameters.
func (in *TopicRuleRepublishInitParameters) DeepCopy() *TopicRuleRepublishInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleRepublishInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleRepublishObservation) DeepCopyInto(out *TopicRuleRepublishObservation) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleRepublishObservation.
func (in *TopicRuleRepublishObservation) DeepCopy() *TopicRuleRepublishObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleRepublishObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleRepublishParameters) DeepCopyInto(out *TopicRuleRepublishParameters) {
	*out = *in
	if in.Qos != nil {
		in, out := &in.Qos, &out.Qos
		*out = new(float64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleRepublishParameters.
func (in *TopicRuleRepublishParameters) DeepCopy() *TopicRuleRepublishParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleRepublishParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleS3InitParameters) DeepCopyInto(out *TopicRuleS3InitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleS3InitParameters.
func (in *TopicRuleS3InitParameters) DeepCopy() *TopicRuleS3InitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleS3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleS3Observation) DeepCopyInto(out *TopicRuleS3Observation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleS3Observation.
func (in *TopicRuleS3Observation) DeepCopy() *TopicRuleS3Observation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleS3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleS3Parameters) DeepCopyInto(out *TopicRuleS3Parameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleS3Parameters.
func (in *TopicRuleS3Parameters) DeepCopy() *TopicRuleS3Parameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleS3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSnsInitParameters) DeepCopyInto(out *TopicRuleSnsInitParameters) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArnRef != nil {
		in, out := &in.TargetArnRef, &out.TargetArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArnSelector != nil {
		in, out := &in.TargetArnSelector, &out.TargetArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSnsInitParameters.
func (in *TopicRuleSnsInitParameters) DeepCopy() *TopicRuleSnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSnsObservation) DeepCopyInto(out *TopicRuleSnsObservation) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSnsObservation.
func (in *TopicRuleSnsObservation) DeepCopy() *TopicRuleSnsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSnsParameters) DeepCopyInto(out *TopicRuleSnsParameters) {
	*out = *in
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
	if in.TargetArnRef != nil {
		in, out := &in.TargetArnRef, &out.TargetArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetArnSelector != nil {
		in, out := &in.TargetArnSelector, &out.TargetArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSnsParameters.
func (in *TopicRuleSnsParameters) DeepCopy() *TopicRuleSnsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSpec) DeepCopyInto(out *TopicRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSpec.
func (in *TopicRuleSpec) DeepCopy() *TopicRuleSpec {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSqsInitParameters) DeepCopyInto(out *TopicRuleSqsInitParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.QueueURLRef != nil {
		in, out := &in.QueueURLRef, &out.QueueURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueURLSelector != nil {
		in, out := &in.QueueURLSelector, &out.QueueURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSqsInitParameters.
func (in *TopicRuleSqsInitParameters) DeepCopy() *TopicRuleSqsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSqsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSqsObservation) DeepCopyInto(out *TopicRuleSqsObservation) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSqsObservation.
func (in *TopicRuleSqsObservation) DeepCopy() *TopicRuleSqsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSqsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleSqsParameters) DeepCopyInto(out *TopicRuleSqsParameters) {
	*out = *in
	if in.QueueURL != nil {
		in, out := &in.QueueURL, &out.QueueURL
		*out = new(string)
		**out = **in
	}
	if in.QueueURLRef != nil {
		in, out := &in.QueueURLRef, &out.QueueURLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueURLSelector != nil {
		in, out := &in.QueueURLSelector, &out.QueueURLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UseBase64 != nil {
		in, out := &in.UseBase64, &out.UseBase64
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleSqsParameters.
func (in *TopicRuleSqsParameters) DeepCopy() *TopicRuleSqsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleSqsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleStatus) DeepCopyInto(out *TopicRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleStatus.
func (in *TopicRuleStatus) DeepCopy() *TopicRuleStatus {
	if in == nil {
		return nil
	}
	out := new(TopicRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleStepFunctionsInitParameters) DeepCopyInto(out *TopicRuleStepFunctionsInitParameters) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
	if in.StateMachineNameRef != nil {
		in, out := &in.StateMachineNameRef, &out.StateMachineNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineNameSelector != nil {
		in, out := &in.StateMachineNameSelector, &out.StateMachineNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleStepFunctionsInitParameters.
func (in *TopicRuleStepFunctionsInitParameters) DeepCopy() *TopicRuleStepFunctionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleStepFunctionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleStepFunctionsObservation) DeepCopyInto(out *TopicRuleStepFunctionsObservation) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleStepFunctionsObservation.
func (in *TopicRuleStepFunctionsObservation) DeepCopy() *TopicRuleStepFunctionsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleStepFunctionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleStepFunctionsParameters) DeepCopyInto(out *TopicRuleStepFunctionsParameters) {
	*out = *in
	if in.ExecutionNamePrefix != nil {
		in, out := &in.ExecutionNamePrefix, &out.ExecutionNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineName != nil {
		in, out := &in.StateMachineName, &out.StateMachineName
		*out = new(string)
		**out = **in
	}
	if in.StateMachineNameRef != nil {
		in, out := &in.StateMachineNameRef, &out.StateMachineNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StateMachineNameSelector != nil {
		in, out := &in.StateMachineNameSelector, &out.StateMachineNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleStepFunctionsParameters.
func (in *TopicRuleStepFunctionsParameters) DeepCopy() *TopicRuleStepFunctionsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleStepFunctionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleTimestreamInitParameters) DeepCopyInto(out *TopicRuleTimestreamInitParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]TimestreamDimensionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestreamTimestampInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleTimestreamInitParameters.
func (in *TopicRuleTimestreamInitParameters) DeepCopy() *TopicRuleTimestreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleTimestreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleTimestreamObservation) DeepCopyInto(out *TopicRuleTimestreamObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]TimestreamDimensionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestreamTimestampObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleTimestreamObservation.
func (in *TopicRuleTimestreamObservation) DeepCopy() *TopicRuleTimestreamObservation {
	if in == nil {
		return nil
	}
	out := new(TopicRuleTimestreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicRuleTimestreamParameters) DeepCopyInto(out *TopicRuleTimestreamParameters) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseNameRef != nil {
		in, out := &in.DatabaseNameRef, &out.DatabaseNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseNameSelector != nil {
		in, out := &in.DatabaseNameSelector, &out.DatabaseNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]TimestreamDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	if in.TableNameRef != nil {
		in, out := &in.TableNameRef, &out.TableNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TableNameSelector != nil {
		in, out := &in.TableNameSelector, &out.TableNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = make([]TimestreamTimestampParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicRuleTimestreamParameters.
func (in *TopicRuleTimestreamParameters) DeepCopy() *TopicRuleTimestreamParameters {
	if in == nil {
		return nil
	}
	out := new(TopicRuleTimestreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigurationInitParameters) DeepCopyInto(out *VPCConfigurationInitParameters) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigurationInitParameters.
func (in *VPCConfigurationInitParameters) DeepCopy() *VPCConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigurationObservation) DeepCopyInto(out *VPCConfigurationObservation) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigurationObservation.
func (in *VPCConfigurationObservation) DeepCopy() *VPCConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VPCConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigurationParameters) DeepCopyInto(out *VPCConfigurationParameters) {
	*out = *in
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupRefs != nil {
		in, out := &in.SecurityGroupRefs, &out.SecurityGroupRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupSelector != nil {
		in, out := &in.SecurityGroupSelector, &out.SecurityGroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigurationParameters.
func (in *VPCConfigurationParameters) DeepCopy() *VPCConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudwatchAlarmInitParameters struct {

	// The CloudWatch alarm name.
	AlarmName *string `json:"alarmName,omitempty" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The reason for the alarm change.
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue *string `json:"stateValue,omitempty" tf:"state_value,omitempty"`
}

type CloudwatchAlarmObservation struct {

	// The CloudWatch alarm name.
	AlarmName *string `json:"alarmName,omitempty" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The reason for the alarm change.
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue *string `json:"stateValue,omitempty" tf:"state_value,omitempty"`
}

type CloudwatchAlarmParameters struct {

	// The CloudWatch alarm name.
	// +kubebuilder:validation:Optional
	AlarmName *string `json:"alarmName" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The reason for the alarm change.
	// +kubebuilder:validation:Optional
	StateReason *string `json:"stateReason" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	// +kubebuilder:validation:Optional
	StateValue *string `json:"stateValue" tf:"state_value,omitempty"`
}

type CloudwatchLogsInitParameters struct {

	// The CloudWatch log group name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameRef *v1.Reference `json:"logGroupNameRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameSelector *v1.Selector `json:"logGroupNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type CloudwatchLogsObservation struct {

	// The CloudWatch log group name.
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type CloudwatchLogsParameters struct {

	// The CloudWatch log group name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	// +kubebuilder:validation:Optional
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameRef *v1.Reference `json:"logGroupNameRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameSelector *v1.Selector `json:"logGroupNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type CloudwatchMetricInitParameters struct {

	// The CloudWatch metric name.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	MetricNamespace *string `json:"metricNamespace,omitempty" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit *string `json:"metricUnit,omitempty" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	MetricValue *string `json:"metricValue,omitempty" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type CloudwatchMetricObservation struct {

	// The CloudWatch metric name.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	MetricNamespace *string `json:"metricNamespace,omitempty" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit *string `json:"metricUnit,omitempty" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	MetricValue *string `json:"metricValue,omitempty" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type CloudwatchMetricParameters struct {

	// The CloudWatch metric name.
	// +kubebuilder:validation:Optional
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	// +kubebuilder:validation:Optional
	MetricNamespace *string `json:"metricNamespace" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	// +kubebuilder:validation:Optional
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	// +kubebuilder:validation:Optional
	MetricUnit *string `json:"metricUnit" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	// +kubebuilder:validation:Optional
	MetricValue *string `json:"metricValue" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type DimensionInitParameters struct {

	// The name of the rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DimensionObservation struct {

	// The name of the rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DimensionParameters struct {

	// The name of the rule.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type DynamodbInitParameters struct {

	// The hash key name.
	HashKeyField *string `json:"hashKeyField,omitempty" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	HashKeyValue *string `json:"hashKeyValue,omitempty" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type DynamodbObservation struct {

	// The hash key name.
	HashKeyField *string `json:"hashKeyField,omitempty" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	HashKeyValue *string `json:"hashKeyValue,omitempty" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`
}

type DynamodbParameters struct {

	// The hash key name.
	// +kubebuilder:validation:Optional
	HashKeyField *string `json:"hashKeyField" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	// +kubebuilder:validation:Optional
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	// +kubebuilder:validation:Optional
	HashKeyValue *string `json:"hashKeyValue" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	// +kubebuilder:validation:Optional
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	// +kubebuilder:validation:Optional
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	// +kubebuilder:validation:Optional
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	// +kubebuilder:validation:Optional
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	// +kubebuilder:validation:Optional
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type Dynamodbv2InitParameters struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem []PutItemInitParameters `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type Dynamodbv2Observation struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem []PutItemObservation `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type Dynamodbv2Parameters struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	// +kubebuilder:validation:Optional
	PutItem []PutItemParameters `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type Dynamodbv2PutItemInitParameters struct {

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type Dynamodbv2PutItemObservation struct {

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`
}

type Dynamodbv2PutItemParameters struct {

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type ElasticsearchInitParameters struct {

	// The endpoint of your Elasticsearch domain.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The type of document you are storing.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ElasticsearchObservation struct {

	// The endpoint of your Elasticsearch domain.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The type of document you are storing.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ElasticsearchParameters struct {

	// The endpoint of your Elasticsearch domain.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The type of document you are storing.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ErrorActionCloudwatchAlarmInitParameters struct {

	// The CloudWatch alarm name.
	AlarmName *string `json:"alarmName,omitempty" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The reason for the alarm change.
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue *string `json:"stateValue,omitempty" tf:"state_value,omitempty"`
}

type ErrorActionCloudwatchAlarmObservation struct {

	// The CloudWatch alarm name.
	AlarmName *string `json:"alarmName,omitempty" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The reason for the alarm change.
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue *string `json:"stateValue,omitempty" tf:"state_value,omitempty"`
}

type ErrorActionCloudwatchAlarmParameters struct {

	// The CloudWatch alarm name.
	// +kubebuilder:validation:Optional
	AlarmName *string `json:"alarmName" tf:"alarm_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The reason for the alarm change.
	// +kubebuilder:validation:Optional
	StateReason *string `json:"stateReason" tf:"state_reason,omitempty"`

	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	// +kubebuilder:validation:Optional
	StateValue *string `json:"stateValue" tf:"state_value,omitempty"`
}

type ErrorActionCloudwatchLogsInitParameters struct {

	// The CloudWatch log group name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameRef *v1.Reference `json:"logGroupNameRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameSelector *v1.Selector `json:"logGroupNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionCloudwatchLogsObservation struct {

	// The CloudWatch log group name.
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type ErrorActionCloudwatchLogsParameters struct {

	// The CloudWatch log group name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1.Group
	// +kubebuilder:validation:Optional
	LogGroupName *string `json:"logGroupName,omitempty" tf:"log_group_name,omitempty"`

	// Reference to a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameRef *v1.Reference `json:"logGroupNameRef,omitempty" tf:"-"`

	// Selector for a Group in cloudwatchlogs to populate logGroupName.
	// +kubebuilder:validation:Optional
	LogGroupNameSelector *v1.Selector `json:"logGroupNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionCloudwatchMetricInitParameters struct {

	// The CloudWatch metric name.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	MetricNamespace *string `json:"metricNamespace,omitempty" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit *string `json:"metricUnit,omitempty" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	MetricValue *string `json:"metricValue,omitempty" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionCloudwatchMetricObservation struct {

	// The CloudWatch metric name.
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	MetricNamespace *string `json:"metricNamespace,omitempty" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit *string `json:"metricUnit,omitempty" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	MetricValue *string `json:"metricValue,omitempty" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type ErrorActionCloudwatchMetricParameters struct {

	// The CloudWatch metric name.
	// +kubebuilder:validation:Optional
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// The CloudWatch metric namespace name.
	// +kubebuilder:validation:Optional
	MetricNamespace *string `json:"metricNamespace" tf:"metric_namespace,omitempty"`

	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	// +kubebuilder:validation:Optional
	MetricTimestamp *string `json:"metricTimestamp,omitempty" tf:"metric_timestamp,omitempty"`

	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	// +kubebuilder:validation:Optional
	MetricUnit *string `json:"metricUnit" tf:"metric_unit,omitempty"`

	// The CloudWatch metric value.
	// +kubebuilder:validation:Optional
	MetricValue *string `json:"metricValue" tf:"metric_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionDynamodbInitParameters struct {

	// The hash key name.
	HashKeyField *string `json:"hashKeyField,omitempty" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	HashKeyValue *string `json:"hashKeyValue,omitempty" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type ErrorActionDynamodbObservation struct {

	// The hash key name.
	HashKeyField *string `json:"hashKeyField,omitempty" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	HashKeyValue *string `json:"hashKeyValue,omitempty" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`
}

type ErrorActionDynamodbParameters struct {

	// The hash key name.
	// +kubebuilder:validation:Optional
	HashKeyField *string `json:"hashKeyField" tf:"hash_key_field,omitempty"`

	// The hash key type. Valid values are "STRING" or "NUMBER".
	// +kubebuilder:validation:Optional
	HashKeyType *string `json:"hashKeyType,omitempty" tf:"hash_key_type,omitempty"`

	// The hash key value.
	// +kubebuilder:validation:Optional
	HashKeyValue *string `json:"hashKeyValue" tf:"hash_key_value,omitempty"`

	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	// +kubebuilder:validation:Optional
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The action payload.
	// +kubebuilder:validation:Optional
	PayloadField *string `json:"payloadField,omitempty" tf:"payload_field,omitempty"`

	// The range key name.
	// +kubebuilder:validation:Optional
	RangeKeyField *string `json:"rangeKeyField,omitempty" tf:"range_key_field,omitempty"`

	// The range key type. Valid values are "STRING" or "NUMBER".
	// +kubebuilder:validation:Optional
	RangeKeyType *string `json:"rangeKeyType,omitempty" tf:"range_key_type,omitempty"`

	// The range key value.
	// +kubebuilder:validation:Optional
	RangeKeyValue *string `json:"rangeKeyValue,omitempty" tf:"range_key_value,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type ErrorActionDynamodbv2InitParameters struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem []Dynamodbv2PutItemInitParameters `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionDynamodbv2Observation struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem []Dynamodbv2PutItemObservation `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type ErrorActionDynamodbv2Parameters struct {

	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	// +kubebuilder:validation:Optional
	PutItem []Dynamodbv2PutItemParameters `json:"putItem,omitempty" tf:"put_item,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type ErrorActionElasticsearchInitParameters struct {

	// The endpoint of your Elasticsearch domain.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The type of document you are storing.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ErrorActionElasticsearchObservation struct {

	// The endpoint of your Elasticsearch domain.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The type of document you are storing.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ErrorActionElasticsearchParameters struct {

	// The endpoint of your Elasticsearch domain.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint" tf:"endpoint,omitempty"`

	// The unique identifier for the document you are storing.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// The Elasticsearch index where you want to store your data.
	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The type of document you are storing.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ErrorActionInitParameters struct {
	CloudwatchAlarm []ErrorActionCloudwatchAlarmInitParameters `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	CloudwatchLogs []ErrorActionCloudwatchLogsInitParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	CloudwatchMetric []ErrorActionCloudwatchMetricInitParameters `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	Dynamodb []ErrorActionDynamodbInitParameters `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	Dynamodbv2 []ErrorActionDynamodbv2InitParameters `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	Elasticsearch []ErrorActionElasticsearchInitParameters `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	Firehose []FirehoseInitParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	HTTP []HTTPInitParameters `json:"http,omitempty" tf:"http,omitempty"`

	IotAnalytics []IotAnalyticsInitParameters `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	IotEvents []IotEventsInitParameters `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	Kafka []KafkaInitParameters `json:"kafka,omitempty" tf:"kafka,omitempty"`

	Kinesis []KinesisInitParameters `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	Lambda []LambdaInitParameters `json:"lambda,omitempty" tf:"lambda,omitempty"`

	Republish []RepublishInitParameters `json:"republish,omitempty" tf:"republish,omitempty"`

	S3 []S3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	Sns []SnsInitParameters `json:"sns,omitempty" tf:"sns,omitempty"`

	Sqs []SqsInitParameters `json:"sqs,omitempty" tf:"sqs,omitempty"`

	StepFunctions []StepFunctionsInitParameters `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	Timestream []TimestreamInitParameters `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type ErrorActionObservation struct {
	CloudwatchAlarm []ErrorActionCloudwatchAlarmObservation `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	CloudwatchLogs []ErrorActionCloudwatchLogsObservation `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	CloudwatchMetric []ErrorActionCloudwatchMetricObservation `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	Dynamodb []ErrorActionDynamodbObservation `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	Dynamodbv2 []ErrorActionDynamodbv2Observation `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	Elasticsearch []ErrorActionElasticsearchObservation `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	Firehose []FirehoseObservation `json:"firehose,omitempty" tf:"firehose,omitempty"`

	HTTP []HTTPObservation `json:"http,omitempty" tf:"http,omitempty"`

	IotAnalytics []IotAnalyticsObservation `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	IotEvents []IotEventsObservation `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	Kafka []KafkaObservation `json:"kafka,omitempty" tf:"kafka,omitempty"`

	Kinesis []KinesisObservation `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	Lambda []LambdaObservation `json:"lambda,omitempty" tf:"lambda,omitempty"`

	Republish []RepublishObservation `json:"republish,omitempty" tf:"republish,omitempty"`

	S3 []S3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	Sns []SnsObservation `json:"sns,omitempty" tf:"sns,omitempty"`

	Sqs []SqsObservation `json:"sqs,omitempty" tf:"sqs,omitempty"`

	StepFunctions []StepFunctionsObservation `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	Timestream []TimestreamObservation `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type ErrorActionParameters struct {

	// +kubebuilder:validation:Optional
	CloudwatchAlarm []ErrorActionCloudwatchAlarmParameters `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	// +kubebuilder:validation:Optional
	CloudwatchLogs []ErrorActionCloudwatchLogsParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	// +kubebuilder:validation:Optional
	CloudwatchMetric []ErrorActionCloudwatchMetricParameters `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	// +kubebuilder:validation:Optional
	Dynamodb []ErrorActionDynamodbParameters `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	// +kubebuilder:validation:Optional
	Dynamodbv2 []ErrorActionDynamodbv2Parameters `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	// +kubebuilder:validation:Optional
	Elasticsearch []ErrorActionElasticsearchParameters `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	// +kubebuilder:validation:Optional
	Firehose []FirehoseParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	// +kubebuilder:validation:Optional
	HTTP []HTTPParameters `json:"http,omitempty" tf:"http,omitempty"`

	// +kubebuilder:validation:Optional
	IotAnalytics []IotAnalyticsParameters `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	// +kubebuilder:validation:Optional
	IotEvents []IotEventsParameters `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	// +kubebuilder:validation:Optional
	Kafka []KafkaParameters `json:"kafka,omitempty" tf:"kafka,omitempty"`

	// +kubebuilder:validation:Optional
	Kinesis []KinesisParameters `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	// +kubebuilder:validation:Optional
	Lambda []LambdaParameters `json:"lambda,omitempty" tf:"lambda,omitempty"`

	// +kubebuilder:validation:Optional
	Republish []RepublishParameters `json:"republish,omitempty" tf:"republish,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []S3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// +kubebuilder:validation:Optional
	Sns []SnsParameters `json:"sns,omitempty" tf:"sns,omitempty"`

	// +kubebuilder:validation:Optional
	Sqs []SqsParameters `json:"sqs,omitempty" tf:"sqs,omitempty"`

	// +kubebuilder:validation:Optional
	StepFunctions []StepFunctionsParameters `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	// +kubebuilder:validation:Optional
	Timestream []TimestreamParameters `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type FirehoseInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameRef *v1.Reference `json:"deliveryStreamNameRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameSelector *v1.Selector `json:"deliveryStreamNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type FirehoseObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type FirehoseParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +kubebuilder:validation:Optional
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameRef *v1.Reference `json:"deliveryStreamNameRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameSelector *v1.Selector `json:"deliveryStreamNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	// +kubebuilder:validation:Optional
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type HTTPHTTPHeaderInitParameters struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHTTPHeaderObservation struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHTTPHeaderParameters struct {

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HTTPHeaderInitParameters struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHeaderObservation struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HTTPHeaderParameters struct {

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HTTPInitParameters struct {

	// The HTTPS URL used to verify ownership of url.
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	HTTPHeader []HTTPHeaderInitParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type HTTPObservation struct {

	// The HTTPS URL used to verify ownership of url.
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	HTTPHeader []HTTPHeaderObservation `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type HTTPParameters struct {

	// The HTTPS URL used to verify ownership of url.
	// +kubebuilder:validation:Optional
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	// +kubebuilder:validation:Optional
	HTTPHeader []HTTPHeaderParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type HeaderInitParameters struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderObservation struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HeaderParameters struct {

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IotAnalyticsInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type IotAnalyticsObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type IotAnalyticsParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	// +kubebuilder:validation:Optional
	ChannelName *string `json:"channelName" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type IotEventsInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	InputName *string `json:"inputName,omitempty" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type IotEventsObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	InputName *string `json:"inputName,omitempty" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type IotEventsParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	// +kubebuilder:validation:Optional
	InputName *string `json:"inputName" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	// +kubebuilder:validation:Optional
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type KafkaHeaderInitParameters struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type KafkaHeaderObservation struct {

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type KafkaHeaderParameters struct {

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type KafkaInitParameters struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties,omitempty" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iot/v1beta1.TopicRuleDestination
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// Reference to a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnRef *v1.Reference `json:"destinationArnRef,omitempty" tf:"-"`

	// Selector for a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnSelector *v1.Selector `json:"destinationArnSelector,omitempty" tf:"-"`

	// The list of Kafka headers that you specify. Nested arguments below.
	Header []HeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type KafkaObservation struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties,omitempty" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// The list of Kafka headers that you specify. Nested arguments below.
	Header []HeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type KafkaParameters struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iot/v1beta1.TopicRuleDestination
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// Reference to a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnRef *v1.Reference `json:"destinationArnRef,omitempty" tf:"-"`

	// Selector for a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnSelector *v1.Selector `json:"destinationArnSelector,omitempty" tf:"-"`

	// The list of Kafka headers that you specify. Nested arguments below.
	// +kubebuilder:validation:Optional
	Header []HeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	// +kubebuilder:validation:Optional
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type KinesisInitParameters struct {

	// The partition key.
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Amazon Kinesis stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`

	// Reference to a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameRef *v1.Reference `json:"streamNameRef,omitempty" tf:"-"`

	// Selector for a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameSelector *v1.Selector `json:"streamNameSelector,omitempty" tf:"-"`
}

type KinesisObservation struct {

	// The partition key.
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the Amazon Kinesis stream.
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`
}

type KinesisParameters struct {

	// The partition key.
	// +kubebuilder:validation:Optional
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Amazon Kinesis stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +kubebuilder:validation:Optional
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`

	// Reference to a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameRef *v1.Reference `json:"streamNameRef,omitempty" tf:"-"`

	// Selector for a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameSelector *v1.Selector `json:"streamNameSelector,omitempty" tf:"-"`
}

type LambdaInitParameters struct {

	// The ARN of the Lambda function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Reference to a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnRef *v1.Reference `json:"functionArnRef,omitempty" tf:"-"`

	// Selector for a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnSelector *v1.Selector `json:"functionArnSelector,omitempty" tf:"-"`
}

type LambdaObservation struct {

	// The ARN of the Lambda function.
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`
}

type LambdaParameters struct {

	// The ARN of the Lambda function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Reference to a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnRef *v1.Reference `json:"functionArnRef,omitempty" tf:"-"`

	// Selector for a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnSelector *v1.Selector `json:"functionArnSelector,omitempty" tf:"-"`
}

type PutItemInitParameters struct {

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type PutItemObservation struct {

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`
}

type PutItemParameters struct {

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dynamodb/v1beta1.Table
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in dynamodb to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`
}

type RepublishInitParameters struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type RepublishObservation struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type RepublishParameters struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	// +kubebuilder:validation:Optional
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type S3InitParameters struct {

	// The Amazon S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Reference to a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameRef *v1.Reference `json:"bucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameSelector *v1.Selector `json:"bucketNameSelector,omitempty" tf:"-"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type S3Observation struct {

	// The Amazon S3 bucket name.
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type S3Parameters struct {

	// The Amazon S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Reference to a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameRef *v1.Reference `json:"bucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameSelector *v1.Selector `json:"bucketNameSelector,omitempty" tf:"-"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type SnsInitParameters struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The ARN of the SNS topic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`

	// Reference to a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnRef *v1.Reference `json:"targetArnRef,omitempty" tf:"-"`

	// Selector for a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnSelector *v1.Selector `json:"targetArnSelector,omitempty" tf:"-"`
}

type SnsObservation struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The ARN of the SNS topic.
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`
}

type SnsParameters struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	// +kubebuilder:validation:Optional
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The ARN of the SNS topic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`

	// Reference to a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnRef *v1.Reference `json:"targetArnRef,omitempty" tf:"-"`

	// Selector for a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnSelector *v1.Selector `json:"targetArnSelector,omitempty" tf:"-"`
}

type SqsInitParameters struct {

	// The URL of the Amazon SQS queue.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sqs/v1beta1.Queue
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// Reference to a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLRef *v1.Reference `json:"queueUrlRef,omitempty" tf:"-"`

	// Selector for a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLSelector *v1.Selector `json:"queueUrlSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Specifies whether to use Base64 encoding.
	UseBase64 *bool `json:"useBase64,omitempty" tf:"use_base64,omitempty"`
}

type SqsObservation struct {

	// The URL of the Amazon SQS queue.
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Specifies whether to use Base64 encoding.
	UseBase64 *bool `json:"useBase64,omitempty" tf:"use_base64,omitempty"`
}

type SqsParameters struct {

	// The URL of the Amazon SQS queue.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sqs/v1beta1.Queue
	// +kubebuilder:validation:Optional
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// Reference to a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLRef *v1.Reference `json:"queueUrlRef,omitempty" tf:"-"`

	// Selector for a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLSelector *v1.Selector `json:"queueUrlSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Specifies whether to use Base64 encoding.
	// +kubebuilder:validation:Optional
	UseBase64 *bool `json:"useBase64" tf:"use_base64,omitempty"`
}

type StepFunctionsInitParameters struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Step Functions state machine whose execution will be started.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sfn/v1beta1.StateMachine
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`

	// Reference to a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameRef *v1.Reference `json:"stateMachineNameRef,omitempty" tf:"-"`

	// Selector for a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameSelector *v1.Selector `json:"stateMachineNameSelector,omitempty" tf:"-"`
}

type StepFunctionsObservation struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`
}

type StepFunctionsParameters struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	// +kubebuilder:validation:Optional
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Step Functions state machine whose execution will be started.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sfn/v1beta1.StateMachine
	// +kubebuilder:validation:Optional
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`

	// Reference to a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameRef *v1.Reference `json:"stateMachineNameRef,omitempty" tf:"-"`

	// Selector for a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameSelector *v1.Selector `json:"stateMachineNameSelector,omitempty" tf:"-"`
}

type TimestampInitParameters struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestampObservation struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestampParameters struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TimestreamDimensionInitParameters struct {

	// The name of the rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestreamDimensionObservation struct {

	// The name of the rule.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestreamDimensionParameters struct {

	// The name of the rule.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TimestreamInitParameters struct {

	// The name of an Amazon Timestream database.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Database
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.Reference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.Selector `json:"databaseNameSelector,omitempty" tf:"-"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	Dimension []DimensionInitParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("table_name",false)
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	Timestamp []TimestampInitParameters `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

type TimestreamObservation struct {

	// The name of an Amazon Timestream database.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	Dimension []DimensionObservation `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	Timestamp []TimestampObservation `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

type TimestreamParameters struct {

	// The name of an Amazon Timestream database.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Database
	// +kubebuilder:validation:Optional
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.Reference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.Selector `json:"databaseNameSelector,omitempty" tf:"-"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	// +kubebuilder:validation:Optional
	Dimension []DimensionParameters `json:"dimension" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("table_name",false)
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	// +kubebuilder:validation:Optional
	Timestamp []TimestampParameters `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

type TimestreamTimestampInitParameters struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestreamTimestampObservation struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// The value of the HTTP header.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TimestreamTimestampParameters struct {

	// The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// The value of the HTTP header.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TopicRuleFirehoseInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameRef *v1.Reference `json:"deliveryStreamNameRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameSelector *v1.Selector `json:"deliveryStreamNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type TopicRuleFirehoseObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type TopicRuleFirehoseParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The delivery stream name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +kubebuilder:validation:Optional
	DeliveryStreamName *string `json:"deliveryStreamName,omitempty" tf:"delivery_stream_name,omitempty"`

	// Reference to a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameRef *v1.Reference `json:"deliveryStreamNameRef,omitempty" tf:"-"`

	// Selector for a DeliveryStream in firehose to populate deliveryStreamName.
	// +kubebuilder:validation:Optional
	DeliveryStreamNameSelector *v1.Selector `json:"deliveryStreamNameSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	// +kubebuilder:validation:Optional
	Separator *string `json:"separator,omitempty" tf:"separator,omitempty"`
}

type TopicRuleHTTPInitParameters struct {

	// The HTTPS URL used to verify ownership of url.
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	HTTPHeader []HTTPHTTPHeaderInitParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TopicRuleHTTPObservation struct {

	// The HTTPS URL used to verify ownership of url.
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	HTTPHeader []HTTPHTTPHeaderObservation `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TopicRuleHTTPParameters struct {

	// The HTTPS URL used to verify ownership of url.
	// +kubebuilder:validation:Optional
	ConfirmationURL *string `json:"confirmationUrl,omitempty" tf:"confirmation_url,omitempty"`

	// Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
	// +kubebuilder:validation:Optional
	HTTPHeader []HTTPHTTPHeaderParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The HTTPS URL.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type TopicRuleInitParameters struct {
	CloudwatchAlarm []CloudwatchAlarmInitParameters `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	CloudwatchLogs []CloudwatchLogsInitParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	CloudwatchMetric []CloudwatchMetricInitParameters `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	// The description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Dynamodb []DynamodbInitParameters `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	Dynamodbv2 []Dynamodbv2InitParameters `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	Elasticsearch []ElasticsearchInitParameters `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	// Specifies whether the rule is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.
	ErrorAction []ErrorActionInitParameters `json:"errorAction,omitempty" tf:"error_action,omitempty"`

	Firehose []TopicRuleFirehoseInitParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	HTTP []TopicRuleHTTPInitParameters `json:"http,omitempty" tf:"http,omitempty"`

	IotAnalytics []TopicRuleIotAnalyticsInitParameters `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	IotEvents []TopicRuleIotEventsInitParameters `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	Kafka []TopicRuleKafkaInitParameters `json:"kafka,omitempty" tf:"kafka,omitempty"`

	Kinesis []TopicRuleKinesisInitParameters `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	Lambda []TopicRuleLambdaInitParameters `json:"lambda,omitempty" tf:"lambda,omitempty"`

	Republish []TopicRuleRepublishInitParameters `json:"republish,omitempty" tf:"republish,omitempty"`

	S3 []TopicRuleS3InitParameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	SQL *string `json:"sql,omitempty" tf:"sql,omitempty"`

	// The version of the SQL rules engine to use when evaluating the rule.
	SQLVersion *string `json:"sqlVersion,omitempty" tf:"sql_version,omitempty"`

	Sns []TopicRuleSnsInitParameters `json:"sns,omitempty" tf:"sns,omitempty"`

	Sqs []TopicRuleSqsInitParameters `json:"sqs,omitempty" tf:"sqs,omitempty"`

	StepFunctions []TopicRuleStepFunctionsInitParameters `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	Timestream []TopicRuleTimestreamInitParameters `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type TopicRuleIotAnalyticsInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleIotAnalyticsObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type TopicRuleIotAnalyticsParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// Name of AWS IOT Analytics channel.
	// +kubebuilder:validation:Optional
	ChannelName *string `json:"channelName" tf:"channel_name,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleIotEventsInitParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	InputName *string `json:"inputName,omitempty" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleIotEventsObservation struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	InputName *string `json:"inputName,omitempty" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type TopicRuleIotEventsParameters struct {

	// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
	// +kubebuilder:validation:Optional
	BatchMode *bool `json:"batchMode,omitempty" tf:"batch_mode,omitempty"`

	// The name of the AWS IoT Events input.
	// +kubebuilder:validation:Optional
	InputName *string `json:"inputName" tf:"input_name,omitempty"`

	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	// +kubebuilder:validation:Optional
	MessageID *string `json:"messageId,omitempty" tf:"message_id,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleKafkaInitParameters struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties,omitempty" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iot/v1beta1.TopicRuleDestination
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// Reference to a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnRef *v1.Reference `json:"destinationArnRef,omitempty" tf:"-"`

	// Selector for a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnSelector *v1.Selector `json:"destinationArnSelector,omitempty" tf:"-"`

	// The list of Kafka headers that you specify. Nested arguments below.
	Header []KafkaHeaderInitParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type TopicRuleKafkaObservation struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties,omitempty" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// The list of Kafka headers that you specify. Nested arguments below.
	Header []KafkaHeaderObservation `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type TopicRuleKafkaParameters struct {

	// Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ClientProperties map[string]*string `json:"clientProperties" tf:"client_properties,omitempty"`

	// The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iot/v1beta1.TopicRuleDestination
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	DestinationArn *string `json:"destinationArn,omitempty" tf:"destination_arn,omitempty"`

	// Reference to a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnRef *v1.Reference `json:"destinationArnRef,omitempty" tf:"-"`

	// Selector for a TopicRuleDestination in iot to populate destinationArn.
	// +kubebuilder:validation:Optional
	DestinationArnSelector *v1.Selector `json:"destinationArnSelector,omitempty" tf:"-"`

	// The list of Kafka headers that you specify. Nested arguments below.
	// +kubebuilder:validation:Optional
	Header []KafkaHeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Kafka message partition.
	// +kubebuilder:validation:Optional
	Partition *string `json:"partition,omitempty" tf:"partition,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type TopicRuleKinesisInitParameters struct {

	// The partition key.
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Amazon Kinesis stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`

	// Reference to a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameRef *v1.Reference `json:"streamNameRef,omitempty" tf:"-"`

	// Selector for a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameSelector *v1.Selector `json:"streamNameSelector,omitempty" tf:"-"`
}

type TopicRuleKinesisObservation struct {

	// The partition key.
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the Amazon Kinesis stream.
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`
}

type TopicRuleKinesisParameters struct {

	// The partition key.
	// +kubebuilder:validation:Optional
	PartitionKey *string `json:"partitionKey,omitempty" tf:"partition_key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Amazon Kinesis stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +kubebuilder:validation:Optional
	StreamName *string `json:"streamName,omitempty" tf:"stream_name,omitempty"`

	// Reference to a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameRef *v1.Reference `json:"streamNameRef,omitempty" tf:"-"`

	// Selector for a Stream in kinesis to populate streamName.
	// +kubebuilder:validation:Optional
	StreamNameSelector *v1.Selector `json:"streamNameSelector,omitempty" tf:"-"`
}

type TopicRuleLambdaInitParameters struct {

	// The ARN of the Lambda function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Reference to a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnRef *v1.Reference `json:"functionArnRef,omitempty" tf:"-"`

	// Selector for a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnSelector *v1.Selector `json:"functionArnSelector,omitempty" tf:"-"`
}

type TopicRuleLambdaObservation struct {

	// The ARN of the Lambda function.
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`
}

type TopicRuleLambdaParameters struct {

	// The ARN of the Lambda function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Reference to a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnRef *v1.Reference `json:"functionArnRef,omitempty" tf:"-"`

	// Selector for a Function in lambda to populate functionArn.
	// +kubebuilder:validation:Optional
	FunctionArnSelector *v1.Selector `json:"functionArnSelector,omitempty" tf:"-"`
}

type TopicRuleObservation struct {

	// The ARN of the topic rule
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	CloudwatchAlarm []CloudwatchAlarmObservation `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	CloudwatchLogs []CloudwatchLogsObservation `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	CloudwatchMetric []CloudwatchMetricObservation `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	// The description of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	Dynamodb []DynamodbObservation `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	Dynamodbv2 []Dynamodbv2Observation `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	Elasticsearch []ElasticsearchObservation `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	// Specifies whether the rule is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.
	ErrorAction []ErrorActionObservation `json:"errorAction,omitempty" tf:"error_action,omitempty"`

	Firehose []TopicRuleFirehoseObservation `json:"firehose,omitempty" tf:"firehose,omitempty"`

	HTTP []TopicRuleHTTPObservation `json:"http,omitempty" tf:"http,omitempty"`

	// The unique identifier for the document you are storing.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	IotAnalytics []TopicRuleIotAnalyticsObservation `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	IotEvents []TopicRuleIotEventsObservation `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	Kafka []TopicRuleKafkaObservation `json:"kafka,omitempty" tf:"kafka,omitempty"`

	Kinesis []TopicRuleKinesisObservation `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	Lambda []TopicRuleLambdaObservation `json:"lambda,omitempty" tf:"lambda,omitempty"`

	Republish []TopicRuleRepublishObservation `json:"republish,omitempty" tf:"republish,omitempty"`

	S3 []TopicRuleS3Observation `json:"s3,omitempty" tf:"s3,omitempty"`

	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	SQL *string `json:"sql,omitempty" tf:"sql,omitempty"`

	// The version of the SQL rules engine to use when evaluating the rule.
	SQLVersion *string `json:"sqlVersion,omitempty" tf:"sql_version,omitempty"`

	Sns []TopicRuleSnsObservation `json:"sns,omitempty" tf:"sns,omitempty"`

	Sqs []TopicRuleSqsObservation `json:"sqs,omitempty" tf:"sqs,omitempty"`

	StepFunctions []TopicRuleStepFunctionsObservation `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	Timestream []TopicRuleTimestreamObservation `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type TopicRuleParameters struct {

	// +kubebuilder:validation:Optional
	CloudwatchAlarm []CloudwatchAlarmParameters `json:"cloudwatchAlarm,omitempty" tf:"cloudwatch_alarm,omitempty"`

	// +kubebuilder:validation:Optional
	CloudwatchLogs []CloudwatchLogsParameters `json:"cloudwatchLogs,omitempty" tf:"cloudwatch_logs,omitempty"`

	// +kubebuilder:validation:Optional
	CloudwatchMetric []CloudwatchMetricParameters `json:"cloudwatchMetric,omitempty" tf:"cloudwatch_metric,omitempty"`

	// The description of the rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Dynamodb []DynamodbParameters `json:"dynamodb,omitempty" tf:"dynamodb,omitempty"`

	// +kubebuilder:validation:Optional
	Dynamodbv2 []Dynamodbv2Parameters `json:"dynamodbv2,omitempty" tf:"dynamodbv2,omitempty"`

	// +kubebuilder:validation:Optional
	Elasticsearch []ElasticsearchParameters `json:"elasticsearch,omitempty" tf:"elasticsearch,omitempty"`

	// Specifies whether the rule is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.
	// +kubebuilder:validation:Optional
	ErrorAction []ErrorActionParameters `json:"errorAction,omitempty" tf:"error_action,omitempty"`

	// +kubebuilder:validation:Optional
	Firehose []TopicRuleFirehoseParameters `json:"firehose,omitempty" tf:"firehose,omitempty"`

	// +kubebuilder:validation:Optional
	HTTP []TopicRuleHTTPParameters `json:"http,omitempty" tf:"http,omitempty"`

	// +kubebuilder:validation:Optional
	IotAnalytics []TopicRuleIotAnalyticsParameters `json:"iotAnalytics,omitempty" tf:"iot_analytics,omitempty"`

	// +kubebuilder:validation:Optional
	IotEvents []TopicRuleIotEventsParameters `json:"iotEvents,omitempty" tf:"iot_events,omitempty"`

	// +kubebuilder:validation:Optional
	Kafka []TopicRuleKafkaParameters `json:"kafka,omitempty" tf:"kafka,omitempty"`

	// +kubebuilder:validation:Optional
	Kinesis []TopicRuleKinesisParameters `json:"kinesis,omitempty" tf:"kinesis,omitempty"`

	// +kubebuilder:validation:Optional
	Lambda []TopicRuleLambdaParameters `json:"lambda,omitempty" tf:"lambda,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	Republish []TopicRuleRepublishParameters `json:"republish,omitempty" tf:"republish,omitempty"`

	// +kubebuilder:validation:Optional
	S3 []TopicRuleS3Parameters `json:"s3,omitempty" tf:"s3,omitempty"`

	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	// +kubebuilder:validation:Optional
	SQL *string `json:"sql,omitempty" tf:"sql,omitempty"`

	// The version of the SQL rules engine to use when evaluating the rule.
	// +kubebuilder:validation:Optional
	SQLVersion *string `json:"sqlVersion,omitempty" tf:"sql_version,omitempty"`

	// +kubebuilder:validation:Optional
	Sns []TopicRuleSnsParameters `json:"sns,omitempty" tf:"sns,omitempty"`

	// +kubebuilder:validation:Optional
	Sqs []TopicRuleSqsParameters `json:"sqs,omitempty" tf:"sqs,omitempty"`

	// +kubebuilder:validation:Optional
	StepFunctions []TopicRuleStepFunctionsParameters `json:"stepFunctions,omitempty" tf:"step_functions,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Optional
	Timestream []TopicRuleTimestreamParameters `json:"timestream,omitempty" tf:"timestream,omitempty"`
}

type TopicRuleRepublishInitParameters struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type TopicRuleRepublishObservation struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic *string `json:"topic,omitempty" tf:"topic,omitempty"`
}

type TopicRuleRepublishParameters struct {

	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	// +kubebuilder:validation:Optional
	Qos *float64 `json:"qos,omitempty" tf:"qos,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The Kafka topic for messages to be sent to the Kafka broker.
	// +kubebuilder:validation:Optional
	Topic *string `json:"topic" tf:"topic,omitempty"`
}

type TopicRuleS3InitParameters struct {

	// The Amazon S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Reference to a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameRef *v1.Reference `json:"bucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameSelector *v1.Selector `json:"bucketNameSelector,omitempty" tf:"-"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleS3Observation struct {

	// The Amazon S3 bucket name.
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`
}

type TopicRuleS3Parameters struct {

	// The Amazon S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Reference to a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameRef *v1.Reference `json:"bucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	BucketNameSelector *v1.Selector `json:"bucketNameSelector,omitempty" tf:"-"`

	// The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
	// +kubebuilder:validation:Optional
	CannedACL *string `json:"cannedAcl,omitempty" tf:"canned_acl,omitempty"`

	// The name of the HTTP header.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`
}

type TopicRuleSnsInitParameters struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The ARN of the SNS topic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`

	// Reference to a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnRef *v1.Reference `json:"targetArnRef,omitempty" tf:"-"`

	// Selector for a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnSelector *v1.Selector `json:"targetArnSelector,omitempty" tf:"-"`
}

type TopicRuleSnsObservation struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The ARN of the SNS topic.
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`
}

type TopicRuleSnsParameters struct {

	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	// +kubebuilder:validation:Optional
	MessageFormat *string `json:"messageFormat,omitempty" tf:"message_format,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The ARN of the SNS topic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	TargetArn *string `json:"targetArn,omitempty" tf:"target_arn,omitempty"`

	// Reference to a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnRef *v1.Reference `json:"targetArnRef,omitempty" tf:"-"`

	// Selector for a Topic in sns to populate targetArn.
	// +kubebuilder:validation:Optional
	TargetArnSelector *v1.Selector `json:"targetArnSelector,omitempty" tf:"-"`
}

type TopicRuleSqsInitParameters struct {

	// The URL of the Amazon SQS queue.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sqs/v1beta1.Queue
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// Reference to a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLRef *v1.Reference `json:"queueUrlRef,omitempty" tf:"-"`

	// Selector for a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLSelector *v1.Selector `json:"queueUrlSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Specifies whether to use Base64 encoding.
	UseBase64 *bool `json:"useBase64,omitempty" tf:"use_base64,omitempty"`
}

type TopicRuleSqsObservation struct {

	// The URL of the Amazon SQS queue.
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Specifies whether to use Base64 encoding.
	UseBase64 *bool `json:"useBase64,omitempty" tf:"use_base64,omitempty"`
}

type TopicRuleSqsParameters struct {

	// The URL of the Amazon SQS queue.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sqs/v1beta1.Queue
	// +kubebuilder:validation:Optional
	QueueURL *string `json:"queueUrl,omitempty" tf:"queue_url,omitempty"`

	// Reference to a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLRef *v1.Reference `json:"queueUrlRef,omitempty" tf:"-"`

	// Selector for a Queue in sqs to populate queueUrl.
	// +kubebuilder:validation:Optional
	QueueURLSelector *v1.Selector `json:"queueUrlSelector,omitempty" tf:"-"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Specifies whether to use Base64 encoding.
	// +kubebuilder:validation:Optional
	UseBase64 *bool `json:"useBase64" tf:"use_base64,omitempty"`
}

type TopicRuleStepFunctionsInitParameters struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Step Functions state machine whose execution will be started.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sfn/v1beta1.StateMachine
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`

	// Reference to a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameRef *v1.Reference `json:"stateMachineNameRef,omitempty" tf:"-"`

	// Selector for a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameSelector *v1.Selector `json:"stateMachineNameSelector,omitempty" tf:"-"`
}

type TopicRuleStepFunctionsObservation struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`
}

type TopicRuleStepFunctionsParameters struct {

	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	// +kubebuilder:validation:Optional
	ExecutionNamePrefix *string `json:"executionNamePrefix,omitempty" tf:"execution_name_prefix,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the Step Functions state machine whose execution will be started.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sfn/v1beta1.StateMachine
	// +kubebuilder:validation:Optional
	StateMachineName *string `json:"stateMachineName,omitempty" tf:"state_machine_name,omitempty"`

	// Reference to a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameRef *v1.Reference `json:"stateMachineNameRef,omitempty" tf:"-"`

	// Selector for a StateMachine in sfn to populate stateMachineName.
	// +kubebuilder:validation:Optional
	StateMachineNameSelector *v1.Selector `json:"stateMachineNameSelector,omitempty" tf:"-"`
}

type TopicRuleTimestreamInitParameters struct {

	// The name of an Amazon Timestream database.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Database
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.Reference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.Selector `json:"databaseNameSelector,omitempty" tf:"-"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	Dimension []TimestreamDimensionInitParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("table_name",false)
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	Timestamp []TimestreamTimestampInitParameters `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

type TopicRuleTimestreamObservation struct {

	// The name of an Amazon Timestream database.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	Dimension []TimestreamDimensionObservation `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The name of the DynamoDB table.
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	Timestamp []TimestreamTimestampObservation `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

type TopicRuleTimestreamParameters struct {

	// The name of an Amazon Timestream database.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Database
	// +kubebuilder:validation:Optional
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// Reference to a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameRef *v1.Reference `json:"databaseNameRef,omitempty" tf:"-"`

	// Selector for a Database in timestreamwrite to populate databaseName.
	// +kubebuilder:validation:Optional
	DatabaseNameSelector *v1.Selector `json:"databaseNameSelector,omitempty" tf:"-"`

	// Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
	// +kubebuilder:validation:Optional
	Dimension []TimestreamDimensionParameters `json:"dimension" tf:"dimension,omitempty"`

	// The IAM role ARN that allows access to the CloudWatch alarm.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// The name of the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/timestreamwrite/v1beta1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("table_name",false)
	// +kubebuilder:validation:Optional
	TableName *string `json:"tableName,omitempty" tf:"table_name,omitempty"`

	// Reference to a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameRef *v1.Reference `json:"tableNameRef,omitempty" tf:"-"`

	// Selector for a Table in timestreamwrite to populate tableName.
	// +kubebuilder:validation:Optional
	TableNameSelector *v1.Selector `json:"tableNameSelector,omitempty" tf:"-"`

	// Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.
	// +kubebuilder:validation:Optional
	Timestamp []TimestreamTimestampParameters `json:"timestamp,omitempty" tf:"timestamp,omitempty"`
}

// TopicRuleSpec defines the desired state of TopicRule
type TopicRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TopicRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TopicRuleInitParameters `json:"initProvider,omitempty"`
}

// TopicRuleStatus defines the observed state of TopicRule.
type TopicRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TopicRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TopicRule is the Schema for the TopicRules API. Creates and manages an AWS IoT topic rule
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type TopicRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sql) || (has(self.initProvider) && has(self.initProvider.sql))",message="spec.forProvider.sql is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sqlVersion) || (has(self.initProvider) && has(self.initProvider.sqlVersion))",message="spec.forProvider.sqlVersion is a required parameter"
	Spec   TopicRuleSpec   `json:"spec"`
	Status TopicRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TopicRuleList contains a list of TopicRules
type TopicRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TopicRule `json:"items"`
}

// Repository type metadata.
var (
	TopicRule_Kind             = "TopicRule"
	TopicRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TopicRule_Kind}.String()
	TopicRule_KindAPIVersion   = TopicRule_Kind + "." + CRDGroupVersion.String()
	TopicRule_GroupVersionKind = CRDGroupVersion.WithKind(TopicRule_Kind)
)

func init() {
	SchemeBuilder.Register(&TopicRule{}, &TopicRuleList{})
}

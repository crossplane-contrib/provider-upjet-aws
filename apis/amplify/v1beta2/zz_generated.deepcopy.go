//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppInitParameters) DeepCopyInto(out *AppInitParameters) {
	*out = *in
	if in.AccessTokenSecretRef != nil {
		in, out := &in.AccessTokenSecretRef, &out.AccessTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AutoBranchCreationConfig != nil {
		in, out := &in.AutoBranchCreationConfig, &out.AutoBranchCreationConfig
		*out = new(AutoBranchCreationConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoBranchCreationPatterns != nil {
		in, out := &in.AutoBranchCreationPatterns, &out.AutoBranchCreationPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BasicAuthCredentialsSecretRef != nil {
		in, out := &in.BasicAuthCredentialsSecretRef, &out.BasicAuthCredentialsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.CacheConfig != nil {
		in, out := &in.CacheConfig, &out.CacheConfig
		*out = new(CacheConfigInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = new(string)
		**out = **in
	}
	if in.CustomRule != nil {
		in, out := &in.CustomRule, &out.CustomRule
		*out = make([]CustomRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBranchCreation != nil {
		in, out := &in.EnableAutoBranchCreation, &out.EnableAutoBranchCreation
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoBuild != nil {
		in, out := &in.EnableBranchAutoBuild, &out.EnableBranchAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoDeletion != nil {
		in, out := &in.EnableBranchAutoDeletion, &out.EnableBranchAutoDeletion
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IAMServiceRoleArn != nil {
		in, out := &in.IAMServiceRoleArn, &out.IAMServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMServiceRoleArnRef != nil {
		in, out := &in.IAMServiceRoleArnRef, &out.IAMServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMServiceRoleArnSelector != nil {
		in, out := &in.IAMServiceRoleArnSelector, &out.IAMServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OauthTokenSecretRef != nil {
		in, out := &in.OauthTokenSecretRef, &out.OauthTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppInitParameters.
func (in *AppInitParameters) DeepCopy() *AppInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppObservation) DeepCopyInto(out *AppObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoBranchCreationConfig != nil {
		in, out := &in.AutoBranchCreationConfig, &out.AutoBranchCreationConfig
		*out = new(AutoBranchCreationConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoBranchCreationPatterns != nil {
		in, out := &in.AutoBranchCreationPatterns, &out.AutoBranchCreationPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.CacheConfig != nil {
		in, out := &in.CacheConfig, &out.CacheConfig
		*out = new(CacheConfigObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = new(string)
		**out = **in
	}
	if in.CustomRule != nil {
		in, out := &in.CustomRule, &out.CustomRule
		*out = make([]CustomRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultDomain != nil {
		in, out := &in.DefaultDomain, &out.DefaultDomain
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBranchCreation != nil {
		in, out := &in.EnableAutoBranchCreation, &out.EnableAutoBranchCreation
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoBuild != nil {
		in, out := &in.EnableBranchAutoBuild, &out.EnableBranchAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoDeletion != nil {
		in, out := &in.EnableBranchAutoDeletion, &out.EnableBranchAutoDeletion
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IAMServiceRoleArn != nil {
		in, out := &in.IAMServiceRoleArn, &out.IAMServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.ProductionBranch != nil {
		in, out := &in.ProductionBranch, &out.ProductionBranch
		*out = make([]ProductionBranchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppObservation.
func (in *AppObservation) DeepCopy() *AppObservation {
	if in == nil {
		return nil
	}
	out := new(AppObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppParameters) DeepCopyInto(out *AppParameters) {
	*out = *in
	if in.AccessTokenSecretRef != nil {
		in, out := &in.AccessTokenSecretRef, &out.AccessTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AutoBranchCreationConfig != nil {
		in, out := &in.AutoBranchCreationConfig, &out.AutoBranchCreationConfig
		*out = new(AutoBranchCreationConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoBranchCreationPatterns != nil {
		in, out := &in.AutoBranchCreationPatterns, &out.AutoBranchCreationPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BasicAuthCredentialsSecretRef != nil {
		in, out := &in.BasicAuthCredentialsSecretRef, &out.BasicAuthCredentialsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.CacheConfig != nil {
		in, out := &in.CacheConfig, &out.CacheConfig
		*out = new(CacheConfigParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = new(string)
		**out = **in
	}
	if in.CustomRule != nil {
		in, out := &in.CustomRule, &out.CustomRule
		*out = make([]CustomRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBranchCreation != nil {
		in, out := &in.EnableAutoBranchCreation, &out.EnableAutoBranchCreation
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoBuild != nil {
		in, out := &in.EnableBranchAutoBuild, &out.EnableBranchAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBranchAutoDeletion != nil {
		in, out := &in.EnableBranchAutoDeletion, &out.EnableBranchAutoDeletion
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IAMServiceRoleArn != nil {
		in, out := &in.IAMServiceRoleArn, &out.IAMServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.IAMServiceRoleArnRef != nil {
		in, out := &in.IAMServiceRoleArnRef, &out.IAMServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMServiceRoleArnSelector != nil {
		in, out := &in.IAMServiceRoleArnSelector, &out.IAMServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OauthTokenSecretRef != nil {
		in, out := &in.OauthTokenSecretRef, &out.OauthTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppParameters.
func (in *AppParameters) DeepCopy() *AppParameters {
	if in == nil {
		return nil
	}
	out := new(AppParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBranchCreationConfigInitParameters) DeepCopyInto(out *AutoBranchCreationConfigInitParameters) {
	*out = *in
	if in.BasicAuthCredentialsSecretRef != nil {
		in, out := &in.BasicAuthCredentialsSecretRef, &out.BasicAuthCredentialsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBuild != nil {
		in, out := &in.EnableAutoBuild, &out.EnableAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnablePerformanceMode != nil {
		in, out := &in.EnablePerformanceMode, &out.EnablePerformanceMode
		*out = new(bool)
		**out = **in
	}
	if in.EnablePullRequestPreview != nil {
		in, out := &in.EnablePullRequestPreview, &out.EnablePullRequestPreview
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Framework != nil {
		in, out := &in.Framework, &out.Framework
		*out = new(string)
		**out = **in
	}
	if in.PullRequestEnvironmentName != nil {
		in, out := &in.PullRequestEnvironmentName, &out.PullRequestEnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBranchCreationConfigInitParameters.
func (in *AutoBranchCreationConfigInitParameters) DeepCopy() *AutoBranchCreationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoBranchCreationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBranchCreationConfigObservation) DeepCopyInto(out *AutoBranchCreationConfigObservation) {
	*out = *in
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBuild != nil {
		in, out := &in.EnableAutoBuild, &out.EnableAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnablePerformanceMode != nil {
		in, out := &in.EnablePerformanceMode, &out.EnablePerformanceMode
		*out = new(bool)
		**out = **in
	}
	if in.EnablePullRequestPreview != nil {
		in, out := &in.EnablePullRequestPreview, &out.EnablePullRequestPreview
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Framework != nil {
		in, out := &in.Framework, &out.Framework
		*out = new(string)
		**out = **in
	}
	if in.PullRequestEnvironmentName != nil {
		in, out := &in.PullRequestEnvironmentName, &out.PullRequestEnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBranchCreationConfigObservation.
func (in *AutoBranchCreationConfigObservation) DeepCopy() *AutoBranchCreationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AutoBranchCreationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoBranchCreationConfigParameters) DeepCopyInto(out *AutoBranchCreationConfigParameters) {
	*out = *in
	if in.BasicAuthCredentialsSecretRef != nil {
		in, out := &in.BasicAuthCredentialsSecretRef, &out.BasicAuthCredentialsSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BuildSpec != nil {
		in, out := &in.BuildSpec, &out.BuildSpec
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoBuild != nil {
		in, out := &in.EnableAutoBuild, &out.EnableAutoBuild
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.EnablePerformanceMode != nil {
		in, out := &in.EnablePerformanceMode, &out.EnablePerformanceMode
		*out = new(bool)
		**out = **in
	}
	if in.EnablePullRequestPreview != nil {
		in, out := &in.EnablePullRequestPreview, &out.EnablePullRequestPreview
		*out = new(bool)
		**out = **in
	}
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Framework != nil {
		in, out := &in.Framework, &out.Framework
		*out = new(string)
		**out = **in
	}
	if in.PullRequestEnvironmentName != nil {
		in, out := &in.PullRequestEnvironmentName, &out.PullRequestEnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoBranchCreationConfigParameters.
func (in *AutoBranchCreationConfigParameters) DeepCopy() *AutoBranchCreationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AutoBranchCreationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheConfigInitParameters) DeepCopyInto(out *CacheConfigInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheConfigInitParameters.
func (in *CacheConfigInitParameters) DeepCopy() *CacheConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheConfigObservation) DeepCopyInto(out *CacheConfigObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheConfigObservation.
func (in *CacheConfigObservation) DeepCopy() *CacheConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CacheConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheConfigParameters) DeepCopyInto(out *CacheConfigParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheConfigParameters.
func (in *CacheConfigParameters) DeepCopy() *CacheConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CacheConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRuleInitParameters) DeepCopyInto(out *CustomRuleInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRuleInitParameters.
func (in *CustomRuleInitParameters) DeepCopy() *CustomRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRuleObservation) DeepCopyInto(out *CustomRuleObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRuleObservation.
func (in *CustomRuleObservation) DeepCopy() *CustomRuleObservation {
	if in == nil {
		return nil
	}
	out := new(CustomRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRuleParameters) DeepCopyInto(out *CustomRuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRuleParameters.
func (in *CustomRuleParameters) DeepCopy() *CustomRuleParameters {
	if in == nil {
		return nil
	}
	out := new(CustomRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProductionBranchInitParameters) DeepCopyInto(out *ProductionBranchInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProductionBranchInitParameters.
func (in *ProductionBranchInitParameters) DeepCopy() *ProductionBranchInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProductionBranchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProductionBranchObservation) DeepCopyInto(out *ProductionBranchObservation) {
	*out = *in
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.LastDeployTime != nil {
		in, out := &in.LastDeployTime, &out.LastDeployTime
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.ThumbnailURL != nil {
		in, out := &in.ThumbnailURL, &out.ThumbnailURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProductionBranchObservation.
func (in *ProductionBranchObservation) DeepCopy() *ProductionBranchObservation {
	if in == nil {
		return nil
	}
	out := new(ProductionBranchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProductionBranchParameters) DeepCopyInto(out *ProductionBranchParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProductionBranchParameters.
func (in *ProductionBranchParameters) DeepCopy() *ProductionBranchParameters {
	if in == nil {
		return nil
	}
	out := new(ProductionBranchParameters)
	in.DeepCopyInto(out)
	return out
}

// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppInitParameters struct {

	// Automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.
	AutoBranchCreationConfig []AutoBranchCreationConfigInitParameters `json:"autoBranchCreationConfig,omitempty" tf:"auto_branch_creation_config,omitempty"`

	// Automated branch creation glob patterns for an Amplify app.
	// +listType:set
	AutoBranchCreationPatterns []*string `json:"autoBranchCreationPatterns,omitempty" tf:"auto_branch_creation_patterns,omitempty"`

	// The build specification (build spec) for an Amplify app.
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.
	CustomRule []CustomRuleInitParameters `json:"customRule,omitempty" tf:"custom_rule,omitempty"`

	// Description for an Amplify app.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enables automated branch creation for an Amplify app.
	EnableAutoBranchCreation *bool `json:"enableAutoBranchCreation,omitempty" tf:"enable_auto_branch_creation,omitempty"`

	// Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables auto-building of branches for the Amplify App.
	EnableBranchAutoBuild *bool `json:"enableBranchAutoBuild,omitempty" tf:"enable_branch_auto_build,omitempty"`

	// Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
	EnableBranchAutoDeletion *bool `json:"enableBranchAutoDeletion,omitempty" tf:"enable_branch_auto_deletion,omitempty"`

	// Environment variables map for an Amplify app.
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// Name for an Amplify app.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Repository for an Amplify app.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// Key-value map of resource tags.
	// +mapType:granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type AppObservation struct {

	// ARN of the Amplify app.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.
	AutoBranchCreationConfig []AutoBranchCreationConfigObservation `json:"autoBranchCreationConfig,omitempty" tf:"auto_branch_creation_config,omitempty"`

	// Automated branch creation glob patterns for an Amplify app.
	// +listType:set
	AutoBranchCreationPatterns []*string `json:"autoBranchCreationPatterns,omitempty" tf:"auto_branch_creation_patterns,omitempty"`

	// The build specification (build spec) for an Amplify app.
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.
	CustomRule []CustomRuleObservation `json:"customRule,omitempty" tf:"custom_rule,omitempty"`

	// Default domain for the Amplify app.
	DefaultDomain *string `json:"defaultDomain,omitempty" tf:"default_domain,omitempty"`

	// Description for an Amplify app.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enables automated branch creation for an Amplify app.
	EnableAutoBranchCreation *bool `json:"enableAutoBranchCreation,omitempty" tf:"enable_auto_branch_creation,omitempty"`

	// Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables auto-building of branches for the Amplify App.
	EnableBranchAutoBuild *bool `json:"enableBranchAutoBuild,omitempty" tf:"enable_branch_auto_build,omitempty"`

	// Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
	EnableBranchAutoDeletion *bool `json:"enableBranchAutoDeletion,omitempty" tf:"enable_branch_auto_deletion,omitempty"`

	// Environment variables map for an Amplify app.
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// AWS Identity and Access Management (IAM) service role for an Amplify app.
	IAMServiceRoleArn *string `json:"iamServiceRoleArn,omitempty" tf:"iam_service_role_arn,omitempty"`

	// Unique ID of the Amplify app.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name for an Amplify app.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Describes the information about a production branch for an Amplify app. A production_branch block is documented below.
	ProductionBranch []ProductionBranchObservation `json:"productionBranch,omitempty" tf:"production_branch,omitempty"`

	// Repository for an Amplify app.
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// Key-value map of resource tags.
	// +mapType:granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType:granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type AppParameters struct {

	// Personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored.
	// +kubebuilder:validation:Optional
	AccessTokenSecretRef *v1.SecretKeySelector `json:"accessTokenSecretRef,omitempty" tf:"-"`

	// Automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.
	// +kubebuilder:validation:Optional
	AutoBranchCreationConfig []AutoBranchCreationConfigParameters `json:"autoBranchCreationConfig,omitempty" tf:"auto_branch_creation_config,omitempty"`

	// Automated branch creation glob patterns for an Amplify app.
	// +kubebuilder:validation:Optional
	// +listType:set
	AutoBranchCreationPatterns []*string `json:"autoBranchCreationPatterns,omitempty" tf:"auto_branch_creation_patterns,omitempty"`

	// Credentials for basic authorization for an Amplify app.
	// +kubebuilder:validation:Optional
	BasicAuthCredentialsSecretRef *v1.SecretKeySelector `json:"basicAuthCredentialsSecretRef,omitempty" tf:"-"`

	// The build specification (build spec) for an Amplify app.
	// +kubebuilder:validation:Optional
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.
	// +kubebuilder:validation:Optional
	CustomRule []CustomRuleParameters `json:"customRule,omitempty" tf:"custom_rule,omitempty"`

	// Description for an Amplify app.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Enables automated branch creation for an Amplify app.
	// +kubebuilder:validation:Optional
	EnableAutoBranchCreation *bool `json:"enableAutoBranchCreation,omitempty" tf:"enable_auto_branch_creation,omitempty"`

	// Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
	// +kubebuilder:validation:Optional
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables auto-building of branches for the Amplify App.
	// +kubebuilder:validation:Optional
	EnableBranchAutoBuild *bool `json:"enableBranchAutoBuild,omitempty" tf:"enable_branch_auto_build,omitempty"`

	// Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
	// +kubebuilder:validation:Optional
	EnableBranchAutoDeletion *bool `json:"enableBranchAutoDeletion,omitempty" tf:"enable_branch_auto_deletion,omitempty"`

	// Environment variables map for an Amplify app.
	// +kubebuilder:validation:Optional
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// AWS Identity and Access Management (IAM) service role for an Amplify app.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	IAMServiceRoleArn *string `json:"iamServiceRoleArn,omitempty" tf:"iam_service_role_arn,omitempty"`

	// Reference to a Role in iam to populate iamServiceRoleArn.
	// +kubebuilder:validation:Optional
	IAMServiceRoleArnRef *v1.Reference `json:"iamServiceRoleArnRef,omitempty" tf:"-"`

	// Selector for a Role in iam to populate iamServiceRoleArn.
	// +kubebuilder:validation:Optional
	IAMServiceRoleArnSelector *v1.Selector `json:"iamServiceRoleArnSelector,omitempty" tf:"-"`

	// Name for an Amplify app.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.
	// +kubebuilder:validation:Optional
	OauthTokenSecretRef *v1.SecretKeySelector `json:"oauthTokenSecretRef,omitempty" tf:"-"`

	// Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// Repository for an Amplify app.
	// +kubebuilder:validation:Optional
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType:granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type AutoBranchCreationConfigInitParameters struct {

	// Build specification (build spec) for the autocreated branch.
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Enables auto building for the autocreated branch.
	EnableAutoBuild *bool `json:"enableAutoBuild,omitempty" tf:"enable_auto_build,omitempty"`

	// Enables basic authorization for the autocreated branch.
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables performance mode for the branch.
	EnablePerformanceMode *bool `json:"enablePerformanceMode,omitempty" tf:"enable_performance_mode,omitempty"`

	// Enables pull request previews for the autocreated branch.
	EnablePullRequestPreview *bool `json:"enablePullRequestPreview,omitempty" tf:"enable_pull_request_preview,omitempty"`

	// Environment variables for the autocreated branch.
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// Framework for the autocreated branch.
	Framework *string `json:"framework,omitempty" tf:"framework,omitempty"`

	// Amplify environment name for the pull request.
	PullRequestEnvironmentName *string `json:"pullRequestEnvironmentName,omitempty" tf:"pull_request_environment_name,omitempty"`

	// Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`
}

type AutoBranchCreationConfigObservation struct {

	// Build specification (build spec) for the autocreated branch.
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Enables auto building for the autocreated branch.
	EnableAutoBuild *bool `json:"enableAutoBuild,omitempty" tf:"enable_auto_build,omitempty"`

	// Enables basic authorization for the autocreated branch.
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables performance mode for the branch.
	EnablePerformanceMode *bool `json:"enablePerformanceMode,omitempty" tf:"enable_performance_mode,omitempty"`

	// Enables pull request previews for the autocreated branch.
	EnablePullRequestPreview *bool `json:"enablePullRequestPreview,omitempty" tf:"enable_pull_request_preview,omitempty"`

	// Environment variables for the autocreated branch.
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// Framework for the autocreated branch.
	Framework *string `json:"framework,omitempty" tf:"framework,omitempty"`

	// Amplify environment name for the pull request.
	PullRequestEnvironmentName *string `json:"pullRequestEnvironmentName,omitempty" tf:"pull_request_environment_name,omitempty"`

	// Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`
}

type AutoBranchCreationConfigParameters struct {

	// Basic authorization credentials for the autocreated branch.
	// +kubebuilder:validation:Optional
	BasicAuthCredentialsSecretRef *v1.SecretKeySelector `json:"basicAuthCredentialsSecretRef,omitempty" tf:"-"`

	// Build specification (build spec) for the autocreated branch.
	// +kubebuilder:validation:Optional
	BuildSpec *string `json:"buildSpec,omitempty" tf:"build_spec,omitempty"`

	// Enables auto building for the autocreated branch.
	// +kubebuilder:validation:Optional
	EnableAutoBuild *bool `json:"enableAutoBuild,omitempty" tf:"enable_auto_build,omitempty"`

	// Enables basic authorization for the autocreated branch.
	// +kubebuilder:validation:Optional
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty" tf:"enable_basic_auth,omitempty"`

	// Enables performance mode for the branch.
	// +kubebuilder:validation:Optional
	EnablePerformanceMode *bool `json:"enablePerformanceMode,omitempty" tf:"enable_performance_mode,omitempty"`

	// Enables pull request previews for the autocreated branch.
	// +kubebuilder:validation:Optional
	EnablePullRequestPreview *bool `json:"enablePullRequestPreview,omitempty" tf:"enable_pull_request_preview,omitempty"`

	// Environment variables for the autocreated branch.
	// +kubebuilder:validation:Optional
	// +mapType:granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// Framework for the autocreated branch.
	// +kubebuilder:validation:Optional
	Framework *string `json:"framework,omitempty" tf:"framework,omitempty"`

	// Amplify environment name for the pull request.
	// +kubebuilder:validation:Optional
	PullRequestEnvironmentName *string `json:"pullRequestEnvironmentName,omitempty" tf:"pull_request_environment_name,omitempty"`

	// Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
	// +kubebuilder:validation:Optional
	Stage *string `json:"stage,omitempty" tf:"stage,omitempty"`
}

type CustomRuleInitParameters struct {

	// Condition for a URL rewrite or redirect rule, such as a country code.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// Source pattern for a URL rewrite or redirect rule.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Target pattern for a URL rewrite or redirect rule.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type CustomRuleObservation struct {

	// Condition for a URL rewrite or redirect rule, such as a country code.
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// Source pattern for a URL rewrite or redirect rule.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Target pattern for a URL rewrite or redirect rule.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type CustomRuleParameters struct {

	// Condition for a URL rewrite or redirect rule, such as a country code.
	// +kubebuilder:validation:Optional
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// Source pattern for a URL rewrite or redirect rule.
	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`

	// Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Target pattern for a URL rewrite or redirect rule.
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`
}

type ProductionBranchInitParameters struct {
}

type ProductionBranchObservation struct {

	// Branch name for the production branch.
	BranchName *string `json:"branchName,omitempty" tf:"branch_name,omitempty"`

	// Last deploy time of the production branch.
	LastDeployTime *string `json:"lastDeployTime,omitempty" tf:"last_deploy_time,omitempty"`

	// Status of the production branch.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Thumbnail URL for the production branch.
	ThumbnailURL *string `json:"thumbnailUrl,omitempty" tf:"thumbnail_url,omitempty"`
}

type ProductionBranchParameters struct {
}

// AppSpec defines the desired state of App
type AppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AppInitParameters `json:"initProvider,omitempty"`
}

// AppStatus defines the observed state of App.
type AppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// App is the Schema for the Apps API. Provides an Amplify App resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type App struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   AppSpec   `json:"spec"`
	Status AppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppList contains a list of Apps
type AppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []App `json:"items"`
}

// Repository type metadata.
var (
	App_Kind             = "App"
	App_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: App_Kind}.String()
	App_KindAPIVersion   = App_Kind + "." + CRDGroupVersion.String()
	App_GroupVersionKind = CRDGroupVersion.WithKind(App_Kind)
)

func init() {
	SchemeBuilder.Register(&App{}, &AppList{})
}

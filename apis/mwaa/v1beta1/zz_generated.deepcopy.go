//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DagProcessingLogsInitParameters) DeepCopyInto(out *DagProcessingLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DagProcessingLogsInitParameters.
func (in *DagProcessingLogsInitParameters) DeepCopy() *DagProcessingLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DagProcessingLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DagProcessingLogsObservation) DeepCopyInto(out *DagProcessingLogsObservation) {
	*out = *in
	if in.CloudWatchLogGroupArn != nil {
		in, out := &in.CloudWatchLogGroupArn, &out.CloudWatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DagProcessingLogsObservation.
func (in *DagProcessingLogsObservation) DeepCopy() *DagProcessingLogsObservation {
	if in == nil {
		return nil
	}
	out := new(DagProcessingLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DagProcessingLogsParameters) DeepCopyInto(out *DagProcessingLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DagProcessingLogsParameters.
func (in *DagProcessingLogsParameters) DeepCopy() *DagProcessingLogsParameters {
	if in == nil {
		return nil
	}
	out := new(DagProcessingLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.AirflowConfigurationOptions != nil {
		in, out := &in.AirflowConfigurationOptions, &out.AirflowConfigurationOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AirflowVersion != nil {
		in, out := &in.AirflowVersion, &out.AirflowVersion
		*out = new(string)
		**out = **in
	}
	if in.DagS3Path != nil {
		in, out := &in.DagS3Path, &out.DagS3Path
		*out = new(string)
		**out = **in
	}
	if in.EndpointManagement != nil {
		in, out := &in.EndpointManagement, &out.EndpointManagement
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentClass != nil {
		in, out := &in.EnvironmentClass, &out.EnvironmentClass
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArnRef != nil {
		in, out := &in.ExecutionRoleArnRef, &out.ExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleArnSelector != nil {
		in, out := &in.ExecutionRoleArnSelector, &out.ExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeySelector != nil {
		in, out := &in.KMSKeySelector, &out.KMSKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LoggingConfiguration != nil {
		in, out := &in.LoggingConfiguration, &out.LoggingConfiguration
		*out = new(LoggingConfigurationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfigurationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PluginsS3ObjectVersion != nil {
		in, out := &in.PluginsS3ObjectVersion, &out.PluginsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.PluginsS3Path != nil {
		in, out := &in.PluginsS3Path, &out.PluginsS3Path
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3ObjectVersion != nil {
		in, out := &in.RequirementsS3ObjectVersion, &out.RequirementsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3Path != nil {
		in, out := &in.RequirementsS3Path, &out.RequirementsS3Path
		*out = new(string)
		**out = **in
	}
	if in.Schedulers != nil {
		in, out := &in.Schedulers, &out.Schedulers
		*out = new(float64)
		**out = **in
	}
	if in.SourceBucketArn != nil {
		in, out := &in.SourceBucketArn, &out.SourceBucketArn
		*out = new(string)
		**out = **in
	}
	if in.SourceBucketArnRef != nil {
		in, out := &in.SourceBucketArnRef, &out.SourceBucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceBucketArnSelector != nil {
		in, out := &in.SourceBucketArnSelector, &out.SourceBucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartupScriptS3ObjectVersion != nil {
		in, out := &in.StartupScriptS3ObjectVersion, &out.StartupScriptS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.StartupScriptS3Path != nil {
		in, out := &in.StartupScriptS3Path, &out.StartupScriptS3Path
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WebserverAccessMode != nil {
		in, out := &in.WebserverAccessMode, &out.WebserverAccessMode
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceWindowStart != nil {
		in, out := &in.WeeklyMaintenanceWindowStart, &out.WeeklyMaintenanceWindowStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.AirflowVersion != nil {
		in, out := &in.AirflowVersion, &out.AirflowVersion
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DagS3Path != nil {
		in, out := &in.DagS3Path, &out.DagS3Path
		*out = new(string)
		**out = **in
	}
	if in.DatabaseVPCEndpointService != nil {
		in, out := &in.DatabaseVPCEndpointService, &out.DatabaseVPCEndpointService
		*out = new(string)
		**out = **in
	}
	if in.EndpointManagement != nil {
		in, out := &in.EndpointManagement, &out.EndpointManagement
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentClass != nil {
		in, out := &in.EnvironmentClass, &out.EnvironmentClass
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = make([]LastUpdatedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoggingConfiguration != nil {
		in, out := &in.LoggingConfiguration, &out.LoggingConfiguration
		*out = new(LoggingConfigurationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfigurationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.PluginsS3ObjectVersion != nil {
		in, out := &in.PluginsS3ObjectVersion, &out.PluginsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.PluginsS3Path != nil {
		in, out := &in.PluginsS3Path, &out.PluginsS3Path
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3ObjectVersion != nil {
		in, out := &in.RequirementsS3ObjectVersion, &out.RequirementsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3Path != nil {
		in, out := &in.RequirementsS3Path, &out.RequirementsS3Path
		*out = new(string)
		**out = **in
	}
	if in.Schedulers != nil {
		in, out := &in.Schedulers, &out.Schedulers
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.SourceBucketArn != nil {
		in, out := &in.SourceBucketArn, &out.SourceBucketArn
		*out = new(string)
		**out = **in
	}
	if in.StartupScriptS3ObjectVersion != nil {
		in, out := &in.StartupScriptS3ObjectVersion, &out.StartupScriptS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.StartupScriptS3Path != nil {
		in, out := &in.StartupScriptS3Path, &out.StartupScriptS3Path
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WebserverAccessMode != nil {
		in, out := &in.WebserverAccessMode, &out.WebserverAccessMode
		*out = new(string)
		**out = **in
	}
	if in.WebserverURL != nil {
		in, out := &in.WebserverURL, &out.WebserverURL
		*out = new(string)
		**out = **in
	}
	if in.WebserverVPCEndpointService != nil {
		in, out := &in.WebserverVPCEndpointService, &out.WebserverVPCEndpointService
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceWindowStart != nil {
		in, out := &in.WeeklyMaintenanceWindowStart, &out.WeeklyMaintenanceWindowStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.AirflowConfigurationOptionsSecretRef != nil {
		in, out := &in.AirflowConfigurationOptionsSecretRef, &out.AirflowConfigurationOptionsSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.AirflowVersion != nil {
		in, out := &in.AirflowVersion, &out.AirflowVersion
		*out = new(string)
		**out = **in
	}
	if in.DagS3Path != nil {
		in, out := &in.DagS3Path, &out.DagS3Path
		*out = new(string)
		**out = **in
	}
	if in.EndpointManagement != nil {
		in, out := &in.EndpointManagement, &out.EndpointManagement
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentClass != nil {
		in, out := &in.EnvironmentClass, &out.EnvironmentClass
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArn != nil {
		in, out := &in.ExecutionRoleArn, &out.ExecutionRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleArnRef != nil {
		in, out := &in.ExecutionRoleArnRef, &out.ExecutionRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExecutionRoleArnSelector != nil {
		in, out := &in.ExecutionRoleArnSelector, &out.ExecutionRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyRef != nil {
		in, out := &in.KMSKeyRef, &out.KMSKeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeySelector != nil {
		in, out := &in.KMSKeySelector, &out.KMSKeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LoggingConfiguration != nil {
		in, out := &in.LoggingConfiguration, &out.LoggingConfiguration
		*out = new(LoggingConfigurationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxWorkers != nil {
		in, out := &in.MaxWorkers, &out.MaxWorkers
		*out = new(float64)
		**out = **in
	}
	if in.MinWorkers != nil {
		in, out := &in.MinWorkers, &out.MinWorkers
		*out = new(float64)
		**out = **in
	}
	if in.NetworkConfiguration != nil {
		in, out := &in.NetworkConfiguration, &out.NetworkConfiguration
		*out = new(NetworkConfigurationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PluginsS3ObjectVersion != nil {
		in, out := &in.PluginsS3ObjectVersion, &out.PluginsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.PluginsS3Path != nil {
		in, out := &in.PluginsS3Path, &out.PluginsS3Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3ObjectVersion != nil {
		in, out := &in.RequirementsS3ObjectVersion, &out.RequirementsS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RequirementsS3Path != nil {
		in, out := &in.RequirementsS3Path, &out.RequirementsS3Path
		*out = new(string)
		**out = **in
	}
	if in.Schedulers != nil {
		in, out := &in.Schedulers, &out.Schedulers
		*out = new(float64)
		**out = **in
	}
	if in.SourceBucketArn != nil {
		in, out := &in.SourceBucketArn, &out.SourceBucketArn
		*out = new(string)
		**out = **in
	}
	if in.SourceBucketArnRef != nil {
		in, out := &in.SourceBucketArnRef, &out.SourceBucketArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceBucketArnSelector != nil {
		in, out := &in.SourceBucketArnSelector, &out.SourceBucketArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StartupScriptS3ObjectVersion != nil {
		in, out := &in.StartupScriptS3ObjectVersion, &out.StartupScriptS3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.StartupScriptS3Path != nil {
		in, out := &in.StartupScriptS3Path, &out.StartupScriptS3Path
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WebserverAccessMode != nil {
		in, out := &in.WebserverAccessMode, &out.WebserverAccessMode
		*out = new(string)
		**out = **in
	}
	if in.WeeklyMaintenanceWindowStart != nil {
		in, out := &in.WeeklyMaintenanceWindowStart, &out.WeeklyMaintenanceWindowStart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorInitParameters) DeepCopyInto(out *ErrorInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorInitParameters.
func (in *ErrorInitParameters) DeepCopy() *ErrorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorObservation) DeepCopyInto(out *ErrorObservation) {
	*out = *in
	if in.ErrorCode != nil {
		in, out := &in.ErrorCode, &out.ErrorCode
		*out = new(string)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorObservation.
func (in *ErrorObservation) DeepCopy() *ErrorObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorParameters) DeepCopyInto(out *ErrorParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorParameters.
func (in *ErrorParameters) DeepCopy() *ErrorParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastUpdatedInitParameters) DeepCopyInto(out *LastUpdatedInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastUpdatedInitParameters.
func (in *LastUpdatedInitParameters) DeepCopy() *LastUpdatedInitParameters {
	if in == nil {
		return nil
	}
	out := new(LastUpdatedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastUpdatedObservation) DeepCopyInto(out *LastUpdatedObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = make([]ErrorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastUpdatedObservation.
func (in *LastUpdatedObservation) DeepCopy() *LastUpdatedObservation {
	if in == nil {
		return nil
	}
	out := new(LastUpdatedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LastUpdatedParameters) DeepCopyInto(out *LastUpdatedParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LastUpdatedParameters.
func (in *LastUpdatedParameters) DeepCopy() *LastUpdatedParameters {
	if in == nil {
		return nil
	}
	out := new(LastUpdatedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigurationInitParameters) DeepCopyInto(out *LoggingConfigurationInitParameters) {
	*out = *in
	if in.DagProcessingLogs != nil {
		in, out := &in.DagProcessingLogs, &out.DagProcessingLogs
		*out = new(DagProcessingLogsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SchedulerLogs != nil {
		in, out := &in.SchedulerLogs, &out.SchedulerLogs
		*out = new(SchedulerLogsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskLogs != nil {
		in, out := &in.TaskLogs, &out.TaskLogs
		*out = new(TaskLogsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.WebserverLogs != nil {
		in, out := &in.WebserverLogs, &out.WebserverLogs
		*out = new(WebserverLogsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkerLogs != nil {
		in, out := &in.WorkerLogs, &out.WorkerLogs
		*out = new(WorkerLogsInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigurationInitParameters.
func (in *LoggingConfigurationInitParameters) DeepCopy() *LoggingConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigurationObservation) DeepCopyInto(out *LoggingConfigurationObservation) {
	*out = *in
	if in.DagProcessingLogs != nil {
		in, out := &in.DagProcessingLogs, &out.DagProcessingLogs
		*out = new(DagProcessingLogsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.SchedulerLogs != nil {
		in, out := &in.SchedulerLogs, &out.SchedulerLogs
		*out = new(SchedulerLogsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskLogs != nil {
		in, out := &in.TaskLogs, &out.TaskLogs
		*out = new(TaskLogsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.WebserverLogs != nil {
		in, out := &in.WebserverLogs, &out.WebserverLogs
		*out = new(WebserverLogsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkerLogs != nil {
		in, out := &in.WorkerLogs, &out.WorkerLogs
		*out = new(WorkerLogsObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigurationObservation.
func (in *LoggingConfigurationObservation) DeepCopy() *LoggingConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigurationParameters) DeepCopyInto(out *LoggingConfigurationParameters) {
	*out = *in
	if in.DagProcessingLogs != nil {
		in, out := &in.DagProcessingLogs, &out.DagProcessingLogs
		*out = new(DagProcessingLogsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.SchedulerLogs != nil {
		in, out := &in.SchedulerLogs, &out.SchedulerLogs
		*out = new(SchedulerLogsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskLogs != nil {
		in, out := &in.TaskLogs, &out.TaskLogs
		*out = new(TaskLogsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.WebserverLogs != nil {
		in, out := &in.WebserverLogs, &out.WebserverLogs
		*out = new(WebserverLogsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkerLogs != nil {
		in, out := &in.WorkerLogs, &out.WorkerLogs
		*out = new(WorkerLogsParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigurationParameters.
func (in *LoggingConfigurationParameters) DeepCopy() *LoggingConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationInitParameters) DeepCopyInto(out *NetworkConfigurationInitParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIdsRefs != nil {
		in, out := &in.SecurityGroupIdsRefs, &out.SecurityGroupIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIdsSelector != nil {
		in, out := &in.SecurityGroupIdsSelector, &out.SecurityGroupIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIdsRefs != nil {
		in, out := &in.SubnetIdsRefs, &out.SubnetIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIdsSelector != nil {
		in, out := &in.SubnetIdsSelector, &out.SubnetIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationInitParameters.
func (in *NetworkConfigurationInitParameters) DeepCopy() *NetworkConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationObservation) DeepCopyInto(out *NetworkConfigurationObservation) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationObservation.
func (in *NetworkConfigurationObservation) DeepCopy() *NetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfigurationParameters) DeepCopyInto(out *NetworkConfigurationParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIdsRefs != nil {
		in, out := &in.SecurityGroupIdsRefs, &out.SecurityGroupIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIdsSelector != nil {
		in, out := &in.SecurityGroupIdsSelector, &out.SecurityGroupIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIdsRefs != nil {
		in, out := &in.SubnetIdsRefs, &out.SubnetIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIdsSelector != nil {
		in, out := &in.SubnetIdsSelector, &out.SubnetIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfigurationParameters.
func (in *NetworkConfigurationParameters) DeepCopy() *NetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerLogsInitParameters) DeepCopyInto(out *SchedulerLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerLogsInitParameters.
func (in *SchedulerLogsInitParameters) DeepCopy() *SchedulerLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerLogsObservation) DeepCopyInto(out *SchedulerLogsObservation) {
	*out = *in
	if in.CloudWatchLogGroupArn != nil {
		in, out := &in.CloudWatchLogGroupArn, &out.CloudWatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerLogsObservation.
func (in *SchedulerLogsObservation) DeepCopy() *SchedulerLogsObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulerLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerLogsParameters) DeepCopyInto(out *SchedulerLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerLogsParameters.
func (in *SchedulerLogsParameters) DeepCopy() *SchedulerLogsParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsInitParameters) DeepCopyInto(out *TaskLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsInitParameters.
func (in *TaskLogsInitParameters) DeepCopy() *TaskLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsObservation) DeepCopyInto(out *TaskLogsObservation) {
	*out = *in
	if in.CloudWatchLogGroupArn != nil {
		in, out := &in.CloudWatchLogGroupArn, &out.CloudWatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsObservation.
func (in *TaskLogsObservation) DeepCopy() *TaskLogsObservation {
	if in == nil {
		return nil
	}
	out := new(TaskLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskLogsParameters) DeepCopyInto(out *TaskLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskLogsParameters.
func (in *TaskLogsParameters) DeepCopy() *TaskLogsParameters {
	if in == nil {
		return nil
	}
	out := new(TaskLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebserverLogsInitParameters) DeepCopyInto(out *WebserverLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebserverLogsInitParameters.
func (in *WebserverLogsInitParameters) DeepCopy() *WebserverLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebserverLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebserverLogsObservation) DeepCopyInto(out *WebserverLogsObservation) {
	*out = *in
	if in.CloudWatchLogGroupArn != nil {
		in, out := &in.CloudWatchLogGroupArn, &out.CloudWatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebserverLogsObservation.
func (in *WebserverLogsObservation) DeepCopy() *WebserverLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WebserverLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebserverLogsParameters) DeepCopyInto(out *WebserverLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebserverLogsParameters.
func (in *WebserverLogsParameters) DeepCopy() *WebserverLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WebserverLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogsInitParameters) DeepCopyInto(out *WorkerLogsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogsInitParameters.
func (in *WorkerLogsInitParameters) DeepCopy() *WorkerLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogsObservation) DeepCopyInto(out *WorkerLogsObservation) {
	*out = *in
	if in.CloudWatchLogGroupArn != nil {
		in, out := &in.CloudWatchLogGroupArn, &out.CloudWatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogsObservation.
func (in *WorkerLogsObservation) DeepCopy() *WorkerLogsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerLogsParameters) DeepCopyInto(out *WorkerLogsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerLogsParameters.
func (in *WorkerLogsParameters) DeepCopy() *WorkerLogsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerLogsParameters)
	in.DeepCopyInto(out)
	return out
}

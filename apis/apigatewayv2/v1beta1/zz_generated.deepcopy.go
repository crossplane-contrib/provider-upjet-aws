//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *API) DeepCopyInto(out *API) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new API.
func (in *API) DeepCopy() *API {
	if in == nil {
		return nil
	}
	out := new(API)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *API) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIInitParameters) DeepCopyInto(out *APIInitParameters) {
	*out = *in
	if in.APIKeySelectionExpression != nil {
		in, out := &in.APIKeySelectionExpression, &out.APIKeySelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.CorsConfiguration != nil {
		in, out := &in.CorsConfiguration, &out.CorsConfiguration
		*out = make([]CorsConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CredentialsArn != nil {
		in, out := &in.CredentialsArn, &out.CredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteSelectionExpression != nil {
		in, out := &in.RouteSelectionExpression, &out.RouteSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIInitParameters.
func (in *APIInitParameters) DeepCopy() *APIInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIList) DeepCopyInto(out *APIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]API, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIList.
func (in *APIList) DeepCopy() *APIList {
	if in == nil {
		return nil
	}
	out := new(APIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMapping) DeepCopyInto(out *APIMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMapping.
func (in *APIMapping) DeepCopy() *APIMapping {
	if in == nil {
		return nil
	}
	out := new(APIMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingInitParameters) DeepCopyInto(out *APIMappingInitParameters) {
	*out = *in
	if in.APIMappingKey != nil {
		in, out := &in.APIMappingKey, &out.APIMappingKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingInitParameters.
func (in *APIMappingInitParameters) DeepCopy() *APIMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingList) DeepCopyInto(out *APIMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingList.
func (in *APIMappingList) DeepCopy() *APIMappingList {
	if in == nil {
		return nil
	}
	out := new(APIMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingObservation) DeepCopyInto(out *APIMappingObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIMappingKey != nil {
		in, out := &in.APIMappingKey, &out.APIMappingKey
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingObservation.
func (in *APIMappingObservation) DeepCopy() *APIMappingObservation {
	if in == nil {
		return nil
	}
	out := new(APIMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingParameters) DeepCopyInto(out *APIMappingParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.APIMappingKey != nil {
		in, out := &in.APIMappingKey, &out.APIMappingKey
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameRef != nil {
		in, out := &in.DomainNameRef, &out.DomainNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainNameSelector != nil {
		in, out := &in.DomainNameSelector, &out.DomainNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
	if in.StageRef != nil {
		in, out := &in.StageRef, &out.StageRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StageSelector != nil {
		in, out := &in.StageSelector, &out.StageSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingParameters.
func (in *APIMappingParameters) DeepCopy() *APIMappingParameters {
	if in == nil {
		return nil
	}
	out := new(APIMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingSpec) DeepCopyInto(out *APIMappingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingSpec.
func (in *APIMappingSpec) DeepCopy() *APIMappingSpec {
	if in == nil {
		return nil
	}
	out := new(APIMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMappingStatus) DeepCopyInto(out *APIMappingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMappingStatus.
func (in *APIMappingStatus) DeepCopy() *APIMappingStatus {
	if in == nil {
		return nil
	}
	out := new(APIMappingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIObservation) DeepCopyInto(out *APIObservation) {
	*out = *in
	if in.APIEndpoint != nil {
		in, out := &in.APIEndpoint, &out.APIEndpoint
		*out = new(string)
		**out = **in
	}
	if in.APIKeySelectionExpression != nil {
		in, out := &in.APIKeySelectionExpression, &out.APIKeySelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.CorsConfiguration != nil {
		in, out := &in.CorsConfiguration, &out.CorsConfiguration
		*out = make([]CorsConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CredentialsArn != nil {
		in, out := &in.CredentialsArn, &out.CredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.ExecutionArn != nil {
		in, out := &in.ExecutionArn, &out.ExecutionArn
		*out = new(string)
		**out = **in
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteSelectionExpression != nil {
		in, out := &in.RouteSelectionExpression, &out.RouteSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIObservation.
func (in *APIObservation) DeepCopy() *APIObservation {
	if in == nil {
		return nil
	}
	out := new(APIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIParameters) DeepCopyInto(out *APIParameters) {
	*out = *in
	if in.APIKeySelectionExpression != nil {
		in, out := &in.APIKeySelectionExpression, &out.APIKeySelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.CorsConfiguration != nil {
		in, out := &in.CorsConfiguration, &out.CorsConfiguration
		*out = make([]CorsConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CredentialsArn != nil {
		in, out := &in.CredentialsArn, &out.CredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.FailOnWarnings != nil {
		in, out := &in.FailOnWarnings, &out.FailOnWarnings
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtocolType != nil {
		in, out := &in.ProtocolType, &out.ProtocolType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteSelectionExpression != nil {
		in, out := &in.RouteSelectionExpression, &out.RouteSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIParameters.
func (in *APIParameters) DeepCopy() *APIParameters {
	if in == nil {
		return nil
	}
	out := new(APIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APISpec) DeepCopyInto(out *APISpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APISpec.
func (in *APISpec) DeepCopy() *APISpec {
	if in == nil {
		return nil
	}
	out := new(APISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStatus) DeepCopyInto(out *APIStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStatus.
func (in *APIStatus) DeepCopy() *APIStatus {
	if in == nil {
		return nil
	}
	out := new(APIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsInitParameters) DeepCopyInto(out *AccessLogSettingsInitParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsInitParameters.
func (in *AccessLogSettingsInitParameters) DeepCopy() *AccessLogSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsObservation) DeepCopyInto(out *AccessLogSettingsObservation) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsObservation.
func (in *AccessLogSettingsObservation) DeepCopy() *AccessLogSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettingsParameters) DeepCopyInto(out *AccessLogSettingsParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettingsParameters.
func (in *AccessLogSettingsParameters) DeepCopy() *AccessLogSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authorizer) DeepCopyInto(out *Authorizer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authorizer.
func (in *Authorizer) DeepCopy() *Authorizer {
	if in == nil {
		return nil
	}
	out := new(Authorizer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Authorizer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerInitParameters) DeepCopyInto(out *AuthorizerInitParameters) {
	*out = *in
	if in.AuthorizerCredentialsArn != nil {
		in, out := &in.AuthorizerCredentialsArn, &out.AuthorizerCredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerPayloadFormatVersion != nil {
		in, out := &in.AuthorizerPayloadFormatVersion, &out.AuthorizerPayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerResultTTLInSeconds != nil {
		in, out := &in.AuthorizerResultTTLInSeconds, &out.AuthorizerResultTTLInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.AuthorizerType != nil {
		in, out := &in.AuthorizerType, &out.AuthorizerType
		*out = new(string)
		**out = **in
	}
	if in.EnableSimpleResponses != nil {
		in, out := &in.EnableSimpleResponses, &out.EnableSimpleResponses
		*out = new(bool)
		**out = **in
	}
	if in.IdentitySources != nil {
		in, out := &in.IdentitySources, &out.IdentitySources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerInitParameters.
func (in *AuthorizerInitParameters) DeepCopy() *AuthorizerInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerList) DeepCopyInto(out *AuthorizerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Authorizer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerList.
func (in *AuthorizerList) DeepCopy() *AuthorizerList {
	if in == nil {
		return nil
	}
	out := new(AuthorizerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuthorizerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerObservation) DeepCopyInto(out *AuthorizerObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerCredentialsArn != nil {
		in, out := &in.AuthorizerCredentialsArn, &out.AuthorizerCredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerPayloadFormatVersion != nil {
		in, out := &in.AuthorizerPayloadFormatVersion, &out.AuthorizerPayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerResultTTLInSeconds != nil {
		in, out := &in.AuthorizerResultTTLInSeconds, &out.AuthorizerResultTTLInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.AuthorizerType != nil {
		in, out := &in.AuthorizerType, &out.AuthorizerType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerURI != nil {
		in, out := &in.AuthorizerURI, &out.AuthorizerURI
		*out = new(string)
		**out = **in
	}
	if in.EnableSimpleResponses != nil {
		in, out := &in.EnableSimpleResponses, &out.EnableSimpleResponses
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentitySources != nil {
		in, out := &in.IdentitySources, &out.IdentitySources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerObservation.
func (in *AuthorizerObservation) DeepCopy() *AuthorizerObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerParameters) DeepCopyInto(out *AuthorizerParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizerCredentialsArn != nil {
		in, out := &in.AuthorizerCredentialsArn, &out.AuthorizerCredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerPayloadFormatVersion != nil {
		in, out := &in.AuthorizerPayloadFormatVersion, &out.AuthorizerPayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerResultTTLInSeconds != nil {
		in, out := &in.AuthorizerResultTTLInSeconds, &out.AuthorizerResultTTLInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.AuthorizerType != nil {
		in, out := &in.AuthorizerType, &out.AuthorizerType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerURI != nil {
		in, out := &in.AuthorizerURI, &out.AuthorizerURI
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerURIRef != nil {
		in, out := &in.AuthorizerURIRef, &out.AuthorizerURIRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizerURISelector != nil {
		in, out := &in.AuthorizerURISelector, &out.AuthorizerURISelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableSimpleResponses != nil {
		in, out := &in.EnableSimpleResponses, &out.EnableSimpleResponses
		*out = new(bool)
		**out = **in
	}
	if in.IdentitySources != nil {
		in, out := &in.IdentitySources, &out.IdentitySources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.JwtConfiguration != nil {
		in, out := &in.JwtConfiguration, &out.JwtConfiguration
		*out = make([]JwtConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerParameters.
func (in *AuthorizerParameters) DeepCopy() *AuthorizerParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerSpec) DeepCopyInto(out *AuthorizerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerSpec.
func (in *AuthorizerSpec) DeepCopy() *AuthorizerSpec {
	if in == nil {
		return nil
	}
	out := new(AuthorizerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizerStatus) DeepCopyInto(out *AuthorizerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizerStatus.
func (in *AuthorizerStatus) DeepCopy() *AuthorizerStatus {
	if in == nil {
		return nil
	}
	out := new(AuthorizerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigurationInitParameters) DeepCopyInto(out *CorsConfigurationInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigurationInitParameters.
func (in *CorsConfigurationInitParameters) DeepCopy() *CorsConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigurationObservation) DeepCopyInto(out *CorsConfigurationObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigurationObservation.
func (in *CorsConfigurationObservation) DeepCopy() *CorsConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(CorsConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigurationParameters) DeepCopyInto(out *CorsConfigurationParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigurationParameters.
func (in *CorsConfigurationParameters) DeepCopy() *CorsConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(CorsConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteSettingsInitParameters) DeepCopyInto(out *DefaultRouteSettingsInitParameters) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteSettingsInitParameters.
func (in *DefaultRouteSettingsInitParameters) DeepCopy() *DefaultRouteSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteSettingsObservation) DeepCopyInto(out *DefaultRouteSettingsObservation) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteSettingsObservation.
func (in *DefaultRouteSettingsObservation) DeepCopy() *DefaultRouteSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteSettingsParameters) DeepCopyInto(out *DefaultRouteSettingsParameters) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteSettingsParameters.
func (in *DefaultRouteSettingsParameters) DeepCopy() *DefaultRouteSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment) DeepCopyInto(out *Deployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment.
func (in *Deployment) DeepCopy() *Deployment {
	if in == nil {
		return nil
	}
	out := new(Deployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Deployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentInitParameters) DeepCopyInto(out *DeploymentInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentInitParameters.
func (in *DeploymentInitParameters) DeepCopy() *DeploymentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentList) DeepCopyInto(out *DeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Deployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentList.
func (in *DeploymentList) DeepCopy() *DeploymentList {
	if in == nil {
		return nil
	}
	out := new(DeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentObservation) DeepCopyInto(out *DeploymentObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.AutoDeployed != nil {
		in, out := &in.AutoDeployed, &out.AutoDeployed
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentObservation.
func (in *DeploymentObservation) DeepCopy() *DeploymentObservation {
	if in == nil {
		return nil
	}
	out := new(DeploymentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentParameters) DeepCopyInto(out *DeploymentParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentParameters.
func (in *DeploymentParameters) DeepCopy() *DeploymentParameters {
	if in == nil {
		return nil
	}
	out := new(DeploymentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentSpec) DeepCopyInto(out *DeploymentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentSpec.
func (in *DeploymentSpec) DeepCopy() *DeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(DeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentStatus) DeepCopyInto(out *DeploymentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentStatus.
func (in *DeploymentStatus) DeepCopy() *DeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(DeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainName) DeepCopyInto(out *DomainName) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainName.
func (in *DomainName) DeepCopy() *DomainName {
	if in == nil {
		return nil
	}
	out := new(DomainName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainName) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameConfigurationInitParameters) DeepCopyInto(out *DomainNameConfigurationInitParameters) {
	*out = *in
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameConfigurationInitParameters.
func (in *DomainNameConfigurationInitParameters) DeepCopy() *DomainNameConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameConfigurationObservation) DeepCopyInto(out *DomainNameConfigurationObservation) {
	*out = *in
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.HostedZoneID != nil {
		in, out := &in.HostedZoneID, &out.HostedZoneID
		*out = new(string)
		**out = **in
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.TargetDomainName != nil {
		in, out := &in.TargetDomainName, &out.TargetDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameConfigurationObservation.
func (in *DomainNameConfigurationObservation) DeepCopy() *DomainNameConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DomainNameConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameConfigurationParameters) DeepCopyInto(out *DomainNameConfigurationParameters) {
	*out = *in
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArnRef != nil {
		in, out := &in.CertificateArnRef, &out.CertificateArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateArnSelector != nil {
		in, out := &in.CertificateArnSelector, &out.CertificateArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointType != nil {
		in, out := &in.EndpointType, &out.EndpointType
		*out = new(string)
		**out = **in
	}
	if in.OwnershipVerificationCertificateArn != nil {
		in, out := &in.OwnershipVerificationCertificateArn, &out.OwnershipVerificationCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameConfigurationParameters.
func (in *DomainNameConfigurationParameters) DeepCopy() *DomainNameConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameInitParameters) DeepCopyInto(out *DomainNameInitParameters) {
	*out = *in
	if in.DomainNameConfiguration != nil {
		in, out := &in.DomainNameConfiguration, &out.DomainNameConfiguration
		*out = make([]DomainNameConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = make([]MutualTLSAuthenticationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameInitParameters.
func (in *DomainNameInitParameters) DeepCopy() *DomainNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameList) DeepCopyInto(out *DomainNameList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainName, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameList.
func (in *DomainNameList) DeepCopy() *DomainNameList {
	if in == nil {
		return nil
	}
	out := new(DomainNameList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainNameList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameObservation) DeepCopyInto(out *DomainNameObservation) {
	*out = *in
	if in.APIMappingSelectionExpression != nil {
		in, out := &in.APIMappingSelectionExpression, &out.APIMappingSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DomainNameConfiguration != nil {
		in, out := &in.DomainNameConfiguration, &out.DomainNameConfiguration
		*out = make([]DomainNameConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = make([]MutualTLSAuthenticationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameObservation.
func (in *DomainNameObservation) DeepCopy() *DomainNameObservation {
	if in == nil {
		return nil
	}
	out := new(DomainNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameParameters) DeepCopyInto(out *DomainNameParameters) {
	*out = *in
	if in.DomainNameConfiguration != nil {
		in, out := &in.DomainNameConfiguration, &out.DomainNameConfiguration
		*out = make([]DomainNameConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MutualTLSAuthentication != nil {
		in, out := &in.MutualTLSAuthentication, &out.MutualTLSAuthentication
		*out = make([]MutualTLSAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameParameters.
func (in *DomainNameParameters) DeepCopy() *DomainNameParameters {
	if in == nil {
		return nil
	}
	out := new(DomainNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameSpec) DeepCopyInto(out *DomainNameSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameSpec.
func (in *DomainNameSpec) DeepCopy() *DomainNameSpec {
	if in == nil {
		return nil
	}
	out := new(DomainNameSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameStatus) DeepCopyInto(out *DomainNameStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameStatus.
func (in *DomainNameStatus) DeepCopy() *DomainNameStatus {
	if in == nil {
		return nil
	}
	out := new(DomainNameStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Integration) DeepCopyInto(out *Integration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Integration.
func (in *Integration) DeepCopy() *Integration {
	if in == nil {
		return nil
	}
	out := new(Integration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Integration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationInitParameters) DeepCopyInto(out *IntegrationInitParameters) {
	*out = *in
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationMethod != nil {
		in, out := &in.IntegrationMethod, &out.IntegrationMethod
		*out = new(string)
		**out = **in
	}
	if in.IntegrationSubtype != nil {
		in, out := &in.IntegrationSubtype, &out.IntegrationSubtype
		*out = new(string)
		**out = **in
	}
	if in.IntegrationType != nil {
		in, out := &in.IntegrationType, &out.IntegrationType
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.PayloadFormatVersion != nil {
		in, out := &in.PayloadFormatVersion, &out.PayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make([]ResponseParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationInitParameters.
func (in *IntegrationInitParameters) DeepCopy() *IntegrationInitParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationList) DeepCopyInto(out *IntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Integration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationList.
func (in *IntegrationList) DeepCopy() *IntegrationList {
	if in == nil {
		return nil
	}
	out := new(IntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationObservation) DeepCopyInto(out *IntegrationObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.CredentialsArn != nil {
		in, out := &in.CredentialsArn, &out.CredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationMethod != nil {
		in, out := &in.IntegrationMethod, &out.IntegrationMethod
		*out = new(string)
		**out = **in
	}
	if in.IntegrationResponseSelectionExpression != nil {
		in, out := &in.IntegrationResponseSelectionExpression, &out.IntegrationResponseSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.IntegrationSubtype != nil {
		in, out := &in.IntegrationSubtype, &out.IntegrationSubtype
		*out = new(string)
		**out = **in
	}
	if in.IntegrationType != nil {
		in, out := &in.IntegrationType, &out.IntegrationType
		*out = new(string)
		**out = **in
	}
	if in.IntegrationURI != nil {
		in, out := &in.IntegrationURI, &out.IntegrationURI
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.PayloadFormatVersion != nil {
		in, out := &in.PayloadFormatVersion, &out.PayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make([]ResponseParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationObservation.
func (in *IntegrationObservation) DeepCopy() *IntegrationObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationParameters) DeepCopyInto(out *IntegrationParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionIDRef != nil {
		in, out := &in.ConnectionIDRef, &out.ConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionIDSelector != nil {
		in, out := &in.ConnectionIDSelector, &out.ConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.CredentialsArn != nil {
		in, out := &in.CredentialsArn, &out.CredentialsArn
		*out = new(string)
		**out = **in
	}
	if in.CredentialsArnRef != nil {
		in, out := &in.CredentialsArnRef, &out.CredentialsArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CredentialsArnSelector != nil {
		in, out := &in.CredentialsArnSelector, &out.CredentialsArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IntegrationMethod != nil {
		in, out := &in.IntegrationMethod, &out.IntegrationMethod
		*out = new(string)
		**out = **in
	}
	if in.IntegrationSubtype != nil {
		in, out := &in.IntegrationSubtype, &out.IntegrationSubtype
		*out = new(string)
		**out = **in
	}
	if in.IntegrationType != nil {
		in, out := &in.IntegrationType, &out.IntegrationType
		*out = new(string)
		**out = **in
	}
	if in.IntegrationURI != nil {
		in, out := &in.IntegrationURI, &out.IntegrationURI
		*out = new(string)
		**out = **in
	}
	if in.IntegrationURIRef != nil {
		in, out := &in.IntegrationURIRef, &out.IntegrationURIRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationURISelector != nil {
		in, out := &in.IntegrationURISelector, &out.IntegrationURISelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.PayloadFormatVersion != nil {
		in, out := &in.PayloadFormatVersion, &out.PayloadFormatVersion
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make([]ResponseParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.TimeoutMilliseconds != nil {
		in, out := &in.TimeoutMilliseconds, &out.TimeoutMilliseconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationParameters.
func (in *IntegrationParameters) DeepCopy() *IntegrationParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponse) DeepCopyInto(out *IntegrationResponse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponse.
func (in *IntegrationResponse) DeepCopy() *IntegrationResponse {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationResponse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseInitParameters) DeepCopyInto(out *IntegrationResponseInitParameters) {
	*out = *in
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.IntegrationResponseKey != nil {
		in, out := &in.IntegrationResponseKey, &out.IntegrationResponseKey
		*out = new(string)
		**out = **in
	}
	if in.ResponseTemplates != nil {
		in, out := &in.ResponseTemplates, &out.ResponseTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseInitParameters.
func (in *IntegrationResponseInitParameters) DeepCopy() *IntegrationResponseInitParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseList) DeepCopyInto(out *IntegrationResponseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IntegrationResponse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseList.
func (in *IntegrationResponseList) DeepCopy() *IntegrationResponseList {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationResponseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseObservation) DeepCopyInto(out *IntegrationResponseObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationResponseKey != nil {
		in, out := &in.IntegrationResponseKey, &out.IntegrationResponseKey
		*out = new(string)
		**out = **in
	}
	if in.ResponseTemplates != nil {
		in, out := &in.ResponseTemplates, &out.ResponseTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseObservation.
func (in *IntegrationResponseObservation) DeepCopy() *IntegrationResponseObservation {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseParameters) DeepCopyInto(out *IntegrationResponseParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContentHandlingStrategy != nil {
		in, out := &in.ContentHandlingStrategy, &out.ContentHandlingStrategy
		*out = new(string)
		**out = **in
	}
	if in.IntegrationID != nil {
		in, out := &in.IntegrationID, &out.IntegrationID
		*out = new(string)
		**out = **in
	}
	if in.IntegrationIDRef != nil {
		in, out := &in.IntegrationIDRef, &out.IntegrationIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationIDSelector != nil {
		in, out := &in.IntegrationIDSelector, &out.IntegrationIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationResponseKey != nil {
		in, out := &in.IntegrationResponseKey, &out.IntegrationResponseKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResponseTemplates != nil {
		in, out := &in.ResponseTemplates, &out.ResponseTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TemplateSelectionExpression != nil {
		in, out := &in.TemplateSelectionExpression, &out.TemplateSelectionExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseParameters.
func (in *IntegrationResponseParameters) DeepCopy() *IntegrationResponseParameters {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseSpec) DeepCopyInto(out *IntegrationResponseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseSpec.
func (in *IntegrationResponseSpec) DeepCopy() *IntegrationResponseSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponseStatus) DeepCopyInto(out *IntegrationResponseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponseStatus.
func (in *IntegrationResponseStatus) DeepCopy() *IntegrationResponseStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpec) DeepCopyInto(out *IntegrationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpec.
func (in *IntegrationSpec) DeepCopy() *IntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationStatus) DeepCopyInto(out *IntegrationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationStatus.
func (in *IntegrationStatus) DeepCopy() *IntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationInitParameters) DeepCopyInto(out *JwtConfigurationInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationInitParameters.
func (in *JwtConfigurationInitParameters) DeepCopy() *JwtConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationObservation) DeepCopyInto(out *JwtConfigurationObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationObservation.
func (in *JwtConfigurationObservation) DeepCopy() *JwtConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigurationParameters) DeepCopyInto(out *JwtConfigurationParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigurationParameters.
func (in *JwtConfigurationParameters) DeepCopy() *JwtConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Model) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelInitParameters) DeepCopyInto(out *ModelInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelInitParameters.
func (in *ModelInitParameters) DeepCopy() *ModelInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelList) DeepCopyInto(out *ModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Model, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelList.
func (in *ModelList) DeepCopy() *ModelList {
	if in == nil {
		return nil
	}
	out := new(ModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelObservation) DeepCopyInto(out *ModelObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelObservation.
func (in *ModelObservation) DeepCopy() *ModelObservation {
	if in == nil {
		return nil
	}
	out := new(ModelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelParameters) DeepCopyInto(out *ModelParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelParameters.
func (in *ModelParameters) DeepCopy() *ModelParameters {
	if in == nil {
		return nil
	}
	out := new(ModelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationInitParameters) DeepCopyInto(out *MutualTLSAuthenticationInitParameters) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationInitParameters.
func (in *MutualTLSAuthenticationInitParameters) DeepCopy() *MutualTLSAuthenticationInitParameters {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationObservation) DeepCopyInto(out *MutualTLSAuthenticationObservation) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationObservation.
func (in *MutualTLSAuthenticationObservation) DeepCopy() *MutualTLSAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationParameters) DeepCopyInto(out *MutualTLSAuthenticationParameters) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationParameters.
func (in *MutualTLSAuthenticationParameters) DeepCopy() *MutualTLSAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParameterInitParameters) DeepCopyInto(out *RequestParameterInitParameters) {
	*out = *in
	if in.RequestParameterKey != nil {
		in, out := &in.RequestParameterKey, &out.RequestParameterKey
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParameterInitParameters.
func (in *RequestParameterInitParameters) DeepCopy() *RequestParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParameterObservation) DeepCopyInto(out *RequestParameterObservation) {
	*out = *in
	if in.RequestParameterKey != nil {
		in, out := &in.RequestParameterKey, &out.RequestParameterKey
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParameterObservation.
func (in *RequestParameterObservation) DeepCopy() *RequestParameterObservation {
	if in == nil {
		return nil
	}
	out := new(RequestParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParameterParameters) DeepCopyInto(out *RequestParameterParameters) {
	*out = *in
	if in.RequestParameterKey != nil {
		in, out := &in.RequestParameterKey, &out.RequestParameterKey
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParameterParameters.
func (in *RequestParameterParameters) DeepCopy() *RequestParameterParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseParametersInitParameters) DeepCopyInto(out *ResponseParametersInitParameters) {
	*out = *in
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseParametersInitParameters.
func (in *ResponseParametersInitParameters) DeepCopy() *ResponseParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseParametersObservation) DeepCopyInto(out *ResponseParametersObservation) {
	*out = *in
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseParametersObservation.
func (in *ResponseParametersObservation) DeepCopy() *ResponseParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseParametersParameters) DeepCopyInto(out *ResponseParametersParameters) {
	*out = *in
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseParametersParameters.
func (in *ResponseParametersParameters) DeepCopy() *ResponseParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteInitParameters) DeepCopyInto(out *RouteInitParameters) {
	*out = *in
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationScopes != nil {
		in, out := &in.AuthorizationScopes, &out.AuthorizationScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RequestModels != nil {
		in, out := &in.RequestModels, &out.RequestModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestParameter != nil {
		in, out := &in.RequestParameter, &out.RequestParameter
		*out = make([]RequestParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteResponseSelectionExpression != nil {
		in, out := &in.RouteResponseSelectionExpression, &out.RouteResponseSelectionExpression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteInitParameters.
func (in *RouteInitParameters) DeepCopy() *RouteInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationScopes != nil {
		in, out := &in.AuthorizationScopes, &out.AuthorizationScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerID != nil {
		in, out := &in.AuthorizerID, &out.AuthorizerID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RequestModels != nil {
		in, out := &in.RequestModels, &out.RequestModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestParameter != nil {
		in, out := &in.RequestParameter, &out.RequestParameter
		*out = make([]RequestParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteResponseSelectionExpression != nil {
		in, out := &in.RouteResponseSelectionExpression, &out.RouteResponseSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationScopes != nil {
		in, out := &in.AuthorizationScopes, &out.AuthorizationScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerID != nil {
		in, out := &in.AuthorizerID, &out.AuthorizerID
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerIDRef != nil {
		in, out := &in.AuthorizerIDRef, &out.AuthorizerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizerIDSelector != nil {
		in, out := &in.AuthorizerIDSelector, &out.AuthorizerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequestModels != nil {
		in, out := &in.RequestModels, &out.RequestModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestParameter != nil {
		in, out := &in.RequestParameter, &out.RequestParameter
		*out = make([]RequestParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.RouteResponseSelectionExpression != nil {
		in, out := &in.RouteResponseSelectionExpression, &out.RouteResponseSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponse) DeepCopyInto(out *RouteResponse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponse.
func (in *RouteResponse) DeepCopy() *RouteResponse {
	if in == nil {
		return nil
	}
	out := new(RouteResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteResponse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseInitParameters) DeepCopyInto(out *RouteResponseInitParameters) {
	*out = *in
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.ResponseModels != nil {
		in, out := &in.ResponseModels, &out.ResponseModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteResponseKey != nil {
		in, out := &in.RouteResponseKey, &out.RouteResponseKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseInitParameters.
func (in *RouteResponseInitParameters) DeepCopy() *RouteResponseInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteResponseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseList) DeepCopyInto(out *RouteResponseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteResponse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseList.
func (in *RouteResponseList) DeepCopy() *RouteResponseList {
	if in == nil {
		return nil
	}
	out := new(RouteResponseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteResponseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseObservation) DeepCopyInto(out *RouteResponseObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.ResponseModels != nil {
		in, out := &in.ResponseModels, &out.ResponseModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteID != nil {
		in, out := &in.RouteID, &out.RouteID
		*out = new(string)
		**out = **in
	}
	if in.RouteResponseKey != nil {
		in, out := &in.RouteResponseKey, &out.RouteResponseKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseObservation.
func (in *RouteResponseObservation) DeepCopy() *RouteResponseObservation {
	if in == nil {
		return nil
	}
	out := new(RouteResponseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseParameters) DeepCopyInto(out *RouteResponseParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelSelectionExpression != nil {
		in, out := &in.ModelSelectionExpression, &out.ModelSelectionExpression
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResponseModels != nil {
		in, out := &in.ResponseModels, &out.ResponseModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteID != nil {
		in, out := &in.RouteID, &out.RouteID
		*out = new(string)
		**out = **in
	}
	if in.RouteIDRef != nil {
		in, out := &in.RouteIDRef, &out.RouteIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteIDSelector != nil {
		in, out := &in.RouteIDSelector, &out.RouteIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RouteResponseKey != nil {
		in, out := &in.RouteResponseKey, &out.RouteResponseKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseParameters.
func (in *RouteResponseParameters) DeepCopy() *RouteResponseParameters {
	if in == nil {
		return nil
	}
	out := new(RouteResponseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseSpec) DeepCopyInto(out *RouteResponseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseSpec.
func (in *RouteResponseSpec) DeepCopy() *RouteResponseSpec {
	if in == nil {
		return nil
	}
	out := new(RouteResponseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteResponseStatus) DeepCopyInto(out *RouteResponseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteResponseStatus.
func (in *RouteResponseStatus) DeepCopy() *RouteResponseStatus {
	if in == nil {
		return nil
	}
	out := new(RouteResponseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSettingsInitParameters) DeepCopyInto(out *RouteSettingsInitParameters) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSettingsInitParameters.
func (in *RouteSettingsInitParameters) DeepCopy() *RouteSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSettingsObservation) DeepCopyInto(out *RouteSettingsObservation) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSettingsObservation.
func (in *RouteSettingsObservation) DeepCopy() *RouteSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(RouteSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSettingsParameters) DeepCopyInto(out *RouteSettingsParameters) {
	*out = *in
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DetailedMetricsEnabled != nil {
		in, out := &in.DetailedMetricsEnabled, &out.DetailedMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.RouteKey != nil {
		in, out := &in.RouteKey, &out.RouteKey
		*out = new(string)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSettingsParameters.
func (in *RouteSettingsParameters) DeepCopy() *RouteSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(RouteSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteStatus) DeepCopyInto(out *RouteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteStatus.
func (in *RouteStatus) DeepCopy() *RouteStatus {
	if in == nil {
		return nil
	}
	out := new(RouteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stage) DeepCopyInto(out *Stage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stage.
func (in *Stage) DeepCopy() *Stage {
	if in == nil {
		return nil
	}
	out := new(Stage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageInitParameters) DeepCopyInto(out *StageInitParameters) {
	*out = *in
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = make([]AccessLogSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoDeploy != nil {
		in, out := &in.AutoDeploy, &out.AutoDeploy
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteSettings != nil {
		in, out := &in.DefaultRouteSettings, &out.DefaultRouteSettings
		*out = make([]DefaultRouteSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RouteSettings != nil {
		in, out := &in.RouteSettings, &out.RouteSettings
		*out = make([]RouteSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StageVariables != nil {
		in, out := &in.StageVariables, &out.StageVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageInitParameters.
func (in *StageInitParameters) DeepCopy() *StageInitParameters {
	if in == nil {
		return nil
	}
	out := new(StageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageList) DeepCopyInto(out *StageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageList.
func (in *StageList) DeepCopy() *StageList {
	if in == nil {
		return nil
	}
	out := new(StageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageObservation) DeepCopyInto(out *StageObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = make([]AccessLogSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoDeploy != nil {
		in, out := &in.AutoDeploy, &out.AutoDeploy
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteSettings != nil {
		in, out := &in.DefaultRouteSettings, &out.DefaultRouteSettings
		*out = make([]DefaultRouteSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionArn != nil {
		in, out := &in.ExecutionArn, &out.ExecutionArn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvokeURL != nil {
		in, out := &in.InvokeURL, &out.InvokeURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RouteSettings != nil {
		in, out := &in.RouteSettings, &out.RouteSettings
		*out = make([]RouteSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StageVariables != nil {
		in, out := &in.StageVariables, &out.StageVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageObservation.
func (in *StageObservation) DeepCopy() *StageObservation {
	if in == nil {
		return nil
	}
	out := new(StageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageParameters) DeepCopyInto(out *StageParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = make([]AccessLogSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoDeploy != nil {
		in, out := &in.AutoDeploy, &out.AutoDeploy
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteSettings != nil {
		in, out := &in.DefaultRouteSettings, &out.DefaultRouteSettings
		*out = make([]DefaultRouteSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.DeploymentIDRef != nil {
		in, out := &in.DeploymentIDRef, &out.DeploymentIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentIDSelector != nil {
		in, out := &in.DeploymentIDSelector, &out.DeploymentIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RouteSettings != nil {
		in, out := &in.RouteSettings, &out.RouteSettings
		*out = make([]RouteSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StageVariables != nil {
		in, out := &in.StageVariables, &out.StageVariables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageParameters.
func (in *StageParameters) DeepCopy() *StageParameters {
	if in == nil {
		return nil
	}
	out := new(StageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSpec) DeepCopyInto(out *StageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSpec.
func (in *StageSpec) DeepCopy() *StageSpec {
	if in == nil {
		return nil
	}
	out := new(StageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStatus) DeepCopyInto(out *StageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStatus.
func (in *StageStatus) DeepCopy() *StageStatus {
	if in == nil {
		return nil
	}
	out := new(StageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigInitParameters) DeepCopyInto(out *TLSConfigInitParameters) {
	*out = *in
	if in.ServerNameToVerify != nil {
		in, out := &in.ServerNameToVerify, &out.ServerNameToVerify
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigInitParameters.
func (in *TLSConfigInitParameters) DeepCopy() *TLSConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigObservation) DeepCopyInto(out *TLSConfigObservation) {
	*out = *in
	if in.ServerNameToVerify != nil {
		in, out := &in.ServerNameToVerify, &out.ServerNameToVerify
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigObservation.
func (in *TLSConfigObservation) DeepCopy() *TLSConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TLSConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigParameters) DeepCopyInto(out *TLSConfigParameters) {
	*out = *in
	if in.ServerNameToVerify != nil {
		in, out := &in.ServerNameToVerify, &out.ServerNameToVerify
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigParameters.
func (in *TLSConfigParameters) DeepCopy() *TLSConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLink) DeepCopyInto(out *VPCLink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLink.
func (in *VPCLink) DeepCopy() *VPCLink {
	if in == nil {
		return nil
	}
	out := new(VPCLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCLink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkInitParameters) DeepCopyInto(out *VPCLinkInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkInitParameters.
func (in *VPCLinkInitParameters) DeepCopy() *VPCLinkInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCLinkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkList) DeepCopyInto(out *VPCLinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCLink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkList.
func (in *VPCLinkList) DeepCopy() *VPCLinkList {
	if in == nil {
		return nil
	}
	out := new(VPCLinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCLinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkObservation) DeepCopyInto(out *VPCLinkObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkObservation.
func (in *VPCLinkObservation) DeepCopy() *VPCLinkObservation {
	if in == nil {
		return nil
	}
	out := new(VPCLinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkParameters) DeepCopyInto(out *VPCLinkParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkParameters.
func (in *VPCLinkParameters) DeepCopy() *VPCLinkParameters {
	if in == nil {
		return nil
	}
	out := new(VPCLinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkSpec) DeepCopyInto(out *VPCLinkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkSpec.
func (in *VPCLinkSpec) DeepCopy() *VPCLinkSpec {
	if in == nil {
		return nil
	}
	out := new(VPCLinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkStatus) DeepCopyInto(out *VPCLinkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkStatus.
func (in *VPCLinkStatus) DeepCopy() *VPCLinkStatus {
	if in == nil {
		return nil
	}
	out := new(VPCLinkStatus)
	in.DeepCopyInto(out)
	return out
}

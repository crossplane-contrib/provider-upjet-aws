//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alias) DeepCopyInto(out *Alias) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alias.
func (in *Alias) DeepCopy() *Alias {
	if in == nil {
		return nil
	}
	out := new(Alias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alias) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasInitParameters) DeepCopyInto(out *AliasInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FunctionVersion != nil {
		in, out := &in.FunctionVersion, &out.FunctionVersion
		*out = new(string)
		**out = **in
	}
	if in.RoutingConfig != nil {
		in, out := &in.RoutingConfig, &out.RoutingConfig
		*out = make([]RoutingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasInitParameters.
func (in *AliasInitParameters) DeepCopy() *AliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(AliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasList) DeepCopyInto(out *AliasList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasList.
func (in *AliasList) DeepCopy() *AliasList {
	if in == nil {
		return nil
	}
	out := new(AliasList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AliasList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasObservation) DeepCopyInto(out *AliasObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionVersion != nil {
		in, out := &in.FunctionVersion, &out.FunctionVersion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvokeArn != nil {
		in, out := &in.InvokeArn, &out.InvokeArn
		*out = new(string)
		**out = **in
	}
	if in.RoutingConfig != nil {
		in, out := &in.RoutingConfig, &out.RoutingConfig
		*out = make([]RoutingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasObservation.
func (in *AliasObservation) DeepCopy() *AliasObservation {
	if in == nil {
		return nil
	}
	out := new(AliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasParameters) DeepCopyInto(out *AliasParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionVersion != nil {
		in, out := &in.FunctionVersion, &out.FunctionVersion
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingConfig != nil {
		in, out := &in.RoutingConfig, &out.RoutingConfig
		*out = make([]RoutingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasParameters.
func (in *AliasParameters) DeepCopy() *AliasParameters {
	if in == nil {
		return nil
	}
	out := new(AliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasSpec) DeepCopyInto(out *AliasSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasSpec.
func (in *AliasSpec) DeepCopy() *AliasSpec {
	if in == nil {
		return nil
	}
	out := new(AliasSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasStatus) DeepCopyInto(out *AliasStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasStatus.
func (in *AliasStatus) DeepCopy() *AliasStatus {
	if in == nil {
		return nil
	}
	out := new(AliasStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedPublishersInitParameters) DeepCopyInto(out *AllowedPublishersInitParameters) {
	*out = *in
	if in.SigningProfileVersionArns != nil {
		in, out := &in.SigningProfileVersionArns, &out.SigningProfileVersionArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SigningProfileVersionArnsRefs != nil {
		in, out := &in.SigningProfileVersionArnsRefs, &out.SigningProfileVersionArnsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningProfileVersionArnsSelector != nil {
		in, out := &in.SigningProfileVersionArnsSelector, &out.SigningProfileVersionArnsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedPublishersInitParameters.
func (in *AllowedPublishersInitParameters) DeepCopy() *AllowedPublishersInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedPublishersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedPublishersObservation) DeepCopyInto(out *AllowedPublishersObservation) {
	*out = *in
	if in.SigningProfileVersionArns != nil {
		in, out := &in.SigningProfileVersionArns, &out.SigningProfileVersionArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedPublishersObservation.
func (in *AllowedPublishersObservation) DeepCopy() *AllowedPublishersObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedPublishersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedPublishersParameters) DeepCopyInto(out *AllowedPublishersParameters) {
	*out = *in
	if in.SigningProfileVersionArns != nil {
		in, out := &in.SigningProfileVersionArns, &out.SigningProfileVersionArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SigningProfileVersionArnsRefs != nil {
		in, out := &in.SigningProfileVersionArnsRefs, &out.SigningProfileVersionArnsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningProfileVersionArnsSelector != nil {
		in, out := &in.SigningProfileVersionArnsSelector, &out.SigningProfileVersionArnsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedPublishersParameters.
func (in *AllowedPublishersParameters) DeepCopy() *AllowedPublishersParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedPublishersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonManagedKafkaEventSourceConfigInitParameters) DeepCopyInto(out *AmazonManagedKafkaEventSourceConfigInitParameters) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonManagedKafkaEventSourceConfigInitParameters.
func (in *AmazonManagedKafkaEventSourceConfigInitParameters) DeepCopy() *AmazonManagedKafkaEventSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AmazonManagedKafkaEventSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonManagedKafkaEventSourceConfigObservation) DeepCopyInto(out *AmazonManagedKafkaEventSourceConfigObservation) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonManagedKafkaEventSourceConfigObservation.
func (in *AmazonManagedKafkaEventSourceConfigObservation) DeepCopy() *AmazonManagedKafkaEventSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AmazonManagedKafkaEventSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmazonManagedKafkaEventSourceConfigParameters) DeepCopyInto(out *AmazonManagedKafkaEventSourceConfigParameters) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmazonManagedKafkaEventSourceConfigParameters.
func (in *AmazonManagedKafkaEventSourceConfigParameters) DeepCopy() *AmazonManagedKafkaEventSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AmazonManagedKafkaEventSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfig) DeepCopyInto(out *CodeSigningConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfig.
func (in *CodeSigningConfig) DeepCopy() *CodeSigningConfig {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CodeSigningConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigInitParameters) DeepCopyInto(out *CodeSigningConfigInitParameters) {
	*out = *in
	if in.AllowedPublishers != nil {
		in, out := &in.AllowedPublishers, &out.AllowedPublishers
		*out = make([]AllowedPublishersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigInitParameters.
func (in *CodeSigningConfigInitParameters) DeepCopy() *CodeSigningConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigList) DeepCopyInto(out *CodeSigningConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CodeSigningConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigList.
func (in *CodeSigningConfigList) DeepCopy() *CodeSigningConfigList {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CodeSigningConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigObservation) DeepCopyInto(out *CodeSigningConfigObservation) {
	*out = *in
	if in.AllowedPublishers != nil {
		in, out := &in.AllowedPublishers, &out.AllowedPublishers
		*out = make([]AllowedPublishersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ConfigID != nil {
		in, out := &in.ConfigID, &out.ConfigID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigObservation.
func (in *CodeSigningConfigObservation) DeepCopy() *CodeSigningConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigParameters) DeepCopyInto(out *CodeSigningConfigParameters) {
	*out = *in
	if in.AllowedPublishers != nil {
		in, out := &in.AllowedPublishers, &out.AllowedPublishers
		*out = make([]AllowedPublishersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigParameters.
func (in *CodeSigningConfigParameters) DeepCopy() *CodeSigningConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigSpec) DeepCopyInto(out *CodeSigningConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigSpec.
func (in *CodeSigningConfigSpec) DeepCopy() *CodeSigningConfigSpec {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CodeSigningConfigStatus) DeepCopyInto(out *CodeSigningConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CodeSigningConfigStatus.
func (in *CodeSigningConfigStatus) DeepCopy() *CodeSigningConfigStatus {
	if in == nil {
		return nil
	}
	out := new(CodeSigningConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsInitParameters) DeepCopyInto(out *CorsInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsInitParameters.
func (in *CorsInitParameters) DeepCopy() *CorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsObservation) DeepCopyInto(out *CorsObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsObservation.
func (in *CorsObservation) DeepCopy() *CorsObservation {
	if in == nil {
		return nil
	}
	out := new(CorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsParameters) DeepCopyInto(out *CorsParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsParameters.
func (in *CorsParameters) DeepCopy() *CorsParameters {
	if in == nil {
		return nil
	}
	out := new(CorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigInitParameters) DeepCopyInto(out *DeadLetterConfigInitParameters) {
	*out = *in
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigInitParameters.
func (in *DeadLetterConfigInitParameters) DeepCopy() *DeadLetterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigObservation) DeepCopyInto(out *DeadLetterConfigObservation) {
	*out = *in
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigObservation.
func (in *DeadLetterConfigObservation) DeepCopy() *DeadLetterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterConfigParameters) DeepCopyInto(out *DeadLetterConfigParameters) {
	*out = *in
	if in.TargetArn != nil {
		in, out := &in.TargetArn, &out.TargetArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterConfigParameters.
func (in *DeadLetterConfigParameters) DeepCopy() *DeadLetterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DeadLetterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigInitParameters) DeepCopyInto(out *DestinationConfigInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigInitParameters.
func (in *DestinationConfigInitParameters) DeepCopy() *DestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigObservation) DeepCopyInto(out *DestinationConfigObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigObservation.
func (in *DestinationConfigObservation) DeepCopy() *DestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigOnFailureInitParameters) DeepCopyInto(out *DestinationConfigOnFailureInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigOnFailureInitParameters.
func (in *DestinationConfigOnFailureInitParameters) DeepCopy() *DestinationConfigOnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigOnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigOnFailureObservation) DeepCopyInto(out *DestinationConfigOnFailureObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigOnFailureObservation.
func (in *DestinationConfigOnFailureObservation) DeepCopy() *DestinationConfigOnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigOnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigOnFailureParameters) DeepCopyInto(out *DestinationConfigOnFailureParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigOnFailureParameters.
func (in *DestinationConfigOnFailureParameters) DeepCopy() *DestinationConfigOnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigOnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationConfigParameters) DeepCopyInto(out *DestinationConfigParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]OnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationConfigParameters.
func (in *DestinationConfigParameters) DeepCopy() *DestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentDBEventSourceConfigInitParameters) DeepCopyInto(out *DocumentDBEventSourceConfigInitParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.FullDocument != nil {
		in, out := &in.FullDocument, &out.FullDocument
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentDBEventSourceConfigInitParameters.
func (in *DocumentDBEventSourceConfigInitParameters) DeepCopy() *DocumentDBEventSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentDBEventSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentDBEventSourceConfigObservation) DeepCopyInto(out *DocumentDBEventSourceConfigObservation) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.FullDocument != nil {
		in, out := &in.FullDocument, &out.FullDocument
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentDBEventSourceConfigObservation.
func (in *DocumentDBEventSourceConfigObservation) DeepCopy() *DocumentDBEventSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DocumentDBEventSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentDBEventSourceConfigParameters) DeepCopyInto(out *DocumentDBEventSourceConfigParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.FullDocument != nil {
		in, out := &in.FullDocument, &out.FullDocument
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentDBEventSourceConfigParameters.
func (in *DocumentDBEventSourceConfigParameters) DeepCopy() *DocumentDBEventSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentDBEventSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageInitParameters) DeepCopyInto(out *EphemeralStorageInitParameters) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageInitParameters.
func (in *EphemeralStorageInitParameters) DeepCopy() *EphemeralStorageInitParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageObservation) DeepCopyInto(out *EphemeralStorageObservation) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageObservation.
func (in *EphemeralStorageObservation) DeepCopy() *EphemeralStorageObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorageParameters) DeepCopyInto(out *EphemeralStorageParameters) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorageParameters.
func (in *EphemeralStorageParameters) DeepCopy() *EphemeralStorageParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMapping) DeepCopyInto(out *EventSourceMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMapping.
func (in *EventSourceMapping) DeepCopy() *EventSourceMapping {
	if in == nil {
		return nil
	}
	out := new(EventSourceMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingInitParameters) DeepCopyInto(out *EventSourceMappingInitParameters) {
	*out = *in
	if in.AmazonManagedKafkaEventSourceConfig != nil {
		in, out := &in.AmazonManagedKafkaEventSourceConfig, &out.AmazonManagedKafkaEventSourceConfig
		*out = make([]AmazonManagedKafkaEventSourceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BisectBatchOnFunctionError != nil {
		in, out := &in.BisectBatchOnFunctionError, &out.BisectBatchOnFunctionError
		*out = new(bool)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]DestinationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocumentDBEventSourceConfig != nil {
		in, out := &in.DocumentDBEventSourceConfig, &out.DocumentDBEventSourceConfig
		*out = make([]DocumentDBEventSourceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventSourceArn != nil {
		in, out := &in.EventSourceArn, &out.EventSourceArn
		*out = new(string)
		**out = **in
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = make([]FilterCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionResponseTypes != nil {
		in, out := &in.FunctionResponseTypes, &out.FunctionResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedEventSource != nil {
		in, out := &in.SelfManagedEventSource, &out.SelfManagedEventSource
		*out = make([]SelfManagedEventSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedKafkaEventSourceConfig != nil {
		in, out := &in.SelfManagedKafkaEventSourceConfig, &out.SelfManagedKafkaEventSourceConfig
		*out = make([]SelfManagedKafkaEventSourceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAccessConfiguration != nil {
		in, out := &in.SourceAccessConfiguration, &out.SourceAccessConfiguration
		*out = make([]SourceAccessConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.StartingPositionTimestamp != nil {
		in, out := &in.StartingPositionTimestamp, &out.StartingPositionTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TumblingWindowInSeconds != nil {
		in, out := &in.TumblingWindowInSeconds, &out.TumblingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingInitParameters.
func (in *EventSourceMappingInitParameters) DeepCopy() *EventSourceMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingList) DeepCopyInto(out *EventSourceMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventSourceMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingList.
func (in *EventSourceMappingList) DeepCopy() *EventSourceMappingList {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventSourceMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingObservation) DeepCopyInto(out *EventSourceMappingObservation) {
	*out = *in
	if in.AmazonManagedKafkaEventSourceConfig != nil {
		in, out := &in.AmazonManagedKafkaEventSourceConfig, &out.AmazonManagedKafkaEventSourceConfig
		*out = make([]AmazonManagedKafkaEventSourceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BisectBatchOnFunctionError != nil {
		in, out := &in.BisectBatchOnFunctionError, &out.BisectBatchOnFunctionError
		*out = new(bool)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]DestinationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocumentDBEventSourceConfig != nil {
		in, out := &in.DocumentDBEventSourceConfig, &out.DocumentDBEventSourceConfig
		*out = make([]DocumentDBEventSourceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventSourceArn != nil {
		in, out := &in.EventSourceArn, &out.EventSourceArn
		*out = new(string)
		**out = **in
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = make([]FilterCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionResponseTypes != nil {
		in, out := &in.FunctionResponseTypes, &out.FunctionResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.LastProcessingResult != nil {
		in, out := &in.LastProcessingResult, &out.LastProcessingResult
		*out = new(string)
		**out = **in
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedEventSource != nil {
		in, out := &in.SelfManagedEventSource, &out.SelfManagedEventSource
		*out = make([]SelfManagedEventSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedKafkaEventSourceConfig != nil {
		in, out := &in.SelfManagedKafkaEventSourceConfig, &out.SelfManagedKafkaEventSourceConfig
		*out = make([]SelfManagedKafkaEventSourceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAccessConfiguration != nil {
		in, out := &in.SourceAccessConfiguration, &out.SourceAccessConfiguration
		*out = make([]SourceAccessConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.StartingPositionTimestamp != nil {
		in, out := &in.StartingPositionTimestamp, &out.StartingPositionTimestamp
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StateTransitionReason != nil {
		in, out := &in.StateTransitionReason, &out.StateTransitionReason
		*out = new(string)
		**out = **in
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TumblingWindowInSeconds != nil {
		in, out := &in.TumblingWindowInSeconds, &out.TumblingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingObservation.
func (in *EventSourceMappingObservation) DeepCopy() *EventSourceMappingObservation {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingParameters) DeepCopyInto(out *EventSourceMappingParameters) {
	*out = *in
	if in.AmazonManagedKafkaEventSourceConfig != nil {
		in, out := &in.AmazonManagedKafkaEventSourceConfig, &out.AmazonManagedKafkaEventSourceConfig
		*out = make([]AmazonManagedKafkaEventSourceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(float64)
		**out = **in
	}
	if in.BisectBatchOnFunctionError != nil {
		in, out := &in.BisectBatchOnFunctionError, &out.BisectBatchOnFunctionError
		*out = new(bool)
		**out = **in
	}
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]DestinationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocumentDBEventSourceConfig != nil {
		in, out := &in.DocumentDBEventSourceConfig, &out.DocumentDBEventSourceConfig
		*out = make([]DocumentDBEventSourceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EventSourceArn != nil {
		in, out := &in.EventSourceArn, &out.EventSourceArn
		*out = new(string)
		**out = **in
	}
	if in.FilterCriteria != nil {
		in, out := &in.FilterCriteria, &out.FilterCriteria
		*out = make([]FilterCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionResponseTypes != nil {
		in, out := &in.FunctionResponseTypes, &out.FunctionResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaximumBatchingWindowInSeconds != nil {
		in, out := &in.MaximumBatchingWindowInSeconds, &out.MaximumBatchingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRecordAgeInSeconds != nil {
		in, out := &in.MaximumRecordAgeInSeconds, &out.MaximumRecordAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.ParallelizationFactor != nil {
		in, out := &in.ParallelizationFactor, &out.ParallelizationFactor
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ScalingConfig != nil {
		in, out := &in.ScalingConfig, &out.ScalingConfig
		*out = make([]ScalingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedEventSource != nil {
		in, out := &in.SelfManagedEventSource, &out.SelfManagedEventSource
		*out = make([]SelfManagedEventSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfManagedKafkaEventSourceConfig != nil {
		in, out := &in.SelfManagedKafkaEventSourceConfig, &out.SelfManagedKafkaEventSourceConfig
		*out = make([]SelfManagedKafkaEventSourceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAccessConfiguration != nil {
		in, out := &in.SourceAccessConfiguration, &out.SourceAccessConfiguration
		*out = make([]SourceAccessConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartingPosition != nil {
		in, out := &in.StartingPosition, &out.StartingPosition
		*out = new(string)
		**out = **in
	}
	if in.StartingPositionTimestamp != nil {
		in, out := &in.StartingPositionTimestamp, &out.StartingPositionTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Topics != nil {
		in, out := &in.Topics, &out.Topics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TumblingWindowInSeconds != nil {
		in, out := &in.TumblingWindowInSeconds, &out.TumblingWindowInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingParameters.
func (in *EventSourceMappingParameters) DeepCopy() *EventSourceMappingParameters {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingSpec) DeepCopyInto(out *EventSourceMappingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingSpec.
func (in *EventSourceMappingSpec) DeepCopy() *EventSourceMappingSpec {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSourceMappingStatus) DeepCopyInto(out *EventSourceMappingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSourceMappingStatus.
func (in *EventSourceMappingStatus) DeepCopy() *EventSourceMappingStatus {
	if in == nil {
		return nil
	}
	out := new(EventSourceMappingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemConfigInitParameters) DeepCopyInto(out *FileSystemConfigInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalMountPath != nil {
		in, out := &in.LocalMountPath, &out.LocalMountPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemConfigInitParameters.
func (in *FileSystemConfigInitParameters) DeepCopy() *FileSystemConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemConfigObservation) DeepCopyInto(out *FileSystemConfigObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.LocalMountPath != nil {
		in, out := &in.LocalMountPath, &out.LocalMountPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemConfigObservation.
func (in *FileSystemConfigObservation) DeepCopy() *FileSystemConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FileSystemConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSystemConfigParameters) DeepCopyInto(out *FileSystemConfigParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnRef != nil {
		in, out := &in.ArnRef, &out.ArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ArnSelector != nil {
		in, out := &in.ArnSelector, &out.ArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalMountPath != nil {
		in, out := &in.LocalMountPath, &out.LocalMountPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSystemConfigParameters.
func (in *FileSystemConfigParameters) DeepCopy() *FileSystemConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FileSystemConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteriaInitParameters) DeepCopyInto(out *FilterCriteriaInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteriaInitParameters.
func (in *FilterCriteriaInitParameters) DeepCopy() *FilterCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteriaObservation) DeepCopyInto(out *FilterCriteriaObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteriaObservation.
func (in *FilterCriteriaObservation) DeepCopy() *FilterCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(FilterCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterCriteriaParameters) DeepCopyInto(out *FilterCriteriaParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterCriteriaParameters.
func (in *FilterCriteriaParameters) DeepCopy() *FilterCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(FilterCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Function) DeepCopyInto(out *Function) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Function.
func (in *Function) DeepCopy() *Function {
	if in == nil {
		return nil
	}
	out := new(Function)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Function) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfig) DeepCopyInto(out *FunctionEventInvokeConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfig.
func (in *FunctionEventInvokeConfig) DeepCopy() *FunctionEventInvokeConfig {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionEventInvokeConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigDestinationConfigInitParameters) DeepCopyInto(out *FunctionEventInvokeConfigDestinationConfigInitParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]DestinationConfigOnFailureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigDestinationConfigInitParameters.
func (in *FunctionEventInvokeConfigDestinationConfigInitParameters) DeepCopy() *FunctionEventInvokeConfigDestinationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigDestinationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigDestinationConfigObservation) DeepCopyInto(out *FunctionEventInvokeConfigDestinationConfigObservation) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]DestinationConfigOnFailureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigDestinationConfigObservation.
func (in *FunctionEventInvokeConfigDestinationConfigObservation) DeepCopy() *FunctionEventInvokeConfigDestinationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigDestinationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigDestinationConfigParameters) DeepCopyInto(out *FunctionEventInvokeConfigDestinationConfigParameters) {
	*out = *in
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]DestinationConfigOnFailureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnSuccess != nil {
		in, out := &in.OnSuccess, &out.OnSuccess
		*out = make([]OnSuccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigDestinationConfigParameters.
func (in *FunctionEventInvokeConfigDestinationConfigParameters) DeepCopy() *FunctionEventInvokeConfigDestinationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigDestinationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigInitParameters) DeepCopyInto(out *FunctionEventInvokeConfigInitParameters) {
	*out = *in
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]FunctionEventInvokeConfigDestinationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigInitParameters.
func (in *FunctionEventInvokeConfigInitParameters) DeepCopy() *FunctionEventInvokeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigList) DeepCopyInto(out *FunctionEventInvokeConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionEventInvokeConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigList.
func (in *FunctionEventInvokeConfigList) DeepCopy() *FunctionEventInvokeConfigList {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionEventInvokeConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigObservation) DeepCopyInto(out *FunctionEventInvokeConfigObservation) {
	*out = *in
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]FunctionEventInvokeConfigDestinationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigObservation.
func (in *FunctionEventInvokeConfigObservation) DeepCopy() *FunctionEventInvokeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigParameters) DeepCopyInto(out *FunctionEventInvokeConfigParameters) {
	*out = *in
	if in.DestinationConfig != nil {
		in, out := &in.DestinationConfig, &out.DestinationConfig
		*out = make([]FunctionEventInvokeConfigDestinationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.MaximumEventAgeInSeconds != nil {
		in, out := &in.MaximumEventAgeInSeconds, &out.MaximumEventAgeInSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaximumRetryAttempts != nil {
		in, out := &in.MaximumRetryAttempts, &out.MaximumRetryAttempts
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigParameters.
func (in *FunctionEventInvokeConfigParameters) DeepCopy() *FunctionEventInvokeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigSpec) DeepCopyInto(out *FunctionEventInvokeConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigSpec.
func (in *FunctionEventInvokeConfigSpec) DeepCopy() *FunctionEventInvokeConfigSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionEventInvokeConfigStatus) DeepCopyInto(out *FunctionEventInvokeConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionEventInvokeConfigStatus.
func (in *FunctionEventInvokeConfigStatus) DeepCopy() *FunctionEventInvokeConfigStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionEventInvokeConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionInitParameters) DeepCopyInto(out *FunctionInitParameters) {
	*out = *in
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CodeSigningConfigArn != nil {
		in, out := &in.CodeSigningConfigArn, &out.CodeSigningConfigArn
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemConfig != nil {
		in, out := &in.FileSystemConfig, &out.FileSystemConfig
		*out = make([]FileSystemConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Handler != nil {
		in, out := &in.Handler, &out.Handler
		*out = new(string)
		**out = **in
	}
	if in.ImageConfig != nil {
		in, out := &in.ImageConfig, &out.ImageConfig
		*out = make([]ImageConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArnRef != nil {
		in, out := &in.KMSKeyArnRef, &out.KMSKeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArnSelector != nil {
		in, out := &in.KMSKeyArnSelector, &out.KMSKeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Layers != nil {
		in, out := &in.Layers, &out.Layers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemorySize != nil {
		in, out := &in.MemorySize, &out.MemorySize
		*out = new(float64)
		**out = **in
	}
	if in.PackageType != nil {
		in, out := &in.PackageType, &out.PackageType
		*out = new(string)
		**out = **in
	}
	if in.Publish != nil {
		in, out := &in.Publish, &out.Publish
		*out = new(bool)
		**out = **in
	}
	if in.ReplaceSecurityGroupsOnDestroy != nil {
		in, out := &in.ReplaceSecurityGroupsOnDestroy, &out.ReplaceSecurityGroupsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ReplacementSecurityGroupIDRefs != nil {
		in, out := &in.ReplacementSecurityGroupIDRefs, &out.ReplacementSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacementSecurityGroupIDSelector != nil {
		in, out := &in.ReplacementSecurityGroupIDSelector, &out.ReplacementSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplacementSecurityGroupIds != nil {
		in, out := &in.ReplacementSecurityGroupIds, &out.ReplacementSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReservedConcurrentExecutions != nil {
		in, out := &in.ReservedConcurrentExecutions, &out.ReservedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RoleRef != nil {
		in, out := &in.RoleRef, &out.RoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleSelector != nil {
		in, out := &in.RoleSelector, &out.RoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3BucketRef != nil {
		in, out := &in.S3BucketRef, &out.S3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSelector != nil {
		in, out := &in.S3BucketSelector, &out.S3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SnapStart != nil {
		in, out := &in.SnapStart, &out.SnapStart
		*out = make([]SnapStartInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.TracingConfig != nil {
		in, out := &in.TracingConfig, &out.TracingConfig
		*out = make([]TracingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionInitParameters.
func (in *FunctionInitParameters) DeepCopy() *FunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionList) DeepCopyInto(out *FunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Function, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionList.
func (in *FunctionList) DeepCopy() *FunctionList {
	if in == nil {
		return nil
	}
	out := new(FunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionObservation) DeepCopyInto(out *FunctionObservation) {
	*out = *in
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CodeSigningConfigArn != nil {
		in, out := &in.CodeSigningConfigArn, &out.CodeSigningConfigArn
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemConfig != nil {
		in, out := &in.FileSystemConfig, &out.FileSystemConfig
		*out = make([]FileSystemConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Handler != nil {
		in, out := &in.Handler, &out.Handler
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageConfig != nil {
		in, out := &in.ImageConfig, &out.ImageConfig
		*out = make([]ImageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.InvokeArn != nil {
		in, out := &in.InvokeArn, &out.InvokeArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Layers != nil {
		in, out := &in.Layers, &out.Layers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemorySize != nil {
		in, out := &in.MemorySize, &out.MemorySize
		*out = new(float64)
		**out = **in
	}
	if in.PackageType != nil {
		in, out := &in.PackageType, &out.PackageType
		*out = new(string)
		**out = **in
	}
	if in.Publish != nil {
		in, out := &in.Publish, &out.Publish
		*out = new(bool)
		**out = **in
	}
	if in.QualifiedArn != nil {
		in, out := &in.QualifiedArn, &out.QualifiedArn
		*out = new(string)
		**out = **in
	}
	if in.QualifiedInvokeArn != nil {
		in, out := &in.QualifiedInvokeArn, &out.QualifiedInvokeArn
		*out = new(string)
		**out = **in
	}
	if in.ReplaceSecurityGroupsOnDestroy != nil {
		in, out := &in.ReplaceSecurityGroupsOnDestroy, &out.ReplaceSecurityGroupsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ReplacementSecurityGroupIds != nil {
		in, out := &in.ReplacementSecurityGroupIds, &out.ReplacementSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReservedConcurrentExecutions != nil {
		in, out := &in.ReservedConcurrentExecutions, &out.ReservedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SigningJobArn != nil {
		in, out := &in.SigningJobArn, &out.SigningJobArn
		*out = new(string)
		**out = **in
	}
	if in.SigningProfileVersionArn != nil {
		in, out := &in.SigningProfileVersionArn, &out.SigningProfileVersionArn
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SnapStart != nil {
		in, out := &in.SnapStart, &out.SnapStart
		*out = make([]SnapStartObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
	if in.SourceCodeSize != nil {
		in, out := &in.SourceCodeSize, &out.SourceCodeSize
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.TracingConfig != nil {
		in, out := &in.TracingConfig, &out.TracingConfig
		*out = make([]TracingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionObservation.
func (in *FunctionObservation) DeepCopy() *FunctionObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionParameters) DeepCopyInto(out *FunctionParameters) {
	*out = *in
	if in.Architectures != nil {
		in, out := &in.Architectures, &out.Architectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CodeSigningConfigArn != nil {
		in, out := &in.CodeSigningConfigArn, &out.CodeSigningConfigArn
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterConfig != nil {
		in, out := &in.DeadLetterConfig, &out.DeadLetterConfig
		*out = make([]DeadLetterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralStorage != nil {
		in, out := &in.EphemeralStorage, &out.EphemeralStorage
		*out = make([]EphemeralStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FileSystemConfig != nil {
		in, out := &in.FileSystemConfig, &out.FileSystemConfig
		*out = make([]FileSystemConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Handler != nil {
		in, out := &in.Handler, &out.Handler
		*out = new(string)
		**out = **in
	}
	if in.ImageConfig != nil {
		in, out := &in.ImageConfig, &out.ImageConfig
		*out = make([]ImageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageURI != nil {
		in, out := &in.ImageURI, &out.ImageURI
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArnRef != nil {
		in, out := &in.KMSKeyArnRef, &out.KMSKeyArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArnSelector != nil {
		in, out := &in.KMSKeyArnSelector, &out.KMSKeyArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Layers != nil {
		in, out := &in.Layers, &out.Layers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = make([]LoggingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemorySize != nil {
		in, out := &in.MemorySize, &out.MemorySize
		*out = new(float64)
		**out = **in
	}
	if in.PackageType != nil {
		in, out := &in.PackageType, &out.PackageType
		*out = new(string)
		**out = **in
	}
	if in.Publish != nil {
		in, out := &in.Publish, &out.Publish
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReplaceSecurityGroupsOnDestroy != nil {
		in, out := &in.ReplaceSecurityGroupsOnDestroy, &out.ReplaceSecurityGroupsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.ReplacementSecurityGroupIDRefs != nil {
		in, out := &in.ReplacementSecurityGroupIDRefs, &out.ReplacementSecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacementSecurityGroupIDSelector != nil {
		in, out := &in.ReplacementSecurityGroupIDSelector, &out.ReplacementSecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ReplacementSecurityGroupIds != nil {
		in, out := &in.ReplacementSecurityGroupIds, &out.ReplacementSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReservedConcurrentExecutions != nil {
		in, out := &in.ReservedConcurrentExecutions, &out.ReservedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RoleRef != nil {
		in, out := &in.RoleRef, &out.RoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleSelector != nil {
		in, out := &in.RoleSelector, &out.RoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3BucketRef != nil {
		in, out := &in.S3BucketRef, &out.S3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSelector != nil {
		in, out := &in.S3BucketSelector, &out.S3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SnapStart != nil {
		in, out := &in.SnapStart, &out.SnapStart
		*out = make([]SnapStartParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.TracingConfig != nil {
		in, out := &in.TracingConfig, &out.TracingConfig
		*out = make([]TracingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VPCConfig != nil {
		in, out := &in.VPCConfig, &out.VPCConfig
		*out = make([]VPCConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionParameters.
func (in *FunctionParameters) DeepCopy() *FunctionParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionSpec) DeepCopyInto(out *FunctionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionSpec.
func (in *FunctionSpec) DeepCopy() *FunctionSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionStatus) DeepCopyInto(out *FunctionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionStatus.
func (in *FunctionStatus) DeepCopy() *FunctionStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURL) DeepCopyInto(out *FunctionURL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURL.
func (in *FunctionURL) DeepCopy() *FunctionURL {
	if in == nil {
		return nil
	}
	out := new(FunctionURL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionURL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLInitParameters) DeepCopyInto(out *FunctionURLInitParameters) {
	*out = *in
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InvokeMode != nil {
		in, out := &in.InvokeMode, &out.InvokeMode
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLInitParameters.
func (in *FunctionURLInitParameters) DeepCopy() *FunctionURLInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionURLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLList) DeepCopyInto(out *FunctionURLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FunctionURL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLList.
func (in *FunctionURLList) DeepCopy() *FunctionURLList {
	if in == nil {
		return nil
	}
	out := new(FunctionURLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FunctionURLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLObservation) DeepCopyInto(out *FunctionURLObservation) {
	*out = *in
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionArn != nil {
		in, out := &in.FunctionArn, &out.FunctionArn
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionURL != nil {
		in, out := &in.FunctionURL, &out.FunctionURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InvokeMode != nil {
		in, out := &in.InvokeMode, &out.InvokeMode
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.URLID != nil {
		in, out := &in.URLID, &out.URLID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLObservation.
func (in *FunctionURLObservation) DeepCopy() *FunctionURLObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionURLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLParameters) DeepCopyInto(out *FunctionURLParameters) {
	*out = *in
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = make([]CorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InvokeMode != nil {
		in, out := &in.InvokeMode, &out.InvokeMode
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLParameters.
func (in *FunctionURLParameters) DeepCopy() *FunctionURLParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionURLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLSpec) DeepCopyInto(out *FunctionURLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLSpec.
func (in *FunctionURLSpec) DeepCopy() *FunctionURLSpec {
	if in == nil {
		return nil
	}
	out := new(FunctionURLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionURLStatus) DeepCopyInto(out *FunctionURLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionURLStatus.
func (in *FunctionURLStatus) DeepCopy() *FunctionURLStatus {
	if in == nil {
		return nil
	}
	out := new(FunctionURLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageConfigInitParameters) DeepCopyInto(out *ImageConfigInitParameters) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkingDirectory != nil {
		in, out := &in.WorkingDirectory, &out.WorkingDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageConfigInitParameters.
func (in *ImageConfigInitParameters) DeepCopy() *ImageConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageConfigObservation) DeepCopyInto(out *ImageConfigObservation) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkingDirectory != nil {
		in, out := &in.WorkingDirectory, &out.WorkingDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageConfigObservation.
func (in *ImageConfigObservation) DeepCopy() *ImageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ImageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageConfigParameters) DeepCopyInto(out *ImageConfigParameters) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkingDirectory != nil {
		in, out := &in.WorkingDirectory, &out.WorkingDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageConfigParameters.
func (in *ImageConfigParameters) DeepCopy() *ImageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ImageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Invocation) DeepCopyInto(out *Invocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Invocation.
func (in *Invocation) DeepCopy() *Invocation {
	if in == nil {
		return nil
	}
	out := new(Invocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Invocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationInitParameters) DeepCopyInto(out *InvocationInitParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.LifecycleScope != nil {
		in, out := &in.LifecycleScope, &out.LifecycleScope
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.TerraformKey != nil {
		in, out := &in.TerraformKey, &out.TerraformKey
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationInitParameters.
func (in *InvocationInitParameters) DeepCopy() *InvocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InvocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationList) DeepCopyInto(out *InvocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Invocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationList.
func (in *InvocationList) DeepCopy() *InvocationList {
	if in == nil {
		return nil
	}
	out := new(InvocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InvocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationObservation) DeepCopyInto(out *InvocationObservation) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.LifecycleScope != nil {
		in, out := &in.LifecycleScope, &out.LifecycleScope
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Result != nil {
		in, out := &in.Result, &out.Result
		*out = new(string)
		**out = **in
	}
	if in.TerraformKey != nil {
		in, out := &in.TerraformKey, &out.TerraformKey
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationObservation.
func (in *InvocationObservation) DeepCopy() *InvocationObservation {
	if in == nil {
		return nil
	}
	out := new(InvocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationParameters) DeepCopyInto(out *InvocationParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.LifecycleScope != nil {
		in, out := &in.LifecycleScope, &out.LifecycleScope
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TerraformKey != nil {
		in, out := &in.TerraformKey, &out.TerraformKey
		*out = new(string)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationParameters.
func (in *InvocationParameters) DeepCopy() *InvocationParameters {
	if in == nil {
		return nil
	}
	out := new(InvocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationSpec) DeepCopyInto(out *InvocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationSpec.
func (in *InvocationSpec) DeepCopy() *InvocationSpec {
	if in == nil {
		return nil
	}
	out := new(InvocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InvocationStatus) DeepCopyInto(out *InvocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InvocationStatus.
func (in *InvocationStatus) DeepCopy() *InvocationStatus {
	if in == nil {
		return nil
	}
	out := new(InvocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersion) DeepCopyInto(out *LayerVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersion.
func (in *LayerVersion) DeepCopy() *LayerVersion {
	if in == nil {
		return nil
	}
	out := new(LayerVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LayerVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionInitParameters) DeepCopyInto(out *LayerVersionInitParameters) {
	*out = *in
	if in.CompatibleArchitectures != nil {
		in, out := &in.CompatibleArchitectures, &out.CompatibleArchitectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompatibleRuntimes != nil {
		in, out := &in.CompatibleRuntimes, &out.CompatibleRuntimes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.LicenseInfo != nil {
		in, out := &in.LicenseInfo, &out.LicenseInfo
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionInitParameters.
func (in *LayerVersionInitParameters) DeepCopy() *LayerVersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LayerVersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionList) DeepCopyInto(out *LayerVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LayerVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionList.
func (in *LayerVersionList) DeepCopy() *LayerVersionList {
	if in == nil {
		return nil
	}
	out := new(LayerVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LayerVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionObservation) DeepCopyInto(out *LayerVersionObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CompatibleArchitectures != nil {
		in, out := &in.CompatibleArchitectures, &out.CompatibleArchitectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompatibleRuntimes != nil {
		in, out := &in.CompatibleRuntimes, &out.CompatibleRuntimes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LayerArn != nil {
		in, out := &in.LayerArn, &out.LayerArn
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.LicenseInfo != nil {
		in, out := &in.LicenseInfo, &out.LicenseInfo
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SigningJobArn != nil {
		in, out := &in.SigningJobArn, &out.SigningJobArn
		*out = new(string)
		**out = **in
	}
	if in.SigningProfileVersionArn != nil {
		in, out := &in.SigningProfileVersionArn, &out.SigningProfileVersionArn
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
	if in.SourceCodeSize != nil {
		in, out := &in.SourceCodeSize, &out.SourceCodeSize
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionObservation.
func (in *LayerVersionObservation) DeepCopy() *LayerVersionObservation {
	if in == nil {
		return nil
	}
	out := new(LayerVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionParameters) DeepCopyInto(out *LayerVersionParameters) {
	*out = *in
	if in.CompatibleArchitectures != nil {
		in, out := &in.CompatibleArchitectures, &out.CompatibleArchitectures
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompatibleRuntimes != nil {
		in, out := &in.CompatibleRuntimes, &out.CompatibleRuntimes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.LicenseInfo != nil {
		in, out := &in.LicenseInfo, &out.LicenseInfo
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3Bucket != nil {
		in, out := &in.S3Bucket, &out.S3Bucket
		*out = new(string)
		**out = **in
	}
	if in.S3Key != nil {
		in, out := &in.S3Key, &out.S3Key
		*out = new(string)
		**out = **in
	}
	if in.S3ObjectVersion != nil {
		in, out := &in.S3ObjectVersion, &out.S3ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.SourceCodeHash != nil {
		in, out := &in.SourceCodeHash, &out.SourceCodeHash
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionParameters.
func (in *LayerVersionParameters) DeepCopy() *LayerVersionParameters {
	if in == nil {
		return nil
	}
	out := new(LayerVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermission) DeepCopyInto(out *LayerVersionPermission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermission.
func (in *LayerVersionPermission) DeepCopy() *LayerVersionPermission {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LayerVersionPermission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionInitParameters) DeepCopyInto(out *LayerVersionPermissionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionInitParameters.
func (in *LayerVersionPermissionInitParameters) DeepCopy() *LayerVersionPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionList) DeepCopyInto(out *LayerVersionPermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LayerVersionPermission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionList.
func (in *LayerVersionPermissionList) DeepCopy() *LayerVersionPermissionList {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LayerVersionPermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionObservation) DeepCopyInto(out *LayerVersionPermissionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.RevisionID != nil {
		in, out := &in.RevisionID, &out.RevisionID
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionObservation.
func (in *LayerVersionPermissionObservation) DeepCopy() *LayerVersionPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionParameters) DeepCopyInto(out *LayerVersionPermissionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.LayerName != nil {
		in, out := &in.LayerName, &out.LayerName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationID != nil {
		in, out := &in.OrganizationID, &out.OrganizationID
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.VersionNumber != nil {
		in, out := &in.VersionNumber, &out.VersionNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionParameters.
func (in *LayerVersionPermissionParameters) DeepCopy() *LayerVersionPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionSpec) DeepCopyInto(out *LayerVersionPermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionSpec.
func (in *LayerVersionPermissionSpec) DeepCopy() *LayerVersionPermissionSpec {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionPermissionStatus) DeepCopyInto(out *LayerVersionPermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionPermissionStatus.
func (in *LayerVersionPermissionStatus) DeepCopy() *LayerVersionPermissionStatus {
	if in == nil {
		return nil
	}
	out := new(LayerVersionPermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionSpec) DeepCopyInto(out *LayerVersionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionSpec.
func (in *LayerVersionSpec) DeepCopy() *LayerVersionSpec {
	if in == nil {
		return nil
	}
	out := new(LayerVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LayerVersionStatus) DeepCopyInto(out *LayerVersionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LayerVersionStatus.
func (in *LayerVersionStatus) DeepCopy() *LayerVersionStatus {
	if in == nil {
		return nil
	}
	out := new(LayerVersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigInitParameters) DeepCopyInto(out *LoggingConfigInitParameters) {
	*out = *in
	if in.ApplicationLogLevel != nil {
		in, out := &in.ApplicationLogLevel, &out.ApplicationLogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.SystemLogLevel != nil {
		in, out := &in.SystemLogLevel, &out.SystemLogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigInitParameters.
func (in *LoggingConfigInitParameters) DeepCopy() *LoggingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigObservation) DeepCopyInto(out *LoggingConfigObservation) {
	*out = *in
	if in.ApplicationLogLevel != nil {
		in, out := &in.ApplicationLogLevel, &out.ApplicationLogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.SystemLogLevel != nil {
		in, out := &in.SystemLogLevel, &out.SystemLogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigObservation.
func (in *LoggingConfigObservation) DeepCopy() *LoggingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfigParameters) DeepCopyInto(out *LoggingConfigParameters) {
	*out = *in
	if in.ApplicationLogLevel != nil {
		in, out := &in.ApplicationLogLevel, &out.ApplicationLogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.LogGroup != nil {
		in, out := &in.LogGroup, &out.LogGroup
		*out = new(string)
		**out = **in
	}
	if in.SystemLogLevel != nil {
		in, out := &in.SystemLogLevel, &out.SystemLogLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfigParameters.
func (in *LoggingConfigParameters) DeepCopy() *LoggingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureInitParameters) DeepCopyInto(out *OnFailureInitParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureInitParameters.
func (in *OnFailureInitParameters) DeepCopy() *OnFailureInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureObservation) DeepCopyInto(out *OnFailureObservation) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureObservation.
func (in *OnFailureObservation) DeepCopy() *OnFailureObservation {
	if in == nil {
		return nil
	}
	out := new(OnFailureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnFailureParameters) DeepCopyInto(out *OnFailureParameters) {
	*out = *in
	if in.DestinationArn != nil {
		in, out := &in.DestinationArn, &out.DestinationArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnFailureParameters.
func (in *OnFailureParameters) DeepCopy() *OnFailureParameters {
	if in == nil {
		return nil
	}
	out := new(OnFailureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessInitParameters) DeepCopyInto(out *OnSuccessInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessInitParameters.
func (in *OnSuccessInitParameters) DeepCopy() *OnSuccessInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessObservation) DeepCopyInto(out *OnSuccessObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessObservation.
func (in *OnSuccessObservation) DeepCopy() *OnSuccessObservation {
	if in == nil {
		return nil
	}
	out := new(OnSuccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnSuccessParameters) DeepCopyInto(out *OnSuccessParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationRef != nil {
		in, out := &in.DestinationRef, &out.DestinationRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DestinationSelector != nil {
		in, out := &in.DestinationSelector, &out.DestinationSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnSuccessParameters.
func (in *OnSuccessParameters) DeepCopy() *OnSuccessParameters {
	if in == nil {
		return nil
	}
	out := new(OnSuccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionInitParameters) DeepCopyInto(out *PermissionInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.EventSourceToken != nil {
		in, out := &in.EventSourceToken, &out.EventSourceToken
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionURLAuthType != nil {
		in, out := &in.FunctionURLAuthType, &out.FunctionURLAuthType
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalOrgID != nil {
		in, out := &in.PrincipalOrgID, &out.PrincipalOrgID
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.QualifierRef != nil {
		in, out := &in.QualifierRef, &out.QualifierRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QualifierSelector != nil {
		in, out := &in.QualifierSelector, &out.QualifierSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAccount != nil {
		in, out := &in.SourceAccount, &out.SourceAccount
		*out = new(string)
		**out = **in
	}
	if in.SourceArn != nil {
		in, out := &in.SourceArn, &out.SourceArn
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.StatementIDPrefix != nil {
		in, out := &in.StatementIDPrefix, &out.StatementIDPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionInitParameters.
func (in *PermissionInitParameters) DeepCopy() *PermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionList) DeepCopyInto(out *PermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionList.
func (in *PermissionList) DeepCopy() *PermissionList {
	if in == nil {
		return nil
	}
	out := new(PermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionObservation) DeepCopyInto(out *PermissionObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.EventSourceToken != nil {
		in, out := &in.EventSourceToken, &out.EventSourceToken
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionURLAuthType != nil {
		in, out := &in.FunctionURLAuthType, &out.FunctionURLAuthType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalOrgID != nil {
		in, out := &in.PrincipalOrgID, &out.PrincipalOrgID
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.SourceAccount != nil {
		in, out := &in.SourceAccount, &out.SourceAccount
		*out = new(string)
		**out = **in
	}
	if in.SourceArn != nil {
		in, out := &in.SourceArn, &out.SourceArn
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.StatementIDPrefix != nil {
		in, out := &in.StatementIDPrefix, &out.StatementIDPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionObservation.
func (in *PermissionObservation) DeepCopy() *PermissionObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionParameters) DeepCopyInto(out *PermissionParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.EventSourceToken != nil {
		in, out := &in.EventSourceToken, &out.EventSourceToken
		*out = new(string)
		**out = **in
	}
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.FunctionNameRef != nil {
		in, out := &in.FunctionNameRef, &out.FunctionNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionNameSelector != nil {
		in, out := &in.FunctionNameSelector, &out.FunctionNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FunctionURLAuthType != nil {
		in, out := &in.FunctionURLAuthType, &out.FunctionURLAuthType
		*out = new(string)
		**out = **in
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.PrincipalOrgID != nil {
		in, out := &in.PrincipalOrgID, &out.PrincipalOrgID
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.QualifierRef != nil {
		in, out := &in.QualifierRef, &out.QualifierRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.QualifierSelector != nil {
		in, out := &in.QualifierSelector, &out.QualifierSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SourceAccount != nil {
		in, out := &in.SourceAccount, &out.SourceAccount
		*out = new(string)
		**out = **in
	}
	if in.SourceArn != nil {
		in, out := &in.SourceArn, &out.SourceArn
		*out = new(string)
		**out = **in
	}
	if in.StatementID != nil {
		in, out := &in.StatementID, &out.StatementID
		*out = new(string)
		**out = **in
	}
	if in.StatementIDPrefix != nil {
		in, out := &in.StatementIDPrefix, &out.StatementIDPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionParameters.
func (in *PermissionParameters) DeepCopy() *PermissionParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionSpec) DeepCopyInto(out *PermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionSpec.
func (in *PermissionSpec) DeepCopy() *PermissionSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionStatus) DeepCopyInto(out *PermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionStatus.
func (in *PermissionStatus) DeepCopy() *PermissionStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesInitParameters) DeepCopyInto(out *PoliciesInitParameters) {
	*out = *in
	if in.UntrustedArtifactOnDeployment != nil {
		in, out := &in.UntrustedArtifactOnDeployment, &out.UntrustedArtifactOnDeployment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesInitParameters.
func (in *PoliciesInitParameters) DeepCopy() *PoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesObservation) DeepCopyInto(out *PoliciesObservation) {
	*out = *in
	if in.UntrustedArtifactOnDeployment != nil {
		in, out := &in.UntrustedArtifactOnDeployment, &out.UntrustedArtifactOnDeployment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesObservation.
func (in *PoliciesObservation) DeepCopy() *PoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(PoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesParameters) DeepCopyInto(out *PoliciesParameters) {
	*out = *in
	if in.UntrustedArtifactOnDeployment != nil {
		in, out := &in.UntrustedArtifactOnDeployment, &out.UntrustedArtifactOnDeployment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesParameters.
func (in *PoliciesParameters) DeepCopy() *PoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfig) DeepCopyInto(out *ProvisionedConcurrencyConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfig.
func (in *ProvisionedConcurrencyConfig) DeepCopy() *ProvisionedConcurrencyConfig {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisionedConcurrencyConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigInitParameters) DeepCopyInto(out *ProvisionedConcurrencyConfigInitParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedConcurrentExecutions != nil {
		in, out := &in.ProvisionedConcurrentExecutions, &out.ProvisionedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigInitParameters.
func (in *ProvisionedConcurrencyConfigInitParameters) DeepCopy() *ProvisionedConcurrencyConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigList) DeepCopyInto(out *ProvisionedConcurrencyConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProvisionedConcurrencyConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigList.
func (in *ProvisionedConcurrencyConfigList) DeepCopy() *ProvisionedConcurrencyConfigList {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisionedConcurrencyConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigObservation) DeepCopyInto(out *ProvisionedConcurrencyConfigObservation) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedConcurrentExecutions != nil {
		in, out := &in.ProvisionedConcurrentExecutions, &out.ProvisionedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigObservation.
func (in *ProvisionedConcurrencyConfigObservation) DeepCopy() *ProvisionedConcurrencyConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigParameters) DeepCopyInto(out *ProvisionedConcurrencyConfigParameters) {
	*out = *in
	if in.FunctionName != nil {
		in, out := &in.FunctionName, &out.FunctionName
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedConcurrentExecutions != nil {
		in, out := &in.ProvisionedConcurrentExecutions, &out.ProvisionedConcurrentExecutions
		*out = new(float64)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SkipDestroy != nil {
		in, out := &in.SkipDestroy, &out.SkipDestroy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigParameters.
func (in *ProvisionedConcurrencyConfigParameters) DeepCopy() *ProvisionedConcurrencyConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigSpec) DeepCopyInto(out *ProvisionedConcurrencyConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigSpec.
func (in *ProvisionedConcurrencyConfigSpec) DeepCopy() *ProvisionedConcurrencyConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisionedConcurrencyConfigStatus) DeepCopyInto(out *ProvisionedConcurrencyConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisionedConcurrencyConfigStatus.
func (in *ProvisionedConcurrencyConfigStatus) DeepCopy() *ProvisionedConcurrencyConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ProvisionedConcurrencyConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingConfigInitParameters) DeepCopyInto(out *RoutingConfigInitParameters) {
	*out = *in
	if in.AdditionalVersionWeights != nil {
		in, out := &in.AdditionalVersionWeights, &out.AdditionalVersionWeights
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingConfigInitParameters.
func (in *RoutingConfigInitParameters) DeepCopy() *RoutingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingConfigObservation) DeepCopyInto(out *RoutingConfigObservation) {
	*out = *in
	if in.AdditionalVersionWeights != nil {
		in, out := &in.AdditionalVersionWeights, &out.AdditionalVersionWeights
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingConfigObservation.
func (in *RoutingConfigObservation) DeepCopy() *RoutingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingConfigParameters) DeepCopyInto(out *RoutingConfigParameters) {
	*out = *in
	if in.AdditionalVersionWeights != nil {
		in, out := &in.AdditionalVersionWeights, &out.AdditionalVersionWeights
		*out = make(map[string]*float64, len(*in))
		for key, val := range *in {
			var outVal *float64
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(float64)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingConfigParameters.
func (in *RoutingConfigParameters) DeepCopy() *RoutingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigInitParameters) DeepCopyInto(out *ScalingConfigInitParameters) {
	*out = *in
	if in.MaximumConcurrency != nil {
		in, out := &in.MaximumConcurrency, &out.MaximumConcurrency
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigInitParameters.
func (in *ScalingConfigInitParameters) DeepCopy() *ScalingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigObservation) DeepCopyInto(out *ScalingConfigObservation) {
	*out = *in
	if in.MaximumConcurrency != nil {
		in, out := &in.MaximumConcurrency, &out.MaximumConcurrency
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigObservation.
func (in *ScalingConfigObservation) DeepCopy() *ScalingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScalingConfigParameters) DeepCopyInto(out *ScalingConfigParameters) {
	*out = *in
	if in.MaximumConcurrency != nil {
		in, out := &in.MaximumConcurrency, &out.MaximumConcurrency
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScalingConfigParameters.
func (in *ScalingConfigParameters) DeepCopy() *ScalingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScalingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedEventSourceInitParameters) DeepCopyInto(out *SelfManagedEventSourceInitParameters) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedEventSourceInitParameters.
func (in *SelfManagedEventSourceInitParameters) DeepCopy() *SelfManagedEventSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SelfManagedEventSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedEventSourceObservation) DeepCopyInto(out *SelfManagedEventSourceObservation) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedEventSourceObservation.
func (in *SelfManagedEventSourceObservation) DeepCopy() *SelfManagedEventSourceObservation {
	if in == nil {
		return nil
	}
	out := new(SelfManagedEventSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedEventSourceParameters) DeepCopyInto(out *SelfManagedEventSourceParameters) {
	*out = *in
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedEventSourceParameters.
func (in *SelfManagedEventSourceParameters) DeepCopy() *SelfManagedEventSourceParameters {
	if in == nil {
		return nil
	}
	out := new(SelfManagedEventSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedKafkaEventSourceConfigInitParameters) DeepCopyInto(out *SelfManagedKafkaEventSourceConfigInitParameters) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedKafkaEventSourceConfigInitParameters.
func (in *SelfManagedKafkaEventSourceConfigInitParameters) DeepCopy() *SelfManagedKafkaEventSourceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SelfManagedKafkaEventSourceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedKafkaEventSourceConfigObservation) DeepCopyInto(out *SelfManagedKafkaEventSourceConfigObservation) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedKafkaEventSourceConfigObservation.
func (in *SelfManagedKafkaEventSourceConfigObservation) DeepCopy() *SelfManagedKafkaEventSourceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SelfManagedKafkaEventSourceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfManagedKafkaEventSourceConfigParameters) DeepCopyInto(out *SelfManagedKafkaEventSourceConfigParameters) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfManagedKafkaEventSourceConfigParameters.
func (in *SelfManagedKafkaEventSourceConfigParameters) DeepCopy() *SelfManagedKafkaEventSourceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SelfManagedKafkaEventSourceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapStartInitParameters) DeepCopyInto(out *SnapStartInitParameters) {
	*out = *in
	if in.ApplyOn != nil {
		in, out := &in.ApplyOn, &out.ApplyOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapStartInitParameters.
func (in *SnapStartInitParameters) DeepCopy() *SnapStartInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapStartInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapStartObservation) DeepCopyInto(out *SnapStartObservation) {
	*out = *in
	if in.ApplyOn != nil {
		in, out := &in.ApplyOn, &out.ApplyOn
		*out = new(string)
		**out = **in
	}
	if in.OptimizationStatus != nil {
		in, out := &in.OptimizationStatus, &out.OptimizationStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapStartObservation.
func (in *SnapStartObservation) DeepCopy() *SnapStartObservation {
	if in == nil {
		return nil
	}
	out := new(SnapStartObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapStartParameters) DeepCopyInto(out *SnapStartParameters) {
	*out = *in
	if in.ApplyOn != nil {
		in, out := &in.ApplyOn, &out.ApplyOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapStartParameters.
func (in *SnapStartParameters) DeepCopy() *SnapStartParameters {
	if in == nil {
		return nil
	}
	out := new(SnapStartParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceAccessConfigurationInitParameters) DeepCopyInto(out *SourceAccessConfigurationInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceAccessConfigurationInitParameters.
func (in *SourceAccessConfigurationInitParameters) DeepCopy() *SourceAccessConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceAccessConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceAccessConfigurationObservation) DeepCopyInto(out *SourceAccessConfigurationObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceAccessConfigurationObservation.
func (in *SourceAccessConfigurationObservation) DeepCopy() *SourceAccessConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SourceAccessConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceAccessConfigurationParameters) DeepCopyInto(out *SourceAccessConfigurationParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceAccessConfigurationParameters.
func (in *SourceAccessConfigurationParameters) DeepCopy() *SourceAccessConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SourceAccessConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingConfigInitParameters) DeepCopyInto(out *TracingConfigInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingConfigInitParameters.
func (in *TracingConfigInitParameters) DeepCopy() *TracingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TracingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingConfigObservation) DeepCopyInto(out *TracingConfigObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingConfigObservation.
func (in *TracingConfigObservation) DeepCopy() *TracingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TracingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingConfigParameters) DeepCopyInto(out *TracingConfigParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingConfigParameters.
func (in *TracingConfigParameters) DeepCopy() *TracingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TracingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigInitParameters) DeepCopyInto(out *VPCConfigInitParameters) {
	*out = *in
	if in.IPv6AllowedForDualStack != nil {
		in, out := &in.IPv6AllowedForDualStack, &out.IPv6AllowedForDualStack
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigInitParameters.
func (in *VPCConfigInitParameters) DeepCopy() *VPCConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigObservation) DeepCopyInto(out *VPCConfigObservation) {
	*out = *in
	if in.IPv6AllowedForDualStack != nil {
		in, out := &in.IPv6AllowedForDualStack, &out.IPv6AllowedForDualStack
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigObservation.
func (in *VPCConfigObservation) DeepCopy() *VPCConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VPCConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCConfigParameters) DeepCopyInto(out *VPCConfigParameters) {
	*out = *in
	if in.IPv6AllowedForDualStack != nil {
		in, out := &in.IPv6AllowedForDualStack, &out.IPv6AllowedForDualStack
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupIDRefs != nil {
		in, out := &in.SecurityGroupIDRefs, &out.SecurityGroupIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIDRefs != nil {
		in, out := &in.SubnetIDRefs, &out.SubnetIDRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCConfigParameters.
func (in *VPCConfigParameters) DeepCopy() *VPCConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VPCConfigParameters)
	in.DeepCopyInto(out)
	return out
}

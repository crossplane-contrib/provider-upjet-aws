//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeInitParameters) DeepCopyInto(out *AttributeInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeInitParameters.
func (in *AttributeInitParameters) DeepCopy() *AttributeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeObservation) DeepCopyInto(out *AttributeObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeObservation.
func (in *AttributeObservation) DeepCopy() *AttributeObservation {
	if in == nil {
		return nil
	}
	out := new(AttributeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeParameters) DeepCopyInto(out *AttributeParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeParameters.
func (in *AttributeParameters) DeepCopy() *AttributeParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvInitParameters) DeepCopyInto(out *CsvInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.HeaderList != nil {
		in, out := &in.HeaderList, &out.HeaderList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvInitParameters.
func (in *CsvInitParameters) DeepCopy() *CsvInitParameters {
	if in == nil {
		return nil
	}
	out := new(CsvInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvObservation) DeepCopyInto(out *CsvObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.HeaderList != nil {
		in, out := &in.HeaderList, &out.HeaderList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvObservation.
func (in *CsvObservation) DeepCopy() *CsvObservation {
	if in == nil {
		return nil
	}
	out := new(CsvObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvParameters) DeepCopyInto(out *CsvParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.HeaderList != nil {
		in, out := &in.HeaderList, &out.HeaderList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvParameters.
func (in *CsvParameters) DeepCopy() *CsvParameters {
	if in == nil {
		return nil
	}
	out := new(CsvParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalSecondaryIndexInitParameters) DeepCopyInto(out *GlobalSecondaryIndexInitParameters) {
	*out = *in
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalSecondaryIndexInitParameters.
func (in *GlobalSecondaryIndexInitParameters) DeepCopy() *GlobalSecondaryIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalSecondaryIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalSecondaryIndexObservation) DeepCopyInto(out *GlobalSecondaryIndexObservation) {
	*out = *in
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalSecondaryIndexObservation.
func (in *GlobalSecondaryIndexObservation) DeepCopy() *GlobalSecondaryIndexObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalSecondaryIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalSecondaryIndexParameters) DeepCopyInto(out *GlobalSecondaryIndexParameters) {
	*out = *in
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalSecondaryIndexParameters.
func (in *GlobalSecondaryIndexParameters) DeepCopy() *GlobalSecondaryIndexParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalSecondaryIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportTableInitParameters) DeepCopyInto(out *ImportTableInitParameters) {
	*out = *in
	if in.InputCompressionType != nil {
		in, out := &in.InputCompressionType, &out.InputCompressionType
		*out = new(string)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.InputFormatOptions != nil {
		in, out := &in.InputFormatOptions, &out.InputFormatOptions
		*out = new(InputFormatOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSource != nil {
		in, out := &in.S3BucketSource, &out.S3BucketSource
		*out = new(S3BucketSourceInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportTableInitParameters.
func (in *ImportTableInitParameters) DeepCopy() *ImportTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImportTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportTableObservation) DeepCopyInto(out *ImportTableObservation) {
	*out = *in
	if in.InputCompressionType != nil {
		in, out := &in.InputCompressionType, &out.InputCompressionType
		*out = new(string)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.InputFormatOptions != nil {
		in, out := &in.InputFormatOptions, &out.InputFormatOptions
		*out = new(InputFormatOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSource != nil {
		in, out := &in.S3BucketSource, &out.S3BucketSource
		*out = new(S3BucketSourceObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportTableObservation.
func (in *ImportTableObservation) DeepCopy() *ImportTableObservation {
	if in == nil {
		return nil
	}
	out := new(ImportTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportTableParameters) DeepCopyInto(out *ImportTableParameters) {
	*out = *in
	if in.InputCompressionType != nil {
		in, out := &in.InputCompressionType, &out.InputCompressionType
		*out = new(string)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.InputFormatOptions != nil {
		in, out := &in.InputFormatOptions, &out.InputFormatOptions
		*out = new(InputFormatOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketSource != nil {
		in, out := &in.S3BucketSource, &out.S3BucketSource
		*out = new(S3BucketSourceParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportTableParameters.
func (in *ImportTableParameters) DeepCopy() *ImportTableParameters {
	if in == nil {
		return nil
	}
	out := new(ImportTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatOptionsInitParameters) DeepCopyInto(out *InputFormatOptionsInitParameters) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = new(CsvInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatOptionsInitParameters.
func (in *InputFormatOptionsInitParameters) DeepCopy() *InputFormatOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InputFormatOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatOptionsObservation) DeepCopyInto(out *InputFormatOptionsObservation) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = new(CsvObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatOptionsObservation.
func (in *InputFormatOptionsObservation) DeepCopy() *InputFormatOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InputFormatOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InputFormatOptionsParameters) DeepCopyInto(out *InputFormatOptionsParameters) {
	*out = *in
	if in.Csv != nil {
		in, out := &in.Csv, &out.Csv
		*out = new(CsvParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InputFormatOptionsParameters.
func (in *InputFormatOptionsParameters) DeepCopy() *InputFormatOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InputFormatOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSecondaryIndexInitParameters) DeepCopyInto(out *LocalSecondaryIndexInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSecondaryIndexInitParameters.
func (in *LocalSecondaryIndexInitParameters) DeepCopy() *LocalSecondaryIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSecondaryIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSecondaryIndexObservation) DeepCopyInto(out *LocalSecondaryIndexObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSecondaryIndexObservation.
func (in *LocalSecondaryIndexObservation) DeepCopy() *LocalSecondaryIndexObservation {
	if in == nil {
		return nil
	}
	out := new(LocalSecondaryIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSecondaryIndexParameters) DeepCopyInto(out *LocalSecondaryIndexParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonKeyAttributes != nil {
		in, out := &in.NonKeyAttributes, &out.NonKeyAttributes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectionType != nil {
		in, out := &in.ProjectionType, &out.ProjectionType
		*out = new(string)
		**out = **in
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSecondaryIndexParameters.
func (in *LocalSecondaryIndexParameters) DeepCopy() *LocalSecondaryIndexParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSecondaryIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRecoveryInitParameters) DeepCopyInto(out *PointInTimeRecoveryInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRecoveryInitParameters.
func (in *PointInTimeRecoveryInitParameters) DeepCopy() *PointInTimeRecoveryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRecoveryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRecoveryObservation) DeepCopyInto(out *PointInTimeRecoveryObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRecoveryObservation.
func (in *PointInTimeRecoveryObservation) DeepCopy() *PointInTimeRecoveryObservation {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRecoveryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PointInTimeRecoveryParameters) DeepCopyInto(out *PointInTimeRecoveryParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PointInTimeRecoveryParameters.
func (in *PointInTimeRecoveryParameters) DeepCopy() *PointInTimeRecoveryParameters {
	if in == nil {
		return nil
	}
	out := new(PointInTimeRecoveryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaInitParameters) DeepCopyInto(out *ReplicaInitParameters) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(bool)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(bool)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaInitParameters.
func (in *ReplicaInitParameters) DeepCopy() *ReplicaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaObservation) DeepCopyInto(out *ReplicaObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(bool)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(bool)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
	if in.StreamArn != nil {
		in, out := &in.StreamArn, &out.StreamArn
		*out = new(string)
		**out = **in
	}
	if in.StreamLabel != nil {
		in, out := &in.StreamLabel, &out.StreamLabel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaObservation.
func (in *ReplicaObservation) DeepCopy() *ReplicaObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaParameters) DeepCopyInto(out *ReplicaParameters) {
	*out = *in
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(bool)
		**out = **in
	}
	if in.PropagateTags != nil {
		in, out := &in.PropagateTags, &out.PropagateTags
		*out = new(bool)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaParameters.
func (in *ReplicaParameters) DeepCopy() *ReplicaParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BucketSourceInitParameters) DeepCopyInto(out *S3BucketSourceInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketOwner != nil {
		in, out := &in.BucketOwner, &out.BucketOwner
		*out = new(string)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BucketSourceInitParameters.
func (in *S3BucketSourceInitParameters) DeepCopy() *S3BucketSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(S3BucketSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BucketSourceObservation) DeepCopyInto(out *S3BucketSourceObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketOwner != nil {
		in, out := &in.BucketOwner, &out.BucketOwner
		*out = new(string)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BucketSourceObservation.
func (in *S3BucketSourceObservation) DeepCopy() *S3BucketSourceObservation {
	if in == nil {
		return nil
	}
	out := new(S3BucketSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BucketSourceParameters) DeepCopyInto(out *S3BucketSourceParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketOwner != nil {
		in, out := &in.BucketOwner, &out.BucketOwner
		*out = new(string)
		**out = **in
	}
	if in.KeyPrefix != nil {
		in, out := &in.KeyPrefix, &out.KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BucketSourceParameters.
func (in *S3BucketSourceParameters) DeepCopy() *S3BucketSourceParameters {
	if in == nil {
		return nil
	}
	out := new(S3BucketSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSideEncryptionInitParameters) DeepCopyInto(out *ServerSideEncryptionInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSideEncryptionInitParameters.
func (in *ServerSideEncryptionInitParameters) DeepCopy() *ServerSideEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerSideEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSideEncryptionObservation) DeepCopyInto(out *ServerSideEncryptionObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSideEncryptionObservation.
func (in *ServerSideEncryptionObservation) DeepCopy() *ServerSideEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(ServerSideEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSideEncryptionParameters) DeepCopyInto(out *ServerSideEncryptionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSideEncryptionParameters.
func (in *ServerSideEncryptionParameters) DeepCopy() *ServerSideEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(ServerSideEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLInitParameters) DeepCopyInto(out *TTLInitParameters) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLInitParameters.
func (in *TTLInitParameters) DeepCopy() *TTLInitParameters {
	if in == nil {
		return nil
	}
	out := new(TTLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLObservation) DeepCopyInto(out *TTLObservation) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLObservation.
func (in *TTLObservation) DeepCopy() *TTLObservation {
	if in == nil {
		return nil
	}
	out := new(TTLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLParameters) DeepCopyInto(out *TTLParameters) {
	*out = *in
	if in.AttributeName != nil {
		in, out := &in.AttributeName, &out.AttributeName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLParameters.
func (in *TTLParameters) DeepCopy() *TTLParameters {
	if in == nil {
		return nil
	}
	out := new(TTLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableInitParameters) DeepCopyInto(out *TableInitParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = make([]AttributeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BillingMode != nil {
		in, out := &in.BillingMode, &out.BillingMode
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.GlobalSecondaryIndex != nil {
		in, out := &in.GlobalSecondaryIndex, &out.GlobalSecondaryIndex
		*out = make([]GlobalSecondaryIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.ImportTable != nil {
		in, out := &in.ImportTable, &out.ImportTable
		*out = new(ImportTableInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalSecondaryIndex != nil {
		in, out := &in.LocalSecondaryIndex, &out.LocalSecondaryIndex
		*out = make([]LocalSecondaryIndexInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(PointInTimeRecoveryInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Replica != nil {
		in, out := &in.Replica, &out.Replica
		*out = make([]ReplicaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreDateTime != nil {
		in, out := &in.RestoreDateTime, &out.RestoreDateTime
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceName != nil {
		in, out := &in.RestoreSourceName, &out.RestoreSourceName
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceTableArn != nil {
		in, out := &in.RestoreSourceTableArn, &out.RestoreSourceTableArn
		*out = new(string)
		**out = **in
	}
	if in.RestoreToLatestTime != nil {
		in, out := &in.RestoreToLatestTime, &out.RestoreToLatestTime
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(ServerSideEncryptionInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamEnabled != nil {
		in, out := &in.StreamEnabled, &out.StreamEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StreamViewType != nil {
		in, out := &in.StreamViewType, &out.StreamViewType
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(TTLInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TableClass != nil {
		in, out := &in.TableClass, &out.TableClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableInitParameters.
func (in *TableInitParameters) DeepCopy() *TableInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = make([]AttributeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BillingMode != nil {
		in, out := &in.BillingMode, &out.BillingMode
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.GlobalSecondaryIndex != nil {
		in, out := &in.GlobalSecondaryIndex, &out.GlobalSecondaryIndex
		*out = make([]GlobalSecondaryIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportTable != nil {
		in, out := &in.ImportTable, &out.ImportTable
		*out = new(ImportTableObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalSecondaryIndex != nil {
		in, out := &in.LocalSecondaryIndex, &out.LocalSecondaryIndex
		*out = make([]LocalSecondaryIndexObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(PointInTimeRecoveryObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Replica != nil {
		in, out := &in.Replica, &out.Replica
		*out = make([]ReplicaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreDateTime != nil {
		in, out := &in.RestoreDateTime, &out.RestoreDateTime
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceName != nil {
		in, out := &in.RestoreSourceName, &out.RestoreSourceName
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceTableArn != nil {
		in, out := &in.RestoreSourceTableArn, &out.RestoreSourceTableArn
		*out = new(string)
		**out = **in
	}
	if in.RestoreToLatestTime != nil {
		in, out := &in.RestoreToLatestTime, &out.RestoreToLatestTime
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(ServerSideEncryptionObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamArn != nil {
		in, out := &in.StreamArn, &out.StreamArn
		*out = new(string)
		**out = **in
	}
	if in.StreamEnabled != nil {
		in, out := &in.StreamEnabled, &out.StreamEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StreamLabel != nil {
		in, out := &in.StreamLabel, &out.StreamLabel
		*out = new(string)
		**out = **in
	}
	if in.StreamViewType != nil {
		in, out := &in.StreamViewType, &out.StreamViewType
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(TTLObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TableClass != nil {
		in, out := &in.TableClass, &out.TableClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = make([]AttributeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BillingMode != nil {
		in, out := &in.BillingMode, &out.BillingMode
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.GlobalSecondaryIndex != nil {
		in, out := &in.GlobalSecondaryIndex, &out.GlobalSecondaryIndex
		*out = make([]GlobalSecondaryIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HashKey != nil {
		in, out := &in.HashKey, &out.HashKey
		*out = new(string)
		**out = **in
	}
	if in.ImportTable != nil {
		in, out := &in.ImportTable, &out.ImportTable
		*out = new(ImportTableParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LocalSecondaryIndex != nil {
		in, out := &in.LocalSecondaryIndex, &out.LocalSecondaryIndex
		*out = make([]LocalSecondaryIndexParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PointInTimeRecovery != nil {
		in, out := &in.PointInTimeRecovery, &out.PointInTimeRecovery
		*out = new(PointInTimeRecoveryParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RangeKey != nil {
		in, out := &in.RangeKey, &out.RangeKey
		*out = new(string)
		**out = **in
	}
	if in.ReadCapacity != nil {
		in, out := &in.ReadCapacity, &out.ReadCapacity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Replica != nil {
		in, out := &in.Replica, &out.Replica
		*out = make([]ReplicaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestoreDateTime != nil {
		in, out := &in.RestoreDateTime, &out.RestoreDateTime
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceName != nil {
		in, out := &in.RestoreSourceName, &out.RestoreSourceName
		*out = new(string)
		**out = **in
	}
	if in.RestoreSourceTableArn != nil {
		in, out := &in.RestoreSourceTableArn, &out.RestoreSourceTableArn
		*out = new(string)
		**out = **in
	}
	if in.RestoreToLatestTime != nil {
		in, out := &in.RestoreToLatestTime, &out.RestoreToLatestTime
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(ServerSideEncryptionParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamEnabled != nil {
		in, out := &in.StreamEnabled, &out.StreamEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StreamViewType != nil {
		in, out := &in.StreamViewType, &out.StreamViewType
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(TTLParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TableClass != nil {
		in, out := &in.TableClass, &out.TableClass
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WriteCapacity != nil {
		in, out := &in.WriteCapacity, &out.WriteCapacity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}

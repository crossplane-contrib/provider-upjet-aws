//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceConfigurationInitParameters) DeepCopyInto(out *DataSourceConfigurationInitParameters) {
	*out = *in
	if in.IntendedUse != nil {
		in, out := &in.IntendedUse, &out.IntendedUse
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceConfigurationInitParameters.
func (in *DataSourceConfigurationInitParameters) DeepCopy() *DataSourceConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourceConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceConfigurationObservation) DeepCopyInto(out *DataSourceConfigurationObservation) {
	*out = *in
	if in.IntendedUse != nil {
		in, out := &in.IntendedUse, &out.IntendedUse
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceConfigurationObservation.
func (in *DataSourceConfigurationObservation) DeepCopy() *DataSourceConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DataSourceConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceConfigurationParameters) DeepCopyInto(out *DataSourceConfigurationParameters) {
	*out = *in
	if in.IntendedUse != nil {
		in, out := &in.IntendedUse, &out.IntendedUse
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceConfigurationParameters.
func (in *DataSourceConfigurationParameters) DeepCopy() *DataSourceConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DataSourceConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndex) DeepCopyInto(out *PlaceIndex) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndex.
func (in *PlaceIndex) DeepCopy() *PlaceIndex {
	if in == nil {
		return nil
	}
	out := new(PlaceIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlaceIndex) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexInitParameters) DeepCopyInto(out *PlaceIndexInitParameters) {
	*out = *in
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(string)
		**out = **in
	}
	if in.DataSourceConfiguration != nil {
		in, out := &in.DataSourceConfiguration, &out.DataSourceConfiguration
		*out = new(DataSourceConfigurationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexInitParameters.
func (in *PlaceIndexInitParameters) DeepCopy() *PlaceIndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexList) DeepCopyInto(out *PlaceIndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlaceIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexList.
func (in *PlaceIndexList) DeepCopy() *PlaceIndexList {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlaceIndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexObservation) DeepCopyInto(out *PlaceIndexObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(string)
		**out = **in
	}
	if in.DataSourceConfiguration != nil {
		in, out := &in.DataSourceConfiguration, &out.DataSourceConfiguration
		*out = new(DataSourceConfigurationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IndexArn != nil {
		in, out := &in.IndexArn, &out.IndexArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexObservation.
func (in *PlaceIndexObservation) DeepCopy() *PlaceIndexObservation {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexParameters) DeepCopyInto(out *PlaceIndexParameters) {
	*out = *in
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(string)
		**out = **in
	}
	if in.DataSourceConfiguration != nil {
		in, out := &in.DataSourceConfiguration, &out.DataSourceConfiguration
		*out = new(DataSourceConfigurationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexParameters.
func (in *PlaceIndexParameters) DeepCopy() *PlaceIndexParameters {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexSpec) DeepCopyInto(out *PlaceIndexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexSpec.
func (in *PlaceIndexSpec) DeepCopy() *PlaceIndexSpec {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaceIndexStatus) DeepCopyInto(out *PlaceIndexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaceIndexStatus.
func (in *PlaceIndexStatus) DeepCopy() *PlaceIndexStatus {
	if in == nil {
		return nil
	}
	out := new(PlaceIndexStatus)
	in.DeepCopyInto(out)
	return out
}

//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityOptionsInitParameters) DeepCopyInto(out *AdvancedSecurityOptionsInitParameters) {
	*out = *in
	if in.AnonymousAuthEnabled != nil {
		in, out := &in.AnonymousAuthEnabled, &out.AnonymousAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InternalUserDatabaseEnabled != nil {
		in, out := &in.InternalUserDatabaseEnabled, &out.InternalUserDatabaseEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MasterUserOptions != nil {
		in, out := &in.MasterUserOptions, &out.MasterUserOptions
		*out = make([]MasterUserOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityOptionsInitParameters.
func (in *AdvancedSecurityOptionsInitParameters) DeepCopy() *AdvancedSecurityOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityOptionsObservation) DeepCopyInto(out *AdvancedSecurityOptionsObservation) {
	*out = *in
	if in.AnonymousAuthEnabled != nil {
		in, out := &in.AnonymousAuthEnabled, &out.AnonymousAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InternalUserDatabaseEnabled != nil {
		in, out := &in.InternalUserDatabaseEnabled, &out.InternalUserDatabaseEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MasterUserOptions != nil {
		in, out := &in.MasterUserOptions, &out.MasterUserOptions
		*out = make([]MasterUserOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityOptionsObservation.
func (in *AdvancedSecurityOptionsObservation) DeepCopy() *AdvancedSecurityOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedSecurityOptionsParameters) DeepCopyInto(out *AdvancedSecurityOptionsParameters) {
	*out = *in
	if in.AnonymousAuthEnabled != nil {
		in, out := &in.AnonymousAuthEnabled, &out.AnonymousAuthEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InternalUserDatabaseEnabled != nil {
		in, out := &in.InternalUserDatabaseEnabled, &out.InternalUserDatabaseEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MasterUserOptions != nil {
		in, out := &in.MasterUserOptions, &out.MasterUserOptions
		*out = make([]MasterUserOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedSecurityOptionsParameters.
func (in *AdvancedSecurityOptionsParameters) DeepCopy() *AdvancedSecurityOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedSecurityOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoTuneOptionsInitParameters) DeepCopyInto(out *AutoTuneOptionsInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSchedule != nil {
		in, out := &in.MaintenanceSchedule, &out.MaintenanceSchedule
		*out = make([]MaintenanceScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollbackOnDisable != nil {
		in, out := &in.RollbackOnDisable, &out.RollbackOnDisable
		*out = new(string)
		**out = **in
	}
	if in.UseOffPeakWindow != nil {
		in, out := &in.UseOffPeakWindow, &out.UseOffPeakWindow
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoTuneOptionsInitParameters.
func (in *AutoTuneOptionsInitParameters) DeepCopy() *AutoTuneOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutoTuneOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoTuneOptionsObservation) DeepCopyInto(out *AutoTuneOptionsObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSchedule != nil {
		in, out := &in.MaintenanceSchedule, &out.MaintenanceSchedule
		*out = make([]MaintenanceScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollbackOnDisable != nil {
		in, out := &in.RollbackOnDisable, &out.RollbackOnDisable
		*out = new(string)
		**out = **in
	}
	if in.UseOffPeakWindow != nil {
		in, out := &in.UseOffPeakWindow, &out.UseOffPeakWindow
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoTuneOptionsObservation.
func (in *AutoTuneOptionsObservation) DeepCopy() *AutoTuneOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AutoTuneOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoTuneOptionsParameters) DeepCopyInto(out *AutoTuneOptionsParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceSchedule != nil {
		in, out := &in.MaintenanceSchedule, &out.MaintenanceSchedule
		*out = make([]MaintenanceScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RollbackOnDisable != nil {
		in, out := &in.RollbackOnDisable, &out.RollbackOnDisable
		*out = new(string)
		**out = **in
	}
	if in.UseOffPeakWindow != nil {
		in, out := &in.UseOffPeakWindow, &out.UseOffPeakWindow
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoTuneOptionsParameters.
func (in *AutoTuneOptionsParameters) DeepCopy() *AutoTuneOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AutoTuneOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigInitParameters) DeepCopyInto(out *ClusterConfigInitParameters) {
	*out = *in
	if in.ColdStorageOptions != nil {
		in, out := &in.ColdStorageOptions, &out.ColdStorageOptions
		*out = make([]ColdStorageOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedMasterCount != nil {
		in, out := &in.DedicatedMasterCount, &out.DedicatedMasterCount
		*out = new(float64)
		**out = **in
	}
	if in.DedicatedMasterEnabled != nil {
		in, out := &in.DedicatedMasterEnabled, &out.DedicatedMasterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DedicatedMasterType != nil {
		in, out := &in.DedicatedMasterType, &out.DedicatedMasterType
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MultiAzWithStandbyEnabled != nil {
		in, out := &in.MultiAzWithStandbyEnabled, &out.MultiAzWithStandbyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmCount != nil {
		in, out := &in.WarmCount, &out.WarmCount
		*out = new(float64)
		**out = **in
	}
	if in.WarmEnabled != nil {
		in, out := &in.WarmEnabled, &out.WarmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmType != nil {
		in, out := &in.WarmType, &out.WarmType
		*out = new(string)
		**out = **in
	}
	if in.ZoneAwarenessConfig != nil {
		in, out := &in.ZoneAwarenessConfig, &out.ZoneAwarenessConfig
		*out = make([]ZoneAwarenessConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneAwarenessEnabled != nil {
		in, out := &in.ZoneAwarenessEnabled, &out.ZoneAwarenessEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigInitParameters.
func (in *ClusterConfigInitParameters) DeepCopy() *ClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
	if in.ColdStorageOptions != nil {
		in, out := &in.ColdStorageOptions, &out.ColdStorageOptions
		*out = make([]ColdStorageOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedMasterCount != nil {
		in, out := &in.DedicatedMasterCount, &out.DedicatedMasterCount
		*out = new(float64)
		**out = **in
	}
	if in.DedicatedMasterEnabled != nil {
		in, out := &in.DedicatedMasterEnabled, &out.DedicatedMasterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DedicatedMasterType != nil {
		in, out := &in.DedicatedMasterType, &out.DedicatedMasterType
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MultiAzWithStandbyEnabled != nil {
		in, out := &in.MultiAzWithStandbyEnabled, &out.MultiAzWithStandbyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmCount != nil {
		in, out := &in.WarmCount, &out.WarmCount
		*out = new(float64)
		**out = **in
	}
	if in.WarmEnabled != nil {
		in, out := &in.WarmEnabled, &out.WarmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmType != nil {
		in, out := &in.WarmType, &out.WarmType
		*out = new(string)
		**out = **in
	}
	if in.ZoneAwarenessConfig != nil {
		in, out := &in.ZoneAwarenessConfig, &out.ZoneAwarenessConfig
		*out = make([]ZoneAwarenessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneAwarenessEnabled != nil {
		in, out := &in.ZoneAwarenessEnabled, &out.ZoneAwarenessEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.ColdStorageOptions != nil {
		in, out := &in.ColdStorageOptions, &out.ColdStorageOptions
		*out = make([]ColdStorageOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedMasterCount != nil {
		in, out := &in.DedicatedMasterCount, &out.DedicatedMasterCount
		*out = new(float64)
		**out = **in
	}
	if in.DedicatedMasterEnabled != nil {
		in, out := &in.DedicatedMasterEnabled, &out.DedicatedMasterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DedicatedMasterType != nil {
		in, out := &in.DedicatedMasterType, &out.DedicatedMasterType
		*out = new(string)
		**out = **in
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.MultiAzWithStandbyEnabled != nil {
		in, out := &in.MultiAzWithStandbyEnabled, &out.MultiAzWithStandbyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmCount != nil {
		in, out := &in.WarmCount, &out.WarmCount
		*out = new(float64)
		**out = **in
	}
	if in.WarmEnabled != nil {
		in, out := &in.WarmEnabled, &out.WarmEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WarmType != nil {
		in, out := &in.WarmType, &out.WarmType
		*out = new(string)
		**out = **in
	}
	if in.ZoneAwarenessConfig != nil {
		in, out := &in.ZoneAwarenessConfig, &out.ZoneAwarenessConfig
		*out = make([]ZoneAwarenessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneAwarenessEnabled != nil {
		in, out := &in.ZoneAwarenessEnabled, &out.ZoneAwarenessEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoOptionsInitParameters) DeepCopyInto(out *CognitoOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UserPoolID != nil {
		in, out := &in.UserPoolID, &out.UserPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoOptionsInitParameters.
func (in *CognitoOptionsInitParameters) DeepCopy() *CognitoOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoOptionsObservation) DeepCopyInto(out *CognitoOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UserPoolID != nil {
		in, out := &in.UserPoolID, &out.UserPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoOptionsObservation.
func (in *CognitoOptionsObservation) DeepCopy() *CognitoOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CognitoOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CognitoOptionsParameters) DeepCopyInto(out *CognitoOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdentityPoolID != nil {
		in, out := &in.IdentityPoolID, &out.IdentityPoolID
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.UserPoolID != nil {
		in, out := &in.UserPoolID, &out.UserPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CognitoOptionsParameters.
func (in *CognitoOptionsParameters) DeepCopy() *CognitoOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CognitoOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdStorageOptionsInitParameters) DeepCopyInto(out *ColdStorageOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdStorageOptionsInitParameters.
func (in *ColdStorageOptionsInitParameters) DeepCopy() *ColdStorageOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColdStorageOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdStorageOptionsObservation) DeepCopyInto(out *ColdStorageOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdStorageOptionsObservation.
func (in *ColdStorageOptionsObservation) DeepCopy() *ColdStorageOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ColdStorageOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdStorageOptionsParameters) DeepCopyInto(out *ColdStorageOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdStorageOptionsParameters.
func (in *ColdStorageOptionsParameters) DeepCopy() *ColdStorageOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ColdStorageOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Domain) DeepCopyInto(out *Domain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Domain.
func (in *Domain) DeepCopy() *Domain {
	if in == nil {
		return nil
	}
	out := new(Domain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Domain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainEndpointOptionsInitParameters) DeepCopyInto(out *DomainEndpointOptionsInitParameters) {
	*out = *in
	if in.CustomEndpoint != nil {
		in, out := &in.CustomEndpoint, &out.CustomEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointCertificateArn != nil {
		in, out := &in.CustomEndpointCertificateArn, &out.CustomEndpointCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointEnabled != nil {
		in, out := &in.CustomEndpointEnabled, &out.CustomEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnforceHTTPS != nil {
		in, out := &in.EnforceHTTPS, &out.EnforceHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.TLSSecurityPolicy != nil {
		in, out := &in.TLSSecurityPolicy, &out.TLSSecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainEndpointOptionsInitParameters.
func (in *DomainEndpointOptionsInitParameters) DeepCopy() *DomainEndpointOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainEndpointOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainEndpointOptionsObservation) DeepCopyInto(out *DomainEndpointOptionsObservation) {
	*out = *in
	if in.CustomEndpoint != nil {
		in, out := &in.CustomEndpoint, &out.CustomEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointCertificateArn != nil {
		in, out := &in.CustomEndpointCertificateArn, &out.CustomEndpointCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointEnabled != nil {
		in, out := &in.CustomEndpointEnabled, &out.CustomEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnforceHTTPS != nil {
		in, out := &in.EnforceHTTPS, &out.EnforceHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.TLSSecurityPolicy != nil {
		in, out := &in.TLSSecurityPolicy, &out.TLSSecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainEndpointOptionsObservation.
func (in *DomainEndpointOptionsObservation) DeepCopy() *DomainEndpointOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DomainEndpointOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainEndpointOptionsParameters) DeepCopyInto(out *DomainEndpointOptionsParameters) {
	*out = *in
	if in.CustomEndpoint != nil {
		in, out := &in.CustomEndpoint, &out.CustomEndpoint
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointCertificateArn != nil {
		in, out := &in.CustomEndpointCertificateArn, &out.CustomEndpointCertificateArn
		*out = new(string)
		**out = **in
	}
	if in.CustomEndpointEnabled != nil {
		in, out := &in.CustomEndpointEnabled, &out.CustomEndpointEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnforceHTTPS != nil {
		in, out := &in.EnforceHTTPS, &out.EnforceHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.TLSSecurityPolicy != nil {
		in, out := &in.TLSSecurityPolicy, &out.TLSSecurityPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainEndpointOptionsParameters.
func (in *DomainEndpointOptionsParameters) DeepCopy() *DomainEndpointOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DomainEndpointOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainInitParameters) DeepCopyInto(out *DomainInitParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdvancedSecurityOptions != nil {
		in, out := &in.AdvancedSecurityOptions, &out.AdvancedSecurityOptions
		*out = make([]AdvancedSecurityOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoTuneOptions != nil {
		in, out := &in.AutoTuneOptions, &out.AutoTuneOptions
		*out = make([]AutoTuneOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CognitoOptions != nil {
		in, out := &in.CognitoOptions, &out.CognitoOptions
		*out = make([]CognitoOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DomainEndpointOptions != nil {
		in, out := &in.DomainEndpointOptions, &out.DomainEndpointOptions
		*out = make([]DomainEndpointOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EBSOptions != nil {
		in, out := &in.EBSOptions, &out.EBSOptions
		*out = make([]EBSOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptAtRest != nil {
		in, out := &in.EncryptAtRest, &out.EncryptAtRest
		*out = make([]EncryptAtRestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeToNodeEncryption != nil {
		in, out := &in.NodeToNodeEncryption, &out.NodeToNodeEncryption
		*out = make([]NodeToNodeEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OffPeakWindowOptions != nil {
		in, out := &in.OffPeakWindowOptions, &out.OffPeakWindowOptions
		*out = make([]OffPeakWindowOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotOptions != nil {
		in, out := &in.SnapshotOptions, &out.SnapshotOptions
		*out = make([]SnapshotOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareUpdateOptions != nil {
		in, out := &in.SoftwareUpdateOptions, &out.SoftwareUpdateOptions
		*out = make([]SoftwareUpdateOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainInitParameters.
func (in *DomainInitParameters) DeepCopy() *DomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainList) DeepCopyInto(out *DomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Domain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainList.
func (in *DomainList) DeepCopy() *DomainList {
	if in == nil {
		return nil
	}
	out := new(DomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainObservation) DeepCopyInto(out *DomainObservation) {
	*out = *in
	if in.AccessPolicies != nil {
		in, out := &in.AccessPolicies, &out.AccessPolicies
		*out = new(string)
		**out = **in
	}
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdvancedSecurityOptions != nil {
		in, out := &in.AdvancedSecurityOptions, &out.AdvancedSecurityOptions
		*out = make([]AdvancedSecurityOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AutoTuneOptions != nil {
		in, out := &in.AutoTuneOptions, &out.AutoTuneOptions
		*out = make([]AutoTuneOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CognitoOptions != nil {
		in, out := &in.CognitoOptions, &out.CognitoOptions
		*out = make([]CognitoOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DashboardEndpoint != nil {
		in, out := &in.DashboardEndpoint, &out.DashboardEndpoint
		*out = new(string)
		**out = **in
	}
	if in.DomainEndpointOptions != nil {
		in, out := &in.DomainEndpointOptions, &out.DomainEndpointOptions
		*out = make([]DomainEndpointOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DomainID != nil {
		in, out := &in.DomainID, &out.DomainID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EBSOptions != nil {
		in, out := &in.EBSOptions, &out.EBSOptions
		*out = make([]EBSOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptAtRest != nil {
		in, out := &in.EncryptAtRest, &out.EncryptAtRest
		*out = make([]EncryptAtRestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KibanaEndpoint != nil {
		in, out := &in.KibanaEndpoint, &out.KibanaEndpoint
		*out = new(string)
		**out = **in
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeToNodeEncryption != nil {
		in, out := &in.NodeToNodeEncryption, &out.NodeToNodeEncryption
		*out = make([]NodeToNodeEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OffPeakWindowOptions != nil {
		in, out := &in.OffPeakWindowOptions, &out.OffPeakWindowOptions
		*out = make([]OffPeakWindowOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnapshotOptions != nil {
		in, out := &in.SnapshotOptions, &out.SnapshotOptions
		*out = make([]SnapshotOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareUpdateOptions != nil {
		in, out := &in.SoftwareUpdateOptions, &out.SoftwareUpdateOptions
		*out = make([]SoftwareUpdateOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainObservation.
func (in *DomainObservation) DeepCopy() *DomainObservation {
	if in == nil {
		return nil
	}
	out := new(DomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainParameters) DeepCopyInto(out *DomainParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdvancedSecurityOptions != nil {
		in, out := &in.AdvancedSecurityOptions, &out.AdvancedSecurityOptions
		*out = make([]AdvancedSecurityOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoTuneOptions != nil {
		in, out := &in.AutoTuneOptions, &out.AutoTuneOptions
		*out = make([]AutoTuneOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CognitoOptions != nil {
		in, out := &in.CognitoOptions, &out.CognitoOptions
		*out = make([]CognitoOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DomainEndpointOptions != nil {
		in, out := &in.DomainEndpointOptions, &out.DomainEndpointOptions
		*out = make([]DomainEndpointOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.EBSOptions != nil {
		in, out := &in.EBSOptions, &out.EBSOptions
		*out = make([]EBSOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptAtRest != nil {
		in, out := &in.EncryptAtRest, &out.EncryptAtRest
		*out = make([]EncryptAtRestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.LogPublishingOptions != nil {
		in, out := &in.LogPublishingOptions, &out.LogPublishingOptions
		*out = make([]LogPublishingOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeToNodeEncryption != nil {
		in, out := &in.NodeToNodeEncryption, &out.NodeToNodeEncryption
		*out = make([]NodeToNodeEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OffPeakWindowOptions != nil {
		in, out := &in.OffPeakWindowOptions, &out.OffPeakWindowOptions
		*out = make([]OffPeakWindowOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnapshotOptions != nil {
		in, out := &in.SnapshotOptions, &out.SnapshotOptions
		*out = make([]SnapshotOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SoftwareUpdateOptions != nil {
		in, out := &in.SoftwareUpdateOptions, &out.SoftwareUpdateOptions
		*out = make([]SoftwareUpdateOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCOptions != nil {
		in, out := &in.VPCOptions, &out.VPCOptions
		*out = make([]VPCOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainParameters.
func (in *DomainParameters) DeepCopy() *DomainParameters {
	if in == nil {
		return nil
	}
	out := new(DomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicy) DeepCopyInto(out *DomainPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicy.
func (in *DomainPolicy) DeepCopy() *DomainPolicy {
	if in == nil {
		return nil
	}
	out := new(DomainPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyInitParameters) DeepCopyInto(out *DomainPolicyInitParameters) {
	*out = *in
	if in.AccessPolicies != nil {
		in, out := &in.AccessPolicies, &out.AccessPolicies
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameRef != nil {
		in, out := &in.DomainNameRef, &out.DomainNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainNameSelector != nil {
		in, out := &in.DomainNameSelector, &out.DomainNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyInitParameters.
func (in *DomainPolicyInitParameters) DeepCopy() *DomainPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyList) DeepCopyInto(out *DomainPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyList.
func (in *DomainPolicyList) DeepCopy() *DomainPolicyList {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyObservation) DeepCopyInto(out *DomainPolicyObservation) {
	*out = *in
	if in.AccessPolicies != nil {
		in, out := &in.AccessPolicies, &out.AccessPolicies
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyObservation.
func (in *DomainPolicyObservation) DeepCopy() *DomainPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyParameters) DeepCopyInto(out *DomainPolicyParameters) {
	*out = *in
	if in.AccessPolicies != nil {
		in, out := &in.AccessPolicies, &out.AccessPolicies
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameRef != nil {
		in, out := &in.DomainNameRef, &out.DomainNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainNameSelector != nil {
		in, out := &in.DomainNameSelector, &out.DomainNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyParameters.
func (in *DomainPolicyParameters) DeepCopy() *DomainPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicySpec) DeepCopyInto(out *DomainPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicySpec.
func (in *DomainPolicySpec) DeepCopy() *DomainPolicySpec {
	if in == nil {
		return nil
	}
	out := new(DomainPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyStatus) DeepCopyInto(out *DomainPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyStatus.
func (in *DomainPolicyStatus) DeepCopy() *DomainPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptions) DeepCopyInto(out *DomainSAMLOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptions.
func (in *DomainSAMLOptions) DeepCopy() *DomainSAMLOptions {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainSAMLOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsInitParameters) DeepCopyInto(out *DomainSAMLOptionsInitParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameRef != nil {
		in, out := &in.DomainNameRef, &out.DomainNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainNameSelector != nil {
		in, out := &in.DomainNameSelector, &out.DomainNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SAMLOptions != nil {
		in, out := &in.SAMLOptions, &out.SAMLOptions
		*out = make([]SAMLOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsInitParameters.
func (in *DomainSAMLOptionsInitParameters) DeepCopy() *DomainSAMLOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsList) DeepCopyInto(out *DomainSAMLOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainSAMLOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsList.
func (in *DomainSAMLOptionsList) DeepCopy() *DomainSAMLOptionsList {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainSAMLOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsObservation) DeepCopyInto(out *DomainSAMLOptionsObservation) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SAMLOptions != nil {
		in, out := &in.SAMLOptions, &out.SAMLOptions
		*out = make([]SAMLOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsObservation.
func (in *DomainSAMLOptionsObservation) DeepCopy() *DomainSAMLOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsParameters) DeepCopyInto(out *DomainSAMLOptionsParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameRef != nil {
		in, out := &in.DomainNameRef, &out.DomainNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DomainNameSelector != nil {
		in, out := &in.DomainNameSelector, &out.DomainNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SAMLOptions != nil {
		in, out := &in.SAMLOptions, &out.SAMLOptions
		*out = make([]SAMLOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsParameters.
func (in *DomainSAMLOptionsParameters) DeepCopy() *DomainSAMLOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsSpec) DeepCopyInto(out *DomainSAMLOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsSpec.
func (in *DomainSAMLOptionsSpec) DeepCopy() *DomainSAMLOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSAMLOptionsStatus) DeepCopyInto(out *DomainSAMLOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSAMLOptionsStatus.
func (in *DomainSAMLOptionsStatus) DeepCopy() *DomainSAMLOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(DomainSAMLOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSpec) DeepCopyInto(out *DomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSpec.
func (in *DomainSpec) DeepCopy() *DomainSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainStatus) DeepCopyInto(out *DomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainStatus.
func (in *DomainStatus) DeepCopy() *DomainStatus {
	if in == nil {
		return nil
	}
	out := new(DomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DurationInitParameters) DeepCopyInto(out *DurationInitParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DurationInitParameters.
func (in *DurationInitParameters) DeepCopy() *DurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DurationObservation) DeepCopyInto(out *DurationObservation) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DurationObservation.
func (in *DurationObservation) DeepCopy() *DurationObservation {
	if in == nil {
		return nil
	}
	out := new(DurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DurationParameters) DeepCopyInto(out *DurationParameters) {
	*out = *in
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DurationParameters.
func (in *DurationParameters) DeepCopy() *DurationParameters {
	if in == nil {
		return nil
	}
	out := new(DurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSOptionsInitParameters) DeepCopyInto(out *EBSOptionsInitParameters) {
	*out = *in
	if in.EBSEnabled != nil {
		in, out := &in.EBSEnabled, &out.EBSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSOptionsInitParameters.
func (in *EBSOptionsInitParameters) DeepCopy() *EBSOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EBSOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSOptionsObservation) DeepCopyInto(out *EBSOptionsObservation) {
	*out = *in
	if in.EBSEnabled != nil {
		in, out := &in.EBSEnabled, &out.EBSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSOptionsObservation.
func (in *EBSOptionsObservation) DeepCopy() *EBSOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EBSOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSOptionsParameters) DeepCopyInto(out *EBSOptionsParameters) {
	*out = *in
	if in.EBSEnabled != nil {
		in, out := &in.EBSEnabled, &out.EBSEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSOptionsParameters.
func (in *EBSOptionsParameters) DeepCopy() *EBSOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EBSOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptAtRestInitParameters) DeepCopyInto(out *EncryptAtRestInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptAtRestInitParameters.
func (in *EncryptAtRestInitParameters) DeepCopy() *EncryptAtRestInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptAtRestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptAtRestObservation) DeepCopyInto(out *EncryptAtRestObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptAtRestObservation.
func (in *EncryptAtRestObservation) DeepCopy() *EncryptAtRestObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptAtRestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptAtRestParameters) DeepCopyInto(out *EncryptAtRestParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptAtRestParameters.
func (in *EncryptAtRestParameters) DeepCopy() *EncryptAtRestParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptAtRestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpInitParameters) DeepCopyInto(out *IdpInitParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.MetadataContent != nil {
		in, out := &in.MetadataContent, &out.MetadataContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpInitParameters.
func (in *IdpInitParameters) DeepCopy() *IdpInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdpInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpObservation) DeepCopyInto(out *IdpObservation) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.MetadataContent != nil {
		in, out := &in.MetadataContent, &out.MetadataContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpObservation.
func (in *IdpObservation) DeepCopy() *IdpObservation {
	if in == nil {
		return nil
	}
	out := new(IdpObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpParameters) DeepCopyInto(out *IdpParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.MetadataContent != nil {
		in, out := &in.MetadataContent, &out.MetadataContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpParameters.
func (in *IdpParameters) DeepCopy() *IdpParameters {
	if in == nil {
		return nil
	}
	out := new(IdpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsInitParameters) DeepCopyInto(out *LogPublishingOptionsInitParameters) {
	*out = *in
	if in.CloudwatchLogGroupArn != nil {
		in, out := &in.CloudwatchLogGroupArn, &out.CloudwatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchLogGroupArnRef != nil {
		in, out := &in.CloudwatchLogGroupArnRef, &out.CloudwatchLogGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudwatchLogGroupArnSelector != nil {
		in, out := &in.CloudwatchLogGroupArnSelector, &out.CloudwatchLogGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsInitParameters.
func (in *LogPublishingOptionsInitParameters) DeepCopy() *LogPublishingOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsObservation) DeepCopyInto(out *LogPublishingOptionsObservation) {
	*out = *in
	if in.CloudwatchLogGroupArn != nil {
		in, out := &in.CloudwatchLogGroupArn, &out.CloudwatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsObservation.
func (in *LogPublishingOptionsObservation) DeepCopy() *LogPublishingOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogPublishingOptionsParameters) DeepCopyInto(out *LogPublishingOptionsParameters) {
	*out = *in
	if in.CloudwatchLogGroupArn != nil {
		in, out := &in.CloudwatchLogGroupArn, &out.CloudwatchLogGroupArn
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchLogGroupArnRef != nil {
		in, out := &in.CloudwatchLogGroupArnRef, &out.CloudwatchLogGroupArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudwatchLogGroupArnSelector != nil {
		in, out := &in.CloudwatchLogGroupArnSelector, &out.CloudwatchLogGroupArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogPublishingOptionsParameters.
func (in *LogPublishingOptionsParameters) DeepCopy() *LogPublishingOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LogPublishingOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceScheduleInitParameters) DeepCopyInto(out *MaintenanceScheduleInitParameters) {
	*out = *in
	if in.CronExpressionForRecurrence != nil {
		in, out := &in.CronExpressionForRecurrence, &out.CronExpressionForRecurrence
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = make([]DurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartAt != nil {
		in, out := &in.StartAt, &out.StartAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceScheduleInitParameters.
func (in *MaintenanceScheduleInitParameters) DeepCopy() *MaintenanceScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceScheduleObservation) DeepCopyInto(out *MaintenanceScheduleObservation) {
	*out = *in
	if in.CronExpressionForRecurrence != nil {
		in, out := &in.CronExpressionForRecurrence, &out.CronExpressionForRecurrence
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = make([]DurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartAt != nil {
		in, out := &in.StartAt, &out.StartAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceScheduleObservation.
func (in *MaintenanceScheduleObservation) DeepCopy() *MaintenanceScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceScheduleParameters) DeepCopyInto(out *MaintenanceScheduleParameters) {
	*out = *in
	if in.CronExpressionForRecurrence != nil {
		in, out := &in.CronExpressionForRecurrence, &out.CronExpressionForRecurrence
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = make([]DurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartAt != nil {
		in, out := &in.StartAt, &out.StartAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceScheduleParameters.
func (in *MaintenanceScheduleParameters) DeepCopy() *MaintenanceScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterUserOptionsInitParameters) DeepCopyInto(out *MasterUserOptionsInitParameters) {
	*out = *in
	if in.MasterUserArn != nil {
		in, out := &in.MasterUserArn, &out.MasterUserArn
		*out = new(string)
		**out = **in
	}
	if in.MasterUserName != nil {
		in, out := &in.MasterUserName, &out.MasterUserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterUserOptionsInitParameters.
func (in *MasterUserOptionsInitParameters) DeepCopy() *MasterUserOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MasterUserOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterUserOptionsObservation) DeepCopyInto(out *MasterUserOptionsObservation) {
	*out = *in
	if in.MasterUserArn != nil {
		in, out := &in.MasterUserArn, &out.MasterUserArn
		*out = new(string)
		**out = **in
	}
	if in.MasterUserName != nil {
		in, out := &in.MasterUserName, &out.MasterUserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterUserOptionsObservation.
func (in *MasterUserOptionsObservation) DeepCopy() *MasterUserOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MasterUserOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterUserOptionsParameters) DeepCopyInto(out *MasterUserOptionsParameters) {
	*out = *in
	if in.MasterUserArn != nil {
		in, out := &in.MasterUserArn, &out.MasterUserArn
		*out = new(string)
		**out = **in
	}
	if in.MasterUserName != nil {
		in, out := &in.MasterUserName, &out.MasterUserName
		*out = new(string)
		**out = **in
	}
	if in.MasterUserPasswordSecretRef != nil {
		in, out := &in.MasterUserPasswordSecretRef, &out.MasterUserPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterUserOptionsParameters.
func (in *MasterUserOptionsParameters) DeepCopy() *MasterUserOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MasterUserOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeToNodeEncryptionInitParameters) DeepCopyInto(out *NodeToNodeEncryptionInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeToNodeEncryptionInitParameters.
func (in *NodeToNodeEncryptionInitParameters) DeepCopy() *NodeToNodeEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeToNodeEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeToNodeEncryptionObservation) DeepCopyInto(out *NodeToNodeEncryptionObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeToNodeEncryptionObservation.
func (in *NodeToNodeEncryptionObservation) DeepCopy() *NodeToNodeEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(NodeToNodeEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeToNodeEncryptionParameters) DeepCopyInto(out *NodeToNodeEncryptionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeToNodeEncryptionParameters.
func (in *NodeToNodeEncryptionParameters) DeepCopy() *NodeToNodeEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(NodeToNodeEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowInitParameters) DeepCopyInto(out *OffPeakWindowInitParameters) {
	*out = *in
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowInitParameters.
func (in *OffPeakWindowInitParameters) DeepCopy() *OffPeakWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowObservation) DeepCopyInto(out *OffPeakWindowObservation) {
	*out = *in
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowObservation.
func (in *OffPeakWindowObservation) DeepCopy() *OffPeakWindowObservation {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowOptionsInitParameters) DeepCopyInto(out *OffPeakWindowOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OffPeakWindow != nil {
		in, out := &in.OffPeakWindow, &out.OffPeakWindow
		*out = make([]OffPeakWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowOptionsInitParameters.
func (in *OffPeakWindowOptionsInitParameters) DeepCopy() *OffPeakWindowOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowOptionsObservation) DeepCopyInto(out *OffPeakWindowOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OffPeakWindow != nil {
		in, out := &in.OffPeakWindow, &out.OffPeakWindow
		*out = make([]OffPeakWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowOptionsObservation.
func (in *OffPeakWindowOptionsObservation) DeepCopy() *OffPeakWindowOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowOptionsParameters) DeepCopyInto(out *OffPeakWindowOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OffPeakWindow != nil {
		in, out := &in.OffPeakWindow, &out.OffPeakWindow
		*out = make([]OffPeakWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowOptionsParameters.
func (in *OffPeakWindowOptionsParameters) DeepCopy() *OffPeakWindowOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffPeakWindowParameters) DeepCopyInto(out *OffPeakWindowParameters) {
	*out = *in
	if in.WindowStartTime != nil {
		in, out := &in.WindowStartTime, &out.WindowStartTime
		*out = make([]WindowStartTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffPeakWindowParameters.
func (in *OffPeakWindowParameters) DeepCopy() *OffPeakWindowParameters {
	if in == nil {
		return nil
	}
	out := new(OffPeakWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLOptionsInitParameters) DeepCopyInto(out *SAMLOptionsInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Idp != nil {
		in, out := &in.Idp, &out.Idp
		*out = make([]IdpInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterBackendRole != nil {
		in, out := &in.MasterBackendRole, &out.MasterBackendRole
		*out = new(string)
		**out = **in
	}
	if in.RolesKey != nil {
		in, out := &in.RolesKey, &out.RolesKey
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeoutMinutes != nil {
		in, out := &in.SessionTimeoutMinutes, &out.SessionTimeoutMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SubjectKey != nil {
		in, out := &in.SubjectKey, &out.SubjectKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLOptionsInitParameters.
func (in *SAMLOptionsInitParameters) DeepCopy() *SAMLOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLOptionsObservation) DeepCopyInto(out *SAMLOptionsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Idp != nil {
		in, out := &in.Idp, &out.Idp
		*out = make([]IdpObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterBackendRole != nil {
		in, out := &in.MasterBackendRole, &out.MasterBackendRole
		*out = new(string)
		**out = **in
	}
	if in.RolesKey != nil {
		in, out := &in.RolesKey, &out.RolesKey
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeoutMinutes != nil {
		in, out := &in.SessionTimeoutMinutes, &out.SessionTimeoutMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SubjectKey != nil {
		in, out := &in.SubjectKey, &out.SubjectKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLOptionsObservation.
func (in *SAMLOptionsObservation) DeepCopy() *SAMLOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLOptionsParameters) DeepCopyInto(out *SAMLOptionsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Idp != nil {
		in, out := &in.Idp, &out.Idp
		*out = make([]IdpParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterBackendRole != nil {
		in, out := &in.MasterBackendRole, &out.MasterBackendRole
		*out = new(string)
		**out = **in
	}
	if in.MasterUserNameSecretRef != nil {
		in, out := &in.MasterUserNameSecretRef, &out.MasterUserNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.RolesKey != nil {
		in, out := &in.RolesKey, &out.RolesKey
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeoutMinutes != nil {
		in, out := &in.SessionTimeoutMinutes, &out.SessionTimeoutMinutes
		*out = new(float64)
		**out = **in
	}
	if in.SubjectKey != nil {
		in, out := &in.SubjectKey, &out.SubjectKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLOptionsParameters.
func (in *SAMLOptionsParameters) DeepCopy() *SAMLOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotOptionsInitParameters) DeepCopyInto(out *SnapshotOptionsInitParameters) {
	*out = *in
	if in.AutomatedSnapshotStartHour != nil {
		in, out := &in.AutomatedSnapshotStartHour, &out.AutomatedSnapshotStartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotOptionsInitParameters.
func (in *SnapshotOptionsInitParameters) DeepCopy() *SnapshotOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotOptionsObservation) DeepCopyInto(out *SnapshotOptionsObservation) {
	*out = *in
	if in.AutomatedSnapshotStartHour != nil {
		in, out := &in.AutomatedSnapshotStartHour, &out.AutomatedSnapshotStartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotOptionsObservation.
func (in *SnapshotOptionsObservation) DeepCopy() *SnapshotOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotOptionsParameters) DeepCopyInto(out *SnapshotOptionsParameters) {
	*out = *in
	if in.AutomatedSnapshotStartHour != nil {
		in, out := &in.AutomatedSnapshotStartHour, &out.AutomatedSnapshotStartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotOptionsParameters.
func (in *SnapshotOptionsParameters) DeepCopy() *SnapshotOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareUpdateOptionsInitParameters) DeepCopyInto(out *SoftwareUpdateOptionsInitParameters) {
	*out = *in
	if in.AutoSoftwareUpdateEnabled != nil {
		in, out := &in.AutoSoftwareUpdateEnabled, &out.AutoSoftwareUpdateEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareUpdateOptionsInitParameters.
func (in *SoftwareUpdateOptionsInitParameters) DeepCopy() *SoftwareUpdateOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareUpdateOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareUpdateOptionsObservation) DeepCopyInto(out *SoftwareUpdateOptionsObservation) {
	*out = *in
	if in.AutoSoftwareUpdateEnabled != nil {
		in, out := &in.AutoSoftwareUpdateEnabled, &out.AutoSoftwareUpdateEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareUpdateOptionsObservation.
func (in *SoftwareUpdateOptionsObservation) DeepCopy() *SoftwareUpdateOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SoftwareUpdateOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoftwareUpdateOptionsParameters) DeepCopyInto(out *SoftwareUpdateOptionsParameters) {
	*out = *in
	if in.AutoSoftwareUpdateEnabled != nil {
		in, out := &in.AutoSoftwareUpdateEnabled, &out.AutoSoftwareUpdateEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoftwareUpdateOptionsParameters.
func (in *SoftwareUpdateOptionsParameters) DeepCopy() *SoftwareUpdateOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SoftwareUpdateOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsInitParameters) DeepCopyInto(out *VPCOptionsInitParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsInitParameters.
func (in *VPCOptionsInitParameters) DeepCopy() *VPCOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsObservation) DeepCopyInto(out *VPCOptionsObservation) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsObservation.
func (in *VPCOptionsObservation) DeepCopy() *VPCOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCOptionsParameters) DeepCopyInto(out *VPCOptionsParameters) {
	*out = *in
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetIds != nil {
		in, out := &in.SubnetIds, &out.SubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCOptionsParameters.
func (in *VPCOptionsParameters) DeepCopy() *VPCOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VPCOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeInitParameters) DeepCopyInto(out *WindowStartTimeInitParameters) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeInitParameters.
func (in *WindowStartTimeInitParameters) DeepCopy() *WindowStartTimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeObservation) DeepCopyInto(out *WindowStartTimeObservation) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeObservation.
func (in *WindowStartTimeObservation) DeepCopy() *WindowStartTimeObservation {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowStartTimeParameters) DeepCopyInto(out *WindowStartTimeParameters) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(float64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowStartTimeParameters.
func (in *WindowStartTimeParameters) DeepCopy() *WindowStartTimeParameters {
	if in == nil {
		return nil
	}
	out := new(WindowStartTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAwarenessConfigInitParameters) DeepCopyInto(out *ZoneAwarenessConfigInitParameters) {
	*out = *in
	if in.AvailabilityZoneCount != nil {
		in, out := &in.AvailabilityZoneCount, &out.AvailabilityZoneCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAwarenessConfigInitParameters.
func (in *ZoneAwarenessConfigInitParameters) DeepCopy() *ZoneAwarenessConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneAwarenessConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAwarenessConfigObservation) DeepCopyInto(out *ZoneAwarenessConfigObservation) {
	*out = *in
	if in.AvailabilityZoneCount != nil {
		in, out := &in.AvailabilityZoneCount, &out.AvailabilityZoneCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAwarenessConfigObservation.
func (in *ZoneAwarenessConfigObservation) DeepCopy() *ZoneAwarenessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneAwarenessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneAwarenessConfigParameters) DeepCopyInto(out *ZoneAwarenessConfigParameters) {
	*out = *in
	if in.AvailabilityZoneCount != nil {
		in, out := &in.AvailabilityZoneCount, &out.AvailabilityZoneCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneAwarenessConfigParameters.
func (in *ZoneAwarenessConfigParameters) DeepCopy() *ZoneAwarenessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneAwarenessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

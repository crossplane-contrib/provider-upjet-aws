//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Activation) DeepCopyInto(out *Activation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Activation.
func (in *Activation) DeepCopy() *Activation {
	if in == nil {
		return nil
	}
	out := new(Activation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Activation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationInitParameters) DeepCopyInto(out *ActivationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleRef != nil {
		in, out := &in.IAMRoleRef, &out.IAMRoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleSelector != nil {
		in, out := &in.IAMRoleSelector, &out.IAMRoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistrationLimit != nil {
		in, out := &in.RegistrationLimit, &out.RegistrationLimit
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationInitParameters.
func (in *ActivationInitParameters) DeepCopy() *ActivationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActivationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationList) DeepCopyInto(out *ActivationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Activation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationList.
func (in *ActivationList) DeepCopy() *ActivationList {
	if in == nil {
		return nil
	}
	out := new(ActivationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationObservation) DeepCopyInto(out *ActivationObservation) {
	*out = *in
	if in.ActivationCode != nil {
		in, out := &in.ActivationCode, &out.ActivationCode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.Expired != nil {
		in, out := &in.Expired, &out.Expired
		*out = new(bool)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistrationCount != nil {
		in, out := &in.RegistrationCount, &out.RegistrationCount
		*out = new(float64)
		**out = **in
	}
	if in.RegistrationLimit != nil {
		in, out := &in.RegistrationLimit, &out.RegistrationLimit
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationObservation.
func (in *ActivationObservation) DeepCopy() *ActivationObservation {
	if in == nil {
		return nil
	}
	out := new(ActivationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationParameters) DeepCopyInto(out *ActivationParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.IAMRole != nil {
		in, out := &in.IAMRole, &out.IAMRole
		*out = new(string)
		**out = **in
	}
	if in.IAMRoleRef != nil {
		in, out := &in.IAMRoleRef, &out.IAMRoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IAMRoleSelector != nil {
		in, out := &in.IAMRoleSelector, &out.IAMRoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegistrationLimit != nil {
		in, out := &in.RegistrationLimit, &out.RegistrationLimit
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationParameters.
func (in *ActivationParameters) DeepCopy() *ActivationParameters {
	if in == nil {
		return nil
	}
	out := new(ActivationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationSpec) DeepCopyInto(out *ActivationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationSpec.
func (in *ActivationSpec) DeepCopy() *ActivationSpec {
	if in == nil {
		return nil
	}
	out := new(ActivationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationStatus) DeepCopyInto(out *ActivationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationStatus.
func (in *ActivationStatus) DeepCopy() *ActivationStatus {
	if in == nil {
		return nil
	}
	out := new(ActivationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalRuleInitParameters) DeepCopyInto(out *ApprovalRuleInitParameters) {
	*out = *in
	if in.ApproveAfterDays != nil {
		in, out := &in.ApproveAfterDays, &out.ApproveAfterDays
		*out = new(float64)
		**out = **in
	}
	if in.ApproveUntilDate != nil {
		in, out := &in.ApproveUntilDate, &out.ApproveUntilDate
		*out = new(string)
		**out = **in
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.EnableNonSecurity != nil {
		in, out := &in.EnableNonSecurity, &out.EnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.PatchFilter != nil {
		in, out := &in.PatchFilter, &out.PatchFilter
		*out = make([]PatchFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalRuleInitParameters.
func (in *ApprovalRuleInitParameters) DeepCopy() *ApprovalRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApprovalRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalRuleObservation) DeepCopyInto(out *ApprovalRuleObservation) {
	*out = *in
	if in.ApproveAfterDays != nil {
		in, out := &in.ApproveAfterDays, &out.ApproveAfterDays
		*out = new(float64)
		**out = **in
	}
	if in.ApproveUntilDate != nil {
		in, out := &in.ApproveUntilDate, &out.ApproveUntilDate
		*out = new(string)
		**out = **in
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.EnableNonSecurity != nil {
		in, out := &in.EnableNonSecurity, &out.EnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.PatchFilter != nil {
		in, out := &in.PatchFilter, &out.PatchFilter
		*out = make([]PatchFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalRuleObservation.
func (in *ApprovalRuleObservation) DeepCopy() *ApprovalRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ApprovalRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovalRuleParameters) DeepCopyInto(out *ApprovalRuleParameters) {
	*out = *in
	if in.ApproveAfterDays != nil {
		in, out := &in.ApproveAfterDays, &out.ApproveAfterDays
		*out = new(float64)
		**out = **in
	}
	if in.ApproveUntilDate != nil {
		in, out := &in.ApproveUntilDate, &out.ApproveUntilDate
		*out = new(string)
		**out = **in
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.EnableNonSecurity != nil {
		in, out := &in.EnableNonSecurity, &out.EnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.PatchFilter != nil {
		in, out := &in.PatchFilter, &out.PatchFilter
		*out = make([]PatchFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovalRuleParameters.
func (in *ApprovalRuleParameters) DeepCopy() *ApprovalRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ApprovalRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Association) DeepCopyInto(out *Association) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Association.
func (in *Association) DeepCopy() *Association {
	if in == nil {
		return nil
	}
	out := new(Association)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Association) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationInitParameters) DeepCopyInto(out *AssociationInitParameters) {
	*out = *in
	if in.ApplyOnlyAtCronInterval != nil {
		in, out := &in.ApplyOnlyAtCronInterval, &out.ApplyOnlyAtCronInterval
		*out = new(bool)
		**out = **in
	}
	if in.AssociationName != nil {
		in, out := &in.AssociationName, &out.AssociationName
		*out = new(string)
		**out = **in
	}
	if in.AutomationTargetParameterName != nil {
		in, out := &in.AutomationTargetParameterName, &out.AutomationTargetParameterName
		*out = new(string)
		**out = **in
	}
	if in.ComplianceSeverity != nil {
		in, out := &in.ComplianceSeverity, &out.ComplianceSeverity
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputLocation != nil {
		in, out := &in.OutputLocation, &out.OutputLocation
		*out = make([]OutputLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.SyncCompliance != nil {
		in, out := &in.SyncCompliance, &out.SyncCompliance
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForSuccessTimeoutSeconds != nil {
		in, out := &in.WaitForSuccessTimeoutSeconds, &out.WaitForSuccessTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationInitParameters.
func (in *AssociationInitParameters) DeepCopy() *AssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationList) DeepCopyInto(out *AssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Association, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationList.
func (in *AssociationList) DeepCopy() *AssociationList {
	if in == nil {
		return nil
	}
	out := new(AssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationObservation) DeepCopyInto(out *AssociationObservation) {
	*out = *in
	if in.ApplyOnlyAtCronInterval != nil {
		in, out := &in.ApplyOnlyAtCronInterval, &out.ApplyOnlyAtCronInterval
		*out = new(bool)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AssociationID != nil {
		in, out := &in.AssociationID, &out.AssociationID
		*out = new(string)
		**out = **in
	}
	if in.AssociationName != nil {
		in, out := &in.AssociationName, &out.AssociationName
		*out = new(string)
		**out = **in
	}
	if in.AutomationTargetParameterName != nil {
		in, out := &in.AutomationTargetParameterName, &out.AutomationTargetParameterName
		*out = new(string)
		**out = **in
	}
	if in.ComplianceSeverity != nil {
		in, out := &in.ComplianceSeverity, &out.ComplianceSeverity
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputLocation != nil {
		in, out := &in.OutputLocation, &out.OutputLocation
		*out = make([]OutputLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.SyncCompliance != nil {
		in, out := &in.SyncCompliance, &out.SyncCompliance
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForSuccessTimeoutSeconds != nil {
		in, out := &in.WaitForSuccessTimeoutSeconds, &out.WaitForSuccessTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationObservation.
func (in *AssociationObservation) DeepCopy() *AssociationObservation {
	if in == nil {
		return nil
	}
	out := new(AssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationParameters) DeepCopyInto(out *AssociationParameters) {
	*out = *in
	if in.ApplyOnlyAtCronInterval != nil {
		in, out := &in.ApplyOnlyAtCronInterval, &out.ApplyOnlyAtCronInterval
		*out = new(bool)
		**out = **in
	}
	if in.AssociationName != nil {
		in, out := &in.AssociationName, &out.AssociationName
		*out = new(string)
		**out = **in
	}
	if in.AutomationTargetParameterName != nil {
		in, out := &in.AutomationTargetParameterName, &out.AutomationTargetParameterName
		*out = new(string)
		**out = **in
	}
	if in.ComplianceSeverity != nil {
		in, out := &in.ComplianceSeverity, &out.ComplianceSeverity
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameRef != nil {
		in, out := &in.NameRef, &out.NameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NameSelector != nil {
		in, out := &in.NameSelector, &out.NameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputLocation != nil {
		in, out := &in.OutputLocation, &out.OutputLocation
		*out = make([]OutputLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.SyncCompliance != nil {
		in, out := &in.SyncCompliance, &out.SyncCompliance
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]TargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForSuccessTimeoutSeconds != nil {
		in, out := &in.WaitForSuccessTimeoutSeconds, &out.WaitForSuccessTimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationParameters.
func (in *AssociationParameters) DeepCopy() *AssociationParameters {
	if in == nil {
		return nil
	}
	out := new(AssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationSpec) DeepCopyInto(out *AssociationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationSpec.
func (in *AssociationSpec) DeepCopy() *AssociationSpec {
	if in == nil {
		return nil
	}
	out := new(AssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationStatus) DeepCopyInto(out *AssociationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationStatus.
func (in *AssociationStatus) DeepCopy() *AssociationStatus {
	if in == nil {
		return nil
	}
	out := new(AssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentsSourceInitParameters) DeepCopyInto(out *AttachmentsSourceInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentsSourceInitParameters.
func (in *AttachmentsSourceInitParameters) DeepCopy() *AttachmentsSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentsSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentsSourceObservation) DeepCopyInto(out *AttachmentsSourceObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentsSourceObservation.
func (in *AttachmentsSourceObservation) DeepCopy() *AttachmentsSourceObservation {
	if in == nil {
		return nil
	}
	out := new(AttachmentsSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentsSourceParameters) DeepCopyInto(out *AttachmentsSourceParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentsSourceParameters.
func (in *AttachmentsSourceParameters) DeepCopy() *AttachmentsSourceParameters {
	if in == nil {
		return nil
	}
	out := new(AttachmentsSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersInitParameters) DeepCopyInto(out *AutomationParametersInitParameters) {
	*out = *in
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]AutomationParametersParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersInitParameters.
func (in *AutomationParametersInitParameters) DeepCopy() *AutomationParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersObservation) DeepCopyInto(out *AutomationParametersObservation) {
	*out = *in
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]AutomationParametersParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersObservation.
func (in *AutomationParametersObservation) DeepCopy() *AutomationParametersObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersParameterInitParameters) DeepCopyInto(out *AutomationParametersParameterInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersParameterInitParameters.
func (in *AutomationParametersParameterInitParameters) DeepCopy() *AutomationParametersParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersParameterObservation) DeepCopyInto(out *AutomationParametersParameterObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersParameterObservation.
func (in *AutomationParametersParameterObservation) DeepCopy() *AutomationParametersParameterObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersParameterParameters) DeepCopyInto(out *AutomationParametersParameterParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersParameterParameters.
func (in *AutomationParametersParameterParameters) DeepCopy() *AutomationParametersParameterParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationParametersParameters) DeepCopyInto(out *AutomationParametersParameters) {
	*out = *in
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]AutomationParametersParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationParametersParameters.
func (in *AutomationParametersParameters) DeepCopy() *AutomationParametersParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigInitParameters) DeepCopyInto(out *CloudwatchConfigInitParameters) {
	*out = *in
	if in.CloudwatchLogGroupName != nil {
		in, out := &in.CloudwatchLogGroupName, &out.CloudwatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchOutputEnabled != nil {
		in, out := &in.CloudwatchOutputEnabled, &out.CloudwatchOutputEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigInitParameters.
func (in *CloudwatchConfigInitParameters) DeepCopy() *CloudwatchConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigObservation) DeepCopyInto(out *CloudwatchConfigObservation) {
	*out = *in
	if in.CloudwatchLogGroupName != nil {
		in, out := &in.CloudwatchLogGroupName, &out.CloudwatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchOutputEnabled != nil {
		in, out := &in.CloudwatchOutputEnabled, &out.CloudwatchOutputEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigObservation.
func (in *CloudwatchConfigObservation) DeepCopy() *CloudwatchConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudwatchConfigParameters) DeepCopyInto(out *CloudwatchConfigParameters) {
	*out = *in
	if in.CloudwatchLogGroupName != nil {
		in, out := &in.CloudwatchLogGroupName, &out.CloudwatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchOutputEnabled != nil {
		in, out := &in.CloudwatchOutputEnabled, &out.CloudwatchOutputEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudwatchConfigParameters.
func (in *CloudwatchConfigParameters) DeepCopy() *CloudwatchConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CloudwatchConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaseline) DeepCopyInto(out *DefaultPatchBaseline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaseline.
func (in *DefaultPatchBaseline) DeepCopy() *DefaultPatchBaseline {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaseline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultPatchBaseline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineInitParameters) DeepCopyInto(out *DefaultPatchBaselineInitParameters) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.BaselineIDRef != nil {
		in, out := &in.BaselineIDRef, &out.BaselineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaselineIDSelector != nil {
		in, out := &in.BaselineIDSelector, &out.BaselineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemRef != nil {
		in, out := &in.OperatingSystemRef, &out.OperatingSystemRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatingSystemSelector != nil {
		in, out := &in.OperatingSystemSelector, &out.OperatingSystemSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineInitParameters.
func (in *DefaultPatchBaselineInitParameters) DeepCopy() *DefaultPatchBaselineInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineList) DeepCopyInto(out *DefaultPatchBaselineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultPatchBaseline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineList.
func (in *DefaultPatchBaselineList) DeepCopy() *DefaultPatchBaselineList {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DefaultPatchBaselineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineObservation) DeepCopyInto(out *DefaultPatchBaselineObservation) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineObservation.
func (in *DefaultPatchBaselineObservation) DeepCopy() *DefaultPatchBaselineObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineParameters) DeepCopyInto(out *DefaultPatchBaselineParameters) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.BaselineIDRef != nil {
		in, out := &in.BaselineIDRef, &out.BaselineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaselineIDSelector != nil {
		in, out := &in.BaselineIDSelector, &out.BaselineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemRef != nil {
		in, out := &in.OperatingSystemRef, &out.OperatingSystemRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OperatingSystemSelector != nil {
		in, out := &in.OperatingSystemSelector, &out.OperatingSystemSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineParameters.
func (in *DefaultPatchBaselineParameters) DeepCopy() *DefaultPatchBaselineParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineSpec) DeepCopyInto(out *DefaultPatchBaselineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineSpec.
func (in *DefaultPatchBaselineSpec) DeepCopy() *DefaultPatchBaselineSpec {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultPatchBaselineStatus) DeepCopyInto(out *DefaultPatchBaselineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultPatchBaselineStatus.
func (in *DefaultPatchBaselineStatus) DeepCopy() *DefaultPatchBaselineStatus {
	if in == nil {
		return nil
	}
	out := new(DefaultPatchBaselineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Document) DeepCopyInto(out *Document) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Document.
func (in *Document) DeepCopy() *Document {
	if in == nil {
		return nil
	}
	out := new(Document)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Document) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentInitParameters) DeepCopyInto(out *DocumentInitParameters) {
	*out = *in
	if in.AttachmentsSource != nil {
		in, out := &in.AttachmentsSource, &out.AttachmentsSource
		*out = make([]AttachmentsSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DocumentFormat != nil {
		in, out := &in.DocumentFormat, &out.DocumentFormat
		*out = new(string)
		**out = **in
	}
	if in.DocumentType != nil {
		in, out := &in.DocumentType, &out.DocumentType
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentInitParameters.
func (in *DocumentInitParameters) DeepCopy() *DocumentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentList) DeepCopyInto(out *DocumentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Document, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentList.
func (in *DocumentList) DeepCopy() *DocumentList {
	if in == nil {
		return nil
	}
	out := new(DocumentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DocumentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentObservation) DeepCopyInto(out *DocumentObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AttachmentsSource != nil {
		in, out := &in.AttachmentsSource, &out.AttachmentsSource
		*out = make([]AttachmentsSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentFormat != nil {
		in, out := &in.DocumentFormat, &out.DocumentFormat
		*out = new(string)
		**out = **in
	}
	if in.DocumentType != nil {
		in, out := &in.DocumentType, &out.DocumentType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Hash != nil {
		in, out := &in.Hash, &out.Hash
		*out = new(string)
		**out = **in
	}
	if in.HashType != nil {
		in, out := &in.HashType, &out.HashType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]ParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformTypes != nil {
		in, out := &in.PlatformTypes, &out.PlatformTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SchemaVersion != nil {
		in, out := &in.SchemaVersion, &out.SchemaVersion
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentObservation.
func (in *DocumentObservation) DeepCopy() *DocumentObservation {
	if in == nil {
		return nil
	}
	out := new(DocumentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentParameters) DeepCopyInto(out *DocumentParameters) {
	*out = *in
	if in.AttachmentsSource != nil {
		in, out := &in.AttachmentsSource, &out.AttachmentsSource
		*out = make([]AttachmentsSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.DocumentFormat != nil {
		in, out := &in.DocumentFormat, &out.DocumentFormat
		*out = new(string)
		**out = **in
	}
	if in.DocumentType != nil {
		in, out := &in.DocumentType, &out.DocumentType
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentParameters.
func (in *DocumentParameters) DeepCopy() *DocumentParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpec) DeepCopyInto(out *DocumentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpec.
func (in *DocumentSpec) DeepCopy() *DocumentSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentStatus) DeepCopyInto(out *DocumentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentStatus.
func (in *DocumentStatus) DeepCopy() *DocumentStatus {
	if in == nil {
		return nil
	}
	out := new(DocumentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalFilterInitParameters) DeepCopyInto(out *GlobalFilterInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalFilterInitParameters.
func (in *GlobalFilterInitParameters) DeepCopy() *GlobalFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalFilterObservation) DeepCopyInto(out *GlobalFilterObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalFilterObservation.
func (in *GlobalFilterObservation) DeepCopy() *GlobalFilterObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalFilterParameters) DeepCopyInto(out *GlobalFilterParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalFilterParameters.
func (in *GlobalFilterParameters) DeepCopy() *GlobalFilterParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaParametersInitParameters) DeepCopyInto(out *LambdaParametersInitParameters) {
	*out = *in
	if in.ClientContext != nil {
		in, out := &in.ClientContext, &out.ClientContext
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaParametersInitParameters.
func (in *LambdaParametersInitParameters) DeepCopy() *LambdaParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LambdaParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaParametersObservation) DeepCopyInto(out *LambdaParametersObservation) {
	*out = *in
	if in.ClientContext != nil {
		in, out := &in.ClientContext, &out.ClientContext
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaParametersObservation.
func (in *LambdaParametersObservation) DeepCopy() *LambdaParametersObservation {
	if in == nil {
		return nil
	}
	out := new(LambdaParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LambdaParametersParameters) DeepCopyInto(out *LambdaParametersParameters) {
	*out = *in
	if in.ClientContext != nil {
		in, out := &in.ClientContext, &out.ClientContext
		*out = new(string)
		**out = **in
	}
	if in.PayloadSecretRef != nil {
		in, out := &in.PayloadSecretRef, &out.PayloadSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LambdaParametersParameters.
func (in *LambdaParametersParameters) DeepCopy() *LambdaParametersParameters {
	if in == nil {
		return nil
	}
	out := new(LambdaParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindow) DeepCopyInto(out *MaintenanceWindow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindow.
func (in *MaintenanceWindow) DeepCopy() *MaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowInitParameters) DeepCopyInto(out *MaintenanceWindowInitParameters) {
	*out = *in
	if in.AllowUnassociatedTargets != nil {
		in, out := &in.AllowUnassociatedTargets, &out.AllowUnassociatedTargets
		*out = new(bool)
		**out = **in
	}
	if in.Cutoff != nil {
		in, out := &in.Cutoff, &out.Cutoff
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOffset != nil {
		in, out := &in.ScheduleOffset, &out.ScheduleOffset
		*out = new(float64)
		**out = **in
	}
	if in.ScheduleTimezone != nil {
		in, out := &in.ScheduleTimezone, &out.ScheduleTimezone
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowInitParameters.
func (in *MaintenanceWindowInitParameters) DeepCopy() *MaintenanceWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowList) DeepCopyInto(out *MaintenanceWindowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowList.
func (in *MaintenanceWindowList) DeepCopy() *MaintenanceWindowList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowObservation) DeepCopyInto(out *MaintenanceWindowObservation) {
	*out = *in
	if in.AllowUnassociatedTargets != nil {
		in, out := &in.AllowUnassociatedTargets, &out.AllowUnassociatedTargets
		*out = new(bool)
		**out = **in
	}
	if in.Cutoff != nil {
		in, out := &in.Cutoff, &out.Cutoff
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOffset != nil {
		in, out := &in.ScheduleOffset, &out.ScheduleOffset
		*out = new(float64)
		**out = **in
	}
	if in.ScheduleTimezone != nil {
		in, out := &in.ScheduleTimezone, &out.ScheduleTimezone
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowObservation.
func (in *MaintenanceWindowObservation) DeepCopy() *MaintenanceWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowParameters) DeepCopyInto(out *MaintenanceWindowParameters) {
	*out = *in
	if in.AllowUnassociatedTargets != nil {
		in, out := &in.AllowUnassociatedTargets, &out.AllowUnassociatedTargets
		*out = new(bool)
		**out = **in
	}
	if in.Cutoff != nil {
		in, out := &in.Cutoff, &out.Cutoff
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOffset != nil {
		in, out := &in.ScheduleOffset, &out.ScheduleOffset
		*out = new(float64)
		**out = **in
	}
	if in.ScheduleTimezone != nil {
		in, out := &in.ScheduleTimezone, &out.ScheduleTimezone
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowParameters.
func (in *MaintenanceWindowParameters) DeepCopy() *MaintenanceWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowSpec) DeepCopyInto(out *MaintenanceWindowSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowSpec.
func (in *MaintenanceWindowSpec) DeepCopy() *MaintenanceWindowSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowStatus) DeepCopyInto(out *MaintenanceWindowStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowStatus.
func (in *MaintenanceWindowStatus) DeepCopy() *MaintenanceWindowStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTarget) DeepCopyInto(out *MaintenanceWindowTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTarget.
func (in *MaintenanceWindowTarget) DeepCopy() *MaintenanceWindowTarget {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetInitParameters) DeepCopyInto(out *MaintenanceWindowTargetInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerInformation != nil {
		in, out := &in.OwnerInformation, &out.OwnerInformation
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTargetTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	if in.WindowIDRef != nil {
		in, out := &in.WindowIDRef, &out.WindowIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowIDSelector != nil {
		in, out := &in.WindowIDSelector, &out.WindowIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetInitParameters.
func (in *MaintenanceWindowTargetInitParameters) DeepCopy() *MaintenanceWindowTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetList) DeepCopyInto(out *MaintenanceWindowTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindowTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetList.
func (in *MaintenanceWindowTargetList) DeepCopy() *MaintenanceWindowTargetList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetObservation) DeepCopyInto(out *MaintenanceWindowTargetObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerInformation != nil {
		in, out := &in.OwnerInformation, &out.OwnerInformation
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTargetTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetObservation.
func (in *MaintenanceWindowTargetObservation) DeepCopy() *MaintenanceWindowTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetParameters) DeepCopyInto(out *MaintenanceWindowTargetParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerInformation != nil {
		in, out := &in.OwnerInformation, &out.OwnerInformation
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTargetTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	if in.WindowIDRef != nil {
		in, out := &in.WindowIDRef, &out.WindowIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowIDSelector != nil {
		in, out := &in.WindowIDSelector, &out.WindowIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetParameters.
func (in *MaintenanceWindowTargetParameters) DeepCopy() *MaintenanceWindowTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetSpec) DeepCopyInto(out *MaintenanceWindowTargetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetSpec.
func (in *MaintenanceWindowTargetSpec) DeepCopy() *MaintenanceWindowTargetSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetStatus) DeepCopyInto(out *MaintenanceWindowTargetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetStatus.
func (in *MaintenanceWindowTargetStatus) DeepCopy() *MaintenanceWindowTargetStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetTargetsInitParameters) DeepCopyInto(out *MaintenanceWindowTargetTargetsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetTargetsInitParameters.
func (in *MaintenanceWindowTargetTargetsInitParameters) DeepCopy() *MaintenanceWindowTargetTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetTargetsObservation) DeepCopyInto(out *MaintenanceWindowTargetTargetsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetTargetsObservation.
func (in *MaintenanceWindowTargetTargetsObservation) DeepCopy() *MaintenanceWindowTargetTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetTargetsParameters) DeepCopyInto(out *MaintenanceWindowTargetTargetsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetTargetsParameters.
func (in *MaintenanceWindowTargetTargetsParameters) DeepCopy() *MaintenanceWindowTargetTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTask) DeepCopyInto(out *MaintenanceWindowTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTask.
func (in *MaintenanceWindowTask) DeepCopy() *MaintenanceWindowTask {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskInitParameters) DeepCopyInto(out *MaintenanceWindowTaskInitParameters) {
	*out = *in
	if in.CutoffBehavior != nil {
		in, out := &in.CutoffBehavior, &out.CutoffBehavior
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTaskTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskArn != nil {
		in, out := &in.TaskArn, &out.TaskArn
		*out = new(string)
		**out = **in
	}
	if in.TaskArnRef != nil {
		in, out := &in.TaskArnRef, &out.TaskArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskArnSelector != nil {
		in, out := &in.TaskArnSelector, &out.TaskArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskInvocationParameters != nil {
		in, out := &in.TaskInvocationParameters, &out.TaskInvocationParameters
		*out = make([]TaskInvocationParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	if in.WindowIDRef != nil {
		in, out := &in.WindowIDRef, &out.WindowIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowIDSelector != nil {
		in, out := &in.WindowIDSelector, &out.WindowIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskInitParameters.
func (in *MaintenanceWindowTaskInitParameters) DeepCopy() *MaintenanceWindowTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskList) DeepCopyInto(out *MaintenanceWindowTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindowTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskList.
func (in *MaintenanceWindowTaskList) DeepCopy() *MaintenanceWindowTaskList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskObservation) DeepCopyInto(out *MaintenanceWindowTaskObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CutoffBehavior != nil {
		in, out := &in.CutoffBehavior, &out.CutoffBehavior
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTaskTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskArn != nil {
		in, out := &in.TaskArn, &out.TaskArn
		*out = new(string)
		**out = **in
	}
	if in.TaskInvocationParameters != nil {
		in, out := &in.TaskInvocationParameters, &out.TaskInvocationParameters
		*out = make([]TaskInvocationParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	if in.WindowTaskID != nil {
		in, out := &in.WindowTaskID, &out.WindowTaskID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskObservation.
func (in *MaintenanceWindowTaskObservation) DeepCopy() *MaintenanceWindowTaskObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskParameters) DeepCopyInto(out *MaintenanceWindowTaskParameters) {
	*out = *in
	if in.CutoffBehavior != nil {
		in, out := &in.CutoffBehavior, &out.CutoffBehavior
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTaskTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskArn != nil {
		in, out := &in.TaskArn, &out.TaskArn
		*out = new(string)
		**out = **in
	}
	if in.TaskArnRef != nil {
		in, out := &in.TaskArnRef, &out.TaskArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskArnSelector != nil {
		in, out := &in.TaskArnSelector, &out.TaskArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskInvocationParameters != nil {
		in, out := &in.TaskInvocationParameters, &out.TaskInvocationParameters
		*out = make([]TaskInvocationParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	if in.WindowIDRef != nil {
		in, out := &in.WindowIDRef, &out.WindowIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowIDSelector != nil {
		in, out := &in.WindowIDSelector, &out.WindowIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskParameters.
func (in *MaintenanceWindowTaskParameters) DeepCopy() *MaintenanceWindowTaskParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpec) DeepCopyInto(out *MaintenanceWindowTaskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpec.
func (in *MaintenanceWindowTaskSpec) DeepCopy() *MaintenanceWindowTaskSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskStatus) DeepCopyInto(out *MaintenanceWindowTaskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskStatus.
func (in *MaintenanceWindowTaskStatus) DeepCopy() *MaintenanceWindowTaskStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskTargetsInitParameters) DeepCopyInto(out *MaintenanceWindowTaskTargetsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskTargetsInitParameters.
func (in *MaintenanceWindowTaskTargetsInitParameters) DeepCopy() *MaintenanceWindowTaskTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskTargetsObservation) DeepCopyInto(out *MaintenanceWindowTaskTargetsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskTargetsObservation.
func (in *MaintenanceWindowTaskTargetsObservation) DeepCopy() *MaintenanceWindowTaskTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskTargetsParameters) DeepCopyInto(out *MaintenanceWindowTaskTargetsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskTargetsParameters.
func (in *MaintenanceWindowTaskTargetsParameters) DeepCopy() *MaintenanceWindowTaskTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfigInitParameters) DeepCopyInto(out *NotificationConfigInitParameters) {
	*out = *in
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationArnRef != nil {
		in, out := &in.NotificationArnRef, &out.NotificationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationArnSelector != nil {
		in, out := &in.NotificationArnSelector, &out.NotificationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationEvents != nil {
		in, out := &in.NotificationEvents, &out.NotificationEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfigInitParameters.
func (in *NotificationConfigInitParameters) DeepCopy() *NotificationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfigObservation) DeepCopyInto(out *NotificationConfigObservation) {
	*out = *in
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationEvents != nil {
		in, out := &in.NotificationEvents, &out.NotificationEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfigObservation.
func (in *NotificationConfigObservation) DeepCopy() *NotificationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationConfigParameters) DeepCopyInto(out *NotificationConfigParameters) {
	*out = *in
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationArnRef != nil {
		in, out := &in.NotificationArnRef, &out.NotificationArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationArnSelector != nil {
		in, out := &in.NotificationArnSelector, &out.NotificationArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationEvents != nil {
		in, out := &in.NotificationEvents, &out.NotificationEvents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationConfigParameters.
func (in *NotificationConfigParameters) DeepCopy() *NotificationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputLocationInitParameters) DeepCopyInto(out *OutputLocationInitParameters) {
	*out = *in
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputLocationInitParameters.
func (in *OutputLocationInitParameters) DeepCopy() *OutputLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutputLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputLocationObservation) DeepCopyInto(out *OutputLocationObservation) {
	*out = *in
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputLocationObservation.
func (in *OutputLocationObservation) DeepCopy() *OutputLocationObservation {
	if in == nil {
		return nil
	}
	out := new(OutputLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputLocationParameters) DeepCopyInto(out *OutputLocationParameters) {
	*out = *in
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.S3Region != nil {
		in, out := &in.S3Region, &out.S3Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputLocationParameters.
func (in *OutputLocationParameters) DeepCopy() *OutputLocationParameters {
	if in == nil {
		return nil
	}
	out := new(OutputLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parameter) DeepCopyInto(out *Parameter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parameter.
func (in *Parameter) DeepCopy() *Parameter {
	if in == nil {
		return nil
	}
	out := new(Parameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Parameter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterInitParameters) DeepCopyInto(out *ParameterInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterInitParameters.
func (in *ParameterInitParameters) DeepCopy() *ParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterInitParameters_2) DeepCopyInto(out *ParameterInitParameters_2) {
	*out = *in
	if in.AllowedPattern != nil {
		in, out := &in.AllowedPattern, &out.AllowedPattern
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InsecureValue != nil {
		in, out := &in.InsecureValue, &out.InsecureValue
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterInitParameters_2.
func (in *ParameterInitParameters_2) DeepCopy() *ParameterInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ParameterInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterList) DeepCopyInto(out *ParameterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Parameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterList.
func (in *ParameterList) DeepCopy() *ParameterList {
	if in == nil {
		return nil
	}
	out := new(ParameterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ParameterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation) DeepCopyInto(out *ParameterObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation.
func (in *ParameterObservation) DeepCopy() *ParameterObservation {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterObservation_2) DeepCopyInto(out *ParameterObservation_2) {
	*out = *in
	if in.AllowedPattern != nil {
		in, out := &in.AllowedPattern, &out.AllowedPattern
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsecureValue != nil {
		in, out := &in.InsecureValue, &out.InsecureValue
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterObservation_2.
func (in *ParameterObservation_2) DeepCopy() *ParameterObservation_2 {
	if in == nil {
		return nil
	}
	out := new(ParameterObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters) DeepCopyInto(out *ParameterParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters.
func (in *ParameterParameters) DeepCopy() *ParameterParameters {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterParameters_2) DeepCopyInto(out *ParameterParameters_2) {
	*out = *in
	if in.AllowedPattern != nil {
		in, out := &in.AllowedPattern, &out.AllowedPattern
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InsecureValue != nil {
		in, out := &in.InsecureValue, &out.InsecureValue
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterParameters_2.
func (in *ParameterParameters_2) DeepCopy() *ParameterParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ParameterParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterSpec) DeepCopyInto(out *ParameterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterSpec.
func (in *ParameterSpec) DeepCopy() *ParameterSpec {
	if in == nil {
		return nil
	}
	out := new(ParameterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterStatus) DeepCopyInto(out *ParameterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterStatus.
func (in *ParameterStatus) DeepCopy() *ParameterStatus {
	if in == nil {
		return nil
	}
	out := new(ParameterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaseline) DeepCopyInto(out *PatchBaseline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaseline.
func (in *PatchBaseline) DeepCopy() *PatchBaseline {
	if in == nil {
		return nil
	}
	out := new(PatchBaseline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchBaseline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineInitParameters) DeepCopyInto(out *PatchBaselineInitParameters) {
	*out = *in
	if in.ApprovalRule != nil {
		in, out := &in.ApprovalRule, &out.ApprovalRule
		*out = make([]ApprovalRuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovedPatches != nil {
		in, out := &in.ApprovedPatches, &out.ApprovedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ApprovedPatchesComplianceLevel != nil {
		in, out := &in.ApprovedPatchesComplianceLevel, &out.ApprovedPatchesComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.ApprovedPatchesEnableNonSecurity != nil {
		in, out := &in.ApprovedPatchesEnableNonSecurity, &out.ApprovedPatchesEnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlobalFilter != nil {
		in, out := &in.GlobalFilter, &out.GlobalFilter
		*out = make([]GlobalFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RejectedPatches != nil {
		in, out := &in.RejectedPatches, &out.RejectedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RejectedPatchesAction != nil {
		in, out := &in.RejectedPatchesAction, &out.RejectedPatchesAction
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineInitParameters.
func (in *PatchBaselineInitParameters) DeepCopy() *PatchBaselineInitParameters {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineList) DeepCopyInto(out *PatchBaselineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PatchBaseline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineList.
func (in *PatchBaselineList) DeepCopy() *PatchBaselineList {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchBaselineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineObservation) DeepCopyInto(out *PatchBaselineObservation) {
	*out = *in
	if in.ApprovalRule != nil {
		in, out := &in.ApprovalRule, &out.ApprovalRule
		*out = make([]ApprovalRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovedPatches != nil {
		in, out := &in.ApprovedPatches, &out.ApprovedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ApprovedPatchesComplianceLevel != nil {
		in, out := &in.ApprovedPatchesComplianceLevel, &out.ApprovedPatchesComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.ApprovedPatchesEnableNonSecurity != nil {
		in, out := &in.ApprovedPatchesEnableNonSecurity, &out.ApprovedPatchesEnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlobalFilter != nil {
		in, out := &in.GlobalFilter, &out.GlobalFilter
		*out = make([]GlobalFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JSON != nil {
		in, out := &in.JSON, &out.JSON
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RejectedPatches != nil {
		in, out := &in.RejectedPatches, &out.RejectedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RejectedPatchesAction != nil {
		in, out := &in.RejectedPatchesAction, &out.RejectedPatchesAction
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineObservation.
func (in *PatchBaselineObservation) DeepCopy() *PatchBaselineObservation {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineParameters) DeepCopyInto(out *PatchBaselineParameters) {
	*out = *in
	if in.ApprovalRule != nil {
		in, out := &in.ApprovalRule, &out.ApprovalRule
		*out = make([]ApprovalRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovedPatches != nil {
		in, out := &in.ApprovedPatches, &out.ApprovedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ApprovedPatchesComplianceLevel != nil {
		in, out := &in.ApprovedPatchesComplianceLevel, &out.ApprovedPatchesComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.ApprovedPatchesEnableNonSecurity != nil {
		in, out := &in.ApprovedPatchesEnableNonSecurity, &out.ApprovedPatchesEnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlobalFilter != nil {
		in, out := &in.GlobalFilter, &out.GlobalFilter
		*out = make([]GlobalFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RejectedPatches != nil {
		in, out := &in.RejectedPatches, &out.RejectedPatches
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RejectedPatchesAction != nil {
		in, out := &in.RejectedPatchesAction, &out.RejectedPatchesAction
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineParameters.
func (in *PatchBaselineParameters) DeepCopy() *PatchBaselineParameters {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpec) DeepCopyInto(out *PatchBaselineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpec.
func (in *PatchBaselineSpec) DeepCopy() *PatchBaselineSpec {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineStatus) DeepCopyInto(out *PatchBaselineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineStatus.
func (in *PatchBaselineStatus) DeepCopy() *PatchBaselineStatus {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchFilterInitParameters) DeepCopyInto(out *PatchFilterInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchFilterInitParameters.
func (in *PatchFilterInitParameters) DeepCopy() *PatchFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PatchFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchFilterObservation) DeepCopyInto(out *PatchFilterObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchFilterObservation.
func (in *PatchFilterObservation) DeepCopy() *PatchFilterObservation {
	if in == nil {
		return nil
	}
	out := new(PatchFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchFilterParameters) DeepCopyInto(out *PatchFilterParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchFilterParameters.
func (in *PatchFilterParameters) DeepCopy() *PatchFilterParameters {
	if in == nil {
		return nil
	}
	out := new(PatchFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroup) DeepCopyInto(out *PatchGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroup.
func (in *PatchGroup) DeepCopy() *PatchGroup {
	if in == nil {
		return nil
	}
	out := new(PatchGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupInitParameters) DeepCopyInto(out *PatchGroupInitParameters) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.BaselineIDRef != nil {
		in, out := &in.BaselineIDRef, &out.BaselineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaselineIDSelector != nil {
		in, out := &in.BaselineIDSelector, &out.BaselineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PatchGroup != nil {
		in, out := &in.PatchGroup, &out.PatchGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupInitParameters.
func (in *PatchGroupInitParameters) DeepCopy() *PatchGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PatchGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupList) DeepCopyInto(out *PatchGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PatchGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupList.
func (in *PatchGroupList) DeepCopy() *PatchGroupList {
	if in == nil {
		return nil
	}
	out := new(PatchGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupObservation) DeepCopyInto(out *PatchGroupObservation) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PatchGroup != nil {
		in, out := &in.PatchGroup, &out.PatchGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupObservation.
func (in *PatchGroupObservation) DeepCopy() *PatchGroupObservation {
	if in == nil {
		return nil
	}
	out := new(PatchGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupParameters) DeepCopyInto(out *PatchGroupParameters) {
	*out = *in
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.BaselineIDRef != nil {
		in, out := &in.BaselineIDRef, &out.BaselineIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BaselineIDSelector != nil {
		in, out := &in.BaselineIDSelector, &out.BaselineIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PatchGroup != nil {
		in, out := &in.PatchGroup, &out.PatchGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupParameters.
func (in *PatchGroupParameters) DeepCopy() *PatchGroupParameters {
	if in == nil {
		return nil
	}
	out := new(PatchGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupSpec) DeepCopyInto(out *PatchGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupSpec.
func (in *PatchGroupSpec) DeepCopy() *PatchGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PatchGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupStatus) DeepCopyInto(out *PatchGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupStatus.
func (in *PatchGroupStatus) DeepCopy() *PatchGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PatchGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSync) DeepCopyInto(out *ResourceDataSync) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSync.
func (in *ResourceDataSync) DeepCopy() *ResourceDataSync {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceDataSync) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncInitParameters) DeepCopyInto(out *ResourceDataSyncInitParameters) {
	*out = *in
	if in.S3Destination != nil {
		in, out := &in.S3Destination, &out.S3Destination
		*out = make([]S3DestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncInitParameters.
func (in *ResourceDataSyncInitParameters) DeepCopy() *ResourceDataSyncInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncList) DeepCopyInto(out *ResourceDataSyncList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourceDataSync, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncList.
func (in *ResourceDataSyncList) DeepCopy() *ResourceDataSyncList {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceDataSyncList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncObservation) DeepCopyInto(out *ResourceDataSyncObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.S3Destination != nil {
		in, out := &in.S3Destination, &out.S3Destination
		*out = make([]S3DestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncObservation.
func (in *ResourceDataSyncObservation) DeepCopy() *ResourceDataSyncObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncParameters) DeepCopyInto(out *ResourceDataSyncParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3Destination != nil {
		in, out := &in.S3Destination, &out.S3Destination
		*out = make([]S3DestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncParameters.
func (in *ResourceDataSyncParameters) DeepCopy() *ResourceDataSyncParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncSpec) DeepCopyInto(out *ResourceDataSyncSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncSpec.
func (in *ResourceDataSyncSpec) DeepCopy() *ResourceDataSyncSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncStatus) DeepCopyInto(out *ResourceDataSyncStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncStatus.
func (in *ResourceDataSyncStatus) DeepCopy() *ResourceDataSyncStatus {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersInitParameters) DeepCopyInto(out *RunCommandParametersInitParameters) {
	*out = *in
	if in.CloudwatchConfig != nil {
		in, out := &in.CloudwatchConfig, &out.CloudwatchConfig
		*out = make([]CloudwatchConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DocumentHash != nil {
		in, out := &in.DocumentHash, &out.DocumentHash
		*out = new(string)
		**out = **in
	}
	if in.DocumentHashType != nil {
		in, out := &in.DocumentHashType, &out.DocumentHashType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.NotificationConfig != nil {
		in, out := &in.NotificationConfig, &out.NotificationConfig
		*out = make([]NotificationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputS3Bucket != nil {
		in, out := &in.OutputS3Bucket, &out.OutputS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.OutputS3BucketRef != nil {
		in, out := &in.OutputS3BucketRef, &out.OutputS3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputS3BucketSelector != nil {
		in, out := &in.OutputS3BucketSelector, &out.OutputS3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputS3KeyPrefix != nil {
		in, out := &in.OutputS3KeyPrefix, &out.OutputS3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]RunCommandParametersParameterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersInitParameters.
func (in *RunCommandParametersInitParameters) DeepCopy() *RunCommandParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersObservation) DeepCopyInto(out *RunCommandParametersObservation) {
	*out = *in
	if in.CloudwatchConfig != nil {
		in, out := &in.CloudwatchConfig, &out.CloudwatchConfig
		*out = make([]CloudwatchConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DocumentHash != nil {
		in, out := &in.DocumentHash, &out.DocumentHash
		*out = new(string)
		**out = **in
	}
	if in.DocumentHashType != nil {
		in, out := &in.DocumentHashType, &out.DocumentHashType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.NotificationConfig != nil {
		in, out := &in.NotificationConfig, &out.NotificationConfig
		*out = make([]NotificationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputS3Bucket != nil {
		in, out := &in.OutputS3Bucket, &out.OutputS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.OutputS3KeyPrefix != nil {
		in, out := &in.OutputS3KeyPrefix, &out.OutputS3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]RunCommandParametersParameterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersObservation.
func (in *RunCommandParametersObservation) DeepCopy() *RunCommandParametersObservation {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersParameterInitParameters) DeepCopyInto(out *RunCommandParametersParameterInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersParameterInitParameters.
func (in *RunCommandParametersParameterInitParameters) DeepCopy() *RunCommandParametersParameterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersParameterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersParameterObservation) DeepCopyInto(out *RunCommandParametersParameterObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersParameterObservation.
func (in *RunCommandParametersParameterObservation) DeepCopy() *RunCommandParametersParameterObservation {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersParameterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersParameterParameters) DeepCopyInto(out *RunCommandParametersParameterParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersParameterParameters.
func (in *RunCommandParametersParameterParameters) DeepCopy() *RunCommandParametersParameterParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersParameterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunCommandParametersParameters) DeepCopyInto(out *RunCommandParametersParameters) {
	*out = *in
	if in.CloudwatchConfig != nil {
		in, out := &in.CloudwatchConfig, &out.CloudwatchConfig
		*out = make([]CloudwatchConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DocumentHash != nil {
		in, out := &in.DocumentHash, &out.DocumentHash
		*out = new(string)
		**out = **in
	}
	if in.DocumentHashType != nil {
		in, out := &in.DocumentHashType, &out.DocumentHashType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.NotificationConfig != nil {
		in, out := &in.NotificationConfig, &out.NotificationConfig
		*out = make([]NotificationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutputS3Bucket != nil {
		in, out := &in.OutputS3Bucket, &out.OutputS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.OutputS3BucketRef != nil {
		in, out := &in.OutputS3BucketRef, &out.OutputS3BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputS3BucketSelector != nil {
		in, out := &in.OutputS3BucketSelector, &out.OutputS3BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputS3KeyPrefix != nil {
		in, out := &in.OutputS3KeyPrefix, &out.OutputS3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]RunCommandParametersParameterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunCommandParametersParameters.
func (in *RunCommandParametersParameters) DeepCopy() *RunCommandParametersParameters {
	if in == nil {
		return nil
	}
	out := new(RunCommandParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationInitParameters) DeepCopyInto(out *S3DestinationInitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.SyncFormat != nil {
		in, out := &in.SyncFormat, &out.SyncFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationInitParameters.
func (in *S3DestinationInitParameters) DeepCopy() *S3DestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(S3DestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationObservation) DeepCopyInto(out *S3DestinationObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SyncFormat != nil {
		in, out := &in.SyncFormat, &out.SyncFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationObservation.
func (in *S3DestinationObservation) DeepCopy() *S3DestinationObservation {
	if in == nil {
		return nil
	}
	out := new(S3DestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3DestinationParameters) DeepCopyInto(out *S3DestinationParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.BucketNameRef != nil {
		in, out := &in.BucketNameRef, &out.BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketNameSelector != nil {
		in, out := &in.BucketNameSelector, &out.BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyArn != nil {
		in, out := &in.KMSKeyArn, &out.KMSKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionRef != nil {
		in, out := &in.RegionRef, &out.RegionRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RegionSelector != nil {
		in, out := &in.RegionSelector, &out.RegionSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SyncFormat != nil {
		in, out := &in.SyncFormat, &out.SyncFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3DestinationParameters.
func (in *S3DestinationParameters) DeepCopy() *S3DestinationParameters {
	if in == nil {
		return nil
	}
	out := new(S3DestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSetting) DeepCopyInto(out *ServiceSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSetting.
func (in *ServiceSetting) DeepCopy() *ServiceSetting {
	if in == nil {
		return nil
	}
	out := new(ServiceSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingInitParameters) DeepCopyInto(out *ServiceSettingInitParameters) {
	*out = *in
	if in.SettingID != nil {
		in, out := &in.SettingID, &out.SettingID
		*out = new(string)
		**out = **in
	}
	if in.SettingValue != nil {
		in, out := &in.SettingValue, &out.SettingValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingInitParameters.
func (in *ServiceSettingInitParameters) DeepCopy() *ServiceSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingList) DeepCopyInto(out *ServiceSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingList.
func (in *ServiceSettingList) DeepCopy() *ServiceSettingList {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingObservation) DeepCopyInto(out *ServiceSettingObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SettingID != nil {
		in, out := &in.SettingID, &out.SettingID
		*out = new(string)
		**out = **in
	}
	if in.SettingValue != nil {
		in, out := &in.SettingValue, &out.SettingValue
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingObservation.
func (in *ServiceSettingObservation) DeepCopy() *ServiceSettingObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingParameters) DeepCopyInto(out *ServiceSettingParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SettingID != nil {
		in, out := &in.SettingID, &out.SettingID
		*out = new(string)
		**out = **in
	}
	if in.SettingValue != nil {
		in, out := &in.SettingValue, &out.SettingValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingParameters.
func (in *ServiceSettingParameters) DeepCopy() *ServiceSettingParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingSpec) DeepCopyInto(out *ServiceSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingSpec.
func (in *ServiceSettingSpec) DeepCopy() *ServiceSettingSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSettingStatus) DeepCopyInto(out *ServiceSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSettingStatus.
func (in *ServiceSettingStatus) DeepCopy() *ServiceSettingStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceInitParameters) DeepCopyInto(out *SourceInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Products != nil {
		in, out := &in.Products, &out.Products
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceInitParameters.
func (in *SourceInitParameters) DeepCopy() *SourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Products != nil {
		in, out := &in.Products, &out.Products
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Products != nil {
		in, out := &in.Products, &out.Products
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsParametersInitParameters) DeepCopyInto(out *StepFunctionsParametersInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsParametersInitParameters.
func (in *StepFunctionsParametersInitParameters) DeepCopy() *StepFunctionsParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsParametersObservation) DeepCopyInto(out *StepFunctionsParametersObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsParametersObservation.
func (in *StepFunctionsParametersObservation) DeepCopy() *StepFunctionsParametersObservation {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepFunctionsParametersParameters) DeepCopyInto(out *StepFunctionsParametersParameters) {
	*out = *in
	if in.InputSecretRef != nil {
		in, out := &in.InputSecretRef, &out.InputSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepFunctionsParametersParameters.
func (in *StepFunctionsParametersParameters) DeepCopy() *StepFunctionsParametersParameters {
	if in == nil {
		return nil
	}
	out := new(StepFunctionsParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsInitParameters) DeepCopyInto(out *TargetsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsInitParameters.
func (in *TargetsInitParameters) DeepCopy() *TargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsObservation) DeepCopyInto(out *TargetsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsObservation.
func (in *TargetsObservation) DeepCopy() *TargetsObservation {
	if in == nil {
		return nil
	}
	out := new(TargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetsParameters) DeepCopyInto(out *TargetsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetsParameters.
func (in *TargetsParameters) DeepCopy() *TargetsParameters {
	if in == nil {
		return nil
	}
	out := new(TargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInvocationParametersInitParameters) DeepCopyInto(out *TaskInvocationParametersInitParameters) {
	*out = *in
	if in.AutomationParameters != nil {
		in, out := &in.AutomationParameters, &out.AutomationParameters
		*out = make([]AutomationParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LambdaParameters != nil {
		in, out := &in.LambdaParameters, &out.LambdaParameters
		*out = make([]LambdaParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunCommandParameters != nil {
		in, out := &in.RunCommandParameters, &out.RunCommandParameters
		*out = make([]RunCommandParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctionsParameters != nil {
		in, out := &in.StepFunctionsParameters, &out.StepFunctionsParameters
		*out = make([]StepFunctionsParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInvocationParametersInitParameters.
func (in *TaskInvocationParametersInitParameters) DeepCopy() *TaskInvocationParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInvocationParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInvocationParametersObservation) DeepCopyInto(out *TaskInvocationParametersObservation) {
	*out = *in
	if in.AutomationParameters != nil {
		in, out := &in.AutomationParameters, &out.AutomationParameters
		*out = make([]AutomationParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LambdaParameters != nil {
		in, out := &in.LambdaParameters, &out.LambdaParameters
		*out = make([]LambdaParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunCommandParameters != nil {
		in, out := &in.RunCommandParameters, &out.RunCommandParameters
		*out = make([]RunCommandParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctionsParameters != nil {
		in, out := &in.StepFunctionsParameters, &out.StepFunctionsParameters
		*out = make([]StepFunctionsParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInvocationParametersObservation.
func (in *TaskInvocationParametersObservation) DeepCopy() *TaskInvocationParametersObservation {
	if in == nil {
		return nil
	}
	out := new(TaskInvocationParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInvocationParametersParameters) DeepCopyInto(out *TaskInvocationParametersParameters) {
	*out = *in
	if in.AutomationParameters != nil {
		in, out := &in.AutomationParameters, &out.AutomationParameters
		*out = make([]AutomationParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LambdaParameters != nil {
		in, out := &in.LambdaParameters, &out.LambdaParameters
		*out = make([]LambdaParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunCommandParameters != nil {
		in, out := &in.RunCommandParameters, &out.RunCommandParameters
		*out = make([]RunCommandParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StepFunctionsParameters != nil {
		in, out := &in.StepFunctionsParameters, &out.StepFunctionsParameters
		*out = make([]StepFunctionsParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInvocationParametersParameters.
func (in *TaskInvocationParametersParameters) DeepCopy() *TaskInvocationParametersParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInvocationParametersParameters)
	in.DeepCopyInto(out)
	return out
}

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RuleGroupNamespaceObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RuleGroupNamespaceParameters struct {

	// the rule group namespace data that you want to be applied. See more in AWS Docs.
	// +kubebuilder:validation:Required
	Data *string `json:"data" tf:"data,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// ID of the prometheus workspace the rule group namespace should be linked to
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/amp/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// Reference to a Workspace in amp to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDRef *v1.Reference `json:"workspaceIdRef,omitempty" tf:"-"`

	// Selector for a Workspace in amp to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDSelector *v1.Selector `json:"workspaceIdSelector,omitempty" tf:"-"`
}

// RuleGroupNamespaceSpec defines the desired state of RuleGroupNamespace
type RuleGroupNamespaceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleGroupNamespaceParameters `json:"forProvider"`
}

// RuleGroupNamespaceStatus defines the observed state of RuleGroupNamespace.
type RuleGroupNamespaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleGroupNamespaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupNamespace is the Schema for the RuleGroupNamespaces API. Manages an Amazon Managed Service for Prometheus (AMP) Rule Group Namespace
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type RuleGroupNamespace struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RuleGroupNamespaceSpec   `json:"spec"`
	Status            RuleGroupNamespaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleGroupNamespaceList contains a list of RuleGroupNamespaces
type RuleGroupNamespaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RuleGroupNamespace `json:"items"`
}

// Repository type metadata.
var (
	RuleGroupNamespace_Kind             = "RuleGroupNamespace"
	RuleGroupNamespace_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RuleGroupNamespace_Kind}.String()
	RuleGroupNamespace_KindAPIVersion   = RuleGroupNamespace_Kind + "." + CRDGroupVersion.String()
	RuleGroupNamespace_GroupVersionKind = CRDGroupVersion.WithKind(RuleGroupNamespace_Kind)
)

func init() {
	SchemeBuilder.Register(&RuleGroupNamespace{}, &RuleGroupNamespaceList{})
}

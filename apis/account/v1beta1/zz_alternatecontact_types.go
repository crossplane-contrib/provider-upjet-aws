// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlternateContactInitParameters struct {

	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// An email address for the alternate contact.
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// Name of the alternate contact.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Phone number for the alternate contact.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`

	// Title for the alternate contact.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type AlternateContactObservation struct {

	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Type of the alternate contact. Allowed values are: BILLING, OPERATIONS, SECURITY.
	AlternateContactType *string `json:"alternateContactType,omitempty" tf:"alternate_contact_type,omitempty"`

	// An email address for the alternate contact.
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the alternate contact.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Phone number for the alternate contact.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`

	// Title for the alternate contact.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type AlternateContactParameters struct {

	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Type of the alternate contact. Allowed values are: BILLING, OPERATIONS, SECURITY.
	// +kubebuilder:validation:Required
	AlternateContactType *string `json:"alternateContactType" tf:"alternate_contact_type,omitempty"`

	// An email address for the alternate contact.
	// +kubebuilder:validation:Optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// Name of the alternate contact.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Phone number for the alternate contact.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// Title for the alternate contact.
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

// AlternateContactSpec defines the desired state of AlternateContact
type AlternateContactSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlternateContactParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AlternateContactInitParameters `json:"initProvider,omitempty"`
}

// AlternateContactStatus defines the observed state of AlternateContact.
type AlternateContactStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlternateContactObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AlternateContact is the Schema for the AlternateContacts API. Manages the specified alternate contact attached to an AWS Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type AlternateContact struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.emailAddress) || (has(self.initProvider) && has(self.initProvider.emailAddress))",message="spec.forProvider.emailAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.phoneNumber) || (has(self.initProvider) && has(self.initProvider.phoneNumber))",message="spec.forProvider.phoneNumber is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) && has(self.initProvider.title))",message="spec.forProvider.title is a required parameter"
	Spec   AlternateContactSpec   `json:"spec"`
	Status AlternateContactStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlternateContactList contains a list of AlternateContacts
type AlternateContactList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlternateContact `json:"items"`
}

// Repository type metadata.
var (
	AlternateContact_Kind             = "AlternateContact"
	AlternateContact_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlternateContact_Kind}.String()
	AlternateContact_KindAPIVersion   = AlternateContact_Kind + "." + CRDGroupVersion.String()
	AlternateContact_GroupVersionKind = CRDGroupVersion.WithKind(AlternateContact_Kind)
)

func init() {
	SchemeBuilder.Register(&AlternateContact{}, &AlternateContactList{})
}

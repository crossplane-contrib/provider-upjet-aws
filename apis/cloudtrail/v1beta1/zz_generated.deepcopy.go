//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorFieldSelectorInitParameters) DeepCopyInto(out *AdvancedEventSelectorFieldSelectorInitParameters) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorFieldSelectorInitParameters.
func (in *AdvancedEventSelectorFieldSelectorInitParameters) DeepCopy() *AdvancedEventSelectorFieldSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorFieldSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorFieldSelectorObservation) DeepCopyInto(out *AdvancedEventSelectorFieldSelectorObservation) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorFieldSelectorObservation.
func (in *AdvancedEventSelectorFieldSelectorObservation) DeepCopy() *AdvancedEventSelectorFieldSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorFieldSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorFieldSelectorParameters) DeepCopyInto(out *AdvancedEventSelectorFieldSelectorParameters) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorFieldSelectorParameters.
func (in *AdvancedEventSelectorFieldSelectorParameters) DeepCopy() *AdvancedEventSelectorFieldSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorFieldSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorInitParameters) DeepCopyInto(out *AdvancedEventSelectorInitParameters) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]FieldSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorInitParameters.
func (in *AdvancedEventSelectorInitParameters) DeepCopy() *AdvancedEventSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorObservation) DeepCopyInto(out *AdvancedEventSelectorObservation) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]FieldSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorObservation.
func (in *AdvancedEventSelectorObservation) DeepCopy() *AdvancedEventSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedEventSelectorParameters) DeepCopyInto(out *AdvancedEventSelectorParameters) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]FieldSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedEventSelectorParameters.
func (in *AdvancedEventSelectorParameters) DeepCopy() *AdvancedEventSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedEventSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceInitParameters) DeepCopyInto(out *DataResourceInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceInitParameters.
func (in *DataResourceInitParameters) DeepCopy() *DataResourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataResourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceObservation) DeepCopyInto(out *DataResourceObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceObservation.
func (in *DataResourceObservation) DeepCopy() *DataResourceObservation {
	if in == nil {
		return nil
	}
	out := new(DataResourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceParameters) DeepCopyInto(out *DataResourceParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceParameters.
func (in *DataResourceParameters) DeepCopy() *DataResourceParameters {
	if in == nil {
		return nil
	}
	out := new(DataResourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStore) DeepCopyInto(out *EventDataStore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStore.
func (in *EventDataStore) DeepCopy() *EventDataStore {
	if in == nil {
		return nil
	}
	out := new(EventDataStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventDataStore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreAdvancedEventSelectorInitParameters) DeepCopyInto(out *EventDataStoreAdvancedEventSelectorInitParameters) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]AdvancedEventSelectorFieldSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreAdvancedEventSelectorInitParameters.
func (in *EventDataStoreAdvancedEventSelectorInitParameters) DeepCopy() *EventDataStoreAdvancedEventSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreAdvancedEventSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreAdvancedEventSelectorObservation) DeepCopyInto(out *EventDataStoreAdvancedEventSelectorObservation) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]AdvancedEventSelectorFieldSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreAdvancedEventSelectorObservation.
func (in *EventDataStoreAdvancedEventSelectorObservation) DeepCopy() *EventDataStoreAdvancedEventSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreAdvancedEventSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreAdvancedEventSelectorParameters) DeepCopyInto(out *EventDataStoreAdvancedEventSelectorParameters) {
	*out = *in
	if in.FieldSelector != nil {
		in, out := &in.FieldSelector, &out.FieldSelector
		*out = make([]AdvancedEventSelectorFieldSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreAdvancedEventSelectorParameters.
func (in *EventDataStoreAdvancedEventSelectorParameters) DeepCopy() *EventDataStoreAdvancedEventSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreAdvancedEventSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreInitParameters) DeepCopyInto(out *EventDataStoreInitParameters) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]EventDataStoreAdvancedEventSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiRegionEnabled != nil {
		in, out := &in.MultiRegionEnabled, &out.MultiRegionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationEnabled != nil {
		in, out := &in.OrganizationEnabled, &out.OrganizationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreInitParameters.
func (in *EventDataStoreInitParameters) DeepCopy() *EventDataStoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreList) DeepCopyInto(out *EventDataStoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EventDataStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreList.
func (in *EventDataStoreList) DeepCopy() *EventDataStoreList {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EventDataStoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreObservation) DeepCopyInto(out *EventDataStoreObservation) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]EventDataStoreAdvancedEventSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.MultiRegionEnabled != nil {
		in, out := &in.MultiRegionEnabled, &out.MultiRegionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationEnabled != nil {
		in, out := &in.OrganizationEnabled, &out.OrganizationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreObservation.
func (in *EventDataStoreObservation) DeepCopy() *EventDataStoreObservation {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreParameters) DeepCopyInto(out *EventDataStoreParameters) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]EventDataStoreAdvancedEventSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiRegionEnabled != nil {
		in, out := &in.MultiRegionEnabled, &out.MultiRegionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrganizationEnabled != nil {
		in, out := &in.OrganizationEnabled, &out.OrganizationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriod != nil {
		in, out := &in.RetentionPeriod, &out.RetentionPeriod
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreParameters.
func (in *EventDataStoreParameters) DeepCopy() *EventDataStoreParameters {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreSpec) DeepCopyInto(out *EventDataStoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreSpec.
func (in *EventDataStoreSpec) DeepCopy() *EventDataStoreSpec {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventDataStoreStatus) DeepCopyInto(out *EventDataStoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventDataStoreStatus.
func (in *EventDataStoreStatus) DeepCopy() *EventDataStoreStatus {
	if in == nil {
		return nil
	}
	out := new(EventDataStoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSelectorInitParameters) DeepCopyInto(out *EventSelectorInitParameters) {
	*out = *in
	if in.DataResource != nil {
		in, out := &in.DataResource, &out.DataResource
		*out = make([]DataResourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeManagementEventSources != nil {
		in, out := &in.ExcludeManagementEventSources, &out.ExcludeManagementEventSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeManagementEvents != nil {
		in, out := &in.IncludeManagementEvents, &out.IncludeManagementEvents
		*out = new(bool)
		**out = **in
	}
	if in.ReadWriteType != nil {
		in, out := &in.ReadWriteType, &out.ReadWriteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSelectorInitParameters.
func (in *EventSelectorInitParameters) DeepCopy() *EventSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSelectorObservation) DeepCopyInto(out *EventSelectorObservation) {
	*out = *in
	if in.DataResource != nil {
		in, out := &in.DataResource, &out.DataResource
		*out = make([]DataResourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeManagementEventSources != nil {
		in, out := &in.ExcludeManagementEventSources, &out.ExcludeManagementEventSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeManagementEvents != nil {
		in, out := &in.IncludeManagementEvents, &out.IncludeManagementEvents
		*out = new(bool)
		**out = **in
	}
	if in.ReadWriteType != nil {
		in, out := &in.ReadWriteType, &out.ReadWriteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSelectorObservation.
func (in *EventSelectorObservation) DeepCopy() *EventSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(EventSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventSelectorParameters) DeepCopyInto(out *EventSelectorParameters) {
	*out = *in
	if in.DataResource != nil {
		in, out := &in.DataResource, &out.DataResource
		*out = make([]DataResourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeManagementEventSources != nil {
		in, out := &in.ExcludeManagementEventSources, &out.ExcludeManagementEventSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeManagementEvents != nil {
		in, out := &in.IncludeManagementEvents, &out.IncludeManagementEvents
		*out = new(bool)
		**out = **in
	}
	if in.ReadWriteType != nil {
		in, out := &in.ReadWriteType, &out.ReadWriteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventSelectorParameters.
func (in *EventSelectorParameters) DeepCopy() *EventSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(EventSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSelectorInitParameters) DeepCopyInto(out *FieldSelectorInitParameters) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSelectorInitParameters.
func (in *FieldSelectorInitParameters) DeepCopy() *FieldSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(FieldSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSelectorObservation) DeepCopyInto(out *FieldSelectorObservation) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSelectorObservation.
func (in *FieldSelectorObservation) DeepCopy() *FieldSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(FieldSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSelectorParameters) DeepCopyInto(out *FieldSelectorParameters) {
	*out = *in
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Equals != nil {
		in, out := &in.Equals, &out.Equals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.NotEndsWith != nil {
		in, out := &in.NotEndsWith, &out.NotEndsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotEquals != nil {
		in, out := &in.NotEquals, &out.NotEquals
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotStartsWith != nil {
		in, out := &in.NotStartsWith, &out.NotStartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSelectorParameters.
func (in *FieldSelectorParameters) DeepCopy() *FieldSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(FieldSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightSelectorInitParameters) DeepCopyInto(out *InsightSelectorInitParameters) {
	*out = *in
	if in.InsightType != nil {
		in, out := &in.InsightType, &out.InsightType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightSelectorInitParameters.
func (in *InsightSelectorInitParameters) DeepCopy() *InsightSelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(InsightSelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightSelectorObservation) DeepCopyInto(out *InsightSelectorObservation) {
	*out = *in
	if in.InsightType != nil {
		in, out := &in.InsightType, &out.InsightType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightSelectorObservation.
func (in *InsightSelectorObservation) DeepCopy() *InsightSelectorObservation {
	if in == nil {
		return nil
	}
	out := new(InsightSelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsightSelectorParameters) DeepCopyInto(out *InsightSelectorParameters) {
	*out = *in
	if in.InsightType != nil {
		in, out := &in.InsightType, &out.InsightType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsightSelectorParameters.
func (in *InsightSelectorParameters) DeepCopy() *InsightSelectorParameters {
	if in == nil {
		return nil
	}
	out := new(InsightSelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trail) DeepCopyInto(out *Trail) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trail.
func (in *Trail) DeepCopy() *Trail {
	if in == nil {
		return nil
	}
	out := new(Trail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Trail) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailInitParameters) DeepCopyInto(out *TrailInitParameters) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]AdvancedEventSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudWatchLogsGroupArn != nil {
		in, out := &in.CloudWatchLogsGroupArn, &out.CloudWatchLogsGroupArn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsRoleArn != nil {
		in, out := &in.CloudWatchLogsRoleArn, &out.CloudWatchLogsRoleArn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsRoleArnRef != nil {
		in, out := &in.CloudWatchLogsRoleArnRef, &out.CloudWatchLogsRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLogsRoleArnSelector != nil {
		in, out := &in.CloudWatchLogsRoleArnSelector, &out.CloudWatchLogsRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableLogFileValidation != nil {
		in, out := &in.EnableLogFileValidation, &out.EnableLogFileValidation
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.EventSelector != nil {
		in, out := &in.EventSelector, &out.EventSelector
		*out = make([]EventSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeGlobalServiceEvents != nil {
		in, out := &in.IncludeGlobalServiceEvents, &out.IncludeGlobalServiceEvents
		*out = new(bool)
		**out = **in
	}
	if in.InsightSelector != nil {
		in, out := &in.InsightSelector, &out.InsightSelector
		*out = make([]InsightSelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsMultiRegionTrail != nil {
		in, out := &in.IsMultiRegionTrail, &out.IsMultiRegionTrail
		*out = new(bool)
		**out = **in
	}
	if in.IsOrganizationTrail != nil {
		in, out := &in.IsOrganizationTrail, &out.IsOrganizationTrail
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketNameRef != nil {
		in, out := &in.S3BucketNameRef, &out.S3BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketNameSelector != nil {
		in, out := &in.S3BucketNameSelector, &out.S3BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicName != nil {
		in, out := &in.SnsTopicName, &out.SnsTopicName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailInitParameters.
func (in *TrailInitParameters) DeepCopy() *TrailInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrailInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailList) DeepCopyInto(out *TrailList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trail, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailList.
func (in *TrailList) DeepCopy() *TrailList {
	if in == nil {
		return nil
	}
	out := new(TrailList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrailList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailObservation) DeepCopyInto(out *TrailObservation) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]AdvancedEventSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsGroupArn != nil {
		in, out := &in.CloudWatchLogsGroupArn, &out.CloudWatchLogsGroupArn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsRoleArn != nil {
		in, out := &in.CloudWatchLogsRoleArn, &out.CloudWatchLogsRoleArn
		*out = new(string)
		**out = **in
	}
	if in.EnableLogFileValidation != nil {
		in, out := &in.EnableLogFileValidation, &out.EnableLogFileValidation
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.EventSelector != nil {
		in, out := &in.EventSelector, &out.EventSelector
		*out = make([]EventSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HomeRegion != nil {
		in, out := &in.HomeRegion, &out.HomeRegion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeGlobalServiceEvents != nil {
		in, out := &in.IncludeGlobalServiceEvents, &out.IncludeGlobalServiceEvents
		*out = new(bool)
		**out = **in
	}
	if in.InsightSelector != nil {
		in, out := &in.InsightSelector, &out.InsightSelector
		*out = make([]InsightSelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsMultiRegionTrail != nil {
		in, out := &in.IsMultiRegionTrail, &out.IsMultiRegionTrail
		*out = new(bool)
		**out = **in
	}
	if in.IsOrganizationTrail != nil {
		in, out := &in.IsOrganizationTrail, &out.IsOrganizationTrail
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicName != nil {
		in, out := &in.SnsTopicName, &out.SnsTopicName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailObservation.
func (in *TrailObservation) DeepCopy() *TrailObservation {
	if in == nil {
		return nil
	}
	out := new(TrailObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailParameters) DeepCopyInto(out *TrailParameters) {
	*out = *in
	if in.AdvancedEventSelector != nil {
		in, out := &in.AdvancedEventSelector, &out.AdvancedEventSelector
		*out = make([]AdvancedEventSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudWatchLogsGroupArn != nil {
		in, out := &in.CloudWatchLogsGroupArn, &out.CloudWatchLogsGroupArn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsRoleArn != nil {
		in, out := &in.CloudWatchLogsRoleArn, &out.CloudWatchLogsRoleArn
		*out = new(string)
		**out = **in
	}
	if in.CloudWatchLogsRoleArnRef != nil {
		in, out := &in.CloudWatchLogsRoleArnRef, &out.CloudWatchLogsRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudWatchLogsRoleArnSelector != nil {
		in, out := &in.CloudWatchLogsRoleArnSelector, &out.CloudWatchLogsRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableLogFileValidation != nil {
		in, out := &in.EnableLogFileValidation, &out.EnableLogFileValidation
		*out = new(bool)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.EventSelector != nil {
		in, out := &in.EventSelector, &out.EventSelector
		*out = make([]EventSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludeGlobalServiceEvents != nil {
		in, out := &in.IncludeGlobalServiceEvents, &out.IncludeGlobalServiceEvents
		*out = new(bool)
		**out = **in
	}
	if in.InsightSelector != nil {
		in, out := &in.InsightSelector, &out.InsightSelector
		*out = make([]InsightSelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsMultiRegionTrail != nil {
		in, out := &in.IsMultiRegionTrail, &out.IsMultiRegionTrail
		*out = new(bool)
		**out = **in
	}
	if in.IsOrganizationTrail != nil {
		in, out := &in.IsOrganizationTrail, &out.IsOrganizationTrail
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyIDRef != nil {
		in, out := &in.KMSKeyIDRef, &out.KMSKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KMSKeyIDSelector != nil {
		in, out := &in.KMSKeyIDSelector, &out.KMSKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketNameRef != nil {
		in, out := &in.S3BucketNameRef, &out.S3BucketNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.S3BucketNameSelector != nil {
		in, out := &in.S3BucketNameSelector, &out.S3BucketNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.SnsTopicName != nil {
		in, out := &in.SnsTopicName, &out.SnsTopicName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailParameters.
func (in *TrailParameters) DeepCopy() *TrailParameters {
	if in == nil {
		return nil
	}
	out := new(TrailParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailSpec) DeepCopyInto(out *TrailSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailSpec.
func (in *TrailSpec) DeepCopy() *TrailSpec {
	if in == nil {
		return nil
	}
	out := new(TrailSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrailStatus) DeepCopyInto(out *TrailStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrailStatus.
func (in *TrailStatus) DeepCopy() *TrailStatus {
	if in == nil {
		return nil
	}
	out := new(TrailStatus)
	in.DeepCopyInto(out)
	return out
}

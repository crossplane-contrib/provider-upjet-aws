// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalysisRuleInitParameters struct {

	// List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See inclusion Block for details.
	Inclusion []InclusionInitParameters `json:"inclusion,omitempty" tf:"inclusion,omitempty"`
}

type AnalysisRuleObservation struct {

	// List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See inclusion Block for details.
	Inclusion []InclusionObservation `json:"inclusion,omitempty" tf:"inclusion,omitempty"`
}

type AnalysisRuleParameters struct {

	// List of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings. See inclusion Block for details.
	// +kubebuilder:validation:Optional
	Inclusion []InclusionParameters `json:"inclusion,omitempty" tf:"inclusion,omitempty"`
}

type AnalyzerInitParameters struct {

	// A block that specifies the configuration of the analyzer. See configuration Block for details.
	Configuration *ConfigurationInitParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Type that represents the zone of trust or scope for the analyzer. Valid values are ACCOUNT, ACCOUNT_INTERNAL_ACCESS, ACCOUNT_UNUSED_ACCESS, ORGANIZATION, ORGANIZATION_INTERNAL_ACCESS, ORGANIZATION_UNUSED_ACCESS. Defaults to ACCOUNT.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AnalyzerObservation struct {

	// ARN of the Analyzer.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// A block that specifies the configuration of the analyzer. See configuration Block for details.
	Configuration *ConfigurationObservation `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Name of the analyzer.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// Type that represents the zone of trust or scope for the analyzer. Valid values are ACCOUNT, ACCOUNT_INTERNAL_ACCESS, ACCOUNT_UNUSED_ACCESS, ORGANIZATION, ORGANIZATION_INTERNAL_ACCESS, ORGANIZATION_UNUSED_ACCESS. Defaults to ACCOUNT.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AnalyzerParameters struct {

	// A block that specifies the configuration of the analyzer. See configuration Block for details.
	// +kubebuilder:validation:Optional
	Configuration *ConfigurationParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// Region where this resource will be managed. Defaults to the Region set in the provider configuration.
	// Region is the region you'd like your resource to be created in.
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"region,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Type that represents the zone of trust or scope for the analyzer. Valid values are ACCOUNT, ACCOUNT_INTERNAL_ACCESS, ACCOUNT_UNUSED_ACCESS, ORGANIZATION, ORGANIZATION_INTERNAL_ACCESS, ORGANIZATION_UNUSED_ACCESS. Defaults to ACCOUNT.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConfigurationInitParameters struct {

	// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates access within your AWS environment. See internal_access Block for details.
	InternalAccess *InternalAccessInitParameters `json:"internalAccess,omitempty" tf:"internal_access,omitempty"`

	// Specifies the configuration of an unused access analyzer for an AWS organization or account. See unused_access Block for details.
	UnusedAccess *UnusedAccessInitParameters `json:"unusedAccess,omitempty" tf:"unused_access,omitempty"`
}

type ConfigurationObservation struct {

	// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates access within your AWS environment. See internal_access Block for details.
	InternalAccess *InternalAccessObservation `json:"internalAccess,omitempty" tf:"internal_access,omitempty"`

	// Specifies the configuration of an unused access analyzer for an AWS organization or account. See unused_access Block for details.
	UnusedAccess *UnusedAccessObservation `json:"unusedAccess,omitempty" tf:"unused_access,omitempty"`
}

type ConfigurationParameters struct {

	// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates access within your AWS environment. See internal_access Block for details.
	// +kubebuilder:validation:Optional
	InternalAccess *InternalAccessParameters `json:"internalAccess,omitempty" tf:"internal_access,omitempty"`

	// Specifies the configuration of an unused access analyzer for an AWS organization or account. See unused_access Block for details.
	// +kubebuilder:validation:Optional
	UnusedAccess *UnusedAccessParameters `json:"unusedAccess,omitempty" tf:"unused_access,omitempty"`
}

type ExclusionInitParameters struct {

	// List of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of key-value pairs for resource tags to exclude from the analysis.
	ResourceTags []map[string]*string `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`
}

type ExclusionObservation struct {

	// List of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of key-value pairs for resource tags to exclude from the analysis.
	ResourceTags []map[string]*string `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`
}

type ExclusionParameters struct {

	// List of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	// +kubebuilder:validation:Optional
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of key-value pairs for resource tags to exclude from the analysis.
	// +kubebuilder:validation:Optional
	ResourceTags []map[string]*string `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`
}

type InclusionInitParameters struct {

	// List of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
	ResourceArns []*string `json:"resourceArns,omitempty" tf:"resource_arns,omitempty"`

	// List of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types. Refer to InternalAccessAnalysisRuleCriteria in the AWS IAM Access Analyzer API Reference for valid values.
	ResourceTypes []*string `json:"resourceTypes,omitempty" tf:"resource_types,omitempty"`
}

type InclusionObservation struct {

	// List of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
	ResourceArns []*string `json:"resourceArns,omitempty" tf:"resource_arns,omitempty"`

	// List of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types. Refer to InternalAccessAnalysisRuleCriteria in the AWS IAM Access Analyzer API Reference for valid values.
	ResourceTypes []*string `json:"resourceTypes,omitempty" tf:"resource_types,omitempty"`
}

type InclusionParameters struct {

	// List of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	// +kubebuilder:validation:Optional
	AccountIds []*string `json:"accountIds,omitempty" tf:"account_ids,omitempty"`

	// List of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
	// +kubebuilder:validation:Optional
	ResourceArns []*string `json:"resourceArns,omitempty" tf:"resource_arns,omitempty"`

	// List of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types. Refer to InternalAccessAnalysisRuleCriteria in the AWS IAM Access Analyzer API Reference for valid values.
	// +kubebuilder:validation:Optional
	ResourceTypes []*string `json:"resourceTypes,omitempty" tf:"resource_types,omitempty"`
}

type InternalAccessInitParameters struct {

	// Information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed. See analysis_rule Block for Internal Access Analyzer for details.
	AnalysisRule *AnalysisRuleInitParameters `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`
}

type InternalAccessObservation struct {

	// Information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed. See analysis_rule Block for Internal Access Analyzer for details.
	AnalysisRule *AnalysisRuleObservation `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`
}

type InternalAccessParameters struct {

	// Information about analysis rules for the internal access analyzer. These rules determine which resources and access patterns will be analyzed. See analysis_rule Block for Internal Access Analyzer for details.
	// +kubebuilder:validation:Optional
	AnalysisRule *AnalysisRuleParameters `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`
}

type UnusedAccessAnalysisRuleInitParameters struct {

	// List of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings. See exclusion Block for details.
	Exclusion []ExclusionInitParameters `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type UnusedAccessAnalysisRuleObservation struct {

	// List of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings. See exclusion Block for details.
	Exclusion []ExclusionObservation `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type UnusedAccessAnalysisRuleParameters struct {

	// List of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings. See exclusion Block for details.
	// +kubebuilder:validation:Optional
	Exclusion []ExclusionParameters `json:"exclusion,omitempty" tf:"exclusion,omitempty"`
}

type UnusedAccessInitParameters struct {

	// Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See analysis_rule Block for Unused Access Analyzer for details.
	AnalysisRule *UnusedAccessAnalysisRuleInitParameters `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`

	// Specified access age in days for which to generate findings for unused access.
	UnusedAccessAge *float64 `json:"unusedAccessAge,omitempty" tf:"unused_access_age,omitempty"`
}

type UnusedAccessObservation struct {

	// Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See analysis_rule Block for Unused Access Analyzer for details.
	AnalysisRule *UnusedAccessAnalysisRuleObservation `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`

	// Specified access age in days for which to generate findings for unused access.
	UnusedAccessAge *float64 `json:"unusedAccessAge,omitempty" tf:"unused_access_age,omitempty"`
}

type UnusedAccessParameters struct {

	// Information about analysis rules for the analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule. See analysis_rule Block for Unused Access Analyzer for details.
	// +kubebuilder:validation:Optional
	AnalysisRule *UnusedAccessAnalysisRuleParameters `json:"analysisRule,omitempty" tf:"analysis_rule,omitempty"`

	// Specified access age in days for which to generate findings for unused access.
	// +kubebuilder:validation:Optional
	UnusedAccessAge *float64 `json:"unusedAccessAge,omitempty" tf:"unused_access_age,omitempty"`
}

// AnalyzerSpec defines the desired state of Analyzer
type AnalyzerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyzerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AnalyzerInitParameters `json:"initProvider,omitempty"`
}

// AnalyzerStatus defines the observed state of Analyzer.
type AnalyzerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyzerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// Analyzer is the Schema for the Analyzers API. Manages an Access Analyzer Analyzer
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type Analyzer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalyzerSpec   `json:"spec"`
	Status            AnalyzerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyzerList contains a list of Analyzers
type AnalyzerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Analyzer `json:"items"`
}

// Repository type metadata.
var (
	Analyzer_Kind             = "Analyzer"
	Analyzer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Analyzer_Kind}.String()
	Analyzer_KindAPIVersion   = Analyzer_Kind + "." + CRDGroupVersion.String()
	Analyzer_GroupVersionKind = CRDGroupVersion.WithKind(Analyzer_Kind)
)

func init() {
	SchemeBuilder.Register(&Analyzer{}, &AnalyzerList{})
}

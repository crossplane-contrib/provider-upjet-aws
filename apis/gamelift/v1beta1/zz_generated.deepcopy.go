//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alias) DeepCopyInto(out *Alias) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alias.
func (in *Alias) DeepCopy() *Alias {
	if in == nil {
		return nil
	}
	out := new(Alias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alias) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasInitParameters) DeepCopyInto(out *AliasInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoutingStrategy != nil {
		in, out := &in.RoutingStrategy, &out.RoutingStrategy
		*out = make([]RoutingStrategyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasInitParameters.
func (in *AliasInitParameters) DeepCopy() *AliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(AliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasList) DeepCopyInto(out *AliasList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasList.
func (in *AliasList) DeepCopy() *AliasList {
	if in == nil {
		return nil
	}
	out := new(AliasList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AliasList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasObservation) DeepCopyInto(out *AliasObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoutingStrategy != nil {
		in, out := &in.RoutingStrategy, &out.RoutingStrategy
		*out = make([]RoutingStrategyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasObservation.
func (in *AliasObservation) DeepCopy() *AliasObservation {
	if in == nil {
		return nil
	}
	out := new(AliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasParameters) DeepCopyInto(out *AliasParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingStrategy != nil {
		in, out := &in.RoutingStrategy, &out.RoutingStrategy
		*out = make([]RoutingStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasParameters.
func (in *AliasParameters) DeepCopy() *AliasParameters {
	if in == nil {
		return nil
	}
	out := new(AliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasSpec) DeepCopyInto(out *AliasSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasSpec.
func (in *AliasSpec) DeepCopy() *AliasSpec {
	if in == nil {
		return nil
	}
	out := new(AliasSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasStatus) DeepCopyInto(out *AliasStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasStatus.
func (in *AliasStatus) DeepCopy() *AliasStatus {
	if in == nil {
		return nil
	}
	out := new(AliasStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Build) DeepCopyInto(out *Build) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Build.
func (in *Build) DeepCopy() *Build {
	if in == nil {
		return nil
	}
	out := new(Build)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Build) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildInitParameters) DeepCopyInto(out *BuildInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]StorageLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildInitParameters.
func (in *BuildInitParameters) DeepCopy() *BuildInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuildInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildList) DeepCopyInto(out *BuildList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Build, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildList.
func (in *BuildList) DeepCopy() *BuildList {
	if in == nil {
		return nil
	}
	out := new(BuildList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildObservation) DeepCopyInto(out *BuildObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]StorageLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildObservation.
func (in *BuildObservation) DeepCopy() *BuildObservation {
	if in == nil {
		return nil
	}
	out := new(BuildObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildParameters) DeepCopyInto(out *BuildParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]StorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildParameters.
func (in *BuildParameters) DeepCopy() *BuildParameters {
	if in == nil {
		return nil
	}
	out := new(BuildParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildSpec) DeepCopyInto(out *BuildSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildSpec.
func (in *BuildSpec) DeepCopy() *BuildSpec {
	if in == nil {
		return nil
	}
	out := new(BuildSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildStatus) DeepCopyInto(out *BuildStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildStatus.
func (in *BuildStatus) DeepCopy() *BuildStatus {
	if in == nil {
		return nil
	}
	out := new(BuildStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateConfigurationInitParameters) DeepCopyInto(out *CertificateConfigurationInitParameters) {
	*out = *in
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateConfigurationInitParameters.
func (in *CertificateConfigurationInitParameters) DeepCopy() *CertificateConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateConfigurationObservation) DeepCopyInto(out *CertificateConfigurationObservation) {
	*out = *in
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateConfigurationObservation.
func (in *CertificateConfigurationObservation) DeepCopy() *CertificateConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateConfigurationParameters) DeepCopyInto(out *CertificateConfigurationParameters) {
	*out = *in
	if in.CertificateType != nil {
		in, out := &in.CertificateType, &out.CertificateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateConfigurationParameters.
func (in *CertificateConfigurationParameters) DeepCopy() *CertificateConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EC2InboundPermissionInitParameters) DeepCopyInto(out *EC2InboundPermissionInitParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(int64)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EC2InboundPermissionInitParameters.
func (in *EC2InboundPermissionInitParameters) DeepCopy() *EC2InboundPermissionInitParameters {
	if in == nil {
		return nil
	}
	out := new(EC2InboundPermissionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EC2InboundPermissionObservation) DeepCopyInto(out *EC2InboundPermissionObservation) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(int64)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EC2InboundPermissionObservation.
func (in *EC2InboundPermissionObservation) DeepCopy() *EC2InboundPermissionObservation {
	if in == nil {
		return nil
	}
	out := new(EC2InboundPermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EC2InboundPermissionParameters) DeepCopyInto(out *EC2InboundPermissionParameters) {
	*out = *in
	if in.FromPort != nil {
		in, out := &in.FromPort, &out.FromPort
		*out = new(int64)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ToPort != nil {
		in, out := &in.ToPort, &out.ToPort
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EC2InboundPermissionParameters.
func (in *EC2InboundPermissionParameters) DeepCopy() *EC2InboundPermissionParameters {
	if in == nil {
		return nil
	}
	out := new(EC2InboundPermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Fleet) DeepCopyInto(out *Fleet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Fleet.
func (in *Fleet) DeepCopy() *Fleet {
	if in == nil {
		return nil
	}
	out := new(Fleet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Fleet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetInitParameters) DeepCopyInto(out *FleetInitParameters) {
	*out = *in
	if in.CertificateConfiguration != nil {
		in, out := &in.CertificateConfiguration, &out.CertificateConfiguration
		*out = make([]CertificateConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EC2InboundPermission != nil {
		in, out := &in.EC2InboundPermission, &out.EC2InboundPermission
		*out = make([]EC2InboundPermissionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EC2InstanceType != nil {
		in, out := &in.EC2InstanceType, &out.EC2InstanceType
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.MetricGroups != nil {
		in, out := &in.MetricGroups, &out.MetricGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewGameSessionProtectionPolicy != nil {
		in, out := &in.NewGameSessionProtectionPolicy, &out.NewGameSessionProtectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.ResourceCreationLimitPolicy != nil {
		in, out := &in.ResourceCreationLimitPolicy, &out.ResourceCreationLimitPolicy
		*out = make([]ResourceCreationLimitPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeConfiguration != nil {
		in, out := &in.RuntimeConfiguration, &out.RuntimeConfiguration
		*out = make([]RuntimeConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetInitParameters.
func (in *FleetInitParameters) DeepCopy() *FleetInitParameters {
	if in == nil {
		return nil
	}
	out := new(FleetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetList) DeepCopyInto(out *FleetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Fleet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetList.
func (in *FleetList) DeepCopy() *FleetList {
	if in == nil {
		return nil
	}
	out := new(FleetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FleetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetObservation) DeepCopyInto(out *FleetObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.BuildArn != nil {
		in, out := &in.BuildArn, &out.BuildArn
		*out = new(string)
		**out = **in
	}
	if in.BuildID != nil {
		in, out := &in.BuildID, &out.BuildID
		*out = new(string)
		**out = **in
	}
	if in.CertificateConfiguration != nil {
		in, out := &in.CertificateConfiguration, &out.CertificateConfiguration
		*out = make([]CertificateConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EC2InboundPermission != nil {
		in, out := &in.EC2InboundPermission, &out.EC2InboundPermission
		*out = make([]EC2InboundPermissionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EC2InstanceType != nil {
		in, out := &in.EC2InstanceType, &out.EC2InstanceType
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceRoleArn != nil {
		in, out := &in.InstanceRoleArn, &out.InstanceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.LogPaths != nil {
		in, out := &in.LogPaths, &out.LogPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MetricGroups != nil {
		in, out := &in.MetricGroups, &out.MetricGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewGameSessionProtectionPolicy != nil {
		in, out := &in.NewGameSessionProtectionPolicy, &out.NewGameSessionProtectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.ResourceCreationLimitPolicy != nil {
		in, out := &in.ResourceCreationLimitPolicy, &out.ResourceCreationLimitPolicy
		*out = make([]ResourceCreationLimitPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeConfiguration != nil {
		in, out := &in.RuntimeConfiguration, &out.RuntimeConfiguration
		*out = make([]RuntimeConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptArn != nil {
		in, out := &in.ScriptArn, &out.ScriptArn
		*out = new(string)
		**out = **in
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetObservation.
func (in *FleetObservation) DeepCopy() *FleetObservation {
	if in == nil {
		return nil
	}
	out := new(FleetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetParameters) DeepCopyInto(out *FleetParameters) {
	*out = *in
	if in.BuildID != nil {
		in, out := &in.BuildID, &out.BuildID
		*out = new(string)
		**out = **in
	}
	if in.BuildIDRef != nil {
		in, out := &in.BuildIDRef, &out.BuildIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BuildIDSelector != nil {
		in, out := &in.BuildIDSelector, &out.BuildIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateConfiguration != nil {
		in, out := &in.CertificateConfiguration, &out.CertificateConfiguration
		*out = make([]CertificateConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EC2InboundPermission != nil {
		in, out := &in.EC2InboundPermission, &out.EC2InboundPermission
		*out = make([]EC2InboundPermissionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EC2InstanceType != nil {
		in, out := &in.EC2InstanceType, &out.EC2InstanceType
		*out = new(string)
		**out = **in
	}
	if in.FleetType != nil {
		in, out := &in.FleetType, &out.FleetType
		*out = new(string)
		**out = **in
	}
	if in.InstanceRoleArn != nil {
		in, out := &in.InstanceRoleArn, &out.InstanceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceRoleArnRef != nil {
		in, out := &in.InstanceRoleArnRef, &out.InstanceRoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceRoleArnSelector != nil {
		in, out := &in.InstanceRoleArnSelector, &out.InstanceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MetricGroups != nil {
		in, out := &in.MetricGroups, &out.MetricGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NewGameSessionProtectionPolicy != nil {
		in, out := &in.NewGameSessionProtectionPolicy, &out.NewGameSessionProtectionPolicy
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceCreationLimitPolicy != nil {
		in, out := &in.ResourceCreationLimitPolicy, &out.ResourceCreationLimitPolicy
		*out = make([]ResourceCreationLimitPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuntimeConfiguration != nil {
		in, out := &in.RuntimeConfiguration, &out.RuntimeConfiguration
		*out = make([]RuntimeConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetParameters.
func (in *FleetParameters) DeepCopy() *FleetParameters {
	if in == nil {
		return nil
	}
	out := new(FleetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetSpec) DeepCopyInto(out *FleetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetSpec.
func (in *FleetSpec) DeepCopy() *FleetSpec {
	if in == nil {
		return nil
	}
	out := new(FleetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FleetStatus) DeepCopyInto(out *FleetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FleetStatus.
func (in *FleetStatus) DeepCopy() *FleetStatus {
	if in == nil {
		return nil
	}
	out := new(FleetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueue) DeepCopyInto(out *GameSessionQueue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueue.
func (in *GameSessionQueue) DeepCopy() *GameSessionQueue {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GameSessionQueue) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueInitParameters) DeepCopyInto(out *GameSessionQueueInitParameters) {
	*out = *in
	if in.CustomEventData != nil {
		in, out := &in.CustomEventData, &out.CustomEventData
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlayerLatencyPolicy != nil {
		in, out := &in.PlayerLatencyPolicy, &out.PlayerLatencyPolicy
		*out = make([]PlayerLatencyPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueInitParameters.
func (in *GameSessionQueueInitParameters) DeepCopy() *GameSessionQueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueList) DeepCopyInto(out *GameSessionQueueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GameSessionQueue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueList.
func (in *GameSessionQueueList) DeepCopy() *GameSessionQueueList {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GameSessionQueueList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueObservation) DeepCopyInto(out *GameSessionQueueObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CustomEventData != nil {
		in, out := &in.CustomEventData, &out.CustomEventData
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NotificationTarget != nil {
		in, out := &in.NotificationTarget, &out.NotificationTarget
		*out = new(string)
		**out = **in
	}
	if in.PlayerLatencyPolicy != nil {
		in, out := &in.PlayerLatencyPolicy, &out.PlayerLatencyPolicy
		*out = make([]PlayerLatencyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueObservation.
func (in *GameSessionQueueObservation) DeepCopy() *GameSessionQueueObservation {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueParameters) DeepCopyInto(out *GameSessionQueueParameters) {
	*out = *in
	if in.CustomEventData != nil {
		in, out := &in.CustomEventData, &out.CustomEventData
		*out = new(string)
		**out = **in
	}
	if in.Destinations != nil {
		in, out := &in.Destinations, &out.Destinations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NotificationTarget != nil {
		in, out := &in.NotificationTarget, &out.NotificationTarget
		*out = new(string)
		**out = **in
	}
	if in.NotificationTargetRef != nil {
		in, out := &in.NotificationTargetRef, &out.NotificationTargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NotificationTargetSelector != nil {
		in, out := &in.NotificationTargetSelector, &out.NotificationTargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PlayerLatencyPolicy != nil {
		in, out := &in.PlayerLatencyPolicy, &out.PlayerLatencyPolicy
		*out = make([]PlayerLatencyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueParameters.
func (in *GameSessionQueueParameters) DeepCopy() *GameSessionQueueParameters {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueSpec) DeepCopyInto(out *GameSessionQueueSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueSpec.
func (in *GameSessionQueueSpec) DeepCopy() *GameSessionQueueSpec {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GameSessionQueueStatus) DeepCopyInto(out *GameSessionQueueStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GameSessionQueueStatus.
func (in *GameSessionQueueStatus) DeepCopy() *GameSessionQueueStatus {
	if in == nil {
		return nil
	}
	out := new(GameSessionQueueStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlayerLatencyPolicyInitParameters) DeepCopyInto(out *PlayerLatencyPolicyInitParameters) {
	*out = *in
	if in.MaximumIndividualPlayerLatencyMilliseconds != nil {
		in, out := &in.MaximumIndividualPlayerLatencyMilliseconds, &out.MaximumIndividualPlayerLatencyMilliseconds
		*out = new(int64)
		**out = **in
	}
	if in.PolicyDurationSeconds != nil {
		in, out := &in.PolicyDurationSeconds, &out.PolicyDurationSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlayerLatencyPolicyInitParameters.
func (in *PlayerLatencyPolicyInitParameters) DeepCopy() *PlayerLatencyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlayerLatencyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlayerLatencyPolicyObservation) DeepCopyInto(out *PlayerLatencyPolicyObservation) {
	*out = *in
	if in.MaximumIndividualPlayerLatencyMilliseconds != nil {
		in, out := &in.MaximumIndividualPlayerLatencyMilliseconds, &out.MaximumIndividualPlayerLatencyMilliseconds
		*out = new(int64)
		**out = **in
	}
	if in.PolicyDurationSeconds != nil {
		in, out := &in.PolicyDurationSeconds, &out.PolicyDurationSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlayerLatencyPolicyObservation.
func (in *PlayerLatencyPolicyObservation) DeepCopy() *PlayerLatencyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PlayerLatencyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlayerLatencyPolicyParameters) DeepCopyInto(out *PlayerLatencyPolicyParameters) {
	*out = *in
	if in.MaximumIndividualPlayerLatencyMilliseconds != nil {
		in, out := &in.MaximumIndividualPlayerLatencyMilliseconds, &out.MaximumIndividualPlayerLatencyMilliseconds
		*out = new(int64)
		**out = **in
	}
	if in.PolicyDurationSeconds != nil {
		in, out := &in.PolicyDurationSeconds, &out.PolicyDurationSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlayerLatencyPolicyParameters.
func (in *PlayerLatencyPolicyParameters) DeepCopy() *PlayerLatencyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PlayerLatencyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceCreationLimitPolicyInitParameters) DeepCopyInto(out *ResourceCreationLimitPolicyInitParameters) {
	*out = *in
	if in.NewGameSessionsPerCreator != nil {
		in, out := &in.NewGameSessionsPerCreator, &out.NewGameSessionsPerCreator
		*out = new(int64)
		**out = **in
	}
	if in.PolicyPeriodInMinutes != nil {
		in, out := &in.PolicyPeriodInMinutes, &out.PolicyPeriodInMinutes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceCreationLimitPolicyInitParameters.
func (in *ResourceCreationLimitPolicyInitParameters) DeepCopy() *ResourceCreationLimitPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceCreationLimitPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceCreationLimitPolicyObservation) DeepCopyInto(out *ResourceCreationLimitPolicyObservation) {
	*out = *in
	if in.NewGameSessionsPerCreator != nil {
		in, out := &in.NewGameSessionsPerCreator, &out.NewGameSessionsPerCreator
		*out = new(int64)
		**out = **in
	}
	if in.PolicyPeriodInMinutes != nil {
		in, out := &in.PolicyPeriodInMinutes, &out.PolicyPeriodInMinutes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceCreationLimitPolicyObservation.
func (in *ResourceCreationLimitPolicyObservation) DeepCopy() *ResourceCreationLimitPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceCreationLimitPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceCreationLimitPolicyParameters) DeepCopyInto(out *ResourceCreationLimitPolicyParameters) {
	*out = *in
	if in.NewGameSessionsPerCreator != nil {
		in, out := &in.NewGameSessionsPerCreator, &out.NewGameSessionsPerCreator
		*out = new(int64)
		**out = **in
	}
	if in.PolicyPeriodInMinutes != nil {
		in, out := &in.PolicyPeriodInMinutes, &out.PolicyPeriodInMinutes
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceCreationLimitPolicyParameters.
func (in *ResourceCreationLimitPolicyParameters) DeepCopy() *ResourceCreationLimitPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceCreationLimitPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingStrategyInitParameters) DeepCopyInto(out *RoutingStrategyInitParameters) {
	*out = *in
	if in.FleetID != nil {
		in, out := &in.FleetID, &out.FleetID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingStrategyInitParameters.
func (in *RoutingStrategyInitParameters) DeepCopy() *RoutingStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingStrategyObservation) DeepCopyInto(out *RoutingStrategyObservation) {
	*out = *in
	if in.FleetID != nil {
		in, out := &in.FleetID, &out.FleetID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingStrategyObservation.
func (in *RoutingStrategyObservation) DeepCopy() *RoutingStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingStrategyParameters) DeepCopyInto(out *RoutingStrategyParameters) {
	*out = *in
	if in.FleetID != nil {
		in, out := &in.FleetID, &out.FleetID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingStrategyParameters.
func (in *RoutingStrategyParameters) DeepCopy() *RoutingStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeConfigurationInitParameters) DeepCopyInto(out *RuntimeConfigurationInitParameters) {
	*out = *in
	if in.GameSessionActivationTimeoutSeconds != nil {
		in, out := &in.GameSessionActivationTimeoutSeconds, &out.GameSessionActivationTimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxConcurrentGameSessionActivations != nil {
		in, out := &in.MaxConcurrentGameSessionActivations, &out.MaxConcurrentGameSessionActivations
		*out = new(int64)
		**out = **in
	}
	if in.ServerProcess != nil {
		in, out := &in.ServerProcess, &out.ServerProcess
		*out = make([]ServerProcessInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeConfigurationInitParameters.
func (in *RuntimeConfigurationInitParameters) DeepCopy() *RuntimeConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimeConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeConfigurationObservation) DeepCopyInto(out *RuntimeConfigurationObservation) {
	*out = *in
	if in.GameSessionActivationTimeoutSeconds != nil {
		in, out := &in.GameSessionActivationTimeoutSeconds, &out.GameSessionActivationTimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxConcurrentGameSessionActivations != nil {
		in, out := &in.MaxConcurrentGameSessionActivations, &out.MaxConcurrentGameSessionActivations
		*out = new(int64)
		**out = **in
	}
	if in.ServerProcess != nil {
		in, out := &in.ServerProcess, &out.ServerProcess
		*out = make([]ServerProcessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeConfigurationObservation.
func (in *RuntimeConfigurationObservation) DeepCopy() *RuntimeConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(RuntimeConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeConfigurationParameters) DeepCopyInto(out *RuntimeConfigurationParameters) {
	*out = *in
	if in.GameSessionActivationTimeoutSeconds != nil {
		in, out := &in.GameSessionActivationTimeoutSeconds, &out.GameSessionActivationTimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxConcurrentGameSessionActivations != nil {
		in, out := &in.MaxConcurrentGameSessionActivations, &out.MaxConcurrentGameSessionActivations
		*out = new(int64)
		**out = **in
	}
	if in.ServerProcess != nil {
		in, out := &in.ServerProcess, &out.ServerProcess
		*out = make([]ServerProcessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeConfigurationParameters.
func (in *RuntimeConfigurationParameters) DeepCopy() *RuntimeConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimeConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Script) DeepCopyInto(out *Script) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Script.
func (in *Script) DeepCopy() *Script {
	if in == nil {
		return nil
	}
	out := new(Script)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Script) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptInitParameters) DeepCopyInto(out *ScriptInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]ScriptStorageLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ZipFile != nil {
		in, out := &in.ZipFile, &out.ZipFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptInitParameters.
func (in *ScriptInitParameters) DeepCopy() *ScriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptList) DeepCopyInto(out *ScriptList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Script, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptList.
func (in *ScriptList) DeepCopy() *ScriptList {
	if in == nil {
		return nil
	}
	out := new(ScriptList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScriptList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptObservation) DeepCopyInto(out *ScriptObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]ScriptStorageLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ZipFile != nil {
		in, out := &in.ZipFile, &out.ZipFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptObservation.
func (in *ScriptObservation) DeepCopy() *ScriptObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptParameters) DeepCopyInto(out *ScriptParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StorageLocation != nil {
		in, out := &in.StorageLocation, &out.StorageLocation
		*out = make([]ScriptStorageLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ZipFile != nil {
		in, out := &in.ZipFile, &out.ZipFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptParameters.
func (in *ScriptParameters) DeepCopy() *ScriptParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptSpec) DeepCopyInto(out *ScriptSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptSpec.
func (in *ScriptSpec) DeepCopy() *ScriptSpec {
	if in == nil {
		return nil
	}
	out := new(ScriptSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptStatus) DeepCopyInto(out *ScriptStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptStatus.
func (in *ScriptStatus) DeepCopy() *ScriptStatus {
	if in == nil {
		return nil
	}
	out := new(ScriptStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptStorageLocationInitParameters) DeepCopyInto(out *ScriptStorageLocationInitParameters) {
	*out = *in
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptStorageLocationInitParameters.
func (in *ScriptStorageLocationInitParameters) DeepCopy() *ScriptStorageLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptStorageLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptStorageLocationObservation) DeepCopyInto(out *ScriptStorageLocationObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptStorageLocationObservation.
func (in *ScriptStorageLocationObservation) DeepCopy() *ScriptStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptStorageLocationParameters) DeepCopyInto(out *ScriptStorageLocationParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.KeyRef != nil {
		in, out := &in.KeyRef, &out.KeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeySelector != nil {
		in, out := &in.KeySelector, &out.KeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptStorageLocationParameters.
func (in *ScriptStorageLocationParameters) DeepCopy() *ScriptStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerProcessInitParameters) DeepCopyInto(out *ServerProcessInitParameters) {
	*out = *in
	if in.ConcurrentExecutions != nil {
		in, out := &in.ConcurrentExecutions, &out.ConcurrentExecutions
		*out = new(int64)
		**out = **in
	}
	if in.LaunchPath != nil {
		in, out := &in.LaunchPath, &out.LaunchPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerProcessInitParameters.
func (in *ServerProcessInitParameters) DeepCopy() *ServerProcessInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerProcessInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerProcessObservation) DeepCopyInto(out *ServerProcessObservation) {
	*out = *in
	if in.ConcurrentExecutions != nil {
		in, out := &in.ConcurrentExecutions, &out.ConcurrentExecutions
		*out = new(int64)
		**out = **in
	}
	if in.LaunchPath != nil {
		in, out := &in.LaunchPath, &out.LaunchPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerProcessObservation.
func (in *ServerProcessObservation) DeepCopy() *ServerProcessObservation {
	if in == nil {
		return nil
	}
	out := new(ServerProcessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerProcessParameters) DeepCopyInto(out *ServerProcessParameters) {
	*out = *in
	if in.ConcurrentExecutions != nil {
		in, out := &in.ConcurrentExecutions, &out.ConcurrentExecutions
		*out = new(int64)
		**out = **in
	}
	if in.LaunchPath != nil {
		in, out := &in.LaunchPath, &out.LaunchPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerProcessParameters.
func (in *ServerProcessParameters) DeepCopy() *ServerProcessParameters {
	if in == nil {
		return nil
	}
	out := new(ServerProcessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocationInitParameters) DeepCopyInto(out *StorageLocationInitParameters) {
	*out = *in
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocationInitParameters.
func (in *StorageLocationInitParameters) DeepCopy() *StorageLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(StorageLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocationObservation) DeepCopyInto(out *StorageLocationObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocationObservation.
func (in *StorageLocationObservation) DeepCopy() *StorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(StorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageLocationParameters) DeepCopyInto(out *StorageLocationParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BucketRef != nil {
		in, out := &in.BucketRef, &out.BucketRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BucketSelector != nil {
		in, out := &in.BucketSelector, &out.BucketSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.KeyRef != nil {
		in, out := &in.KeyRef, &out.KeyRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.KeySelector != nil {
		in, out := &in.KeySelector, &out.KeySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectVersion != nil {
		in, out := &in.ObjectVersion, &out.ObjectVersion
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RoleArnRef != nil {
		in, out := &in.RoleArnRef, &out.RoleArnRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArnSelector != nil {
		in, out := &in.RoleArnSelector, &out.RoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageLocationParameters.
func (in *StorageLocationParameters) DeepCopy() *StorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(StorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

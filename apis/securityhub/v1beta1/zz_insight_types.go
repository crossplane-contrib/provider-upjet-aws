// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AwsAccountIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AwsAccountIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AwsAccountIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type CompanyNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CompanyNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CompanyNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ComplianceStatusInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ComplianceStatusObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ComplianceStatusParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ConfidenceInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ConfidenceObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ConfidenceParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type CreatedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []DateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type CreatedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []DateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type CreatedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []DateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type CriticalityInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type CriticalityObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type CriticalityParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type DateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type DateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type DateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type DescriptionInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DescriptionObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DescriptionParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FiltersInitParameters struct {

	// AWS account ID that a finding is generated in. See String_Filter below for more details.
	AwsAccountID []AwsAccountIDInitParameters `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
	CompanyName []CompanyNameInitParameters `json:"companyName,omitempty" tf:"company_name,omitempty"`

	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
	ComplianceStatus []ComplianceStatusInitParameters `json:"complianceStatus,omitempty" tf:"compliance_status,omitempty"`

	// A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	Confidence []ConfidenceInitParameters `json:"confidence,omitempty" tf:"confidence,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
	CreatedAt []CreatedAtInitParameters `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	Criticality []CriticalityInitParameters `json:"criticality,omitempty" tf:"criticality,omitempty"`

	// A finding's description. See String Filter below for more details.
	Description []DescriptionInitParameters `json:"description,omitempty" tf:"description,omitempty"`

	// The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidenceInitParameters `json:"findingProviderFieldsConfidence,omitempty" tf:"finding_provider_fields_confidence,omitempty"`

	// The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticalityInitParameters `json:"findingProviderFieldsCriticality,omitempty" tf:"finding_provider_fields_criticality,omitempty"`

	// The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
	FindingProviderFieldsRelatedFindingsID []FindingProviderFieldsRelatedFindingsIDInitParameters `json:"findingProviderFieldsRelatedFindingsId,omitempty" tf:"finding_provider_fields_related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnInitParameters `json:"findingProviderFieldsRelatedFindingsProductArn,omitempty" tf:"finding_provider_fields_related_findings_product_arn,omitempty"`

	// The finding provider value for the severity label. See String Filter below for more details.
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabelInitParameters `json:"findingProviderFieldsSeverityLabel,omitempty" tf:"finding_provider_fields_severity_label,omitempty"`

	// The finding provider's original value for the severity. See String Filter below for more details.
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginalInitParameters `json:"findingProviderFieldsSeverityOriginal,omitempty" tf:"finding_provider_fields_severity_original,omitempty"`

	// One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.
	FindingProviderFieldsTypes []FindingProviderFieldsTypesInitParameters `json:"findingProviderFieldsTypes,omitempty" tf:"finding_provider_fields_types,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
	FirstObservedAt []FirstObservedAtInitParameters `json:"firstObservedAt,omitempty" tf:"first_observed_at,omitempty"`

	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
	GeneratorID []GeneratorIDInitParameters `json:"generatorId,omitempty" tf:"generator_id,omitempty"`

	// The security findings provider-specific identifier for a finding. See String Filter below for more details.
	ID []IDInitParameters `json:"id,omitempty" tf:"id,omitempty"`

	// A keyword for a finding. See Keyword Filter below for more details.
	Keyword []KeywordInitParameters `json:"keyword,omitempty" tf:"keyword,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
	LastObservedAt []LastObservedAtInitParameters `json:"lastObservedAt,omitempty" tf:"last_observed_at,omitempty"`

	// The name of the malware that was observed. See String Filter below for more details.
	MalwareName []MalwareNameInitParameters `json:"malwareName,omitempty" tf:"malware_name,omitempty"`

	// The filesystem path of the malware that was observed. See String Filter below for more details.
	MalwarePath []MalwarePathInitParameters `json:"malwarePath,omitempty" tf:"malware_path,omitempty"`

	// The state of the malware that was observed. See String Filter below for more details.
	MalwareState []MalwareStateInitParameters `json:"malwareState,omitempty" tf:"malware_state,omitempty"`

	// The type of the malware that was observed. See String Filter below for more details.
	MalwareType []MalwareTypeInitParameters `json:"malwareType,omitempty" tf:"malware_type,omitempty"`

	// The destination domain of network-related information about a finding. See String Filter below for more details.
	NetworkDestinationDomain []NetworkDestinationDomainInitParameters `json:"networkDestinationDomain,omitempty" tf:"network_destination_domain,omitempty"`

	// The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkDestinationIPv4 []NetworkDestinationIPv4InitParameters `json:"networkDestinationIpv4,omitempty" tf:"network_destination_ipv4,omitempty"`

	// The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkDestinationIPv6 []NetworkDestinationIPv6InitParameters `json:"networkDestinationIpv6,omitempty" tf:"network_destination_ipv6,omitempty"`

	// The destination port of network-related information about a finding. See Number Filter below for more details.
	NetworkDestinationPort []NetworkDestinationPortInitParameters `json:"networkDestinationPort,omitempty" tf:"network_destination_port,omitempty"`

	// Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
	NetworkDirection []NetworkDirectionInitParameters `json:"networkDirection,omitempty" tf:"network_direction,omitempty"`

	// The protocol of network-related information about a finding. See String Filter below for more details.
	NetworkProtocol []NetworkProtocolInitParameters `json:"networkProtocol,omitempty" tf:"network_protocol,omitempty"`

	// The source domain of network-related information about a finding. See String Filter below for more details.
	NetworkSourceDomain []NetworkSourceDomainInitParameters `json:"networkSourceDomain,omitempty" tf:"network_source_domain,omitempty"`

	// The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkSourceIPv4 []NetworkSourceIPv4InitParameters `json:"networkSourceIpv4,omitempty" tf:"network_source_ipv4,omitempty"`

	// The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkSourceIPv6 []NetworkSourceIPv6InitParameters `json:"networkSourceIpv6,omitempty" tf:"network_source_ipv6,omitempty"`

	// The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
	NetworkSourceMac []NetworkSourceMacInitParameters `json:"networkSourceMac,omitempty" tf:"network_source_mac,omitempty"`

	// The source port of network-related information about a finding. See Number Filter below for more details.
	NetworkSourcePort []NetworkSourcePortInitParameters `json:"networkSourcePort,omitempty" tf:"network_source_port,omitempty"`

	// The text of a note. See String Filter below for more details.
	NoteText []NoteTextInitParameters `json:"noteText,omitempty" tf:"note_text,omitempty"`

	// The timestamp of when the note was updated. See Date Filter below for more details.
	NoteUpdatedAt []NoteUpdatedAtInitParameters `json:"noteUpdatedAt,omitempty" tf:"note_updated_at,omitempty"`

	// The principal that created a note. See String Filter below for more details.
	NoteUpdatedBy []NoteUpdatedByInitParameters `json:"noteUpdatedBy,omitempty" tf:"note_updated_by,omitempty"`

	// The date/time that the process was launched. See Date Filter below for more details.
	ProcessLaunchedAt []ProcessLaunchedAtInitParameters `json:"processLaunchedAt,omitempty" tf:"process_launched_at,omitempty"`

	// The name of the process. See String Filter below for more details.
	ProcessName []ProcessNameInitParameters `json:"processName,omitempty" tf:"process_name,omitempty"`

	// The parent process ID. See Number Filter below for more details.
	ProcessParentPid []ProcessParentPidInitParameters `json:"processParentPid,omitempty" tf:"process_parent_pid,omitempty"`

	// The path to the process executable. See String Filter below for more details.
	ProcessPath []ProcessPathInitParameters `json:"processPath,omitempty" tf:"process_path,omitempty"`

	// The process ID. See Number Filter below for more details.
	ProcessPid []ProcessPidInitParameters `json:"processPid,omitempty" tf:"process_pid,omitempty"`

	// The date/time that the process was terminated. See Date Filter below for more details.
	ProcessTerminatedAt []ProcessTerminatedAtInitParameters `json:"processTerminatedAt,omitempty" tf:"process_terminated_at,omitempty"`

	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
	ProductArn []ProductArnInitParameters `json:"productArn,omitempty" tf:"product_arn,omitempty"`

	// A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format. See Map Filter below for more details.
	ProductFields []ProductFieldsInitParameters `json:"productFields,omitempty" tf:"product_fields,omitempty"`

	// The name of the solution (product) that generates findings. See String Filter below for more details.
	ProductName []ProductNameInitParameters `json:"productName,omitempty" tf:"product_name,omitempty"`

	// The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
	RecommendationText []RecommendationTextInitParameters `json:"recommendationText,omitempty" tf:"recommendation_text,omitempty"`

	// The updated record state for the finding. See String Filter below for more details.
	RecordState []RecordStateInitParameters `json:"recordState,omitempty" tf:"record_state,omitempty"`

	// The solution-generated identifier for a related finding. See String Filter below for more details.
	RelatedFindingsID []RelatedFindingsIDInitParameters `json:"relatedFindingsId,omitempty" tf:"related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding. See String Filter below for more details.
	RelatedFindingsProductArn []RelatedFindingsProductArnInitParameters `json:"relatedFindingsProductArn,omitempty" tf:"related_findings_product_arn,omitempty"`

	// The IAM profile ARN of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceIAMInstanceProfileArn []ResourceAwsEC2InstanceIAMInstanceProfileArnInitParameters `json:"resourceAwsEc2InstanceIamInstanceProfileArn,omitempty" tf:"resource_aws_ec2_instance_iam_instance_profile_arn,omitempty"`

	// The IPv4 addresses associated with the instance. See Ip Filter below for more details.
	ResourceAwsEC2InstanceIPv4Addresses []ResourceAwsEC2InstanceIPv4AddressesInitParameters `json:"resourceAwsEc2InstanceIpv4Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv4_addresses,omitempty"`

	// The IPv6 addresses associated with the instance. See Ip Filter below for more details.
	ResourceAwsEC2InstanceIPv6Addresses []ResourceAwsEC2InstanceIPv6AddressesInitParameters `json:"resourceAwsEc2InstanceIpv6Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv6_addresses,omitempty"`

	// The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceImageID []ResourceAwsEC2InstanceImageIDInitParameters `json:"resourceAwsEc2InstanceImageId,omitempty" tf:"resource_aws_ec2_instance_image_id,omitempty"`

	// The key name associated with the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceKeyName []ResourceAwsEC2InstanceKeyNameInitParameters `json:"resourceAwsEc2InstanceKeyName,omitempty" tf:"resource_aws_ec2_instance_key_name,omitempty"`

	// The date and time the instance was launched. See Date Filter below for more details.
	ResourceAwsEC2InstanceLaunchedAt []ResourceAwsEC2InstanceLaunchedAtInitParameters `json:"resourceAwsEc2InstanceLaunchedAt,omitempty" tf:"resource_aws_ec2_instance_launched_at,omitempty"`

	// The identifier of the subnet that the instance was launched in. See String Filter below for more details.
	ResourceAwsEC2InstanceSubnetID []ResourceAwsEC2InstanceSubnetIDInitParameters `json:"resourceAwsEc2InstanceSubnetId,omitempty" tf:"resource_aws_ec2_instance_subnet_id,omitempty"`

	// The instance type of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceType []ResourceAwsEC2InstanceTypeInitParameters `json:"resourceAwsEc2InstanceType,omitempty" tf:"resource_aws_ec2_instance_type,omitempty"`

	// The identifier of the VPC that the instance was launched in. See String Filter below for more details.
	ResourceAwsEC2InstanceVPCID []ResourceAwsEC2InstanceVPCIDInitParameters `json:"resourceAwsEc2InstanceVpcId,omitempty" tf:"resource_aws_ec2_instance_vpc_id,omitempty"`

	// The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
	ResourceAwsIAMAccessKeyCreatedAt []ResourceAwsIAMAccessKeyCreatedAtInitParameters `json:"resourceAwsIamAccessKeyCreatedAt,omitempty" tf:"resource_aws_iam_access_key_created_at,omitempty"`

	// The status of the IAM access key related to a finding. See String Filter below for more details.
	ResourceAwsIAMAccessKeyStatus []ResourceAwsIAMAccessKeyStatusInitParameters `json:"resourceAwsIamAccessKeyStatus,omitempty" tf:"resource_aws_iam_access_key_status,omitempty"`

	// The user associated with the IAM access key related to a finding. See String Filter below for more details.
	ResourceAwsIAMAccessKeyUserName []ResourceAwsIAMAccessKeyUserNameInitParameters `json:"resourceAwsIamAccessKeyUserName,omitempty" tf:"resource_aws_iam_access_key_user_name,omitempty"`

	// The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
	ResourceAwsS3BucketOwnerID []ResourceAwsS3BucketOwnerIDInitParameters `json:"resourceAwsS3BucketOwnerId,omitempty" tf:"resource_aws_s3_bucket_owner_id,omitempty"`

	// The display name of the owner of the S3 bucket. See String Filter below for more details.
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerNameInitParameters `json:"resourceAwsS3BucketOwnerName,omitempty" tf:"resource_aws_s3_bucket_owner_name,omitempty"`

	// The identifier of the image related to a finding. See String Filter below for more details.
	ResourceContainerImageID []ResourceContainerImageIDInitParameters `json:"resourceContainerImageId,omitempty" tf:"resource_container_image_id,omitempty"`

	// The name of the image related to a finding. See String Filter below for more details.
	ResourceContainerImageName []ResourceContainerImageNameInitParameters `json:"resourceContainerImageName,omitempty" tf:"resource_container_image_name,omitempty"`

	// The date/time that the container was started. See Date Filter below for more details.
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAtInitParameters `json:"resourceContainerLaunchedAt,omitempty" tf:"resource_container_launched_at,omitempty"`

	// The name of the container related to a finding. See String Filter below for more details.
	ResourceContainerName []ResourceContainerNameInitParameters `json:"resourceContainerName,omitempty" tf:"resource_container_name,omitempty"`

	// The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
	ResourceDetailsOther []ResourceDetailsOtherInitParameters `json:"resourceDetailsOther,omitempty" tf:"resource_details_other,omitempty"`

	// The canonical identifier for the given resource type. See String Filter below for more details.
	ResourceID []ResourceIDInitParameters `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
	ResourcePartition []ResourcePartitionInitParameters `json:"resourcePartition,omitempty" tf:"resource_partition,omitempty"`

	// The canonical AWS external Region name where this resource is located. See String Filter below for more details.
	ResourceRegion []ResourceRegionInitParameters `json:"resourceRegion,omitempty" tf:"resource_region,omitempty"`

	// A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
	ResourceTags []ResourceTagsInitParameters `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`

	// Specifies the type of the resource that details are provided for. See String Filter below for more details.
	ResourceType []ResourceTypeInitParameters `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The label of a finding's severity. See String Filter below for more details.
	SeverityLabel []SeverityLabelInitParameters `json:"severityLabel,omitempty" tf:"severity_label,omitempty"`

	// A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
	SourceURL []SourceURLInitParameters `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The category of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategoryInitParameters `json:"threatIntelIndicatorCategory,omitempty" tf:"threat_intel_indicator_category,omitempty"`

	// The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAtInitParameters `json:"threatIntelIndicatorLastObservedAt,omitempty" tf:"threat_intel_indicator_last_observed_at,omitempty"`

	// The source of the threat intelligence. See String Filter below for more details.
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSourceInitParameters `json:"threatIntelIndicatorSource,omitempty" tf:"threat_intel_indicator_source,omitempty"`

	// The URL for more details from the source of the threat intelligence. See String Filter below for more details.
	ThreatIntelIndicatorSourceURL []ThreatIntelIndicatorSourceURLInitParameters `json:"threatIntelIndicatorSourceUrl,omitempty" tf:"threat_intel_indicator_source_url,omitempty"`

	// The type of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorType []ThreatIntelIndicatorTypeInitParameters `json:"threatIntelIndicatorType,omitempty" tf:"threat_intel_indicator_type,omitempty"`

	// The value of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValueInitParameters `json:"threatIntelIndicatorValue,omitempty" tf:"threat_intel_indicator_value,omitempty"`

	// A finding's title. See String Filter below for more details.
	Title []TitleInitParameters `json:"title,omitempty" tf:"title,omitempty"`

	// A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.
	Type []TypeInitParameters `json:"type,omitempty" tf:"type,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
	UpdatedAt []UpdatedAtInitParameters `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
	UserDefinedValues []UserDefinedValuesInitParameters `json:"userDefinedValues,omitempty" tf:"user_defined_values,omitempty"`

	// The veracity of a finding. See String Filter below for more details.
	VerificationState []VerificationStateInitParameters `json:"verificationState,omitempty" tf:"verification_state,omitempty"`

	// The status of the investigation into a finding. See Workflow Status Filter below for more details.
	WorkflowStatus []WorkflowStatusInitParameters `json:"workflowStatus,omitempty" tf:"workflow_status,omitempty"`
}

type FiltersObservation struct {

	// AWS account ID that a finding is generated in. See String_Filter below for more details.
	AwsAccountID []AwsAccountIDObservation `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
	CompanyName []CompanyNameObservation `json:"companyName,omitempty" tf:"company_name,omitempty"`

	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
	ComplianceStatus []ComplianceStatusObservation `json:"complianceStatus,omitempty" tf:"compliance_status,omitempty"`

	// A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	Confidence []ConfidenceObservation `json:"confidence,omitempty" tf:"confidence,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
	CreatedAt []CreatedAtObservation `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	Criticality []CriticalityObservation `json:"criticality,omitempty" tf:"criticality,omitempty"`

	// A finding's description. See String Filter below for more details.
	Description []DescriptionObservation `json:"description,omitempty" tf:"description,omitempty"`

	// The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidenceObservation `json:"findingProviderFieldsConfidence,omitempty" tf:"finding_provider_fields_confidence,omitempty"`

	// The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticalityObservation `json:"findingProviderFieldsCriticality,omitempty" tf:"finding_provider_fields_criticality,omitempty"`

	// The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
	FindingProviderFieldsRelatedFindingsID []FindingProviderFieldsRelatedFindingsIDObservation `json:"findingProviderFieldsRelatedFindingsId,omitempty" tf:"finding_provider_fields_related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnObservation `json:"findingProviderFieldsRelatedFindingsProductArn,omitempty" tf:"finding_provider_fields_related_findings_product_arn,omitempty"`

	// The finding provider value for the severity label. See String Filter below for more details.
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabelObservation `json:"findingProviderFieldsSeverityLabel,omitempty" tf:"finding_provider_fields_severity_label,omitempty"`

	// The finding provider's original value for the severity. See String Filter below for more details.
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginalObservation `json:"findingProviderFieldsSeverityOriginal,omitempty" tf:"finding_provider_fields_severity_original,omitempty"`

	// One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.
	FindingProviderFieldsTypes []FindingProviderFieldsTypesObservation `json:"findingProviderFieldsTypes,omitempty" tf:"finding_provider_fields_types,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
	FirstObservedAt []FirstObservedAtObservation `json:"firstObservedAt,omitempty" tf:"first_observed_at,omitempty"`

	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
	GeneratorID []GeneratorIDObservation `json:"generatorId,omitempty" tf:"generator_id,omitempty"`

	// The security findings provider-specific identifier for a finding. See String Filter below for more details.
	ID []IDObservation `json:"id,omitempty" tf:"id,omitempty"`

	// A keyword for a finding. See Keyword Filter below for more details.
	Keyword []KeywordObservation `json:"keyword,omitempty" tf:"keyword,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
	LastObservedAt []LastObservedAtObservation `json:"lastObservedAt,omitempty" tf:"last_observed_at,omitempty"`

	// The name of the malware that was observed. See String Filter below for more details.
	MalwareName []MalwareNameObservation `json:"malwareName,omitempty" tf:"malware_name,omitempty"`

	// The filesystem path of the malware that was observed. See String Filter below for more details.
	MalwarePath []MalwarePathObservation `json:"malwarePath,omitempty" tf:"malware_path,omitempty"`

	// The state of the malware that was observed. See String Filter below for more details.
	MalwareState []MalwareStateObservation `json:"malwareState,omitempty" tf:"malware_state,omitempty"`

	// The type of the malware that was observed. See String Filter below for more details.
	MalwareType []MalwareTypeObservation `json:"malwareType,omitempty" tf:"malware_type,omitempty"`

	// The destination domain of network-related information about a finding. See String Filter below for more details.
	NetworkDestinationDomain []NetworkDestinationDomainObservation `json:"networkDestinationDomain,omitempty" tf:"network_destination_domain,omitempty"`

	// The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkDestinationIPv4 []NetworkDestinationIPv4Observation `json:"networkDestinationIpv4,omitempty" tf:"network_destination_ipv4,omitempty"`

	// The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkDestinationIPv6 []NetworkDestinationIPv6Observation `json:"networkDestinationIpv6,omitempty" tf:"network_destination_ipv6,omitempty"`

	// The destination port of network-related information about a finding. See Number Filter below for more details.
	NetworkDestinationPort []NetworkDestinationPortObservation `json:"networkDestinationPort,omitempty" tf:"network_destination_port,omitempty"`

	// Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
	NetworkDirection []NetworkDirectionObservation `json:"networkDirection,omitempty" tf:"network_direction,omitempty"`

	// The protocol of network-related information about a finding. See String Filter below for more details.
	NetworkProtocol []NetworkProtocolObservation `json:"networkProtocol,omitempty" tf:"network_protocol,omitempty"`

	// The source domain of network-related information about a finding. See String Filter below for more details.
	NetworkSourceDomain []NetworkSourceDomainObservation `json:"networkSourceDomain,omitempty" tf:"network_source_domain,omitempty"`

	// The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkSourceIPv4 []NetworkSourceIPv4Observation `json:"networkSourceIpv4,omitempty" tf:"network_source_ipv4,omitempty"`

	// The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	NetworkSourceIPv6 []NetworkSourceIPv6Observation `json:"networkSourceIpv6,omitempty" tf:"network_source_ipv6,omitempty"`

	// The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
	NetworkSourceMac []NetworkSourceMacObservation `json:"networkSourceMac,omitempty" tf:"network_source_mac,omitempty"`

	// The source port of network-related information about a finding. See Number Filter below for more details.
	NetworkSourcePort []NetworkSourcePortObservation `json:"networkSourcePort,omitempty" tf:"network_source_port,omitempty"`

	// The text of a note. See String Filter below for more details.
	NoteText []NoteTextObservation `json:"noteText,omitempty" tf:"note_text,omitempty"`

	// The timestamp of when the note was updated. See Date Filter below for more details.
	NoteUpdatedAt []NoteUpdatedAtObservation `json:"noteUpdatedAt,omitempty" tf:"note_updated_at,omitempty"`

	// The principal that created a note. See String Filter below for more details.
	NoteUpdatedBy []NoteUpdatedByObservation `json:"noteUpdatedBy,omitempty" tf:"note_updated_by,omitempty"`

	// The date/time that the process was launched. See Date Filter below for more details.
	ProcessLaunchedAt []ProcessLaunchedAtObservation `json:"processLaunchedAt,omitempty" tf:"process_launched_at,omitempty"`

	// The name of the process. See String Filter below for more details.
	ProcessName []ProcessNameObservation `json:"processName,omitempty" tf:"process_name,omitempty"`

	// The parent process ID. See Number Filter below for more details.
	ProcessParentPid []ProcessParentPidObservation `json:"processParentPid,omitempty" tf:"process_parent_pid,omitempty"`

	// The path to the process executable. See String Filter below for more details.
	ProcessPath []ProcessPathObservation `json:"processPath,omitempty" tf:"process_path,omitempty"`

	// The process ID. See Number Filter below for more details.
	ProcessPid []ProcessPidObservation `json:"processPid,omitempty" tf:"process_pid,omitempty"`

	// The date/time that the process was terminated. See Date Filter below for more details.
	ProcessTerminatedAt []ProcessTerminatedAtObservation `json:"processTerminatedAt,omitempty" tf:"process_terminated_at,omitempty"`

	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
	ProductArn []ProductArnObservation `json:"productArn,omitempty" tf:"product_arn,omitempty"`

	// A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format. See Map Filter below for more details.
	ProductFields []ProductFieldsObservation `json:"productFields,omitempty" tf:"product_fields,omitempty"`

	// The name of the solution (product) that generates findings. See String Filter below for more details.
	ProductName []ProductNameObservation `json:"productName,omitempty" tf:"product_name,omitempty"`

	// The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
	RecommendationText []RecommendationTextObservation `json:"recommendationText,omitempty" tf:"recommendation_text,omitempty"`

	// The updated record state for the finding. See String Filter below for more details.
	RecordState []RecordStateObservation `json:"recordState,omitempty" tf:"record_state,omitempty"`

	// The solution-generated identifier for a related finding. See String Filter below for more details.
	RelatedFindingsID []RelatedFindingsIDObservation `json:"relatedFindingsId,omitempty" tf:"related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding. See String Filter below for more details.
	RelatedFindingsProductArn []RelatedFindingsProductArnObservation `json:"relatedFindingsProductArn,omitempty" tf:"related_findings_product_arn,omitempty"`

	// The IAM profile ARN of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceIAMInstanceProfileArn []ResourceAwsEC2InstanceIAMInstanceProfileArnObservation `json:"resourceAwsEc2InstanceIamInstanceProfileArn,omitempty" tf:"resource_aws_ec2_instance_iam_instance_profile_arn,omitempty"`

	// The IPv4 addresses associated with the instance. See Ip Filter below for more details.
	ResourceAwsEC2InstanceIPv4Addresses []ResourceAwsEC2InstanceIPv4AddressesObservation `json:"resourceAwsEc2InstanceIpv4Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv4_addresses,omitempty"`

	// The IPv6 addresses associated with the instance. See Ip Filter below for more details.
	ResourceAwsEC2InstanceIPv6Addresses []ResourceAwsEC2InstanceIPv6AddressesObservation `json:"resourceAwsEc2InstanceIpv6Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv6_addresses,omitempty"`

	// The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceImageID []ResourceAwsEC2InstanceImageIDObservation `json:"resourceAwsEc2InstanceImageId,omitempty" tf:"resource_aws_ec2_instance_image_id,omitempty"`

	// The key name associated with the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceKeyName []ResourceAwsEC2InstanceKeyNameObservation `json:"resourceAwsEc2InstanceKeyName,omitempty" tf:"resource_aws_ec2_instance_key_name,omitempty"`

	// The date and time the instance was launched. See Date Filter below for more details.
	ResourceAwsEC2InstanceLaunchedAt []ResourceAwsEC2InstanceLaunchedAtObservation `json:"resourceAwsEc2InstanceLaunchedAt,omitempty" tf:"resource_aws_ec2_instance_launched_at,omitempty"`

	// The identifier of the subnet that the instance was launched in. See String Filter below for more details.
	ResourceAwsEC2InstanceSubnetID []ResourceAwsEC2InstanceSubnetIDObservation `json:"resourceAwsEc2InstanceSubnetId,omitempty" tf:"resource_aws_ec2_instance_subnet_id,omitempty"`

	// The instance type of the instance. See String Filter below for more details.
	ResourceAwsEC2InstanceType []ResourceAwsEC2InstanceTypeObservation `json:"resourceAwsEc2InstanceType,omitempty" tf:"resource_aws_ec2_instance_type,omitempty"`

	// The identifier of the VPC that the instance was launched in. See String Filter below for more details.
	ResourceAwsEC2InstanceVPCID []ResourceAwsEC2InstanceVPCIDObservation `json:"resourceAwsEc2InstanceVpcId,omitempty" tf:"resource_aws_ec2_instance_vpc_id,omitempty"`

	// The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
	ResourceAwsIAMAccessKeyCreatedAt []ResourceAwsIAMAccessKeyCreatedAtObservation `json:"resourceAwsIamAccessKeyCreatedAt,omitempty" tf:"resource_aws_iam_access_key_created_at,omitempty"`

	// The status of the IAM access key related to a finding. See String Filter below for more details.
	ResourceAwsIAMAccessKeyStatus []ResourceAwsIAMAccessKeyStatusObservation `json:"resourceAwsIamAccessKeyStatus,omitempty" tf:"resource_aws_iam_access_key_status,omitempty"`

	// The user associated with the IAM access key related to a finding. See String Filter below for more details.
	ResourceAwsIAMAccessKeyUserName []ResourceAwsIAMAccessKeyUserNameObservation `json:"resourceAwsIamAccessKeyUserName,omitempty" tf:"resource_aws_iam_access_key_user_name,omitempty"`

	// The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
	ResourceAwsS3BucketOwnerID []ResourceAwsS3BucketOwnerIDObservation `json:"resourceAwsS3BucketOwnerId,omitempty" tf:"resource_aws_s3_bucket_owner_id,omitempty"`

	// The display name of the owner of the S3 bucket. See String Filter below for more details.
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerNameObservation `json:"resourceAwsS3BucketOwnerName,omitempty" tf:"resource_aws_s3_bucket_owner_name,omitempty"`

	// The identifier of the image related to a finding. See String Filter below for more details.
	ResourceContainerImageID []ResourceContainerImageIDObservation `json:"resourceContainerImageId,omitempty" tf:"resource_container_image_id,omitempty"`

	// The name of the image related to a finding. See String Filter below for more details.
	ResourceContainerImageName []ResourceContainerImageNameObservation `json:"resourceContainerImageName,omitempty" tf:"resource_container_image_name,omitempty"`

	// The date/time that the container was started. See Date Filter below for more details.
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAtObservation `json:"resourceContainerLaunchedAt,omitempty" tf:"resource_container_launched_at,omitempty"`

	// The name of the container related to a finding. See String Filter below for more details.
	ResourceContainerName []ResourceContainerNameObservation `json:"resourceContainerName,omitempty" tf:"resource_container_name,omitempty"`

	// The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
	ResourceDetailsOther []ResourceDetailsOtherObservation `json:"resourceDetailsOther,omitempty" tf:"resource_details_other,omitempty"`

	// The canonical identifier for the given resource type. See String Filter below for more details.
	ResourceID []ResourceIDObservation `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
	ResourcePartition []ResourcePartitionObservation `json:"resourcePartition,omitempty" tf:"resource_partition,omitempty"`

	// The canonical AWS external Region name where this resource is located. See String Filter below for more details.
	ResourceRegion []ResourceRegionObservation `json:"resourceRegion,omitempty" tf:"resource_region,omitempty"`

	// A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
	ResourceTags []ResourceTagsObservation `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`

	// Specifies the type of the resource that details are provided for. See String Filter below for more details.
	ResourceType []ResourceTypeObservation `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The label of a finding's severity. See String Filter below for more details.
	SeverityLabel []SeverityLabelObservation `json:"severityLabel,omitempty" tf:"severity_label,omitempty"`

	// A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
	SourceURL []SourceURLObservation `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The category of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategoryObservation `json:"threatIntelIndicatorCategory,omitempty" tf:"threat_intel_indicator_category,omitempty"`

	// The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAtObservation `json:"threatIntelIndicatorLastObservedAt,omitempty" tf:"threat_intel_indicator_last_observed_at,omitempty"`

	// The source of the threat intelligence. See String Filter below for more details.
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSourceObservation `json:"threatIntelIndicatorSource,omitempty" tf:"threat_intel_indicator_source,omitempty"`

	// The URL for more details from the source of the threat intelligence. See String Filter below for more details.
	ThreatIntelIndicatorSourceURL []ThreatIntelIndicatorSourceURLObservation `json:"threatIntelIndicatorSourceUrl,omitempty" tf:"threat_intel_indicator_source_url,omitempty"`

	// The type of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorType []ThreatIntelIndicatorTypeObservation `json:"threatIntelIndicatorType,omitempty" tf:"threat_intel_indicator_type,omitempty"`

	// The value of a threat intelligence indicator. See String Filter below for more details.
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValueObservation `json:"threatIntelIndicatorValue,omitempty" tf:"threat_intel_indicator_value,omitempty"`

	// A finding's title. See String Filter below for more details.
	Title []TitleObservation `json:"title,omitempty" tf:"title,omitempty"`

	// A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.
	Type []TypeObservation `json:"type,omitempty" tf:"type,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
	UpdatedAt []UpdatedAtObservation `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
	UserDefinedValues []UserDefinedValuesObservation `json:"userDefinedValues,omitempty" tf:"user_defined_values,omitempty"`

	// The veracity of a finding. See String Filter below for more details.
	VerificationState []VerificationStateObservation `json:"verificationState,omitempty" tf:"verification_state,omitempty"`

	// The status of the investigation into a finding. See Workflow Status Filter below for more details.
	WorkflowStatus []WorkflowStatusObservation `json:"workflowStatus,omitempty" tf:"workflow_status,omitempty"`
}

type FiltersParameters struct {

	// AWS account ID that a finding is generated in. See String_Filter below for more details.
	// +kubebuilder:validation:Optional
	AwsAccountID []AwsAccountIDParameters `json:"awsAccountId,omitempty" tf:"aws_account_id,omitempty"`

	// The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
	// +kubebuilder:validation:Optional
	CompanyName []CompanyNameParameters `json:"companyName,omitempty" tf:"company_name,omitempty"`

	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ComplianceStatus []ComplianceStatusParameters `json:"complianceStatus,omitempty" tf:"compliance_status,omitempty"`

	// A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	Confidence []ConfidenceParameters `json:"confidence,omitempty" tf:"confidence,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	CreatedAt []CreatedAtParameters `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	Criticality []CriticalityParameters `json:"criticality,omitempty" tf:"criticality,omitempty"`

	// A finding's description. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	Description []DescriptionParameters `json:"description,omitempty" tf:"description,omitempty"`

	// The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsConfidence []FindingProviderFieldsConfidenceParameters `json:"findingProviderFieldsConfidence,omitempty" tf:"finding_provider_fields_confidence,omitempty"`

	// The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsCriticality []FindingProviderFieldsCriticalityParameters `json:"findingProviderFieldsCriticality,omitempty" tf:"finding_provider_fields_criticality,omitempty"`

	// The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsID []FindingProviderFieldsRelatedFindingsIDParameters `json:"findingProviderFieldsRelatedFindingsId,omitempty" tf:"finding_provider_fields_related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsRelatedFindingsProductArn []FindingProviderFieldsRelatedFindingsProductArnParameters `json:"findingProviderFieldsRelatedFindingsProductArn,omitempty" tf:"finding_provider_fields_related_findings_product_arn,omitempty"`

	// The finding provider value for the severity label. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityLabel []FindingProviderFieldsSeverityLabelParameters `json:"findingProviderFieldsSeverityLabel,omitempty" tf:"finding_provider_fields_severity_label,omitempty"`

	// The finding provider's original value for the severity. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsSeverityOriginal []FindingProviderFieldsSeverityOriginalParameters `json:"findingProviderFieldsSeverityOriginal,omitempty" tf:"finding_provider_fields_severity_original,omitempty"`

	// One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	FindingProviderFieldsTypes []FindingProviderFieldsTypesParameters `json:"findingProviderFieldsTypes,omitempty" tf:"finding_provider_fields_types,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	FirstObservedAt []FirstObservedAtParameters `json:"firstObservedAt,omitempty" tf:"first_observed_at,omitempty"`

	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	GeneratorID []GeneratorIDParameters `json:"generatorId,omitempty" tf:"generator_id,omitempty"`

	// The security findings provider-specific identifier for a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ID []IDParameters `json:"id,omitempty" tf:"id,omitempty"`

	// A keyword for a finding. See Keyword Filter below for more details.
	// +kubebuilder:validation:Optional
	Keyword []KeywordParameters `json:"keyword,omitempty" tf:"keyword,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	LastObservedAt []LastObservedAtParameters `json:"lastObservedAt,omitempty" tf:"last_observed_at,omitempty"`

	// The name of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	MalwareName []MalwareNameParameters `json:"malwareName,omitempty" tf:"malware_name,omitempty"`

	// The filesystem path of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	MalwarePath []MalwarePathParameters `json:"malwarePath,omitempty" tf:"malware_path,omitempty"`

	// The state of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	MalwareState []MalwareStateParameters `json:"malwareState,omitempty" tf:"malware_state,omitempty"`

	// The type of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	MalwareType []MalwareTypeParameters `json:"malwareType,omitempty" tf:"malware_type,omitempty"`

	// The destination domain of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkDestinationDomain []NetworkDestinationDomainParameters `json:"networkDestinationDomain,omitempty" tf:"network_destination_domain,omitempty"`

	// The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkDestinationIPv4 []NetworkDestinationIPv4Parameters `json:"networkDestinationIpv4,omitempty" tf:"network_destination_ipv4,omitempty"`

	// The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkDestinationIPv6 []NetworkDestinationIPv6Parameters `json:"networkDestinationIpv6,omitempty" tf:"network_destination_ipv6,omitempty"`

	// The destination port of network-related information about a finding. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkDestinationPort []NetworkDestinationPortParameters `json:"networkDestinationPort,omitempty" tf:"network_destination_port,omitempty"`

	// Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkDirection []NetworkDirectionParameters `json:"networkDirection,omitempty" tf:"network_direction,omitempty"`

	// The protocol of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkProtocol []NetworkProtocolParameters `json:"networkProtocol,omitempty" tf:"network_protocol,omitempty"`

	// The source domain of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkSourceDomain []NetworkSourceDomainParameters `json:"networkSourceDomain,omitempty" tf:"network_source_domain,omitempty"`

	// The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkSourceIPv4 []NetworkSourceIPv4Parameters `json:"networkSourceIpv4,omitempty" tf:"network_source_ipv4,omitempty"`

	// The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkSourceIPv6 []NetworkSourceIPv6Parameters `json:"networkSourceIpv6,omitempty" tf:"network_source_ipv6,omitempty"`

	// The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkSourceMac []NetworkSourceMacParameters `json:"networkSourceMac,omitempty" tf:"network_source_mac,omitempty"`

	// The source port of network-related information about a finding. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	NetworkSourcePort []NetworkSourcePortParameters `json:"networkSourcePort,omitempty" tf:"network_source_port,omitempty"`

	// The text of a note. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NoteText []NoteTextParameters `json:"noteText,omitempty" tf:"note_text,omitempty"`

	// The timestamp of when the note was updated. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	NoteUpdatedAt []NoteUpdatedAtParameters `json:"noteUpdatedAt,omitempty" tf:"note_updated_at,omitempty"`

	// The principal that created a note. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	NoteUpdatedBy []NoteUpdatedByParameters `json:"noteUpdatedBy,omitempty" tf:"note_updated_by,omitempty"`

	// The date/time that the process was launched. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessLaunchedAt []ProcessLaunchedAtParameters `json:"processLaunchedAt,omitempty" tf:"process_launched_at,omitempty"`

	// The name of the process. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessName []ProcessNameParameters `json:"processName,omitempty" tf:"process_name,omitempty"`

	// The parent process ID. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessParentPid []ProcessParentPidParameters `json:"processParentPid,omitempty" tf:"process_parent_pid,omitempty"`

	// The path to the process executable. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessPath []ProcessPathParameters `json:"processPath,omitempty" tf:"process_path,omitempty"`

	// The process ID. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessPid []ProcessPidParameters `json:"processPid,omitempty" tf:"process_pid,omitempty"`

	// The date/time that the process was terminated. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ProcessTerminatedAt []ProcessTerminatedAtParameters `json:"processTerminatedAt,omitempty" tf:"process_terminated_at,omitempty"`

	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ProductArn []ProductArnParameters `json:"productArn,omitempty" tf:"product_arn,omitempty"`

	// A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	ProductFields []ProductFieldsParameters `json:"productFields,omitempty" tf:"product_fields,omitempty"`

	// The name of the solution (product) that generates findings. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ProductName []ProductNameParameters `json:"productName,omitempty" tf:"product_name,omitempty"`

	// The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	RecommendationText []RecommendationTextParameters `json:"recommendationText,omitempty" tf:"recommendation_text,omitempty"`

	// The updated record state for the finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	RecordState []RecordStateParameters `json:"recordState,omitempty" tf:"record_state,omitempty"`

	// The solution-generated identifier for a related finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	RelatedFindingsID []RelatedFindingsIDParameters `json:"relatedFindingsId,omitempty" tf:"related_findings_id,omitempty"`

	// The ARN of the solution that generated a related finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	RelatedFindingsProductArn []RelatedFindingsProductArnParameters `json:"relatedFindingsProductArn,omitempty" tf:"related_findings_product_arn,omitempty"`

	// The IAM profile ARN of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceIAMInstanceProfileArn []ResourceAwsEC2InstanceIAMInstanceProfileArnParameters `json:"resourceAwsEc2InstanceIamInstanceProfileArn,omitempty" tf:"resource_aws_ec2_instance_iam_instance_profile_arn,omitempty"`

	// The IPv4 addresses associated with the instance. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceIPv4Addresses []ResourceAwsEC2InstanceIPv4AddressesParameters `json:"resourceAwsEc2InstanceIpv4Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv4_addresses,omitempty"`

	// The IPv6 addresses associated with the instance. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceIPv6Addresses []ResourceAwsEC2InstanceIPv6AddressesParameters `json:"resourceAwsEc2InstanceIpv6Addresses,omitempty" tf:"resource_aws_ec2_instance_ipv6_addresses,omitempty"`

	// The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceImageID []ResourceAwsEC2InstanceImageIDParameters `json:"resourceAwsEc2InstanceImageId,omitempty" tf:"resource_aws_ec2_instance_image_id,omitempty"`

	// The key name associated with the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceKeyName []ResourceAwsEC2InstanceKeyNameParameters `json:"resourceAwsEc2InstanceKeyName,omitempty" tf:"resource_aws_ec2_instance_key_name,omitempty"`

	// The date and time the instance was launched. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceLaunchedAt []ResourceAwsEC2InstanceLaunchedAtParameters `json:"resourceAwsEc2InstanceLaunchedAt,omitempty" tf:"resource_aws_ec2_instance_launched_at,omitempty"`

	// The identifier of the subnet that the instance was launched in. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceSubnetID []ResourceAwsEC2InstanceSubnetIDParameters `json:"resourceAwsEc2InstanceSubnetId,omitempty" tf:"resource_aws_ec2_instance_subnet_id,omitempty"`

	// The instance type of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceType []ResourceAwsEC2InstanceTypeParameters `json:"resourceAwsEc2InstanceType,omitempty" tf:"resource_aws_ec2_instance_type,omitempty"`

	// The identifier of the VPC that the instance was launched in. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsEC2InstanceVPCID []ResourceAwsEC2InstanceVPCIDParameters `json:"resourceAwsEc2InstanceVpcId,omitempty" tf:"resource_aws_ec2_instance_vpc_id,omitempty"`

	// The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsIAMAccessKeyCreatedAt []ResourceAwsIAMAccessKeyCreatedAtParameters `json:"resourceAwsIamAccessKeyCreatedAt,omitempty" tf:"resource_aws_iam_access_key_created_at,omitempty"`

	// The status of the IAM access key related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsIAMAccessKeyStatus []ResourceAwsIAMAccessKeyStatusParameters `json:"resourceAwsIamAccessKeyStatus,omitempty" tf:"resource_aws_iam_access_key_status,omitempty"`

	// The user associated with the IAM access key related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsIAMAccessKeyUserName []ResourceAwsIAMAccessKeyUserNameParameters `json:"resourceAwsIamAccessKeyUserName,omitempty" tf:"resource_aws_iam_access_key_user_name,omitempty"`

	// The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerID []ResourceAwsS3BucketOwnerIDParameters `json:"resourceAwsS3BucketOwnerId,omitempty" tf:"resource_aws_s3_bucket_owner_id,omitempty"`

	// The display name of the owner of the S3 bucket. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceAwsS3BucketOwnerName []ResourceAwsS3BucketOwnerNameParameters `json:"resourceAwsS3BucketOwnerName,omitempty" tf:"resource_aws_s3_bucket_owner_name,omitempty"`

	// The identifier of the image related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceContainerImageID []ResourceContainerImageIDParameters `json:"resourceContainerImageId,omitempty" tf:"resource_container_image_id,omitempty"`

	// The name of the image related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceContainerImageName []ResourceContainerImageNameParameters `json:"resourceContainerImageName,omitempty" tf:"resource_container_image_name,omitempty"`

	// The date/time that the container was started. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceContainerLaunchedAt []ResourceContainerLaunchedAtParameters `json:"resourceContainerLaunchedAt,omitempty" tf:"resource_container_launched_at,omitempty"`

	// The name of the container related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceContainerName []ResourceContainerNameParameters `json:"resourceContainerName,omitempty" tf:"resource_container_name,omitempty"`

	// The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceDetailsOther []ResourceDetailsOtherParameters `json:"resourceDetailsOther,omitempty" tf:"resource_details_other,omitempty"`

	// The canonical identifier for the given resource type. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceID []ResourceIDParameters `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourcePartition []ResourcePartitionParameters `json:"resourcePartition,omitempty" tf:"resource_partition,omitempty"`

	// The canonical AWS external Region name where this resource is located. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceRegion []ResourceRegionParameters `json:"resourceRegion,omitempty" tf:"resource_region,omitempty"`

	// A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceTags []ResourceTagsParameters `json:"resourceTags,omitempty" tf:"resource_tags,omitempty"`

	// Specifies the type of the resource that details are provided for. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ResourceType []ResourceTypeParameters `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The label of a finding's severity. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	SeverityLabel []SeverityLabelParameters `json:"severityLabel,omitempty" tf:"severity_label,omitempty"`

	// A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	SourceURL []SourceURLParameters `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The category of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorCategory []ThreatIntelIndicatorCategoryParameters `json:"threatIntelIndicatorCategory,omitempty" tf:"threat_intel_indicator_category,omitempty"`

	// The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorLastObservedAt []ThreatIntelIndicatorLastObservedAtParameters `json:"threatIntelIndicatorLastObservedAt,omitempty" tf:"threat_intel_indicator_last_observed_at,omitempty"`

	// The source of the threat intelligence. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSource []ThreatIntelIndicatorSourceParameters `json:"threatIntelIndicatorSource,omitempty" tf:"threat_intel_indicator_source,omitempty"`

	// The URL for more details from the source of the threat intelligence. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorSourceURL []ThreatIntelIndicatorSourceURLParameters `json:"threatIntelIndicatorSourceUrl,omitempty" tf:"threat_intel_indicator_source_url,omitempty"`

	// The type of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorType []ThreatIntelIndicatorTypeParameters `json:"threatIntelIndicatorType,omitempty" tf:"threat_intel_indicator_type,omitempty"`

	// The value of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	ThreatIntelIndicatorValue []ThreatIntelIndicatorValueParameters `json:"threatIntelIndicatorValue,omitempty" tf:"threat_intel_indicator_value,omitempty"`

	// A finding's title. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	Title []TitleParameters `json:"title,omitempty" tf:"title,omitempty"`

	// A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	Type []TypeParameters `json:"type,omitempty" tf:"type,omitempty"`

	// An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	UpdatedAt []UpdatedAtParameters `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	UserDefinedValues []UserDefinedValuesParameters `json:"userDefinedValues,omitempty" tf:"user_defined_values,omitempty"`

	// The veracity of a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	VerificationState []VerificationStateParameters `json:"verificationState,omitempty" tf:"verification_state,omitempty"`

	// The status of the investigation into a finding. See Workflow Status Filter below for more details.
	// +kubebuilder:validation:Optional
	WorkflowStatus []WorkflowStatusParameters `json:"workflowStatus,omitempty" tf:"workflow_status,omitempty"`
}

type FindingProviderFieldsConfidenceInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsConfidenceObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsConfidenceParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsCriticalityInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsCriticalityObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsCriticalityParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type FindingProviderFieldsRelatedFindingsIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsProductArnInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsProductArnObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsRelatedFindingsProductArnParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityLabelInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityLabelObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityLabelParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityOriginalInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityOriginalObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsSeverityOriginalParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FindingProviderFieldsTypesInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsTypesObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FindingProviderFieldsTypesParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type FirstObservedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type FirstObservedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type FirstObservedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type FirstObservedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []FirstObservedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type FirstObservedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []FirstObservedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type FirstObservedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []FirstObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type GeneratorIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type GeneratorIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type GeneratorIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type InsightInitParameters struct {

	// A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
	Filters []FiltersInitParameters `json:"filters,omitempty" tf:"filters,omitempty"`

	// The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.
	GroupByAttribute *string `json:"groupByAttribute,omitempty" tf:"group_by_attribute,omitempty"`

	// The name of the custom insight.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type InsightObservation struct {

	// ARN of the insight.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
	Filters []FiltersObservation `json:"filters,omitempty" tf:"filters,omitempty"`

	// The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.
	GroupByAttribute *string `json:"groupByAttribute,omitempty" tf:"group_by_attribute,omitempty"`

	// ARN of the insight.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the custom insight.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type InsightParameters struct {

	// A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
	// +kubebuilder:validation:Optional
	Filters []FiltersParameters `json:"filters,omitempty" tf:"filters,omitempty"`

	// The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.
	// +kubebuilder:validation:Optional
	GroupByAttribute *string `json:"groupByAttribute,omitempty" tf:"group_by_attribute,omitempty"`

	// The name of the custom insight.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`
}

type KeywordInitParameters struct {

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type KeywordObservation struct {

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type KeywordParameters struct {

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type LastObservedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type LastObservedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type LastObservedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type LastObservedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []LastObservedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type LastObservedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []LastObservedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type LastObservedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []LastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type MalwareNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwarePathInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwarePathObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwarePathParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwareStateInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareStateObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareStateParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MalwareTypeInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareTypeObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type MalwareTypeParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkDestinationDomainInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkDestinationDomainObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkDestinationDomainParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkDestinationIPv4InitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv4Observation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv4Parameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv6InitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv6Observation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkDestinationIPv6Parameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkDestinationPortInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkDestinationPortObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkDestinationPortParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkDirectionInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkDirectionObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkDirectionParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkProtocolInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkProtocolObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkProtocolParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourceDomainInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkSourceDomainObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkSourceDomainParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourceIPv4InitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkSourceIPv4Observation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkSourceIPv4Parameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkSourceIPv6InitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkSourceIPv6Observation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type NetworkSourceIPv6Parameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type NetworkSourceMacInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkSourceMacObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NetworkSourceMacParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NetworkSourcePortInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkSourcePortObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NetworkSourcePortParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type NoteTextInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteTextObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteTextParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NoteUpdatedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteUpdatedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteUpdatedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type NoteUpdatedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []NoteUpdatedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type NoteUpdatedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []NoteUpdatedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type NoteUpdatedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []NoteUpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type NoteUpdatedByInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteUpdatedByObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NoteUpdatedByParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessLaunchedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessLaunchedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessLaunchedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ProcessLaunchedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ProcessLaunchedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessLaunchedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ProcessLaunchedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessLaunchedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ProcessLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessParentPidInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessParentPidObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessParentPidParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessPathInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessPathObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessPathParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessPidInitParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessPidObservation struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessPidParameters struct {

	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Eq *string `json:"eq,omitempty" tf:"eq,omitempty"`

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Gte *string `json:"gte,omitempty" tf:"gte,omitempty"`

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	Lte *string `json:"lte,omitempty" tf:"lte,omitempty"`
}

type ProcessTerminatedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessTerminatedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessTerminatedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ProcessTerminatedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ProcessTerminatedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessTerminatedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ProcessTerminatedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProcessTerminatedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ProcessTerminatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ProductArnInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductArnObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductArnParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProductFieldsInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductFieldsObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductFieldsParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProductNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProductNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RecommendationTextInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RecommendationTextObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RecommendationTextParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RecordStateInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RecordStateObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RecordStateParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RelatedFindingsIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RelatedFindingsIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RelatedFindingsIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RelatedFindingsProductArnInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RelatedFindingsProductArnObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RelatedFindingsProductArnParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceIAMInstanceProfileArnInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceIAMInstanceProfileArnObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceIAMInstanceProfileArnParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceIPv4AddressesInitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceIPv4AddressesObservation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceIPv4AddressesParameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceIPv6AddressesInitParameters struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceIPv6AddressesObservation struct {

	// A finding's CIDR value.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceIPv6AddressesParameters struct {

	// A finding's CIDR value.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr" tf:"cidr,omitempty"`
}

type ResourceAwsEC2InstanceImageIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceImageIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceImageIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceKeyNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceKeyNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceKeyNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceAwsEC2InstanceLaunchedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceAwsEC2InstanceLaunchedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsEC2InstanceLaunchedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsEC2InstanceLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsEC2InstanceSubnetIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceSubnetIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceSubnetIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceTypeInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceTypeObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceTypeParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceVPCIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceVPCIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsEC2InstanceVPCIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceAwsIAMAccessKeyCreatedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceAwsIAMAccessKeyCreatedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsIAMAccessKeyCreatedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ResourceAwsIAMAccessKeyCreatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceAwsIAMAccessKeyStatusInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyStatusObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyStatusParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyUserNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyUserNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsIAMAccessKeyUserNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceAwsS3BucketOwnerNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerImageIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerImageIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerImageIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerImageNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerImageNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerImageNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ResourceContainerLaunchedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceContainerLaunchedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceContainerLaunchedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ResourceContainerLaunchedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceContainerLaunchedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ResourceContainerLaunchedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ResourceContainerNameInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerNameObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceContainerNameParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceDetailsOtherInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceDetailsOtherObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceDetailsOtherParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceIDInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceIDObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceIDParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourcePartitionInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourcePartitionObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourcePartitionParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceRegionInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceRegionObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceRegionParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceTagsInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceTagsObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceTagsParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ResourceTypeInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceTypeObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResourceTypeParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type SeverityLabelInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeverityLabelObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SeverityLabelParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type SourceURLInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SourceURLObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SourceURLParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorCategoryInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorCategoryObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorCategoryParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ThreatIntelIndicatorLastObservedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []ThreatIntelIndicatorLastObservedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type ThreatIntelIndicatorSourceInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceURLInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceURLObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorSourceURLParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorTypeInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorTypeObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorTypeParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ThreatIntelIndicatorValueInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorValueObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ThreatIntelIndicatorValueParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TitleInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TitleObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TitleParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TypeInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TypeObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TypeParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type UpdatedAtDateRangeInitParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type UpdatedAtDateRangeObservation struct {

	// A date range unit for the date filter. Valid values: DAYS.
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// A value for the keyword.
	Value *int64 `json:"value,omitempty" tf:"value,omitempty"`
}

type UpdatedAtDateRangeParameters struct {

	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *int64 `json:"value" tf:"value,omitempty"`
}

type UpdatedAtInitParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []UpdatedAtDateRangeInitParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type UpdatedAtObservation struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	DateRange []UpdatedAtDateRangeObservation `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type UpdatedAtParameters struct {

	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	DateRange []UpdatedAtDateRangeParameters `json:"dateRange,omitempty" tf:"date_range,omitempty"`

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	End *string `json:"end,omitempty" tf:"end,omitempty"`

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	Start *string `json:"start,omitempty" tf:"start,omitempty"`
}

type UserDefinedValuesInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserDefinedValuesObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserDefinedValuesParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type VerificationStateInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VerificationStateObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VerificationStateParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type WorkflowStatusInitParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WorkflowStatusObservation struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	Comparison *string `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// A value for the keyword.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WorkflowStatusParameters struct {

	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Optional
	Comparison *string `json:"comparison" tf:"comparison,omitempty"`

	// A value for the keyword.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// InsightSpec defines the desired state of Insight
type InsightSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InsightParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InsightInitParameters `json:"initProvider,omitempty"`
}

// InsightStatus defines the observed state of Insight.
type InsightStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InsightObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Insight is the Schema for the Insights API. Provides a Security Hub custom insight resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type Insight struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.filters) || (has(self.initProvider) && has(self.initProvider.filters))",message="spec.forProvider.filters is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.groupByAttribute) || (has(self.initProvider) && has(self.initProvider.groupByAttribute))",message="spec.forProvider.groupByAttribute is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   InsightSpec   `json:"spec"`
	Status InsightStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InsightList contains a list of Insights
type InsightList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Insight `json:"items"`
}

// Repository type metadata.
var (
	Insight_Kind             = "Insight"
	Insight_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Insight_Kind}.String()
	Insight_KindAPIVersion   = Insight_Kind + "." + CRDGroupVersion.String()
	Insight_GroupVersionKind = CRDGroupVersion.WithKind(Insight_Kind)
)

func init() {
	SchemeBuilder.Register(&Insight{}, &InsightList{})
}
